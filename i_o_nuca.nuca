program FILE_IO;

/*/

// TODO:

/*//*/


/*/

c_obj, cc_obj, other_obj, objs[10] : object;

class D{
  ATTR{}
}

class C{
  ATTR{
      file_path, lines[1500] : string;
      numbers[50], n : int;
  }
  string get_tabs(n : int)
  VARS{}
  {
    return "\t" * n;
  }
  int do_something(s : string)
  VARS{}
  {
      using c_obj, cc_obj, objs as C;
      println("cc_obj.n = " + cc_obj.n);
      objs[1].n *= objs[0].n * objs[2].n;
      println("objs[1].n = " + objs[1].n);
      this.n++;
      this.n--;
      s += "lol!";
      println("n:", this.n, objs[5].get_tabs(2), "hehehe");
      this.n *= 2;
      cc_obj.numbers[10] += this.numbers[10] * 3;
      this.numbers[44] -= -33;
      cc_obj.numbers[10] += this.numbers[22 * 2];
      println(cc_obj.numbers[10]);
      this.n += stoi(s) + this.n + this.numbers[10];
      return stoi("05") + this.numbers[10] + this.n;
  }
  string get_spaces(n : int)
  VARS{}
  {
    this.n = n;
    return " " * n;
  }
  string get_newlines(n : int)
  VARS{}
  {
    return "\n" * n;
  }
  void open_file()
  VARS{}
  {
    open(this.lines, this.file_path,  this.get_newlines(1));
  }
}

i, arr[50] : int;
str : string;

main(){
  using objs as C;
  objs[0].n = 10;
  for(i = 1; i < 10; i++){
    objs[i].n += 10 + objs[i - 1].n;
    println(objs[i].n);
  }
  println("here we go");
  println(objs[0].n, objs[5].n, objs[5].get_spaces(5) + "ok");
  println(objs[5].n);
  i = !false || False || TRUE;
  println(i);
  if(FALSE){
    println(false);
  }else if(True){
    println(2.33 == 2.33);
  }

  if(False){
  }else{
    println("lol" == "lolo");
  }

  c_obj = new C();
  cc_obj = new C();
  cc_obj.n = 10;
  str += "HI!";
  str *= 3;
  c_obj.file_path = "hilo";
  println(c_obj.file_path, substr(c_obj.file_path, c_obj.n, 3));

  c_obj.numbers[10] = 20;
  c_obj.n -= c_obj.numbers[10];
  arr[49] -= c_obj.n;
  c_obj.numbers[45] += arr[49];
  c_obj.numbers[45] *= arr[49];
  println(arr[49], c_obj.numbers[45]);
  i += 5 * 3;
  println(i);
  i -= c_obj.numbers[10];
  println(i);

  c_obj.numbers[5] += c_obj.numbers[10];
  c_obj.n /= c_obj.numbers[10];

  c_obj.numbers[5]++;

  println(arr[3], arr[2]);
  println(c_obj.numbers[5], c_obj.n);

  println(c_obj.do_something("100"));

  print(">> Enter file path:\n-- ");

  read(c_obj.file_path);
  println(">> Parsing file...");

  c_obj.open_file();

  for(i = 0; (i < 1499) && (c_obj.lines[i] != "END_OF_STREAM"); i++){
    println("Entry " + i + ": " + c_obj.lines[i]);
    c_obj.lines[i] = substr(c_obj.lines[i], 0, 10);
  }

  write(c_obj.lines, "file.txt", c_obj.get_tabs(10) + " // An extra funny comment to confirm this works : ) " + cc_obj.numbers[10] + " //" + c_obj.get_newlines(1));

}
