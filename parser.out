Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION
Rule 3     STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION
Rule 4     STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION
Rule 5     STRUCTURE_DEFINITION -> empty
Rule 6     seen_program_id -> empty
Rule 7     seen_main_kwd -> empty
Rule 8     CLASS_STAR -> CLASS CLASS_STAR
Rule 9     CLASS_STAR -> empty
Rule 10    CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
Rule 11    seen_class_id_declaration -> empty
Rule 12    seen_class_attr -> empty
Rule 13    CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 14    VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 15    VAR_LIST_STAR -> empty
Rule 16    VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON
Rule 17    SYMBOL_LIST -> ID SYMBOL_LIST_P
Rule 18    SYMBOL_LIST -> ARRAY_DEFINITION SYMBOL_LIST_P
Rule 19    SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P
Rule 20    SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION SYMBOL_LIST_P
Rule 21    SYMBOL_LIST_P -> COMMA
Rule 22    SYMBOL_LIST_P -> empty
Rule 23    READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 24    READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 25    READABLE_LIST_P -> empty
Rule 26    seen_readable -> empty
Rule 27    GLOBAL_VAR -> VAR_LIST_STAR
Rule 28    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 29    FUNC_DEF_STAR -> empty
Rule 30    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 31    seen_func_id -> empty
Rule 32    seen_func_params -> empty
Rule 33    seen_func_vars -> empty
Rule 34    FUNC_PARAM -> VAR_DECLARATION FUNC_PARAM_P
Rule 35    FUNC_PARAM -> empty
Rule 36    FUNC_PARAM_P -> COMMA VAR_DECLARATION FUNC_PARAM_P
Rule 37    FUNC_PARAM_P -> empty
Rule 38    VAR_DECLARATION -> ID COLON TYPE
Rule 39    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 40    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 41    STATEMENT_STAR -> empty
Rule 42    STATEMENT -> ASSIGN SEMI_COLON
Rule 43    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 44    STATEMENT -> READ SEMI_COLON
Rule 45    STATEMENT -> PRINT SEMI_COLON
Rule 46    STATEMENT -> PRINTLN SEMI_COLON
Rule 47    STATEMENT -> OPEN SEMI_COLON
Rule 48    STATEMENT -> FLOW_CONTROL
Rule 49    STATEMENT -> FUNC_RETURN
Rule 50    OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
Rule 51    seen_open_buffer -> empty
Rule 52    seen_open_file_path -> empty
Rule 53    seen_open_separator -> empty
Rule 54    FLOW_CONTROL -> DECISION
Rule 55    FLOW_CONTROL -> REPETITION
Rule 56    FOR_INCR_STATEMENT -> ASSIGN
Rule 57    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 58    FOR_INCR_STATEMENT -> READ
Rule 59    FOR_INCR_STATEMENT -> PRINT
Rule 60    FOR_INCR_STATEMENT -> PRINTLN
Rule 61    ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
Rule 62    seen_equals -> empty
Rule 63    EXP -> TERM seen_term EXP_P
Rule 64    EXP -> MINUS seen_unary_minus EXP pop_unary_minus
Rule 65    EXP -> NOT seen_not EXP pop_not
Rule 66    seen_term -> <empty>
Rule 67    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 68    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 69    EXP_P -> empty
Rule 70    seen_term_op -> <empty>
Rule 71    EXPRESSION -> EXP
Rule 72    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 73    seen_comp -> empty
Rule 74    seen_comp_op -> empty
Rule 75    COMP -> BIGGER
Rule 76    COMP -> BIGGER_EQ
Rule 77    COMP -> SMALLER
Rule 78    COMP -> SMALLER_EQ
Rule 79    COMP -> DOUBLE_EQUALS
Rule 80    COMP -> DIFFERENT
Rule 81    COMP -> AND
Rule 82    COMP -> OR
Rule 83    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 84    FACTOR -> NOT seen_not FACTOR pop_not
Rule 85    FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus
Rule 86    FACTOR -> FUNC_CALL
Rule 87    FACTOR -> CLASS_INSTANCE
Rule 88    FACTOR -> VAR seen_var_as_factor
Rule 89    FACTOR -> CNST
Rule 90    pop_not -> empty
Rule 91    seen_not -> empty
Rule 92    pop_unary_minus -> empty
Rule 93    seen_unary_minus -> empty
Rule 94    seen_open_parenthesis -> empty
Rule 95    seen_close_parenthesis -> empty
Rule 96    seen_var_in_assign -> empty
Rule 97    seen_var_as_factor -> empty
Rule 98    seen_var_in_open -> empty
Rule 99    seen_cte_i -> <empty>
Rule 100   seen_cte_f -> <empty>
Rule 101   seen_cte_s -> <empty>
Rule 102   CNST -> CTE_S seen_cte_s
Rule 103   CNST -> CTE_F seen_cte_f
Rule 104   CNST -> CTE_I seen_cte_i
Rule 105   CLASS_REFERENCE -> ID DOT seen_dot_operator
Rule 106   CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator
Rule 107   seen_this_kwd -> empty
Rule 108   VAR -> ID
Rule 109   VAR -> ARRAY
Rule 110   VAR -> CLASS_REFERENCE VAR
Rule 111   CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 112   seen_class_id_instance -> empty
Rule 113   seen_dot_operator -> empty
Rule 114   seen_this_dot_operator -> empty
Rule 115   ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 116   ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 117   ARRAY_P -> empty
Rule 118   seen_array_id -> empty
Rule 119   seen_open_bracket -> empty
Rule 120   seen_array_access -> empty
Rule 121   ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
Rule 122   ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
Rule 123   ARRAY_DEFINITION_P -> empty
Rule 124   seen_array_def_id -> empty
Rule 125   seen_array_def_dim -> empty
Rule 126   TERM -> FACTOR seen_factor TERM_P
Rule 127   TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 128   TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 129   TERM_P -> empty
Rule 130   seen_factor -> empty
Rule 131   seen_factor_op -> empty
Rule 132   FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 133   FUNC_CALL -> CLASS_REFERENCE FUNC_CALL
Rule 134   seen_func_call_id -> empty
Rule 135   ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 136   ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 137   ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 138   ARG_LIST -> empty
Rule 139   ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 140   ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 141   ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 142   ARG_LIST_P -> empty
Rule 143   seen_arg -> empty
Rule 144   FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 145   FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 146   FUNC_RETURN -> RETURN_KWD SEMI_COLON
Rule 147   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 148   PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 149   seen_print_kwd -> empty
Rule 150   PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 151   seen_println_kwd -> empty
Rule 152   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 153   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 154   PRINTABLE_P -> empty
Rule 155   seen_printable -> empty
Rule 156   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 157   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 158   DECISION_P -> empty
Rule 159   seen_if_kwd -> empty
Rule 160   seen_else_kwd -> empty
Rule 161   REPETITION -> CONDITIONAL_REP
Rule 162   REPETITION -> UNCONDITIONAL_REP
Rule 163   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 164   seen_while_kwd -> empty
Rule 165   seen_while_exp -> empty
Rule 166   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 167   seen_for_kwd -> empty
Rule 168   seen_for_incr_exp -> empty
Rule 169   seen_for_start_exp -> empty
Rule 170   seen_for_end_exp -> empty
Rule 171   TYPE -> TYPE_I
Rule 172   TYPE -> TYPE_F
Rule 173   TYPE -> TYPE_S
Rule 174   TYPE -> TYPE_B
Rule 175   TYPE -> TYPE_O
Rule 176   TYPE -> TYPE_V
Rule 177   empty -> <empty>

Terminals, with rules where they appear

AND                  : 81
ATTR_KWD             : 13
BIGGER               : 75
BIGGER_EQ            : 76
CLASS_KWD            : 10
CLOSE_BRACKET        : 115 116 121 122
CLOSE_CURLY          : 1 10 13 30 39 156 157 163 166
CLOSE_PARENTHESIS    : 1 30 50 83 111 132 147 148 150 156 163 166
COLON                : 16 38
COMMA                : 19 20 21 24 36 50 50 139 140 141 153
CTE_F                : 103
CTE_I                : 104 121 122
CTE_S                : 102
DIFFERENT            : 80
DOT                  : 105 106
DOUBLE_EQUALS        : 79
ELSE_KWD             : 157
EQUALS               : 61 166
FOR_KWD              : 166
FWD_SLASH            : 128
ID                   : 1 10 17 19 30 38 105 108 111 115 121 132
IF_KWD               : 156
MAIN_KWD             : 1
MINUS                : 64 68 85
NEW_KWD              : 111
NOT                  : 65 84
OPEN_BRACKET         : 115 116 121 122
OPEN_CURLY           : 1 10 13 30 39 156 157 163 166
OPEN_KWD             : 50
OPEN_PARENTHESIS     : 1 30 50 83 111 132 147 148 150 156 163 166
OR                   : 82
PLUS                 : 67
PRINTLN_KWD          : 150
PRINT_KWD            : 148
PROGRAM_KWD          : 1
READ_KWD             : 147
RETURN_KWD           : 144 145 146
SEMI_COLON           : 1 16 42 43 44 45 46 47 144 145 146 166 166
SMALLER              : 77
SMALLER_EQ           : 78
STAR                 : 127
THIS_KWD             : 106
TYPE_B               : 174
TYPE_F               : 172
TYPE_I               : 171
TYPE_O               : 175
TYPE_S               : 173
TYPE_V               : 176
VARS_KWD             : 39
WHILE_KWD            : 163
error                : 

Nonterminals, with rules where they appear

ARG_LIST             : 132
ARG_LIST_P           : 135 136 137 139 140 141
ARRAY                : 109
ARRAY_DEFINITION     : 18 20
ARRAY_DEFINITION_P   : 121 122
ARRAY_P              : 115 116
ASSIGN               : 42 56
CLASS                : 8
CLASS_ATTR           : 10
CLASS_INSTANCE       : 87
CLASS_REFERENCE      : 110 133
CLASS_STAR           : 3 8
CNST                 : 89
COMP                 : 72
CONDITIONAL_REP      : 161
DECISION             : 54
DECISION_P           : 156
EXP                  : 64 65 71 72
EXPRESSION           : 50 50 61 72 83 115 116 136 140 144 152 153 156 163 166 166
EXP_P                : 63 67 68
FACTOR               : 84 85 126 127 128
FLOW_CONTROL         : 48
FOR_INCR_STATEMENT   : 166
FUNC_CALL            : 43 57 86 133 137 141 145
FUNC_DEF             : 28
FUNC_DEF_STAR        : 4 10 28
FUNC_PARAM           : 30
FUNC_PARAM_P         : 34 36
FUNC_RETURN          : 49
GLOBAL_VAR           : 2
OPEN                 : 47
PRINT                : 45 59
PRINTABLE            : 148 150
PRINTABLE_P          : 152 153
PRINTLN              : 46 60
PROGRAM              : 0
READ                 : 44 58
READABLE_LIST        : 147
READABLE_LIST_P      : 23 24
REPETITION           : 55
STATEMENT            : 40
STATEMENT_STAR       : 1 30 40 156 157 163 166
STRUCTURE_DEFINITION : 1 2 3 4
SYMBOL_LIST          : 16
SYMBOL_LIST_P        : 17 18 19 20
TERM                 : 63 67 68
TERM_P               : 126 127 128
TYPE                 : 16 30 38
UNCONDITIONAL_REP    : 162
VAR                  : 23 24 50 61 88 110 135 139 166
VARS                 : 30
VAR_DECLARATION      : 34 36
VAR_LIST             : 14
VAR_LIST_STAR        : 13 14 27 39
empty                : 5 6 7 9 11 12 15 22 25 26 29 31 32 33 35 37 41 51 52 53 62 69 73 74 90 91 92 93 94 95 96 97 98 107 112 113 114 117 118 119 120 123 124 125 129 130 131 134 138 142 143 149 151 154 155 158 159 160 164 165 167 168 169 170
pop_not              : 65 84
pop_unary_minus      : 64 85
seen_arg             : 135 136 137 139 140 141
seen_array_access    : 115 116
seen_array_def_dim   : 121 122
seen_array_def_id    : 121
seen_array_id        : 115
seen_class_attr      : 10
seen_class_id_declaration : 10
seen_class_id_instance : 111
seen_close_parenthesis : 83
seen_comp            : 72
seen_comp_op         : 72
seen_cte_f           : 103
seen_cte_i           : 104 121 122
seen_cte_s           : 102
seen_dot_operator    : 105
seen_else_kwd        : 157
seen_equals          : 61
seen_factor          : 126 127 128
seen_factor_op       : 127 128
seen_for_end_exp     : 166
seen_for_incr_exp    : 166
seen_for_kwd         : 166
seen_for_start_exp   : 166
seen_func_call_id    : 132
seen_func_id         : 30
seen_func_params     : 30
seen_func_vars       : 30
seen_if_kwd          : 156
seen_main_kwd        : 1
seen_not             : 65 84
seen_open_bracket    : 115 116
seen_open_buffer     : 50
seen_open_file_path  : 50
seen_open_parenthesis : 83
seen_open_separator  : 50
seen_print_kwd       : 148
seen_printable       : 152 153
seen_println_kwd     : 150
seen_program_id      : 1
seen_readable        : 23 24
seen_term            : 63 67 68
seen_term_op         : 67 68
seen_this_dot_operator : 106
seen_this_kwd        : 106
seen_unary_minus     : 64 85
seen_var_as_factor   : 88 135 139
seen_var_in_assign   : 23 24 61
seen_var_in_open     : 50
seen_while_exp       : 163
seen_while_kwd       : 163

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (6) seen_program_id -> . empty
    (177) empty -> .

    SEMI_COLON      reduce using rule 177 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (6) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 6 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (177) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (171) TYPE -> . TYPE_I
    (172) TYPE -> . TYPE_F
    (173) TYPE -> . TYPE_S
    (174) TYPE -> . TYPE_B
    (175) TYPE -> . TYPE_O
    (176) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (121) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 177 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 177 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 177 (empty -> .) ]
  ! ID              [ reduce using rule 177 (empty -> .) ]

    STRUCTURE_DEFINITION           shift and go to state 8
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 7

    (17) SYMBOL_LIST -> ID . SYMBOL_LIST_P
    (121) ARRAY_DEFINITION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (124) seen_array_def_id -> . empty
    (177) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 177 (empty -> .)
    OPEN_BRACKET    reduce using rule 177 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 27
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 8

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 31


state 9

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (177) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (171) TYPE -> . TYPE_I
    (172) TYPE -> . TYPE_F
    (173) TYPE -> . TYPE_S
    (174) TYPE -> . TYPE_B
    (175) TYPE -> . TYPE_O
    (176) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (121) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 177 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 177 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 177 (empty -> .) ]
  ! ID              [ reduce using rule 177 (empty -> .) ]

    GLOBAL_VAR                     shift and go to state 9
    STRUCTURE_DEFINITION           shift and go to state 32
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 10

    (3) STRUCTURE_DEFINITION -> CLASS_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (177) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (171) TYPE -> . TYPE_I
    (172) TYPE -> . TYPE_F
    (173) TYPE -> . TYPE_S
    (174) TYPE -> . TYPE_B
    (175) TYPE -> . TYPE_O
    (176) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (121) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 177 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 177 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 177 (empty -> .) ]
  ! ID              [ reduce using rule 177 (empty -> .) ]

    CLASS_STAR                     shift and go to state 10
    STRUCTURE_DEFINITION           shift and go to state 33
    GLOBAL_VAR                     shift and go to state 9
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 11

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (177) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (171) TYPE -> . TYPE_I
    (172) TYPE -> . TYPE_F
    (173) TYPE -> . TYPE_S
    (174) TYPE -> . TYPE_B
    (175) TYPE -> . TYPE_O
    (176) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (121) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 177 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 177 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 177 (empty -> .) ]
  ! ID              [ reduce using rule 177 (empty -> .) ]

    FUNC_DEF_STAR                  shift and go to state 11
    STRUCTURE_DEFINITION           shift and go to state 34
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 12

    (5) STRUCTURE_DEFINITION -> empty .
    (9) CLASS_STAR -> empty .
    (29) FUNC_DEF_STAR -> empty .
    (15) VAR_LIST_STAR -> empty .

  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
    MAIN_KWD        reduce using rule 5 (STRUCTURE_DEFINITION -> empty .)
    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)

  ! MAIN_KWD        [ reduce using rule 9 (CLASS_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! ID              [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! ID              [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]


state 13

    (27) GLOBAL_VAR -> VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_I          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_F          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_S          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_B          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_O          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_V          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    ID              reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) CLASS_STAR -> CLASS . CLASS_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (177) empty -> .

  ! shift/reduce conflict for CLASS_KWD resolved as shift
    CLASS_KWD       shift and go to state 17
    TYPE_I          reduce using rule 177 (empty -> .)
    TYPE_F          reduce using rule 177 (empty -> .)
    TYPE_S          reduce using rule 177 (empty -> .)
    TYPE_B          reduce using rule 177 (empty -> .)
    TYPE_O          reduce using rule 177 (empty -> .)
    TYPE_V          reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    MAIN_KWD        reduce using rule 177 (empty -> .)

  ! CLASS_KWD       [ reduce using rule 177 (empty -> .) ]

    CLASS                          shift and go to state 14
    CLASS_STAR                     shift and go to state 35
    empty                          shift and go to state 36

state 15

    (28) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (177) empty -> .
    (171) TYPE -> . TYPE_I
    (172) TYPE -> . TYPE_F
    (173) TYPE -> . TYPE_S
    (174) TYPE -> . TYPE_B
    (175) TYPE -> . TYPE_O
    (176) TYPE -> . TYPE_V

  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    CLASS_KWD       reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    MAIN_KWD        reduce using rule 177 (empty -> .)
    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

  ! TYPE_I          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 177 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 177 (empty -> .) ]

    FUNC_DEF                       shift and go to state 15
    FUNC_DEF_STAR                  shift and go to state 37
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 16

    (14) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (177) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (121) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for ID resolved as shift
    CLASS_KWD       reduce using rule 177 (empty -> .)
    TYPE_I          reduce using rule 177 (empty -> .)
    TYPE_F          reduce using rule 177 (empty -> .)
    TYPE_S          reduce using rule 177 (empty -> .)
    TYPE_B          reduce using rule 177 (empty -> .)
    TYPE_O          reduce using rule 177 (empty -> .)
    TYPE_V          reduce using rule 177 (empty -> .)
    MAIN_KWD        reduce using rule 177 (empty -> .)
    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    ID              shift and go to state 7

  ! ID              [ reduce using rule 177 (empty -> .) ]

    VAR_LIST                       shift and go to state 16
    VAR_LIST_STAR                  shift and go to state 39
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 17

    (10) CLASS -> CLASS_KWD . ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 41


state 18

    (30) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 42


state 19

    (16) VAR_LIST -> SYMBOL_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 43


state 20

    (171) TYPE -> TYPE_I .

    ID              reduce using rule 171 (TYPE -> TYPE_I .)
    SEMI_COLON      reduce using rule 171 (TYPE -> TYPE_I .)
    COMMA           reduce using rule 171 (TYPE -> TYPE_I .)
    CLOSE_PARENTHESIS reduce using rule 171 (TYPE -> TYPE_I .)


state 21

    (172) TYPE -> TYPE_F .

    ID              reduce using rule 172 (TYPE -> TYPE_F .)
    SEMI_COLON      reduce using rule 172 (TYPE -> TYPE_F .)
    COMMA           reduce using rule 172 (TYPE -> TYPE_F .)
    CLOSE_PARENTHESIS reduce using rule 172 (TYPE -> TYPE_F .)


state 22

    (173) TYPE -> TYPE_S .

    ID              reduce using rule 173 (TYPE -> TYPE_S .)
    SEMI_COLON      reduce using rule 173 (TYPE -> TYPE_S .)
    COMMA           reduce using rule 173 (TYPE -> TYPE_S .)
    CLOSE_PARENTHESIS reduce using rule 173 (TYPE -> TYPE_S .)


state 23

    (174) TYPE -> TYPE_B .

    ID              reduce using rule 174 (TYPE -> TYPE_B .)
    SEMI_COLON      reduce using rule 174 (TYPE -> TYPE_B .)
    COMMA           reduce using rule 174 (TYPE -> TYPE_B .)
    CLOSE_PARENTHESIS reduce using rule 174 (TYPE -> TYPE_B .)


state 24

    (175) TYPE -> TYPE_O .

    ID              reduce using rule 175 (TYPE -> TYPE_O .)
    SEMI_COLON      reduce using rule 175 (TYPE -> TYPE_O .)
    COMMA           reduce using rule 175 (TYPE -> TYPE_O .)
    CLOSE_PARENTHESIS reduce using rule 175 (TYPE -> TYPE_O .)


state 25

    (176) TYPE -> TYPE_V .

    ID              reduce using rule 176 (TYPE -> TYPE_V .)
    SEMI_COLON      reduce using rule 176 (TYPE -> TYPE_V .)
    COMMA           reduce using rule 176 (TYPE -> TYPE_V .)
    CLOSE_PARENTHESIS reduce using rule 176 (TYPE -> TYPE_V .)


state 26

    (18) SYMBOL_LIST -> ARRAY_DEFINITION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 177 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 44
    empty                          shift and go to state 45

state 27

    (17) SYMBOL_LIST -> ID SYMBOL_LIST_P .

    COLON           reduce using rule 17 (SYMBOL_LIST -> ID SYMBOL_LIST_P .)


state 28

    (121) ARRAY_DEFINITION -> ID seen_array_def_id . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    OPEN_BRACKET    shift and go to state 46


state 29

    (19) SYMBOL_LIST_P -> COMMA . ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> COMMA . ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> COMMA .
    (121) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    ID              shift and go to state 47
    COLON           reduce using rule 21 (SYMBOL_LIST_P -> COMMA .)

    ARRAY_DEFINITION               shift and go to state 48

state 30

    (22) SYMBOL_LIST_P -> empty .
    (124) seen_array_def_id -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)
    OPEN_BRACKET    reduce using rule 124 (seen_array_def_id -> empty .)


state 31

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 49


state 32

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 2 (STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .)


state 33

    (3) STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 3 (STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .)


state 34

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 4 (STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .)


state 35

    (8) CLASS_STAR -> CLASS CLASS_STAR .

    CLASS_KWD       reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_I          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_F          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_S          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_B          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_O          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_V          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    ID              reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)


state 36

    (9) CLASS_STAR -> empty .

    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 9 (CLASS_STAR -> empty .)


state 37

    (28) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    CLASS_KWD       reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_I          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_F          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_S          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_B          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_O          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_V          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    ID              reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    MAIN_KWD        reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 38

    (29) FUNC_DEF_STAR -> empty .

    CLASS_KWD       reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_I          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_F          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_S          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_B          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_O          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_V          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    ID              reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    MAIN_KWD        reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 29 (FUNC_DEF_STAR -> empty .)


state 39

    (14) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_I          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_F          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_S          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_B          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_O          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_V          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    ID              reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 40

    (15) VAR_LIST_STAR -> empty .

    CLASS_KWD       reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_I          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_F          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_S          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_B          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_O          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_V          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    ID              reduce using rule 15 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 15 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 15 (VAR_LIST_STAR -> empty .)


state 41

    (10) CLASS -> CLASS_KWD ID . seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (11) seen_class_id_declaration -> . empty
    (177) empty -> .

    OPEN_CURLY      reduce using rule 177 (empty -> .)

    seen_class_id_declaration      shift and go to state 50
    empty                          shift and go to state 51

state 42

    (30) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (31) seen_func_id -> . empty
    (177) empty -> .

    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_func_id                   shift and go to state 52
    empty                          shift and go to state 53

state 43

    (16) VAR_LIST -> SYMBOL_LIST COLON . TYPE SEMI_COLON
    (171) TYPE -> . TYPE_I
    (172) TYPE -> . TYPE_F
    (173) TYPE -> . TYPE_S
    (174) TYPE -> . TYPE_B
    (175) TYPE -> . TYPE_O
    (176) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 54

state 44

    (18) SYMBOL_LIST -> ARRAY_DEFINITION SYMBOL_LIST_P .

    COLON           reduce using rule 18 (SYMBOL_LIST -> ARRAY_DEFINITION SYMBOL_LIST_P .)


state 45

    (22) SYMBOL_LIST_P -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)


state 46

    (121) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CTE_I           shift and go to state 55


state 47

    (19) SYMBOL_LIST_P -> COMMA ID . SYMBOL_LIST_P
    (121) ARRAY_DEFINITION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (124) seen_array_def_id -> . empty
    (177) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 177 (empty -> .)
    OPEN_BRACKET    reduce using rule 177 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 56
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 48

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 177 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 57
    empty                          shift and go to state 45

state 49

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 58


state 50

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration . OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 59


state 51

    (11) seen_class_id_declaration -> empty .

    OPEN_CURLY      reduce using rule 11 (seen_class_id_declaration -> empty .)


state 52

    (30) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 60


state 53

    (31) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 31 (seen_func_id -> empty .)


state 54

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 61


state 55

    (121) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (99) seen_cte_i -> .

    CLOSE_BRACKET   reduce using rule 99 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 62

state 56

    (19) SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .

    COLON           reduce using rule 19 (SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .)


state 57

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION SYMBOL_LIST_P .

    COLON           reduce using rule 20 (SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION SYMBOL_LIST_P .)


state 58

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 63


state 59

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY . CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (13) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 65

    CLASS_ATTR                     shift and go to state 64

state 60

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (34) FUNC_PARAM -> . VAR_DECLARATION FUNC_PARAM_P
    (35) FUNC_PARAM -> . empty
    (38) VAR_DECLARATION -> . ID COLON TYPE
    (177) empty -> .

    ID              shift and go to state 66
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    FUNC_PARAM                     shift and go to state 67
    VAR_DECLARATION                shift and go to state 68
    empty                          shift and go to state 69

state 61

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLASS_KWD       reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_I          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_F          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_S          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_B          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_O          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_V          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)


state 62

    (121) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (125) seen_array_def_dim -> . empty
    (177) empty -> .

    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    seen_array_def_dim             shift and go to state 70
    empty                          shift and go to state 71

state 63

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (7) seen_main_kwd -> . empty
    (177) empty -> .

    ID              reduce using rule 177 (empty -> .)
    READ_KWD        reduce using rule 177 (empty -> .)
    PRINT_KWD       reduce using rule 177 (empty -> .)
    PRINTLN_KWD     reduce using rule 177 (empty -> .)
    OPEN_KWD        reduce using rule 177 (empty -> .)
    RETURN_KWD      reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)
    IF_KWD          reduce using rule 177 (empty -> .)
    WHILE_KWD       reduce using rule 177 (empty -> .)
    FOR_KWD         reduce using rule 177 (empty -> .)
    CLOSE_CURLY     reduce using rule 177 (empty -> .)

    seen_main_kwd                  shift and go to state 72
    empty                          shift and go to state 73

state 64

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR . seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (12) seen_class_attr -> . empty
    (177) empty -> .

    TYPE_I          reduce using rule 177 (empty -> .)
    TYPE_F          reduce using rule 177 (empty -> .)
    TYPE_S          reduce using rule 177 (empty -> .)
    TYPE_B          reduce using rule 177 (empty -> .)
    TYPE_O          reduce using rule 177 (empty -> .)
    TYPE_V          reduce using rule 177 (empty -> .)
    CLOSE_CURLY     reduce using rule 177 (empty -> .)

    seen_class_attr                shift and go to state 74
    empty                          shift and go to state 75

state 65

    (13) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 76


state 66

    (38) VAR_DECLARATION -> ID . COLON TYPE

    COLON           shift and go to state 77


state 67

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 78


state 68

    (34) FUNC_PARAM -> VAR_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA VAR_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 80
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 79
    empty                          shift and go to state 81

state 69

    (35) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 35 (FUNC_PARAM -> empty .)


state 70

    (121) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_BRACKET   shift and go to state 82


state 71

    (125) seen_array_def_dim -> empty .

    CLOSE_BRACKET   reduce using rule 125 (seen_array_def_dim -> empty .)


state 72

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . FLOW_CONTROL
    (49) STATEMENT -> . FUNC_RETURN
    (177) empty -> .
    (61) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (147) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (148) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (150) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (50) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (54) FLOW_CONTROL -> . DECISION
    (55) FLOW_CONTROL -> . REPETITION
    (144) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (145) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (146) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (156) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (161) REPETITION -> . CONDITIONAL_REP
    (162) REPETITION -> . UNCONDITIONAL_REP
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (163) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (166) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    RETURN_KWD      shift and go to state 103
    THIS_KWD        shift and go to state 105
    IF_KWD          shift and go to state 106
    WHILE_KWD       shift and go to state 109
    FOR_KWD         shift and go to state 110

    STATEMENT_STAR                 shift and go to state 84
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 101
    REPETITION                     shift and go to state 102
    ARRAY                          shift and go to state 104
    CONDITIONAL_REP                shift and go to state 107
    UNCONDITIONAL_REP              shift and go to state 108

state 73

    (7) seen_main_kwd -> empty .

    ID              reduce using rule 7 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    PRINT_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    PRINTLN_KWD     reduce using rule 7 (seen_main_kwd -> empty .)
    OPEN_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    RETURN_KWD      reduce using rule 7 (seen_main_kwd -> empty .)
    THIS_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 7 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 7 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 7 (seen_main_kwd -> empty .)


state 74

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr . FUNC_DEF_STAR CLOSE_CURLY
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (177) empty -> .
    (171) TYPE -> . TYPE_I
    (172) TYPE -> . TYPE_F
    (173) TYPE -> . TYPE_S
    (174) TYPE -> . TYPE_B
    (175) TYPE -> . TYPE_O
    (176) TYPE -> . TYPE_V

    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    FUNC_DEF_STAR                  shift and go to state 111
    FUNC_DEF                       shift and go to state 15
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 75

    (12) seen_class_attr -> empty .

    TYPE_I          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_F          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_S          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_B          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_O          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_V          reduce using rule 12 (seen_class_attr -> empty .)
    CLOSE_CURLY     reduce using rule 12 (seen_class_attr -> empty .)


state 76

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (177) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (121) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 112
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 77

    (38) VAR_DECLARATION -> ID COLON . TYPE
    (171) TYPE -> . TYPE_I
    (172) TYPE -> . TYPE_F
    (173) TYPE -> . TYPE_S
    (174) TYPE -> . TYPE_B
    (175) TYPE -> . TYPE_O
    (176) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 113

state 78

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (32) seen_func_params -> . empty
    (177) empty -> .

    VARS_KWD        reduce using rule 177 (empty -> .)

    seen_func_params               shift and go to state 114
    empty                          shift and go to state 115

state 79

    (34) FUNC_PARAM -> VAR_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 34 (FUNC_PARAM -> VAR_DECLARATION FUNC_PARAM_P .)


state 80

    (36) FUNC_PARAM_P -> COMMA . VAR_DECLARATION FUNC_PARAM_P
    (38) VAR_DECLARATION -> . ID COLON TYPE

    ID              shift and go to state 66

    VAR_DECLARATION                shift and go to state 116

state 81

    (37) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 37 (FUNC_PARAM_P -> empty .)


state 82

    (121) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DEFINITION_P
    (122) ARRAY_DEFINITION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (123) ARRAY_DEFINITION_P -> . empty
    (177) empty -> .

    OPEN_BRACKET    shift and go to state 117
    COMMA           reduce using rule 177 (empty -> .)
    COLON           reduce using rule 177 (empty -> .)

    ARRAY_DEFINITION_P             shift and go to state 118
    empty                          shift and go to state 119

state 83

    (132) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) VAR -> ID .
    (105) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (115) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (134) seen_func_call_id -> . empty
    (118) seen_array_id -> . empty
    (177) empty -> .

    EQUALS          reduce using rule 108 (VAR -> ID .)
    STAR            reduce using rule 108 (VAR -> ID .)
    FWD_SLASH       reduce using rule 108 (VAR -> ID .)
    PLUS            reduce using rule 108 (VAR -> ID .)
    MINUS           reduce using rule 108 (VAR -> ID .)
    BIGGER          reduce using rule 108 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 108 (VAR -> ID .)
    SMALLER         reduce using rule 108 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 108 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 108 (VAR -> ID .)
    DIFFERENT       reduce using rule 108 (VAR -> ID .)
    AND             reduce using rule 108 (VAR -> ID .)
    OR              reduce using rule 108 (VAR -> ID .)
    SEMI_COLON      reduce using rule 108 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 108 (VAR -> ID .)
    COMMA           reduce using rule 108 (VAR -> ID .)
    CLOSE_BRACKET   reduce using rule 108 (VAR -> ID .)
    DOT             shift and go to state 121
    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    OPEN_BRACKET    reduce using rule 177 (empty -> .)

    seen_func_call_id              shift and go to state 120
    seen_array_id                  shift and go to state 122
    empty                          shift and go to state 123

state 84

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 124


state 85

    (40) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . FLOW_CONTROL
    (49) STATEMENT -> . FUNC_RETURN
    (177) empty -> .
    (61) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (147) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (148) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (150) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (50) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (54) FLOW_CONTROL -> . DECISION
    (55) FLOW_CONTROL -> . REPETITION
    (144) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (145) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (146) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (156) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (161) REPETITION -> . CONDITIONAL_REP
    (162) REPETITION -> . UNCONDITIONAL_REP
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (163) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (166) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    RETURN_KWD      shift and go to state 103
    THIS_KWD        shift and go to state 105
    IF_KWD          shift and go to state 106
    WHILE_KWD       shift and go to state 109
    FOR_KWD         shift and go to state 110

    STATEMENT                      shift and go to state 85
    STATEMENT_STAR                 shift and go to state 125
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 101
    REPETITION                     shift and go to state 102
    ARRAY                          shift and go to state 104
    CONDITIONAL_REP                shift and go to state 107
    UNCONDITIONAL_REP              shift and go to state 108

state 86

    (41) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 41 (STATEMENT_STAR -> empty .)


state 87

    (42) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 126


state 88

    (43) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 127


state 89

    (44) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 128


state 90

    (45) STATEMENT -> PRINT . SEMI_COLON

    SEMI_COLON      shift and go to state 129


state 91

    (46) STATEMENT -> PRINTLN . SEMI_COLON

    SEMI_COLON      shift and go to state 130


state 92

    (47) STATEMENT -> OPEN . SEMI_COLON

    SEMI_COLON      shift and go to state 131


state 93

    (48) STATEMENT -> FLOW_CONTROL .

    ID              reduce using rule 48 (STATEMENT -> FLOW_CONTROL .)
    READ_KWD        reduce using rule 48 (STATEMENT -> FLOW_CONTROL .)
    PRINT_KWD       reduce using rule 48 (STATEMENT -> FLOW_CONTROL .)
    PRINTLN_KWD     reduce using rule 48 (STATEMENT -> FLOW_CONTROL .)
    OPEN_KWD        reduce using rule 48 (STATEMENT -> FLOW_CONTROL .)
    RETURN_KWD      reduce using rule 48 (STATEMENT -> FLOW_CONTROL .)
    THIS_KWD        reduce using rule 48 (STATEMENT -> FLOW_CONTROL .)
    IF_KWD          reduce using rule 48 (STATEMENT -> FLOW_CONTROL .)
    WHILE_KWD       reduce using rule 48 (STATEMENT -> FLOW_CONTROL .)
    FOR_KWD         reduce using rule 48 (STATEMENT -> FLOW_CONTROL .)
    CLOSE_CURLY     reduce using rule 48 (STATEMENT -> FLOW_CONTROL .)


state 94

    (49) STATEMENT -> FUNC_RETURN .

    ID              reduce using rule 49 (STATEMENT -> FUNC_RETURN .)
    READ_KWD        reduce using rule 49 (STATEMENT -> FUNC_RETURN .)
    PRINT_KWD       reduce using rule 49 (STATEMENT -> FUNC_RETURN .)
    PRINTLN_KWD     reduce using rule 49 (STATEMENT -> FUNC_RETURN .)
    OPEN_KWD        reduce using rule 49 (STATEMENT -> FUNC_RETURN .)
    RETURN_KWD      reduce using rule 49 (STATEMENT -> FUNC_RETURN .)
    THIS_KWD        reduce using rule 49 (STATEMENT -> FUNC_RETURN .)
    IF_KWD          reduce using rule 49 (STATEMENT -> FUNC_RETURN .)
    WHILE_KWD       reduce using rule 49 (STATEMENT -> FUNC_RETURN .)
    FOR_KWD         reduce using rule 49 (STATEMENT -> FUNC_RETURN .)
    CLOSE_CURLY     reduce using rule 49 (STATEMENT -> FUNC_RETURN .)


state 95

    (61) ASSIGN -> VAR . seen_var_in_assign EQUALS seen_equals EXPRESSION
    (96) seen_var_in_assign -> . empty
    (177) empty -> .

    EQUALS          reduce using rule 177 (empty -> .)

    seen_var_in_assign             shift and go to state 132
    empty                          shift and go to state 133

state 96

    (133) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (110) VAR -> CLASS_REFERENCE . VAR
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 83
    THIS_KWD        shift and go to state 105

    CLASS_REFERENCE                shift and go to state 96
    FUNC_CALL                      shift and go to state 134
    VAR                            shift and go to state 135
    ARRAY                          shift and go to state 104

state 97

    (147) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 136


state 98

    (148) PRINT -> PRINT_KWD . seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (149) seen_print_kwd -> . empty
    (177) empty -> .

    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_print_kwd                 shift and go to state 137
    empty                          shift and go to state 138

state 99

    (150) PRINTLN -> PRINTLN_KWD . seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (151) seen_println_kwd -> . empty
    (177) empty -> .

    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_println_kwd               shift and go to state 139
    empty                          shift and go to state 140

state 100

    (50) OPEN -> OPEN_KWD . OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 141


state 101

    (54) FLOW_CONTROL -> DECISION .

    ID              reduce using rule 54 (FLOW_CONTROL -> DECISION .)
    READ_KWD        reduce using rule 54 (FLOW_CONTROL -> DECISION .)
    PRINT_KWD       reduce using rule 54 (FLOW_CONTROL -> DECISION .)
    PRINTLN_KWD     reduce using rule 54 (FLOW_CONTROL -> DECISION .)
    OPEN_KWD        reduce using rule 54 (FLOW_CONTROL -> DECISION .)
    RETURN_KWD      reduce using rule 54 (FLOW_CONTROL -> DECISION .)
    THIS_KWD        reduce using rule 54 (FLOW_CONTROL -> DECISION .)
    IF_KWD          reduce using rule 54 (FLOW_CONTROL -> DECISION .)
    WHILE_KWD       reduce using rule 54 (FLOW_CONTROL -> DECISION .)
    FOR_KWD         reduce using rule 54 (FLOW_CONTROL -> DECISION .)
    CLOSE_CURLY     reduce using rule 54 (FLOW_CONTROL -> DECISION .)


state 102

    (55) FLOW_CONTROL -> REPETITION .

    ID              reduce using rule 55 (FLOW_CONTROL -> REPETITION .)
    READ_KWD        reduce using rule 55 (FLOW_CONTROL -> REPETITION .)
    PRINT_KWD       reduce using rule 55 (FLOW_CONTROL -> REPETITION .)
    PRINTLN_KWD     reduce using rule 55 (FLOW_CONTROL -> REPETITION .)
    OPEN_KWD        reduce using rule 55 (FLOW_CONTROL -> REPETITION .)
    RETURN_KWD      reduce using rule 55 (FLOW_CONTROL -> REPETITION .)
    THIS_KWD        reduce using rule 55 (FLOW_CONTROL -> REPETITION .)
    IF_KWD          reduce using rule 55 (FLOW_CONTROL -> REPETITION .)
    WHILE_KWD       reduce using rule 55 (FLOW_CONTROL -> REPETITION .)
    FOR_KWD         reduce using rule 55 (FLOW_CONTROL -> REPETITION .)
    CLOSE_CURLY     reduce using rule 55 (FLOW_CONTROL -> REPETITION .)


state 103

    (144) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (145) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (146) FUNC_RETURN -> RETURN_KWD . SEMI_COLON
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    SEMI_COLON      shift and go to state 143
    ID              shift and go to state 146
    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    THIS_KWD        shift and go to state 105
    OPEN_PARENTHESIS shift and go to state 147
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158

    EXPRESSION                     shift and go to state 142
    FUNC_CALL                      shift and go to state 144
    EXP                            shift and go to state 145
    CLASS_REFERENCE                shift and go to state 96
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    ARRAY                          shift and go to state 104

state 104

    (109) VAR -> ARRAY .

    EQUALS          reduce using rule 109 (VAR -> ARRAY .)
    STAR            reduce using rule 109 (VAR -> ARRAY .)
    FWD_SLASH       reduce using rule 109 (VAR -> ARRAY .)
    PLUS            reduce using rule 109 (VAR -> ARRAY .)
    MINUS           reduce using rule 109 (VAR -> ARRAY .)
    BIGGER          reduce using rule 109 (VAR -> ARRAY .)
    BIGGER_EQ       reduce using rule 109 (VAR -> ARRAY .)
    SMALLER         reduce using rule 109 (VAR -> ARRAY .)
    SMALLER_EQ      reduce using rule 109 (VAR -> ARRAY .)
    DOUBLE_EQUALS   reduce using rule 109 (VAR -> ARRAY .)
    DIFFERENT       reduce using rule 109 (VAR -> ARRAY .)
    AND             reduce using rule 109 (VAR -> ARRAY .)
    OR              reduce using rule 109 (VAR -> ARRAY .)
    SEMI_COLON      reduce using rule 109 (VAR -> ARRAY .)
    CLOSE_PARENTHESIS reduce using rule 109 (VAR -> ARRAY .)
    COMMA           reduce using rule 109 (VAR -> ARRAY .)
    CLOSE_BRACKET   reduce using rule 109 (VAR -> ARRAY .)


state 105

    (106) CLASS_REFERENCE -> THIS_KWD . seen_this_kwd DOT seen_this_dot_operator
    (107) seen_this_kwd -> . empty
    (177) empty -> .

    DOT             reduce using rule 177 (empty -> .)

    seen_this_kwd                  shift and go to state 159
    empty                          shift and go to state 160

state 106

    (156) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 161


state 107

    (161) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 161 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 161 (REPETITION -> CONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 161 (REPETITION -> CONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 161 (REPETITION -> CONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 161 (REPETITION -> CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 161 (REPETITION -> CONDITIONAL_REP .)
    THIS_KWD        reduce using rule 161 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 161 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 161 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 161 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 161 (REPETITION -> CONDITIONAL_REP .)


state 108

    (162) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 162 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 162 (REPETITION -> UNCONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 162 (REPETITION -> UNCONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 162 (REPETITION -> UNCONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 162 (REPETITION -> UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 162 (REPETITION -> UNCONDITIONAL_REP .)
    THIS_KWD        reduce using rule 162 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 162 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 162 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 162 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 162 (REPETITION -> UNCONDITIONAL_REP .)


state 109

    (163) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (164) seen_while_kwd -> . empty
    (177) empty -> .

    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_while_kwd                 shift and go to state 162
    empty                          shift and go to state 163

state 110

    (166) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 164


state 111

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 165


state 112

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 166


state 113

    (38) VAR_DECLARATION -> ID COLON TYPE .

    COMMA           reduce using rule 38 (VAR_DECLARATION -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 38 (VAR_DECLARATION -> ID COLON TYPE .)


state 114

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (39) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 168

    VARS                           shift and go to state 167

state 115

    (32) seen_func_params -> empty .

    VARS_KWD        reduce using rule 32 (seen_func_params -> empty .)


state 116

    (36) FUNC_PARAM_P -> COMMA VAR_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA VAR_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 80
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 169
    empty                          shift and go to state 81

state 117

    (122) ARRAY_DEFINITION_P -> OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CTE_I           shift and go to state 170


state 118

    (121) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .

    COMMA           reduce using rule 121 (ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)
    COLON           reduce using rule 121 (ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)


state 119

    (123) ARRAY_DEFINITION_P -> empty .

    COMMA           reduce using rule 123 (ARRAY_DEFINITION_P -> empty .)
    COLON           reduce using rule 123 (ARRAY_DEFINITION_P -> empty .)


state 120

    (132) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 171


state 121

    (105) CLASS_REFERENCE -> ID DOT . seen_dot_operator
    (113) seen_dot_operator -> . empty
    (177) empty -> .

    ID              reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_dot_operator              shift and go to state 172
    empty                          shift and go to state 173

state 122

    (115) ARRAY -> ID seen_array_id . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_BRACKET    shift and go to state 174


state 123

    (134) seen_func_call_id -> empty .
    (118) seen_array_id -> empty .

    OPEN_PARENTHESIS reduce using rule 134 (seen_func_call_id -> empty .)
    OPEN_BRACKET    reduce using rule 118 (seen_array_id -> empty .)


state 124

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 125

    (40) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 40 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 126

    (42) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINT_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    OPEN_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    RETURN_KWD      reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    THIS_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)


state 127

    (43) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 128

    (44) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINT_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    OPEN_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    RETURN_KWD      reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    THIS_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)


state 129

    (45) STATEMENT -> PRINT SEMI_COLON .

    ID              reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    READ_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINT_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    OPEN_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    RETURN_KWD      reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    THIS_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    IF_KWD          reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WHILE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    FOR_KWD         reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)


state 130

    (46) STATEMENT -> PRINTLN SEMI_COLON .

    ID              reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    READ_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINT_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    OPEN_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    RETURN_KWD      reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    THIS_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    IF_KWD          reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WHILE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    FOR_KWD         reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)


state 131

    (47) STATEMENT -> OPEN SEMI_COLON .

    ID              reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    READ_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINT_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    OPEN_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    RETURN_KWD      reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    THIS_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    IF_KWD          reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    WHILE_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    FOR_KWD         reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)


state 132

    (61) ASSIGN -> VAR seen_var_in_assign . EQUALS seen_equals EXPRESSION

    EQUALS          shift and go to state 175


state 133

    (96) seen_var_in_assign -> empty .

    EQUALS          reduce using rule 96 (seen_var_in_assign -> empty .)
    COMMA           reduce using rule 96 (seen_var_in_assign -> empty .)
    CLOSE_PARENTHESIS reduce using rule 96 (seen_var_in_assign -> empty .)


state 134

    (133) FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .

    SEMI_COLON      reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    STAR            reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    FWD_SLASH       reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    PLUS            reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    MINUS           reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER          reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER_EQ       reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER         reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER_EQ      reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    DIFFERENT       reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    AND             reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    OR              reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    COMMA           reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 133 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)


state 135

    (110) VAR -> CLASS_REFERENCE VAR .

    EQUALS          reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    STAR            reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    FWD_SLASH       reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    PLUS            reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    MINUS           reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER          reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER_EQ       reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER         reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER_EQ      reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    DOUBLE_EQUALS   reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    DIFFERENT       reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    AND             reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    OR              reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    SEMI_COLON      reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_PARENTHESIS reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    COMMA           reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_BRACKET   reduce using rule 110 (VAR -> CLASS_REFERENCE VAR .)


state 136

    (147) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (23) READABLE_LIST -> . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 178
    THIS_KWD        shift and go to state 105

    READABLE_LIST                  shift and go to state 176
    VAR                            shift and go to state 177
    ARRAY                          shift and go to state 104
    CLASS_REFERENCE                shift and go to state 179

state 137

    (148) PRINT -> PRINT_KWD seen_print_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 180


state 138

    (149) seen_print_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 149 (seen_print_kwd -> empty .)


state 139

    (150) PRINTLN -> PRINTLN_KWD seen_println_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 181


state 140

    (151) seen_println_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 151 (seen_println_kwd -> empty .)


state 141

    (50) OPEN -> OPEN_KWD OPEN_PARENTHESIS . VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 178
    THIS_KWD        shift and go to state 105

    VAR                            shift and go to state 182
    ARRAY                          shift and go to state 104
    CLASS_REFERENCE                shift and go to state 179

state 142

    (144) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 183


state 143

    (146) FUNC_RETURN -> RETURN_KWD SEMI_COLON .

    ID              reduce using rule 146 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    READ_KWD        reduce using rule 146 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINT_KWD       reduce using rule 146 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 146 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    OPEN_KWD        reduce using rule 146 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    RETURN_KWD      reduce using rule 146 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    THIS_KWD        reduce using rule 146 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    IF_KWD          reduce using rule 146 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WHILE_KWD       reduce using rule 146 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    FOR_KWD         reduce using rule 146 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 146 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)


state 144

    (145) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (86) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 184
    STAR            reduce using rule 86 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 86 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 86 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 86 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 86 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 86 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 86 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 86 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 86 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 86 (FACTOR -> FUNC_CALL .) ]


state 145

    (71) EXPRESSION -> EXP .
    (72) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (75) COMP -> . BIGGER
    (76) COMP -> . BIGGER_EQ
    (77) COMP -> . SMALLER
    (78) COMP -> . SMALLER_EQ
    (79) COMP -> . DOUBLE_EQUALS
    (80) COMP -> . DIFFERENT
    (81) COMP -> . AND
    (82) COMP -> . OR

    SEMI_COLON      reduce using rule 71 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 71 (EXPRESSION -> EXP .)
    COMMA           reduce using rule 71 (EXPRESSION -> EXP .)
    CLOSE_BRACKET   reduce using rule 71 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 186
    BIGGER_EQ       shift and go to state 187
    SMALLER         shift and go to state 188
    SMALLER_EQ      shift and go to state 189
    DOUBLE_EQUALS   shift and go to state 190
    DIFFERENT       shift and go to state 191
    AND             shift and go to state 192
    OR              shift and go to state 193

    COMP                           shift and go to state 185

state 146

    (132) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (105) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (108) VAR -> ID .
    (115) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (134) seen_func_call_id -> . empty
    (118) seen_array_id -> . empty
    (177) empty -> .

    DOT             shift and go to state 121
    STAR            reduce using rule 108 (VAR -> ID .)
    FWD_SLASH       reduce using rule 108 (VAR -> ID .)
    PLUS            reduce using rule 108 (VAR -> ID .)
    MINUS           reduce using rule 108 (VAR -> ID .)
    BIGGER          reduce using rule 108 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 108 (VAR -> ID .)
    SMALLER         reduce using rule 108 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 108 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 108 (VAR -> ID .)
    DIFFERENT       reduce using rule 108 (VAR -> ID .)
    AND             reduce using rule 108 (VAR -> ID .)
    OR              reduce using rule 108 (VAR -> ID .)
    SEMI_COLON      reduce using rule 108 (VAR -> ID .)
    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    OPEN_BRACKET    reduce using rule 177 (empty -> .)

    seen_func_call_id              shift and go to state 120
    seen_array_id                  shift and go to state 122
    empty                          shift and go to state 123

state 147

    (83) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (94) seen_open_parenthesis -> . empty
    (177) empty -> .

    MINUS           reduce using rule 177 (empty -> .)
    NOT             reduce using rule 177 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    NEW_KWD         reduce using rule 177 (empty -> .)
    CTE_S           reduce using rule 177 (empty -> .)
    CTE_F           reduce using rule 177 (empty -> .)
    CTE_I           reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_open_parenthesis          shift and go to state 194
    empty                          shift and go to state 195

state 148

    (63) EXP -> TERM . seen_term EXP_P
    (66) seen_term -> .

    PLUS            reduce using rule 66 (seen_term -> .)
    MINUS           reduce using rule 66 (seen_term -> .)
    BIGGER          reduce using rule 66 (seen_term -> .)
    BIGGER_EQ       reduce using rule 66 (seen_term -> .)
    SMALLER         reduce using rule 66 (seen_term -> .)
    SMALLER_EQ      reduce using rule 66 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 66 (seen_term -> .)
    DIFFERENT       reduce using rule 66 (seen_term -> .)
    AND             reduce using rule 66 (seen_term -> .)
    OR              reduce using rule 66 (seen_term -> .)
    SEMI_COLON      reduce using rule 66 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 66 (seen_term -> .)
    COMMA           reduce using rule 66 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 66 (seen_term -> .)

    seen_term                      shift and go to state 196

state 149

    (64) EXP -> MINUS . seen_unary_minus EXP pop_unary_minus
    (85) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (93) seen_unary_minus -> . empty
    (177) empty -> .

    MINUS           reduce using rule 177 (empty -> .)
    NOT             reduce using rule 177 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    NEW_KWD         reduce using rule 177 (empty -> .)
    CTE_S           reduce using rule 177 (empty -> .)
    CTE_F           reduce using rule 177 (empty -> .)
    CTE_I           reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_unary_minus               shift and go to state 197
    empty                          shift and go to state 198

state 150

    (65) EXP -> NOT . seen_not EXP pop_not
    (84) FACTOR -> NOT . seen_not FACTOR pop_not
    (91) seen_not -> . empty
    (177) empty -> .

    MINUS           reduce using rule 177 (empty -> .)
    NOT             reduce using rule 177 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    NEW_KWD         reduce using rule 177 (empty -> .)
    CTE_S           reduce using rule 177 (empty -> .)
    CTE_F           reduce using rule 177 (empty -> .)
    CTE_I           reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_not                       shift and go to state 199
    empty                          shift and go to state 200

state 151

    (126) TERM -> FACTOR . seen_factor TERM_P
    (130) seen_factor -> . empty
    (177) empty -> .

    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    seen_factor                    shift and go to state 201
    empty                          shift and go to state 202

state 152

    (87) FACTOR -> CLASS_INSTANCE .

    STAR            reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    FWD_SLASH       reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    PLUS            reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    MINUS           reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    BIGGER          reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    BIGGER_EQ       reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    SMALLER         reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    SMALLER_EQ      reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    DOUBLE_EQUALS   reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    DIFFERENT       reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    AND             reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    OR              reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    SEMI_COLON      reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_PARENTHESIS reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    COMMA           reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_BRACKET   reduce using rule 87 (FACTOR -> CLASS_INSTANCE .)


state 153

    (88) FACTOR -> VAR . seen_var_as_factor
    (97) seen_var_as_factor -> . empty
    (177) empty -> .

    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    seen_var_as_factor             shift and go to state 203
    empty                          shift and go to state 204

state 154

    (89) FACTOR -> CNST .

    STAR            reduce using rule 89 (FACTOR -> CNST .)
    FWD_SLASH       reduce using rule 89 (FACTOR -> CNST .)
    PLUS            reduce using rule 89 (FACTOR -> CNST .)
    MINUS           reduce using rule 89 (FACTOR -> CNST .)
    BIGGER          reduce using rule 89 (FACTOR -> CNST .)
    BIGGER_EQ       reduce using rule 89 (FACTOR -> CNST .)
    SMALLER         reduce using rule 89 (FACTOR -> CNST .)
    SMALLER_EQ      reduce using rule 89 (FACTOR -> CNST .)
    DOUBLE_EQUALS   reduce using rule 89 (FACTOR -> CNST .)
    DIFFERENT       reduce using rule 89 (FACTOR -> CNST .)
    AND             reduce using rule 89 (FACTOR -> CNST .)
    OR              reduce using rule 89 (FACTOR -> CNST .)
    SEMI_COLON      reduce using rule 89 (FACTOR -> CNST .)
    CLOSE_PARENTHESIS reduce using rule 89 (FACTOR -> CNST .)
    COMMA           reduce using rule 89 (FACTOR -> CNST .)
    CLOSE_BRACKET   reduce using rule 89 (FACTOR -> CNST .)


state 155

    (111) CLASS_INSTANCE -> NEW_KWD . ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS

    ID              shift and go to state 205


state 156

    (102) CNST -> CTE_S . seen_cte_s
    (101) seen_cte_s -> .

    STAR            reduce using rule 101 (seen_cte_s -> .)
    FWD_SLASH       reduce using rule 101 (seen_cte_s -> .)
    PLUS            reduce using rule 101 (seen_cte_s -> .)
    MINUS           reduce using rule 101 (seen_cte_s -> .)
    BIGGER          reduce using rule 101 (seen_cte_s -> .)
    BIGGER_EQ       reduce using rule 101 (seen_cte_s -> .)
    SMALLER         reduce using rule 101 (seen_cte_s -> .)
    SMALLER_EQ      reduce using rule 101 (seen_cte_s -> .)
    DOUBLE_EQUALS   reduce using rule 101 (seen_cte_s -> .)
    DIFFERENT       reduce using rule 101 (seen_cte_s -> .)
    AND             reduce using rule 101 (seen_cte_s -> .)
    OR              reduce using rule 101 (seen_cte_s -> .)
    SEMI_COLON      reduce using rule 101 (seen_cte_s -> .)
    CLOSE_PARENTHESIS reduce using rule 101 (seen_cte_s -> .)
    COMMA           reduce using rule 101 (seen_cte_s -> .)
    CLOSE_BRACKET   reduce using rule 101 (seen_cte_s -> .)

    seen_cte_s                     shift and go to state 206

state 157

    (103) CNST -> CTE_F . seen_cte_f
    (100) seen_cte_f -> .

    STAR            reduce using rule 100 (seen_cte_f -> .)
    FWD_SLASH       reduce using rule 100 (seen_cte_f -> .)
    PLUS            reduce using rule 100 (seen_cte_f -> .)
    MINUS           reduce using rule 100 (seen_cte_f -> .)
    BIGGER          reduce using rule 100 (seen_cte_f -> .)
    BIGGER_EQ       reduce using rule 100 (seen_cte_f -> .)
    SMALLER         reduce using rule 100 (seen_cte_f -> .)
    SMALLER_EQ      reduce using rule 100 (seen_cte_f -> .)
    DOUBLE_EQUALS   reduce using rule 100 (seen_cte_f -> .)
    DIFFERENT       reduce using rule 100 (seen_cte_f -> .)
    AND             reduce using rule 100 (seen_cte_f -> .)
    OR              reduce using rule 100 (seen_cte_f -> .)
    SEMI_COLON      reduce using rule 100 (seen_cte_f -> .)
    CLOSE_PARENTHESIS reduce using rule 100 (seen_cte_f -> .)
    COMMA           reduce using rule 100 (seen_cte_f -> .)
    CLOSE_BRACKET   reduce using rule 100 (seen_cte_f -> .)

    seen_cte_f                     shift and go to state 207

state 158

    (104) CNST -> CTE_I . seen_cte_i
    (99) seen_cte_i -> .

    STAR            reduce using rule 99 (seen_cte_i -> .)
    FWD_SLASH       reduce using rule 99 (seen_cte_i -> .)
    PLUS            reduce using rule 99 (seen_cte_i -> .)
    MINUS           reduce using rule 99 (seen_cte_i -> .)
    BIGGER          reduce using rule 99 (seen_cte_i -> .)
    BIGGER_EQ       reduce using rule 99 (seen_cte_i -> .)
    SMALLER         reduce using rule 99 (seen_cte_i -> .)
    SMALLER_EQ      reduce using rule 99 (seen_cte_i -> .)
    DOUBLE_EQUALS   reduce using rule 99 (seen_cte_i -> .)
    DIFFERENT       reduce using rule 99 (seen_cte_i -> .)
    AND             reduce using rule 99 (seen_cte_i -> .)
    OR              reduce using rule 99 (seen_cte_i -> .)
    SEMI_COLON      reduce using rule 99 (seen_cte_i -> .)
    CLOSE_PARENTHESIS reduce using rule 99 (seen_cte_i -> .)
    COMMA           reduce using rule 99 (seen_cte_i -> .)
    CLOSE_BRACKET   reduce using rule 99 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 208

state 159

    (106) CLASS_REFERENCE -> THIS_KWD seen_this_kwd . DOT seen_this_dot_operator

    DOT             shift and go to state 209


state 160

    (107) seen_this_kwd -> empty .

    DOT             reduce using rule 107 (seen_this_kwd -> empty .)


state 161

    (156) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    EXPRESSION                     shift and go to state 210
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 162

    (163) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 212


state 163

    (164) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 164 (seen_while_kwd -> empty .)


state 164

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 178
    THIS_KWD        shift and go to state 105

    VAR                            shift and go to state 213
    ARRAY                          shift and go to state 104
    CLASS_REFERENCE                shift and go to state 179

state 165

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_I          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)


state 166

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 167

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (33) seen_func_vars -> . empty
    (177) empty -> .

    OPEN_CURLY      reduce using rule 177 (empty -> .)

    seen_func_vars                 shift and go to state 214
    empty                          shift and go to state 215

state 168

    (39) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 216


state 169

    (36) FUNC_PARAM_P -> COMMA VAR_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 36 (FUNC_PARAM_P -> COMMA VAR_DECLARATION FUNC_PARAM_P .)


state 170

    (122) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (99) seen_cte_i -> .

    CLOSE_BRACKET   reduce using rule 99 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 217

state 171

    (132) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (135) ARG_LIST -> . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (136) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (137) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (138) ARG_LIST -> . empty
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (177) empty -> .
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 218
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    THIS_KWD        shift and go to state 105
    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158

    ARG_LIST                       shift and go to state 219
    VAR                            shift and go to state 220
    EXPRESSION                     shift and go to state 221
    FUNC_CALL                      shift and go to state 222
    empty                          shift and go to state 223
    ARRAY                          shift and go to state 104
    CLASS_REFERENCE                shift and go to state 224
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    CLASS_INSTANCE                 shift and go to state 152
    CNST                           shift and go to state 154

state 172

    (105) CLASS_REFERENCE -> ID DOT seen_dot_operator .

    ID              reduce using rule 105 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)
    THIS_KWD        reduce using rule 105 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)


state 173

    (113) seen_dot_operator -> empty .

    ID              reduce using rule 113 (seen_dot_operator -> empty .)
    THIS_KWD        reduce using rule 113 (seen_dot_operator -> empty .)


state 174

    (115) ARRAY -> ID seen_array_id OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (119) seen_open_bracket -> . empty
    (177) empty -> .

    MINUS           reduce using rule 177 (empty -> .)
    NOT             reduce using rule 177 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    NEW_KWD         reduce using rule 177 (empty -> .)
    CTE_S           reduce using rule 177 (empty -> .)
    CTE_F           reduce using rule 177 (empty -> .)
    CTE_I           reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_open_bracket              shift and go to state 225
    empty                          shift and go to state 226

state 175

    (61) ASSIGN -> VAR seen_var_in_assign EQUALS . seen_equals EXPRESSION
    (62) seen_equals -> . empty
    (177) empty -> .

    MINUS           reduce using rule 177 (empty -> .)
    NOT             reduce using rule 177 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    NEW_KWD         reduce using rule 177 (empty -> .)
    CTE_S           reduce using rule 177 (empty -> .)
    CTE_F           reduce using rule 177 (empty -> .)
    CTE_I           reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_equals                    shift and go to state 227
    empty                          shift and go to state 228

state 176

    (147) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 229


state 177

    (23) READABLE_LIST -> VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (96) seen_var_in_assign -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_var_in_assign             shift and go to state 230
    empty                          shift and go to state 133

state 178

    (108) VAR -> ID .
    (115) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (105) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (118) seen_array_id -> . empty
    (177) empty -> .

    COMMA           reduce using rule 108 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 108 (VAR -> ID .)
    EQUALS          reduce using rule 108 (VAR -> ID .)
    DOT             shift and go to state 121
    OPEN_BRACKET    reduce using rule 177 (empty -> .)

    seen_array_id                  shift and go to state 122
    empty                          shift and go to state 231

state 179

    (110) VAR -> CLASS_REFERENCE . VAR
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 178
    THIS_KWD        shift and go to state 105

    CLASS_REFERENCE                shift and go to state 179
    VAR                            shift and go to state 135
    ARRAY                          shift and go to state 104

state 180

    (148) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (152) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    PRINTABLE                      shift and go to state 232
    EXPRESSION                     shift and go to state 233
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 181

    (150) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (152) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    PRINTABLE                      shift and go to state 234
    EXPRESSION                     shift and go to state 233
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 182

    (50) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR . seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (98) seen_var_in_open -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)

    seen_var_in_open               shift and go to state 235
    empty                          shift and go to state 236

state 183

    (144) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 144 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 144 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINT_KWD       reduce using rule 144 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 144 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    OPEN_KWD        reduce using rule 144 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 144 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    THIS_KWD        reduce using rule 144 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 144 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 144 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 144 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 144 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 184

    (145) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    ID              reduce using rule 145 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 145 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 145 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 145 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 145 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 145 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 145 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 145 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 145 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 145 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 145 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 185

    (72) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (74) seen_comp_op -> . empty
    (177) empty -> .

    MINUS           reduce using rule 177 (empty -> .)
    NOT             reduce using rule 177 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    NEW_KWD         reduce using rule 177 (empty -> .)
    CTE_S           reduce using rule 177 (empty -> .)
    CTE_F           reduce using rule 177 (empty -> .)
    CTE_I           reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_comp_op                   shift and go to state 237
    empty                          shift and go to state 238

state 186

    (75) COMP -> BIGGER .

    MINUS           reduce using rule 75 (COMP -> BIGGER .)
    NOT             reduce using rule 75 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 75 (COMP -> BIGGER .)
    ID              reduce using rule 75 (COMP -> BIGGER .)
    NEW_KWD         reduce using rule 75 (COMP -> BIGGER .)
    CTE_S           reduce using rule 75 (COMP -> BIGGER .)
    CTE_F           reduce using rule 75 (COMP -> BIGGER .)
    CTE_I           reduce using rule 75 (COMP -> BIGGER .)
    THIS_KWD        reduce using rule 75 (COMP -> BIGGER .)


state 187

    (76) COMP -> BIGGER_EQ .

    MINUS           reduce using rule 76 (COMP -> BIGGER_EQ .)
    NOT             reduce using rule 76 (COMP -> BIGGER_EQ .)
    OPEN_PARENTHESIS reduce using rule 76 (COMP -> BIGGER_EQ .)
    ID              reduce using rule 76 (COMP -> BIGGER_EQ .)
    NEW_KWD         reduce using rule 76 (COMP -> BIGGER_EQ .)
    CTE_S           reduce using rule 76 (COMP -> BIGGER_EQ .)
    CTE_F           reduce using rule 76 (COMP -> BIGGER_EQ .)
    CTE_I           reduce using rule 76 (COMP -> BIGGER_EQ .)
    THIS_KWD        reduce using rule 76 (COMP -> BIGGER_EQ .)


state 188

    (77) COMP -> SMALLER .

    MINUS           reduce using rule 77 (COMP -> SMALLER .)
    NOT             reduce using rule 77 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 77 (COMP -> SMALLER .)
    ID              reduce using rule 77 (COMP -> SMALLER .)
    NEW_KWD         reduce using rule 77 (COMP -> SMALLER .)
    CTE_S           reduce using rule 77 (COMP -> SMALLER .)
    CTE_F           reduce using rule 77 (COMP -> SMALLER .)
    CTE_I           reduce using rule 77 (COMP -> SMALLER .)
    THIS_KWD        reduce using rule 77 (COMP -> SMALLER .)


state 189

    (78) COMP -> SMALLER_EQ .

    MINUS           reduce using rule 78 (COMP -> SMALLER_EQ .)
    NOT             reduce using rule 78 (COMP -> SMALLER_EQ .)
    OPEN_PARENTHESIS reduce using rule 78 (COMP -> SMALLER_EQ .)
    ID              reduce using rule 78 (COMP -> SMALLER_EQ .)
    NEW_KWD         reduce using rule 78 (COMP -> SMALLER_EQ .)
    CTE_S           reduce using rule 78 (COMP -> SMALLER_EQ .)
    CTE_F           reduce using rule 78 (COMP -> SMALLER_EQ .)
    CTE_I           reduce using rule 78 (COMP -> SMALLER_EQ .)
    THIS_KWD        reduce using rule 78 (COMP -> SMALLER_EQ .)


state 190

    (79) COMP -> DOUBLE_EQUALS .

    MINUS           reduce using rule 79 (COMP -> DOUBLE_EQUALS .)
    NOT             reduce using rule 79 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 79 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 79 (COMP -> DOUBLE_EQUALS .)
    NEW_KWD         reduce using rule 79 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 79 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 79 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 79 (COMP -> DOUBLE_EQUALS .)
    THIS_KWD        reduce using rule 79 (COMP -> DOUBLE_EQUALS .)


state 191

    (80) COMP -> DIFFERENT .

    MINUS           reduce using rule 80 (COMP -> DIFFERENT .)
    NOT             reduce using rule 80 (COMP -> DIFFERENT .)
    OPEN_PARENTHESIS reduce using rule 80 (COMP -> DIFFERENT .)
    ID              reduce using rule 80 (COMP -> DIFFERENT .)
    NEW_KWD         reduce using rule 80 (COMP -> DIFFERENT .)
    CTE_S           reduce using rule 80 (COMP -> DIFFERENT .)
    CTE_F           reduce using rule 80 (COMP -> DIFFERENT .)
    CTE_I           reduce using rule 80 (COMP -> DIFFERENT .)
    THIS_KWD        reduce using rule 80 (COMP -> DIFFERENT .)


state 192

    (81) COMP -> AND .

    MINUS           reduce using rule 81 (COMP -> AND .)
    NOT             reduce using rule 81 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 81 (COMP -> AND .)
    ID              reduce using rule 81 (COMP -> AND .)
    NEW_KWD         reduce using rule 81 (COMP -> AND .)
    CTE_S           reduce using rule 81 (COMP -> AND .)
    CTE_F           reduce using rule 81 (COMP -> AND .)
    CTE_I           reduce using rule 81 (COMP -> AND .)
    THIS_KWD        reduce using rule 81 (COMP -> AND .)


state 193

    (82) COMP -> OR .

    MINUS           reduce using rule 82 (COMP -> OR .)
    NOT             reduce using rule 82 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 82 (COMP -> OR .)
    ID              reduce using rule 82 (COMP -> OR .)
    NEW_KWD         reduce using rule 82 (COMP -> OR .)
    CTE_S           reduce using rule 82 (COMP -> OR .)
    CTE_F           reduce using rule 82 (COMP -> OR .)
    CTE_I           reduce using rule 82 (COMP -> OR .)
    THIS_KWD        reduce using rule 82 (COMP -> OR .)


state 194

    (83) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    EXPRESSION                     shift and go to state 239
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 195

    (94) seen_open_parenthesis -> empty .

    MINUS           reduce using rule 94 (seen_open_parenthesis -> empty .)
    NOT             reduce using rule 94 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 94 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 94 (seen_open_parenthesis -> empty .)
    NEW_KWD         reduce using rule 94 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 94 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 94 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 94 (seen_open_parenthesis -> empty .)
    THIS_KWD        reduce using rule 94 (seen_open_parenthesis -> empty .)


state 196

    (63) EXP -> TERM seen_term . EXP_P
    (67) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (68) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (69) EXP_P -> . empty
    (177) empty -> .

    PLUS            shift and go to state 241
    MINUS           shift and go to state 242
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    EXP_P                          shift and go to state 240
    empty                          shift and go to state 243

state 197

    (64) EXP -> MINUS seen_unary_minus . EXP pop_unary_minus
    (85) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (126) TERM -> . FACTOR seen_factor TERM_P
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    EXP                            shift and go to state 244
    FACTOR                         shift and go to state 245
    TERM                           shift and go to state 148
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 198

    (93) seen_unary_minus -> empty .

    MINUS           reduce using rule 93 (seen_unary_minus -> empty .)
    NOT             reduce using rule 93 (seen_unary_minus -> empty .)
    OPEN_PARENTHESIS reduce using rule 93 (seen_unary_minus -> empty .)
    ID              reduce using rule 93 (seen_unary_minus -> empty .)
    NEW_KWD         reduce using rule 93 (seen_unary_minus -> empty .)
    CTE_S           reduce using rule 93 (seen_unary_minus -> empty .)
    CTE_F           reduce using rule 93 (seen_unary_minus -> empty .)
    CTE_I           reduce using rule 93 (seen_unary_minus -> empty .)
    THIS_KWD        reduce using rule 93 (seen_unary_minus -> empty .)


state 199

    (65) EXP -> NOT seen_not . EXP pop_not
    (84) FACTOR -> NOT seen_not . FACTOR pop_not
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (126) TERM -> . FACTOR seen_factor TERM_P
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    EXP                            shift and go to state 246
    FACTOR                         shift and go to state 247
    TERM                           shift and go to state 148
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 200

    (91) seen_not -> empty .

    MINUS           reduce using rule 91 (seen_not -> empty .)
    NOT             reduce using rule 91 (seen_not -> empty .)
    OPEN_PARENTHESIS reduce using rule 91 (seen_not -> empty .)
    ID              reduce using rule 91 (seen_not -> empty .)
    NEW_KWD         reduce using rule 91 (seen_not -> empty .)
    CTE_S           reduce using rule 91 (seen_not -> empty .)
    CTE_F           reduce using rule 91 (seen_not -> empty .)
    CTE_I           reduce using rule 91 (seen_not -> empty .)
    THIS_KWD        reduce using rule 91 (seen_not -> empty .)


state 201

    (126) TERM -> FACTOR seen_factor . TERM_P
    (127) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (128) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (129) TERM_P -> . empty
    (177) empty -> .

    STAR            shift and go to state 249
    FWD_SLASH       shift and go to state 250
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    TERM_P                         shift and go to state 248
    empty                          shift and go to state 251

state 202

    (130) seen_factor -> empty .

    STAR            reduce using rule 130 (seen_factor -> empty .)
    FWD_SLASH       reduce using rule 130 (seen_factor -> empty .)
    PLUS            reduce using rule 130 (seen_factor -> empty .)
    MINUS           reduce using rule 130 (seen_factor -> empty .)
    BIGGER          reduce using rule 130 (seen_factor -> empty .)
    BIGGER_EQ       reduce using rule 130 (seen_factor -> empty .)
    SMALLER         reduce using rule 130 (seen_factor -> empty .)
    SMALLER_EQ      reduce using rule 130 (seen_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 130 (seen_factor -> empty .)
    DIFFERENT       reduce using rule 130 (seen_factor -> empty .)
    AND             reduce using rule 130 (seen_factor -> empty .)
    OR              reduce using rule 130 (seen_factor -> empty .)
    SEMI_COLON      reduce using rule 130 (seen_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 130 (seen_factor -> empty .)
    COMMA           reduce using rule 130 (seen_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 130 (seen_factor -> empty .)


state 203

    (88) FACTOR -> VAR seen_var_as_factor .

    STAR            reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    DIFFERENT       reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    SEMI_COLON      reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_BRACKET   reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)


state 204

    (97) seen_var_as_factor -> empty .

    STAR            reduce using rule 97 (seen_var_as_factor -> empty .)
    FWD_SLASH       reduce using rule 97 (seen_var_as_factor -> empty .)
    PLUS            reduce using rule 97 (seen_var_as_factor -> empty .)
    MINUS           reduce using rule 97 (seen_var_as_factor -> empty .)
    BIGGER          reduce using rule 97 (seen_var_as_factor -> empty .)
    BIGGER_EQ       reduce using rule 97 (seen_var_as_factor -> empty .)
    SMALLER         reduce using rule 97 (seen_var_as_factor -> empty .)
    SMALLER_EQ      reduce using rule 97 (seen_var_as_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 97 (seen_var_as_factor -> empty .)
    DIFFERENT       reduce using rule 97 (seen_var_as_factor -> empty .)
    AND             reduce using rule 97 (seen_var_as_factor -> empty .)
    OR              reduce using rule 97 (seen_var_as_factor -> empty .)
    SEMI_COLON      reduce using rule 97 (seen_var_as_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 97 (seen_var_as_factor -> empty .)
    COMMA           reduce using rule 97 (seen_var_as_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 97 (seen_var_as_factor -> empty .)


state 205

    (111) CLASS_INSTANCE -> NEW_KWD ID . seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (112) seen_class_id_instance -> . empty
    (177) empty -> .

    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_class_id_instance         shift and go to state 252
    empty                          shift and go to state 253

state 206

    (102) CNST -> CTE_S seen_cte_s .

    STAR            reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    BIGGER_EQ       reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    SMALLER_EQ      reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    DIFFERENT       reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    AND             reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    OR              reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 102 (CNST -> CTE_S seen_cte_s .)
    CLOSE_BRACKET   reduce using rule 102 (CNST -> CTE_S seen_cte_s .)


state 207

    (103) CNST -> CTE_F seen_cte_f .

    STAR            reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    BIGGER_EQ       reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    SMALLER_EQ      reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    DIFFERENT       reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    AND             reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    OR              reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 103 (CNST -> CTE_F seen_cte_f .)
    CLOSE_BRACKET   reduce using rule 103 (CNST -> CTE_F seen_cte_f .)


state 208

    (104) CNST -> CTE_I seen_cte_i .

    STAR            reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    BIGGER_EQ       reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    SMALLER_EQ      reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    DIFFERENT       reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    AND             reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    OR              reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 104 (CNST -> CTE_I seen_cte_i .)
    CLOSE_BRACKET   reduce using rule 104 (CNST -> CTE_I seen_cte_i .)


state 209

    (106) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT . seen_this_dot_operator
    (114) seen_this_dot_operator -> . empty
    (177) empty -> .

    ID              reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_this_dot_operator         shift and go to state 254
    empty                          shift and go to state 255

state 210

    (156) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 256


state 211

    (86) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 86 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 86 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 86 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 86 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 86 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 86 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 86 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 86 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 86 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 86 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 86 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 86 (FACTOR -> FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 86 (FACTOR -> FUNC_CALL .)


state 212

    (163) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    EXPRESSION                     shift and go to state 257
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 213

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (167) seen_for_kwd -> . empty
    (177) empty -> .

    EQUALS          reduce using rule 177 (empty -> .)

    seen_for_kwd                   shift and go to state 258
    empty                          shift and go to state 259

state 214

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 260


state 215

    (33) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 33 (seen_func_vars -> empty .)


state 216

    (39) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (177) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (121) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 261
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 217

    (122) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (125) seen_array_def_dim -> . empty
    (177) empty -> .

    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    seen_array_def_dim             shift and go to state 262
    empty                          shift and go to state 71

state 218

    (108) VAR -> ID .
    (132) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (115) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (105) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (134) seen_func_call_id -> . empty
    (118) seen_array_id -> . empty
    (177) empty -> .

    COMMA           reduce using rule 108 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 108 (VAR -> ID .)
    STAR            reduce using rule 108 (VAR -> ID .)
    FWD_SLASH       reduce using rule 108 (VAR -> ID .)
    PLUS            reduce using rule 108 (VAR -> ID .)
    MINUS           reduce using rule 108 (VAR -> ID .)
    BIGGER          reduce using rule 108 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 108 (VAR -> ID .)
    SMALLER         reduce using rule 108 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 108 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 108 (VAR -> ID .)
    DIFFERENT       reduce using rule 108 (VAR -> ID .)
    AND             reduce using rule 108 (VAR -> ID .)
    OR              reduce using rule 108 (VAR -> ID .)
    DOT             shift and go to state 121
    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    OPEN_BRACKET    reduce using rule 177 (empty -> .)

    seen_func_call_id              shift and go to state 120
    seen_array_id                  shift and go to state 122
    empty                          shift and go to state 123

state 219

    (132) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 263


state 220

    (135) ARG_LIST -> VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (88) FACTOR -> VAR . seen_var_as_factor
    (97) seen_var_as_factor -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)

    seen_var_as_factor             shift and go to state 264
    empty                          shift and go to state 204

state 221

    (136) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (143) seen_arg -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_arg                       shift and go to state 265
    empty                          shift and go to state 266

state 222

    (137) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (86) FACTOR -> FUNC_CALL .
    (143) seen_arg -> . empty
    (177) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 86 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 86 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 86 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 86 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 86 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 86 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 86 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 86 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 86 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 86 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 86 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 86 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 86 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 177 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 177 (empty -> .) ]

    seen_arg                       shift and go to state 267
    empty                          shift and go to state 266

state 223

    (138) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 138 (ARG_LIST -> empty .)


state 224

    (110) VAR -> CLASS_REFERENCE . VAR
    (133) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 218
    THIS_KWD        shift and go to state 105

    CLASS_REFERENCE                shift and go to state 224
    VAR                            shift and go to state 135
    FUNC_CALL                      shift and go to state 134
    ARRAY                          shift and go to state 104

state 225

    (115) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    EXPRESSION                     shift and go to state 268
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 226

    (119) seen_open_bracket -> empty .

    MINUS           reduce using rule 119 (seen_open_bracket -> empty .)
    NOT             reduce using rule 119 (seen_open_bracket -> empty .)
    OPEN_PARENTHESIS reduce using rule 119 (seen_open_bracket -> empty .)
    ID              reduce using rule 119 (seen_open_bracket -> empty .)
    NEW_KWD         reduce using rule 119 (seen_open_bracket -> empty .)
    CTE_S           reduce using rule 119 (seen_open_bracket -> empty .)
    CTE_F           reduce using rule 119 (seen_open_bracket -> empty .)
    CTE_I           reduce using rule 119 (seen_open_bracket -> empty .)
    THIS_KWD        reduce using rule 119 (seen_open_bracket -> empty .)


state 227

    (61) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals . EXPRESSION
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    VAR                            shift and go to state 153
    EXPRESSION                     shift and go to state 269
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 228

    (62) seen_equals -> empty .

    MINUS           reduce using rule 62 (seen_equals -> empty .)
    NOT             reduce using rule 62 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 62 (seen_equals -> empty .)
    ID              reduce using rule 62 (seen_equals -> empty .)
    NEW_KWD         reduce using rule 62 (seen_equals -> empty .)
    CTE_S           reduce using rule 62 (seen_equals -> empty .)
    CTE_F           reduce using rule 62 (seen_equals -> empty .)
    CTE_I           reduce using rule 62 (seen_equals -> empty .)
    THIS_KWD        reduce using rule 62 (seen_equals -> empty .)


state 229

    (147) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 147 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 147 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 230

    (23) READABLE_LIST -> VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_readable                  shift and go to state 270
    empty                          shift and go to state 271

state 231

    (118) seen_array_id -> empty .

    OPEN_BRACKET    reduce using rule 118 (seen_array_id -> empty .)


state 232

    (148) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 272


state 233

    (152) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (155) seen_printable -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_printable                 shift and go to state 273
    empty                          shift and go to state 274

state 234

    (150) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 275


state 235

    (50) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open . seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (51) seen_open_buffer -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)

    seen_open_buffer               shift and go to state 276
    empty                          shift and go to state 277

state 236

    (98) seen_var_in_open -> empty .

    COMMA           reduce using rule 98 (seen_var_in_open -> empty .)


state 237

    (72) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    EXP                            shift and go to state 145
    EXPRESSION                     shift and go to state 278
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 238

    (74) seen_comp_op -> empty .

    MINUS           reduce using rule 74 (seen_comp_op -> empty .)
    NOT             reduce using rule 74 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 74 (seen_comp_op -> empty .)
    ID              reduce using rule 74 (seen_comp_op -> empty .)
    NEW_KWD         reduce using rule 74 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 74 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 74 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 74 (seen_comp_op -> empty .)
    THIS_KWD        reduce using rule 74 (seen_comp_op -> empty .)


state 239

    (83) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 279


state 240

    (63) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 63 (EXP -> TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 63 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 63 (EXP -> TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 63 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 63 (EXP -> TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 63 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 63 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 63 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 63 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 63 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 63 (EXP -> TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 63 (EXP -> TERM seen_term EXP_P .)


state 241

    (67) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (70) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 70 (seen_term_op -> .)
    NOT             reduce using rule 70 (seen_term_op -> .)
    MINUS           reduce using rule 70 (seen_term_op -> .)
    ID              reduce using rule 70 (seen_term_op -> .)
    NEW_KWD         reduce using rule 70 (seen_term_op -> .)
    CTE_S           reduce using rule 70 (seen_term_op -> .)
    CTE_F           reduce using rule 70 (seen_term_op -> .)
    CTE_I           reduce using rule 70 (seen_term_op -> .)
    THIS_KWD        reduce using rule 70 (seen_term_op -> .)

    seen_term_op                   shift and go to state 280

state 242

    (68) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (70) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 70 (seen_term_op -> .)
    NOT             reduce using rule 70 (seen_term_op -> .)
    MINUS           reduce using rule 70 (seen_term_op -> .)
    ID              reduce using rule 70 (seen_term_op -> .)
    NEW_KWD         reduce using rule 70 (seen_term_op -> .)
    CTE_S           reduce using rule 70 (seen_term_op -> .)
    CTE_F           reduce using rule 70 (seen_term_op -> .)
    CTE_I           reduce using rule 70 (seen_term_op -> .)
    THIS_KWD        reduce using rule 70 (seen_term_op -> .)

    seen_term_op                   shift and go to state 281

state 243

    (69) EXP_P -> empty .

    BIGGER          reduce using rule 69 (EXP_P -> empty .)
    BIGGER_EQ       reduce using rule 69 (EXP_P -> empty .)
    SMALLER         reduce using rule 69 (EXP_P -> empty .)
    SMALLER_EQ      reduce using rule 69 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 69 (EXP_P -> empty .)
    DIFFERENT       reduce using rule 69 (EXP_P -> empty .)
    AND             reduce using rule 69 (EXP_P -> empty .)
    OR              reduce using rule 69 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 69 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 69 (EXP_P -> empty .)
    COMMA           reduce using rule 69 (EXP_P -> empty .)
    CLOSE_BRACKET   reduce using rule 69 (EXP_P -> empty .)


state 244

    (64) EXP -> MINUS seen_unary_minus EXP . pop_unary_minus
    (92) pop_unary_minus -> . empty
    (177) empty -> .

    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    pop_unary_minus                shift and go to state 282
    empty                          shift and go to state 283

state 245

    (85) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (126) TERM -> FACTOR . seen_factor TERM_P
    (92) pop_unary_minus -> . empty
    (130) seen_factor -> . empty
    (177) empty -> .

    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    pop_unary_minus                shift and go to state 284
    seen_factor                    shift and go to state 201
    empty                          shift and go to state 285

state 246

    (65) EXP -> NOT seen_not EXP . pop_not
    (90) pop_not -> . empty
    (177) empty -> .

    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    pop_not                        shift and go to state 286
    empty                          shift and go to state 287

state 247

    (84) FACTOR -> NOT seen_not FACTOR . pop_not
    (126) TERM -> FACTOR . seen_factor TERM_P
    (90) pop_not -> . empty
    (130) seen_factor -> . empty
    (177) empty -> .

    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    pop_not                        shift and go to state 288
    seen_factor                    shift and go to state 201
    empty                          shift and go to state 289

state 248

    (126) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 126 (TERM -> FACTOR seen_factor TERM_P .)


state 249

    (127) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (131) seen_factor_op -> . empty
    (177) empty -> .

    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    NOT             reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    NEW_KWD         reduce using rule 177 (empty -> .)
    CTE_S           reduce using rule 177 (empty -> .)
    CTE_F           reduce using rule 177 (empty -> .)
    CTE_I           reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_factor_op                 shift and go to state 290
    empty                          shift and go to state 291

state 250

    (128) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (131) seen_factor_op -> . empty
    (177) empty -> .

    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    NOT             reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    NEW_KWD         reduce using rule 177 (empty -> .)
    CTE_S           reduce using rule 177 (empty -> .)
    CTE_F           reduce using rule 177 (empty -> .)
    CTE_I           reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_factor_op                 shift and go to state 292
    empty                          shift and go to state 291

state 251

    (129) TERM_P -> empty .

    PLUS            reduce using rule 129 (TERM_P -> empty .)
    MINUS           reduce using rule 129 (TERM_P -> empty .)
    BIGGER          reduce using rule 129 (TERM_P -> empty .)
    BIGGER_EQ       reduce using rule 129 (TERM_P -> empty .)
    SMALLER         reduce using rule 129 (TERM_P -> empty .)
    SMALLER_EQ      reduce using rule 129 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 129 (TERM_P -> empty .)
    DIFFERENT       reduce using rule 129 (TERM_P -> empty .)
    AND             reduce using rule 129 (TERM_P -> empty .)
    OR              reduce using rule 129 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 129 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 129 (TERM_P -> empty .)
    COMMA           reduce using rule 129 (TERM_P -> empty .)
    CLOSE_BRACKET   reduce using rule 129 (TERM_P -> empty .)


state 252

    (111) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 293


state 253

    (112) seen_class_id_instance -> empty .

    OPEN_PARENTHESIS reduce using rule 112 (seen_class_id_instance -> empty .)


state 254

    (106) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .

    ID              reduce using rule 106 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)
    THIS_KWD        reduce using rule 106 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)


state 255

    (114) seen_this_dot_operator -> empty .

    ID              reduce using rule 114 (seen_this_dot_operator -> empty .)
    THIS_KWD        reduce using rule 114 (seen_this_dot_operator -> empty .)


state 256

    (156) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (159) seen_if_kwd -> . empty
    (177) empty -> .

    OPEN_CURLY      reduce using rule 177 (empty -> .)

    seen_if_kwd                    shift and go to state 294
    empty                          shift and go to state 295

state 257

    (163) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 296


state 258

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 297


state 259

    (167) seen_for_kwd -> empty .

    EQUALS          reduce using rule 167 (seen_for_kwd -> empty .)


state 260

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . FLOW_CONTROL
    (49) STATEMENT -> . FUNC_RETURN
    (177) empty -> .
    (61) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (147) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (148) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (150) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (50) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (54) FLOW_CONTROL -> . DECISION
    (55) FLOW_CONTROL -> . REPETITION
    (144) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (145) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (146) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (156) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (161) REPETITION -> . CONDITIONAL_REP
    (162) REPETITION -> . UNCONDITIONAL_REP
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (163) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (166) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    RETURN_KWD      shift and go to state 103
    THIS_KWD        shift and go to state 105
    IF_KWD          shift and go to state 106
    WHILE_KWD       shift and go to state 109
    FOR_KWD         shift and go to state 110

    STATEMENT_STAR                 shift and go to state 298
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 101
    REPETITION                     shift and go to state 102
    ARRAY                          shift and go to state 104
    CONDITIONAL_REP                shift and go to state 107
    UNCONDITIONAL_REP              shift and go to state 108

state 261

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 299


state 262

    (122) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_BRACKET   shift and go to state 300


state 263

    (132) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DIFFERENT       reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 132 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 264

    (135) ARG_LIST -> VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (88) FACTOR -> VAR seen_var_as_factor .
    (143) seen_arg -> . empty
    (177) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 88 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    DIFFERENT       reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 177 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 177 (empty -> .) ]

    seen_arg                       shift and go to state 301
    empty                          shift and go to state 266

state 265

    (136) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (139) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (140) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (141) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (142) ARG_LIST_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 303
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    ARG_LIST_P                     shift and go to state 302
    empty                          shift and go to state 304

state 266

    (143) seen_arg -> empty .

    COMMA           reduce using rule 143 (seen_arg -> empty .)
    CLOSE_PARENTHESIS reduce using rule 143 (seen_arg -> empty .)


state 267

    (137) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (139) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (140) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (141) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (142) ARG_LIST_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 303
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    ARG_LIST_P                     shift and go to state 305
    empty                          shift and go to state 304

state 268

    (115) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (120) seen_array_access -> . empty
    (177) empty -> .

    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    seen_array_access              shift and go to state 306
    empty                          shift and go to state 307

state 269

    (61) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 61 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 61 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)


state 270

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 309
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    READABLE_LIST_P                shift and go to state 308
    empty                          shift and go to state 310

state 271

    (26) seen_readable -> empty .

    COMMA           reduce using rule 26 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 26 (seen_readable -> empty .)


state 272

    (148) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 148 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 148 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 273

    (152) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (153) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (154) PRINTABLE_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 312
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    PRINTABLE_P                    shift and go to state 311
    empty                          shift and go to state 313

state 274

    (155) seen_printable -> empty .

    COMMA           reduce using rule 155 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 155 (seen_printable -> empty .)


state 275

    (150) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 150 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 150 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 276

    (50) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer . COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 314


state 277

    (51) seen_open_buffer -> empty .

    COMMA           reduce using rule 51 (seen_open_buffer -> empty .)


state 278

    (72) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (73) seen_comp -> . empty
    (177) empty -> .

    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    seen_comp                      shift and go to state 315
    empty                          shift and go to state 316

state 279

    (83) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (95) seen_close_parenthesis -> . empty
    (177) empty -> .

    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    seen_close_parenthesis         shift and go to state 317
    empty                          shift and go to state 318

state 280

    (67) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 147
    NOT             shift and go to state 320
    MINUS           shift and go to state 321
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    TERM                           shift and go to state 319
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 281

    (68) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 147
    NOT             shift and go to state 320
    MINUS           shift and go to state 321
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    TERM                           shift and go to state 322
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 282

    (64) EXP -> MINUS seen_unary_minus EXP pop_unary_minus .

    BIGGER          reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    BIGGER_EQ       reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER         reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER_EQ      reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    DIFFERENT       reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    AND             reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    OR              reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SEMI_COLON      reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    COMMA           reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 64 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)


state 283

    (92) pop_unary_minus -> empty .

    BIGGER          reduce using rule 92 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 92 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 92 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 92 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 92 (pop_unary_minus -> empty .)
    DIFFERENT       reduce using rule 92 (pop_unary_minus -> empty .)
    AND             reduce using rule 92 (pop_unary_minus -> empty .)
    OR              reduce using rule 92 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 92 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 92 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 92 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 92 (pop_unary_minus -> empty .)
    STAR            reduce using rule 92 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 92 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 92 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 92 (pop_unary_minus -> empty .)


state 284

    (85) FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .

    STAR            reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    FWD_SLASH       reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    PLUS            reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    MINUS           reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER          reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER_EQ       reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER         reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER_EQ      reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    DIFFERENT       reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    AND             reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    OR              reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SEMI_COLON      reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    COMMA           reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 85 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)


state 285

    (92) pop_unary_minus -> empty .
    (130) seen_factor -> empty .

  ! reduce/reduce conflict for STAR resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 92 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 92 (pop_unary_minus -> empty .)
    STAR            reduce using rule 92 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 92 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 92 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 92 (pop_unary_minus -> empty .)
    BIGGER          reduce using rule 92 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 92 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 92 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 92 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 92 (pop_unary_minus -> empty .)
    DIFFERENT       reduce using rule 92 (pop_unary_minus -> empty .)
    AND             reduce using rule 92 (pop_unary_minus -> empty .)
    OR              reduce using rule 92 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 92 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 92 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 92 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 92 (pop_unary_minus -> empty .)

  ! STAR            [ reduce using rule 130 (seen_factor -> empty .) ]
  ! FWD_SLASH       [ reduce using rule 130 (seen_factor -> empty .) ]
  ! PLUS            [ reduce using rule 130 (seen_factor -> empty .) ]
  ! MINUS           [ reduce using rule 130 (seen_factor -> empty .) ]
  ! BIGGER          [ reduce using rule 130 (seen_factor -> empty .) ]
  ! BIGGER_EQ       [ reduce using rule 130 (seen_factor -> empty .) ]
  ! SMALLER         [ reduce using rule 130 (seen_factor -> empty .) ]
  ! SMALLER_EQ      [ reduce using rule 130 (seen_factor -> empty .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 130 (seen_factor -> empty .) ]
  ! DIFFERENT       [ reduce using rule 130 (seen_factor -> empty .) ]
  ! AND             [ reduce using rule 130 (seen_factor -> empty .) ]
  ! OR              [ reduce using rule 130 (seen_factor -> empty .) ]
  ! SEMI_COLON      [ reduce using rule 130 (seen_factor -> empty .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 130 (seen_factor -> empty .) ]
  ! COMMA           [ reduce using rule 130 (seen_factor -> empty .) ]
  ! CLOSE_BRACKET   [ reduce using rule 130 (seen_factor -> empty .) ]


state 286

    (65) EXP -> NOT seen_not EXP pop_not .

    BIGGER          reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)
    BIGGER_EQ       reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER         reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER_EQ      reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)
    DOUBLE_EQUALS   reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)
    DIFFERENT       reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)
    AND             reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)
    OR              reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)
    SEMI_COLON      reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)
    CLOSE_PARENTHESIS reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)
    COMMA           reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)
    CLOSE_BRACKET   reduce using rule 65 (EXP -> NOT seen_not EXP pop_not .)


state 287

    (90) pop_not -> empty .

    BIGGER          reduce using rule 90 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 90 (pop_not -> empty .)
    SMALLER         reduce using rule 90 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 90 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 90 (pop_not -> empty .)
    DIFFERENT       reduce using rule 90 (pop_not -> empty .)
    AND             reduce using rule 90 (pop_not -> empty .)
    OR              reduce using rule 90 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 90 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 90 (pop_not -> empty .)
    COMMA           reduce using rule 90 (pop_not -> empty .)
    CLOSE_BRACKET   reduce using rule 90 (pop_not -> empty .)
    STAR            reduce using rule 90 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 90 (pop_not -> empty .)
    PLUS            reduce using rule 90 (pop_not -> empty .)
    MINUS           reduce using rule 90 (pop_not -> empty .)


state 288

    (84) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER_EQ       reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER_EQ      reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DIFFERENT       reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_BRACKET   reduce using rule 84 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 289

    (90) pop_not -> empty .
    (130) seen_factor -> empty .

  ! reduce/reduce conflict for STAR resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for BIGGER resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for SMALLER resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 90 (pop_not -> empty .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 90 (pop_not -> empty .)
    STAR            reduce using rule 90 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 90 (pop_not -> empty .)
    PLUS            reduce using rule 90 (pop_not -> empty .)
    MINUS           reduce using rule 90 (pop_not -> empty .)
    BIGGER          reduce using rule 90 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 90 (pop_not -> empty .)
    SMALLER         reduce using rule 90 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 90 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 90 (pop_not -> empty .)
    DIFFERENT       reduce using rule 90 (pop_not -> empty .)
    AND             reduce using rule 90 (pop_not -> empty .)
    OR              reduce using rule 90 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 90 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 90 (pop_not -> empty .)
    COMMA           reduce using rule 90 (pop_not -> empty .)
    CLOSE_BRACKET   reduce using rule 90 (pop_not -> empty .)

  ! STAR            [ reduce using rule 130 (seen_factor -> empty .) ]
  ! FWD_SLASH       [ reduce using rule 130 (seen_factor -> empty .) ]
  ! PLUS            [ reduce using rule 130 (seen_factor -> empty .) ]
  ! MINUS           [ reduce using rule 130 (seen_factor -> empty .) ]
  ! BIGGER          [ reduce using rule 130 (seen_factor -> empty .) ]
  ! BIGGER_EQ       [ reduce using rule 130 (seen_factor -> empty .) ]
  ! SMALLER         [ reduce using rule 130 (seen_factor -> empty .) ]
  ! SMALLER_EQ      [ reduce using rule 130 (seen_factor -> empty .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 130 (seen_factor -> empty .) ]
  ! DIFFERENT       [ reduce using rule 130 (seen_factor -> empty .) ]
  ! AND             [ reduce using rule 130 (seen_factor -> empty .) ]
  ! OR              [ reduce using rule 130 (seen_factor -> empty .) ]
  ! SEMI_COLON      [ reduce using rule 130 (seen_factor -> empty .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 130 (seen_factor -> empty .) ]
  ! COMMA           [ reduce using rule 130 (seen_factor -> empty .) ]
  ! CLOSE_BRACKET   [ reduce using rule 130 (seen_factor -> empty .) ]


state 290

    (127) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 147
    NOT             shift and go to state 320
    MINUS           shift and go to state 321
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    FACTOR                         shift and go to state 323
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 291

    (131) seen_factor_op -> empty .

    OPEN_PARENTHESIS reduce using rule 131 (seen_factor_op -> empty .)
    NOT             reduce using rule 131 (seen_factor_op -> empty .)
    MINUS           reduce using rule 131 (seen_factor_op -> empty .)
    ID              reduce using rule 131 (seen_factor_op -> empty .)
    NEW_KWD         reduce using rule 131 (seen_factor_op -> empty .)
    CTE_S           reduce using rule 131 (seen_factor_op -> empty .)
    CTE_F           reduce using rule 131 (seen_factor_op -> empty .)
    CTE_I           reduce using rule 131 (seen_factor_op -> empty .)
    THIS_KWD        reduce using rule 131 (seen_factor_op -> empty .)


state 292

    (128) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 147
    NOT             shift and go to state 320
    MINUS           shift and go to state 321
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    FACTOR                         shift and go to state 324
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 293

    (111) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 325


state 294

    (156) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 326


state 295

    (159) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 159 (seen_if_kwd -> empty .)


state 296

    (163) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (165) seen_while_exp -> . empty
    (177) empty -> .

    OPEN_CURLY      reduce using rule 177 (empty -> .)

    seen_while_exp                 shift and go to state 327
    empty                          shift and go to state 328

state 297

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    VAR                            shift and go to state 153
    EXPRESSION                     shift and go to state 329
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 298

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 330


state 299

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 39 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 300

    (122) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DEFINITION_P
    (122) ARRAY_DEFINITION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (123) ARRAY_DEFINITION_P -> . empty
    (177) empty -> .

    OPEN_BRACKET    shift and go to state 117
    COMMA           reduce using rule 177 (empty -> .)
    COLON           reduce using rule 177 (empty -> .)

    ARRAY_DEFINITION_P             shift and go to state 331
    empty                          shift and go to state 119

state 301

    (135) ARG_LIST -> VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (139) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (140) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (141) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (142) ARG_LIST_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 303
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    ARG_LIST_P                     shift and go to state 332
    empty                          shift and go to state 304

state 302

    (136) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 136 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 303

    (139) ARG_LIST_P -> COMMA . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (140) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (141) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 218
    THIS_KWD        shift and go to state 105
    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158

    VAR                            shift and go to state 333
    EXPRESSION                     shift and go to state 334
    FUNC_CALL                      shift and go to state 335
    ARRAY                          shift and go to state 104
    CLASS_REFERENCE                shift and go to state 224
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    CLASS_INSTANCE                 shift and go to state 152
    CNST                           shift and go to state 154

state 304

    (142) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 142 (ARG_LIST_P -> empty .)


state 305

    (137) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 137 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 306

    (115) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 336


state 307

    (120) seen_array_access -> empty .

    CLOSE_BRACKET   reduce using rule 120 (seen_array_access -> empty .)


state 308

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 23 (READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 309

    (24) READABLE_LIST_P -> COMMA . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 178
    THIS_KWD        shift and go to state 105

    VAR                            shift and go to state 337
    ARRAY                          shift and go to state 104
    CLASS_REFERENCE                shift and go to state 179

state 310

    (25) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 25 (READABLE_LIST_P -> empty .)


state 311

    (152) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 152 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 312

    (153) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    EXPRESSION                     shift and go to state 338
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 313

    (154) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 154 (PRINTABLE_P -> empty .)


state 314

    (50) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA . EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    VAR                            shift and go to state 153
    EXPRESSION                     shift and go to state 339
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 315

    (72) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    SEMI_COLON      reduce using rule 72 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 72 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    COMMA           reduce using rule 72 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_BRACKET   reduce using rule 72 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 316

    (73) seen_comp -> empty .

    SEMI_COLON      reduce using rule 73 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 73 (seen_comp -> empty .)
    COMMA           reduce using rule 73 (seen_comp -> empty .)
    CLOSE_BRACKET   reduce using rule 73 (seen_comp -> empty .)


state 317

    (83) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DIFFERENT       reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 83 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 318

    (95) seen_close_parenthesis -> empty .

    STAR            reduce using rule 95 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 95 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 95 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 95 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 95 (seen_close_parenthesis -> empty .)
    BIGGER_EQ       reduce using rule 95 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 95 (seen_close_parenthesis -> empty .)
    SMALLER_EQ      reduce using rule 95 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 95 (seen_close_parenthesis -> empty .)
    DIFFERENT       reduce using rule 95 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 95 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 95 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 95 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 95 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 95 (seen_close_parenthesis -> empty .)
    CLOSE_BRACKET   reduce using rule 95 (seen_close_parenthesis -> empty .)


state 319

    (67) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (66) seen_term -> .

    PLUS            reduce using rule 66 (seen_term -> .)
    MINUS           reduce using rule 66 (seen_term -> .)
    BIGGER          reduce using rule 66 (seen_term -> .)
    BIGGER_EQ       reduce using rule 66 (seen_term -> .)
    SMALLER         reduce using rule 66 (seen_term -> .)
    SMALLER_EQ      reduce using rule 66 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 66 (seen_term -> .)
    DIFFERENT       reduce using rule 66 (seen_term -> .)
    AND             reduce using rule 66 (seen_term -> .)
    OR              reduce using rule 66 (seen_term -> .)
    SEMI_COLON      reduce using rule 66 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 66 (seen_term -> .)
    COMMA           reduce using rule 66 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 66 (seen_term -> .)

    seen_term                      shift and go to state 340

state 320

    (84) FACTOR -> NOT . seen_not FACTOR pop_not
    (91) seen_not -> . empty
    (177) empty -> .

    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    NOT             reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    NEW_KWD         reduce using rule 177 (empty -> .)
    CTE_S           reduce using rule 177 (empty -> .)
    CTE_F           reduce using rule 177 (empty -> .)
    CTE_I           reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_not                       shift and go to state 341
    empty                          shift and go to state 200

state 321

    (85) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (93) seen_unary_minus -> . empty
    (177) empty -> .

    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    NOT             reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    NEW_KWD         reduce using rule 177 (empty -> .)
    CTE_S           reduce using rule 177 (empty -> .)
    CTE_F           reduce using rule 177 (empty -> .)
    CTE_I           reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_unary_minus               shift and go to state 342
    empty                          shift and go to state 198

state 322

    (68) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (66) seen_term -> .

    PLUS            reduce using rule 66 (seen_term -> .)
    MINUS           reduce using rule 66 (seen_term -> .)
    BIGGER          reduce using rule 66 (seen_term -> .)
    BIGGER_EQ       reduce using rule 66 (seen_term -> .)
    SMALLER         reduce using rule 66 (seen_term -> .)
    SMALLER_EQ      reduce using rule 66 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 66 (seen_term -> .)
    DIFFERENT       reduce using rule 66 (seen_term -> .)
    AND             reduce using rule 66 (seen_term -> .)
    OR              reduce using rule 66 (seen_term -> .)
    SEMI_COLON      reduce using rule 66 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 66 (seen_term -> .)
    COMMA           reduce using rule 66 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 66 (seen_term -> .)

    seen_term                      shift and go to state 343

state 323

    (127) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (130) seen_factor -> . empty
    (177) empty -> .

    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    seen_factor                    shift and go to state 344
    empty                          shift and go to state 202

state 324

    (128) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (130) seen_factor -> . empty
    (177) empty -> .

    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    seen_factor                    shift and go to state 345
    empty                          shift and go to state 202

state 325

    (111) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    STAR            reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DIFFERENT       reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    AND             reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OR              reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMI_COLON      reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 111 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 326

    (156) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . FLOW_CONTROL
    (49) STATEMENT -> . FUNC_RETURN
    (177) empty -> .
    (61) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (147) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (148) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (150) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (50) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (54) FLOW_CONTROL -> . DECISION
    (55) FLOW_CONTROL -> . REPETITION
    (144) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (145) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (146) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (156) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (161) REPETITION -> . CONDITIONAL_REP
    (162) REPETITION -> . UNCONDITIONAL_REP
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (163) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (166) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    RETURN_KWD      shift and go to state 103
    THIS_KWD        shift and go to state 105
    IF_KWD          shift and go to state 106
    WHILE_KWD       shift and go to state 109
    FOR_KWD         shift and go to state 110

    STATEMENT_STAR                 shift and go to state 346
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 101
    REPETITION                     shift and go to state 102
    ARRAY                          shift and go to state 104
    CONDITIONAL_REP                shift and go to state 107
    UNCONDITIONAL_REP              shift and go to state 108

state 327

    (163) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 347


state 328

    (165) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 165 (seen_while_exp -> empty .)


state 329

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (169) seen_for_start_exp -> . empty
    (177) empty -> .

    SEMI_COLON      reduce using rule 177 (empty -> .)

    seen_for_start_exp             shift and go to state 348
    empty                          shift and go to state 349

state 330

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLASS_KWD       reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    ID              reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 331

    (122) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .

    COMMA           reduce using rule 122 (ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)
    COLON           reduce using rule 122 (ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)


state 332

    (135) ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 135 (ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 333

    (139) ARG_LIST_P -> COMMA VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (88) FACTOR -> VAR . seen_var_as_factor
    (97) seen_var_as_factor -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)

    seen_var_as_factor             shift and go to state 350
    empty                          shift and go to state 204

state 334

    (140) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (143) seen_arg -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_arg                       shift and go to state 351
    empty                          shift and go to state 266

state 335

    (141) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (86) FACTOR -> FUNC_CALL .
    (143) seen_arg -> . empty
    (177) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 86 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 86 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 86 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 86 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 86 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 86 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 86 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 86 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 86 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 86 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 86 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 86 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 86 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 86 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 177 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 177 (empty -> .) ]

    seen_arg                       shift and go to state 352
    empty                          shift and go to state 266

state 336

    (115) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (116) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (117) ARRAY_P -> . empty
    (177) empty -> .

    OPEN_BRACKET    shift and go to state 353
    EQUALS          reduce using rule 177 (empty -> .)
    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    ARRAY_P                        shift and go to state 354
    empty                          shift and go to state 355

state 337

    (24) READABLE_LIST_P -> COMMA VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (96) seen_var_in_assign -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_var_in_assign             shift and go to state 356
    empty                          shift and go to state 133

state 338

    (153) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (155) seen_printable -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_printable                 shift and go to state 357
    empty                          shift and go to state 274

state 339

    (50) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION . seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (52) seen_open_file_path -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)

    seen_open_file_path            shift and go to state 358
    empty                          shift and go to state 359

state 340

    (67) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (67) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (68) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (69) EXP_P -> . empty
    (177) empty -> .

    PLUS            shift and go to state 241
    MINUS           shift and go to state 242
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    EXP_P                          shift and go to state 360
    empty                          shift and go to state 243

state 341

    (84) FACTOR -> NOT seen_not . FACTOR pop_not
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 147
    NOT             shift and go to state 320
    MINUS           shift and go to state 321
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    FACTOR                         shift and go to state 361
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 342

    (85) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 147
    NOT             shift and go to state 320
    MINUS           shift and go to state 321
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    FACTOR                         shift and go to state 362
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 343

    (68) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (67) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (68) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (69) EXP_P -> . empty
    (177) empty -> .

    PLUS            shift and go to state 241
    MINUS           shift and go to state 242
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    EXP_P                          shift and go to state 363
    empty                          shift and go to state 243

state 344

    (127) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (127) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (128) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (129) TERM_P -> . empty
    (177) empty -> .

    STAR            shift and go to state 249
    FWD_SLASH       shift and go to state 250
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    TERM_P                         shift and go to state 364
    empty                          shift and go to state 251

state 345

    (128) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (127) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (128) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (129) TERM_P -> . empty
    (177) empty -> .

    STAR            shift and go to state 249
    FWD_SLASH       shift and go to state 250
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    TERM_P                         shift and go to state 365
    empty                          shift and go to state 251

state 346

    (156) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 366


state 347

    (163) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . FLOW_CONTROL
    (49) STATEMENT -> . FUNC_RETURN
    (177) empty -> .
    (61) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (147) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (148) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (150) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (50) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (54) FLOW_CONTROL -> . DECISION
    (55) FLOW_CONTROL -> . REPETITION
    (144) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (145) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (146) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (156) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (161) REPETITION -> . CONDITIONAL_REP
    (162) REPETITION -> . UNCONDITIONAL_REP
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (163) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (166) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    RETURN_KWD      shift and go to state 103
    THIS_KWD        shift and go to state 105
    IF_KWD          shift and go to state 106
    WHILE_KWD       shift and go to state 109
    FOR_KWD         shift and go to state 110

    STATEMENT_STAR                 shift and go to state 367
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 101
    REPETITION                     shift and go to state 102
    ARRAY                          shift and go to state 104
    CONDITIONAL_REP                shift and go to state 107
    UNCONDITIONAL_REP              shift and go to state 108

state 348

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 368


state 349

    (169) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 169 (seen_for_start_exp -> empty .)


state 350

    (139) ARG_LIST_P -> COMMA VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (88) FACTOR -> VAR seen_var_as_factor .
    (143) seen_arg -> . empty
    (177) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 88 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    DIFFERENT       reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 88 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 177 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 177 (empty -> .) ]

    seen_arg                       shift and go to state 369
    empty                          shift and go to state 266

state 351

    (140) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (139) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (140) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (141) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (142) ARG_LIST_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 303
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    ARG_LIST_P                     shift and go to state 370
    empty                          shift and go to state 304

state 352

    (141) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (139) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (140) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (141) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (142) ARG_LIST_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 303
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    ARG_LIST_P                     shift and go to state 371
    empty                          shift and go to state 304

state 353

    (116) ARRAY_P -> OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (119) seen_open_bracket -> . empty
    (177) empty -> .

    MINUS           reduce using rule 177 (empty -> .)
    NOT             reduce using rule 177 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 177 (empty -> .)
    ID              reduce using rule 177 (empty -> .)
    NEW_KWD         reduce using rule 177 (empty -> .)
    CTE_S           reduce using rule 177 (empty -> .)
    CTE_F           reduce using rule 177 (empty -> .)
    CTE_I           reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)

    seen_open_bracket              shift and go to state 372
    empty                          shift and go to state 226

state 354

    (115) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DIFFERENT       reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 115 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 355

    (117) ARRAY_P -> empty .

    EQUALS          reduce using rule 117 (ARRAY_P -> empty .)
    STAR            reduce using rule 117 (ARRAY_P -> empty .)
    FWD_SLASH       reduce using rule 117 (ARRAY_P -> empty .)
    PLUS            reduce using rule 117 (ARRAY_P -> empty .)
    MINUS           reduce using rule 117 (ARRAY_P -> empty .)
    BIGGER          reduce using rule 117 (ARRAY_P -> empty .)
    BIGGER_EQ       reduce using rule 117 (ARRAY_P -> empty .)
    SMALLER         reduce using rule 117 (ARRAY_P -> empty .)
    SMALLER_EQ      reduce using rule 117 (ARRAY_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 117 (ARRAY_P -> empty .)
    DIFFERENT       reduce using rule 117 (ARRAY_P -> empty .)
    AND             reduce using rule 117 (ARRAY_P -> empty .)
    OR              reduce using rule 117 (ARRAY_P -> empty .)
    SEMI_COLON      reduce using rule 117 (ARRAY_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 117 (ARRAY_P -> empty .)
    COMMA           reduce using rule 117 (ARRAY_P -> empty .)
    CLOSE_BRACKET   reduce using rule 117 (ARRAY_P -> empty .)


state 356

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (177) empty -> .

    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_readable                  shift and go to state 373
    empty                          shift and go to state 271

state 357

    (153) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (153) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (154) PRINTABLE_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 312
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    PRINTABLE_P                    shift and go to state 374
    empty                          shift and go to state 313

state 358

    (50) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path . COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 375


state 359

    (52) seen_open_file_path -> empty .

    COMMA           reduce using rule 52 (seen_open_file_path -> empty .)


state 360

    (67) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 67 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 361

    (84) FACTOR -> NOT seen_not FACTOR . pop_not
    (90) pop_not -> . empty
    (177) empty -> .

    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    pop_not                        shift and go to state 288
    empty                          shift and go to state 287

state 362

    (85) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (92) pop_unary_minus -> . empty
    (177) empty -> .

    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    pop_unary_minus                shift and go to state 284
    empty                          shift and go to state 283

state 363

    (68) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 68 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 364

    (127) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 127 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 365

    (128) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 128 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 366

    (156) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (157) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (158) DECISION_P -> . empty
    (177) empty -> .

    ELSE_KWD        shift and go to state 377
    ID              reduce using rule 177 (empty -> .)
    READ_KWD        reduce using rule 177 (empty -> .)
    PRINT_KWD       reduce using rule 177 (empty -> .)
    PRINTLN_KWD     reduce using rule 177 (empty -> .)
    OPEN_KWD        reduce using rule 177 (empty -> .)
    RETURN_KWD      reduce using rule 177 (empty -> .)
    THIS_KWD        reduce using rule 177 (empty -> .)
    IF_KWD          reduce using rule 177 (empty -> .)
    WHILE_KWD       reduce using rule 177 (empty -> .)
    FOR_KWD         reduce using rule 177 (empty -> .)
    CLOSE_CURLY     reduce using rule 177 (empty -> .)

    DECISION_P                     shift and go to state 376
    empty                          shift and go to state 378

state 367

    (163) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 379


state 368

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    VAR                            shift and go to state 153
    EXPRESSION                     shift and go to state 380
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 369

    (139) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (139) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (140) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (141) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (142) ARG_LIST_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 303
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    ARG_LIST_P                     shift and go to state 381
    empty                          shift and go to state 304

state 370

    (140) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 140 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 371

    (141) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 141 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 372

    (116) ARRAY_P -> OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    EXPRESSION                     shift and go to state 382
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    VAR                            shift and go to state 153
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 373

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (177) empty -> .

    COMMA           shift and go to state 309
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    READABLE_LIST_P                shift and go to state 383
    empty                          shift and go to state 310

state 374

    (153) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 153 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 375

    (50) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA . EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (71) EXPRESSION -> . EXP
    (72) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (63) EXP -> . TERM seen_term EXP_P
    (64) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (65) EXP -> . NOT seen_not EXP pop_not
    (126) TERM -> . FACTOR seen_factor TERM_P
    (83) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (84) FACTOR -> . NOT seen_not FACTOR pop_not
    (85) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (86) FACTOR -> . FUNC_CALL
    (87) FACTOR -> . CLASS_INSTANCE
    (88) FACTOR -> . VAR seen_var_as_factor
    (89) FACTOR -> . CNST
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (102) CNST -> . CTE_S seen_cte_s
    (103) CNST -> . CTE_F seen_cte_f
    (104) CNST -> . CTE_I seen_cte_i
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 149
    NOT             shift and go to state 150
    OPEN_PARENTHESIS shift and go to state 147
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 155
    CTE_S           shift and go to state 156
    CTE_F           shift and go to state 157
    CTE_I           shift and go to state 158
    THIS_KWD        shift and go to state 105

    VAR                            shift and go to state 153
    EXPRESSION                     shift and go to state 384
    EXP                            shift and go to state 145
    TERM                           shift and go to state 148
    FACTOR                         shift and go to state 151
    FUNC_CALL                      shift and go to state 211
    CLASS_INSTANCE                 shift and go to state 152
    CNST                           shift and go to state 154
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 376

    (156) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 156 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 156 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINT_KWD       reduce using rule 156 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINTLN_KWD     reduce using rule 156 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    OPEN_KWD        reduce using rule 156 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    RETURN_KWD      reduce using rule 156 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    THIS_KWD        reduce using rule 156 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 156 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 156 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 156 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 156 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 377

    (157) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (160) seen_else_kwd -> . empty
    (177) empty -> .

    OPEN_CURLY      reduce using rule 177 (empty -> .)

    seen_else_kwd                  shift and go to state 385
    empty                          shift and go to state 386

state 378

    (158) DECISION_P -> empty .

    ID              reduce using rule 158 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 158 (DECISION_P -> empty .)
    PRINT_KWD       reduce using rule 158 (DECISION_P -> empty .)
    PRINTLN_KWD     reduce using rule 158 (DECISION_P -> empty .)
    OPEN_KWD        reduce using rule 158 (DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 158 (DECISION_P -> empty .)
    THIS_KWD        reduce using rule 158 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 158 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 158 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 158 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 158 (DECISION_P -> empty .)


state 379

    (163) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 163 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 163 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 163 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 163 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 163 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 163 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 163 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 163 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 163 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 163 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 163 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 380

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (170) seen_for_end_exp -> . empty
    (177) empty -> .

    SEMI_COLON      reduce using rule 177 (empty -> .)

    seen_for_end_exp               shift and go to state 387
    empty                          shift and go to state 388

state 381

    (139) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 139 (ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 382

    (116) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (120) seen_array_access -> . empty
    (177) empty -> .

    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    seen_array_access              shift and go to state 389
    empty                          shift and go to state 307

state 383

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 24 (READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 384

    (50) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION . seen_open_separator CLOSE_PARENTHESIS
    (53) seen_open_separator -> . empty
    (177) empty -> .

    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_open_separator            shift and go to state 390
    empty                          shift and go to state 391

state 385

    (157) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 392


state 386

    (160) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 160 (seen_else_kwd -> empty .)


state 387

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 393


state 388

    (170) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 170 (seen_for_end_exp -> empty .)


state 389

    (116) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 394


state 390

    (50) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 395


state 391

    (53) seen_open_separator -> empty .

    CLOSE_PARENTHESIS reduce using rule 53 (seen_open_separator -> empty .)


state 392

    (157) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . FLOW_CONTROL
    (49) STATEMENT -> . FUNC_RETURN
    (177) empty -> .
    (61) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (147) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (148) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (150) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (50) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (54) FLOW_CONTROL -> . DECISION
    (55) FLOW_CONTROL -> . REPETITION
    (144) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (145) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (146) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (156) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (161) REPETITION -> . CONDITIONAL_REP
    (162) REPETITION -> . UNCONDITIONAL_REP
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (163) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (166) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    RETURN_KWD      shift and go to state 103
    THIS_KWD        shift and go to state 105
    IF_KWD          shift and go to state 106
    WHILE_KWD       shift and go to state 109
    FOR_KWD         shift and go to state 110

    STATEMENT_STAR                 shift and go to state 396
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 101
    REPETITION                     shift and go to state 102
    ARRAY                          shift and go to state 104
    CONDITIONAL_REP                shift and go to state 107
    UNCONDITIONAL_REP              shift and go to state 108

state 393

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (56) FOR_INCR_STATEMENT -> . ASSIGN
    (57) FOR_INCR_STATEMENT -> . FUNC_CALL
    (58) FOR_INCR_STATEMENT -> . READ
    (59) FOR_INCR_STATEMENT -> . PRINT
    (60) FOR_INCR_STATEMENT -> . PRINTLN
    (61) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (147) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (148) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (150) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 83
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    THIS_KWD        shift and go to state 105

    VAR                            shift and go to state 95
    FOR_INCR_STATEMENT             shift and go to state 397
    ASSIGN                         shift and go to state 398
    FUNC_CALL                      shift and go to state 399
    READ                           shift and go to state 400
    PRINT                          shift and go to state 401
    PRINTLN                        shift and go to state 402
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 104

state 394

    (116) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (116) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (117) ARRAY_P -> . empty
    (177) empty -> .

    OPEN_BRACKET    shift and go to state 353
    EQUALS          reduce using rule 177 (empty -> .)
    STAR            reduce using rule 177 (empty -> .)
    FWD_SLASH       reduce using rule 177 (empty -> .)
    PLUS            reduce using rule 177 (empty -> .)
    MINUS           reduce using rule 177 (empty -> .)
    BIGGER          reduce using rule 177 (empty -> .)
    BIGGER_EQ       reduce using rule 177 (empty -> .)
    SMALLER         reduce using rule 177 (empty -> .)
    SMALLER_EQ      reduce using rule 177 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 177 (empty -> .)
    DIFFERENT       reduce using rule 177 (empty -> .)
    AND             reduce using rule 177 (empty -> .)
    OR              reduce using rule 177 (empty -> .)
    SEMI_COLON      reduce using rule 177 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)
    COMMA           reduce using rule 177 (empty -> .)
    CLOSE_BRACKET   reduce using rule 177 (empty -> .)

    ARRAY_P                        shift and go to state 403
    empty                          shift and go to state 355

state 395

    (50) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 50 (OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS .)


state 396

    (157) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 404


state 397

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (168) seen_for_incr_exp -> . empty
    (177) empty -> .

    CLOSE_PARENTHESIS reduce using rule 177 (empty -> .)

    seen_for_incr_exp              shift and go to state 405
    empty                          shift and go to state 406

state 398

    (56) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 56 (FOR_INCR_STATEMENT -> ASSIGN .)


state 399

    (57) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 57 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 400

    (58) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 58 (FOR_INCR_STATEMENT -> READ .)


state 401

    (59) FOR_INCR_STATEMENT -> PRINT .

    CLOSE_PARENTHESIS reduce using rule 59 (FOR_INCR_STATEMENT -> PRINT .)


state 402

    (60) FOR_INCR_STATEMENT -> PRINTLN .

    CLOSE_PARENTHESIS reduce using rule 60 (FOR_INCR_STATEMENT -> PRINTLN .)


state 403

    (116) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DIFFERENT       reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 116 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 404

    (157) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 157 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 157 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 157 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 157 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 157 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 157 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 157 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 157 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 157 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 157 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 157 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 405

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 407


state 406

    (168) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 168 (seen_for_incr_exp -> empty .)


state 407

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 408


state 408

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . FLOW_CONTROL
    (49) STATEMENT -> . FUNC_RETURN
    (177) empty -> .
    (61) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (132) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (133) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (147) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (148) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (150) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (50) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_open seen_open_buffer COMMA EXPRESSION seen_open_file_path COMMA EXPRESSION seen_open_separator CLOSE_PARENTHESIS
    (54) FLOW_CONTROL -> . DECISION
    (55) FLOW_CONTROL -> . REPETITION
    (144) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (145) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (146) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (108) VAR -> . ID
    (109) VAR -> . ARRAY
    (110) VAR -> . CLASS_REFERENCE VAR
    (105) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (106) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (156) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (161) REPETITION -> . CONDITIONAL_REP
    (162) REPETITION -> . UNCONDITIONAL_REP
    (115) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (163) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (166) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 177 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    RETURN_KWD      shift and go to state 103
    THIS_KWD        shift and go to state 105
    IF_KWD          shift and go to state 106
    WHILE_KWD       shift and go to state 109
    FOR_KWD         shift and go to state 110

    VAR                            shift and go to state 95
    STATEMENT_STAR                 shift and go to state 409
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 101
    REPETITION                     shift and go to state 102
    ARRAY                          shift and go to state 104
    CONDITIONAL_REP                shift and go to state 107
    UNCONDITIONAL_REP              shift and go to state 108

state 409

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 410


state 410

    (166) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 166 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 166 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 166 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 166 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 166 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 166 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 166 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 166 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 166 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 166 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 166 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLASS_KWD in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 14 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SEMI_COLON in state 144 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (CLASS_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 222 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 222
WARNING: reduce/reduce conflict in state 264 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 264
WARNING: reduce/reduce conflict in state 285 resolved using rule (pop_unary_minus -> empty)
WARNING: rejected rule (seen_factor -> empty) in state 285
WARNING: reduce/reduce conflict in state 289 resolved using rule (pop_not -> empty)
WARNING: rejected rule (seen_factor -> empty) in state 289
WARNING: reduce/reduce conflict in state 335 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 335
WARNING: reduce/reduce conflict in state 350 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 350
