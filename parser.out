Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 2     CLASS_STAR -> CLASS CLASS_STAR
Rule 3     CLASS_STAR -> empty
Rule 4     CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
Rule 5     CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 6     VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 7     VAR_LIST_STAR -> empty
Rule 8     VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON
Rule 9     ID_LIST -> ID ID_LIST_P
Rule 10    ID_LIST_P -> COMMA ID ID_LIST_P
Rule 11    ID_LIST_P -> empty
Rule 12    READABLE_LIST -> ID seen_readable READABLE_LIST_P
Rule 13    READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P
Rule 14    READABLE_LIST_P -> empty
Rule 15    seen_readable -> <empty>
Rule 16    GLOBAL_VAR -> VAR_LIST_STAR
Rule 17    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 18    FUNC_DEF_STAR -> empty
Rule 19    FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 20    FUNC_PARAM -> VAR FUNC_PARAM_P
Rule 21    FUNC_PARAM -> empty
Rule 22    FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P
Rule 23    FUNC_PARAM_P -> empty
Rule 24    VAR -> ID COLON TYPE
Rule 25    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 26    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 27    STATEMENT_STAR -> empty
Rule 28    STATEMENT -> ASSIGN
Rule 29    STATEMENT -> FUNC_RETURN
Rule 30    STATEMENT -> READ
Rule 31    STATEMENT -> WRITE
Rule 32    STATEMENT -> DECISION
Rule 33    STATEMENT -> COMMENT
Rule 34    STATEMENT -> REPETITION
Rule 35    ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
Rule 36    seen_equals -> <empty>
Rule 37    EXP -> TERM seen_term EXP_P
Rule 38    EXP -> NOT seen_not EXP pop_not
Rule 39    seen_term -> <empty>
Rule 40    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 41    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 42    EXP_P -> empty
Rule 43    seen_term_op -> <empty>
Rule 44    EXPRESSION -> EXP
Rule 45    EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp
Rule 46    seen_comp -> <empty>
Rule 47    seen_comp_op -> <empty>
Rule 48    COMP -> BIGGER
Rule 49    COMP -> SMALLER
Rule 50    COMP -> DOUBLE_EQUALS
Rule 51    COMP -> DIFFERENT
Rule 52    COMP -> AND
Rule 53    COMP -> OR
Rule 54    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 55    FACTOR -> NOT seen_not FACTOR pop_not
Rule 56    FACTOR -> FUNC_CALL
Rule 57    FACTOR -> ID seen_id
Rule 58    FACTOR -> CNST
Rule 59    pop_not -> <empty>
Rule 60    seen_not -> <empty>
Rule 61    seen_open_parenthesis -> <empty>
Rule 62    seen_close_parenthesis -> <empty>
Rule 63    seen_id -> <empty>
Rule 64    seen_cte_i -> <empty>
Rule 65    seen_cte_f -> <empty>
Rule 66    seen_cte_s -> <empty>
Rule 67    CNST -> CTE_S seen_cte_s
Rule 68    CNST -> CTE_F seen_cte_f
Rule 69    CNST -> CTE_I seen_cte_i
Rule 70    TERM -> FACTOR seen_factor TERM_P
Rule 71    TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 72    TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 73    TERM_P -> empty
Rule 74    seen_factor -> <empty>
Rule 75    seen_factor_op -> <empty>
Rule 76    FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 77    ARG_LIST -> ID_LIST ARG_LIST_P
Rule 78    ARG_LIST -> EXPRESSION ARG_LIST_P
Rule 79    ARG_LIST_P -> COMMA ID_LIST ARG_LIST_P
Rule 80    ARG_LIST_P -> COMMA EXPRESSION ARG_LIST_P
Rule 81    ARG_LIST_P -> empty
Rule 82    FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 83    READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
Rule 84    WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
Rule 85    PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 86    PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 87    PRINTABLE_P -> empty
Rule 88    seen_printable -> <empty>
Rule 89    DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if
Rule 90    seen_if_kwd -> <empty>
Rule 91    seen_if -> <empty>
Rule 92    DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 93    DECISION_P -> empty
Rule 94    seen_else_kwd -> <empty>
Rule 95    REPETITION -> CONDITIONAL_REP
Rule 96    REPETITION -> UNCONDITIONAL_REP
Rule 97    CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 98    UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 99    empty -> <empty>

Terminals, with rules where they appear

AND                  : 52
ATTR_KWD             : 5
BIGGER               : 4 48
CLASS_KWD            : 4
CLOSE_CURLY          : 1 4 5 19 25 89 92 97 98
CLOSE_PARENTHESIS    : 1 19 54 76 83 84 89 97
COLON                : 8 24
COMMA                : 10 13 22 79 80 86
COMMENT              : 33
CTE_F                : 68
CTE_I                : 69
CTE_S                : 67
DERIVES_KWD          : 4
DIFFERENT            : 51
DOUBLE_EQUALS        : 50
ELSE_KWD             : 92
EQUALS               : 35 98
FROM_KWD             : 98
FWD_SLASH            : 72
ID                   : 1 4 9 10 12 13 19 24 35 57 76 98
IF_KWD               : 89
MAIN_KWD             : 1
MINUS                : 41
NOT                  : 38 55
OPEN_CURLY           : 1 4 5 19 25 89 92 97 98
OPEN_PARENTHESIS     : 1 19 54 76 83 84 89 97
OR                   : 53
PLUS                 : 40
PROGRAM_KWD          : 1
READ_KWD             : 83
RETURN_KWD           : 82
SEMI_COLON           : 1 8 35 82 83 84
SMALLER              : 4 49
STAR                 : 71
THEN_KWD             : 89
TYPE                 : 4 8 19 24
UNTIL_KWD            : 98
VARS_KWD             : 25
WHILE_KWD            : 97
WRITE_KWD            : 84
error                : 

Nonterminals, with rules where they appear

ARG_LIST             : 76
ARG_LIST_P           : 77 78 79 80
ASSIGN               : 28
CLASS                : 2
CLASS_ATTR           : 4
CLASS_STAR           : 1 2
CNST                 : 58
COMP                 : 45
CONDITIONAL_REP      : 95
DECISION             : 32
DECISION_P           : 89
EXP                  : 38 44 45 45
EXPRESSION           : 35 54 78 80 82 85 86 89 97 98 98
EXP_P                : 37 40 41
FACTOR               : 55 70 71 72
FUNC_CALL            : 56
FUNC_DEF             : 17
FUNC_DEF_STAR        : 1 4 17
FUNC_PARAM           : 19
FUNC_PARAM_P         : 20 22
FUNC_RETURN          : 29
GLOBAL_VAR           : 1
ID_LIST              : 8 77 79
ID_LIST_P            : 9 10
PRINTABLE            : 84
PRINTABLE_P          : 85 86
PROGRAM              : 0
READ                 : 30
READABLE_LIST        : 83
READABLE_LIST_P      : 12 13
REPETITION           : 34
STATEMENT            : 26
STATEMENT_STAR       : 1 19 26 89 92 97 98
TERM                 : 37 40 41
TERM_P               : 70 71 72
UNCONDITIONAL_REP    : 96
VAR                  : 20 22
VARS                 : 19
VAR_LIST             : 6
VAR_LIST_STAR        : 5 6 16 25
WRITE                : 31
empty                : 3 7 11 14 18 21 23 27 42 73 81 87 93
pop_not              : 38 55
seen_close_parenthesis : 54
seen_comp            : 45
seen_comp_op         : 45
seen_cte_f           : 68
seen_cte_i           : 69
seen_cte_s           : 67
seen_else_kwd        : 92
seen_equals          : 35
seen_factor          : 70 71 72
seen_factor_op       : 71 72
seen_id              : 35 57
seen_if              : 89
seen_if_kwd          : 89
seen_not             : 38 55
seen_open_parenthesis : 54
seen_printable       : 85 86
seen_readable        : 12 13
seen_term            : 37 40 41
seen_term_op         : 40 41

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 4


state 4

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON . CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (2) CLASS_STAR -> . CLASS CLASS_STAR
    (3) CLASS_STAR -> . empty
    (4) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (99) empty -> .

    CLASS_KWD       shift and go to state 8
    ID              reduce using rule 99 (empty -> .)
    TYPE            reduce using rule 99 (empty -> .)
    MAIN_KWD        reduce using rule 99 (empty -> .)

    CLASS_STAR                     shift and go to state 5
    CLASS                          shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR . GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) GLOBAL_VAR -> . VAR_LIST_STAR
    (6) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (7) VAR_LIST_STAR -> . empty
    (8) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (99) empty -> .
    (9) ID_LIST -> . ID ID_LIST_P

    TYPE            reduce using rule 99 (empty -> .)
    MAIN_KWD        reduce using rule 99 (empty -> .)
    ID              shift and go to state 9

    GLOBAL_VAR                     shift and go to state 10
    VAR_LIST_STAR                  shift and go to state 11
    VAR_LIST                       shift and go to state 12
    empty                          shift and go to state 13
    ID_LIST                        shift and go to state 14

state 6

    (2) CLASS_STAR -> CLASS . CLASS_STAR
    (2) CLASS_STAR -> . CLASS CLASS_STAR
    (3) CLASS_STAR -> . empty
    (4) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (99) empty -> .

    CLASS_KWD       shift and go to state 8
    ID              reduce using rule 99 (empty -> .)
    TYPE            reduce using rule 99 (empty -> .)
    MAIN_KWD        reduce using rule 99 (empty -> .)

    CLASS                          shift and go to state 6
    CLASS_STAR                     shift and go to state 15
    empty                          shift and go to state 7

state 7

    (3) CLASS_STAR -> empty .

    ID              reduce using rule 3 (CLASS_STAR -> empty .)
    TYPE            reduce using rule 3 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 3 (CLASS_STAR -> empty .)


state 8

    (4) CLASS -> CLASS_KWD . ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 16


state 9

    (9) ID_LIST -> ID . ID_LIST_P
    (10) ID_LIST_P -> . COMMA ID ID_LIST_P
    (11) ID_LIST_P -> . empty
    (99) empty -> .

    COMMA           shift and go to state 18
    COLON           reduce using rule 99 (empty -> .)

    ID_LIST_P                      shift and go to state 17
    empty                          shift and go to state 19

state 10

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR . FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (17) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (18) FUNC_DEF_STAR -> . empty
    (19) FUNC_DEF -> . TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (99) empty -> .

    TYPE            shift and go to state 23
    MAIN_KWD        reduce using rule 99 (empty -> .)

    FUNC_DEF_STAR                  shift and go to state 20
    FUNC_DEF                       shift and go to state 21
    empty                          shift and go to state 22

state 11

    (16) GLOBAL_VAR -> VAR_LIST_STAR .

    TYPE            reduce using rule 16 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 16 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 12

    (6) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (6) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (7) VAR_LIST_STAR -> . empty
    (8) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (99) empty -> .
    (9) ID_LIST -> . ID ID_LIST_P

    TYPE            reduce using rule 99 (empty -> .)
    MAIN_KWD        reduce using rule 99 (empty -> .)
    CLOSE_CURLY     reduce using rule 99 (empty -> .)
    ID              shift and go to state 9

    VAR_LIST                       shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 24
    empty                          shift and go to state 13
    ID_LIST                        shift and go to state 14

state 13

    (7) VAR_LIST_STAR -> empty .

    TYPE            reduce using rule 7 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 7 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 7 (VAR_LIST_STAR -> empty .)


state 14

    (8) VAR_LIST -> ID_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 25


state 15

    (2) CLASS_STAR -> CLASS CLASS_STAR .

    ID              reduce using rule 2 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE            reduce using rule 2 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 2 (CLASS_STAR -> CLASS CLASS_STAR .)


state 16

    (4) CLASS -> CLASS_KWD ID . SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    SMALLER         shift and go to state 26


state 17

    (9) ID_LIST -> ID ID_LIST_P .

    COLON           reduce using rule 9 (ID_LIST -> ID ID_LIST_P .)
    COMMA           reduce using rule 9 (ID_LIST -> ID ID_LIST_P .)
    CLOSE_PARENTHESIS reduce using rule 9 (ID_LIST -> ID ID_LIST_P .)


state 18

    (10) ID_LIST_P -> COMMA . ID ID_LIST_P

    ID              shift and go to state 27


state 19

    (11) ID_LIST_P -> empty .

    COLON           reduce using rule 11 (ID_LIST_P -> empty .)
    COMMA           reduce using rule 11 (ID_LIST_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 11 (ID_LIST_P -> empty .)


state 20

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 28


state 21

    (17) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (17) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (18) FUNC_DEF_STAR -> . empty
    (19) FUNC_DEF -> . TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (99) empty -> .

    TYPE            shift and go to state 23
    MAIN_KWD        reduce using rule 99 (empty -> .)
    CLOSE_CURLY     reduce using rule 99 (empty -> .)

    FUNC_DEF                       shift and go to state 21
    FUNC_DEF_STAR                  shift and go to state 29
    empty                          shift and go to state 22

state 22

    (18) FUNC_DEF_STAR -> empty .

    MAIN_KWD        reduce using rule 18 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 18 (FUNC_DEF_STAR -> empty .)


state 23

    (19) FUNC_DEF -> TYPE . ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 30


state 24

    (6) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    TYPE            reduce using rule 6 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 6 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 6 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 25

    (8) VAR_LIST -> ID_LIST COLON . TYPE SEMI_COLON

    TYPE            shift and go to state 31


state 26

    (4) CLASS -> CLASS_KWD ID SMALLER . DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    DERIVES_KWD     shift and go to state 32


state 27

    (10) ID_LIST_P -> COMMA ID . ID_LIST_P
    (10) ID_LIST_P -> . COMMA ID ID_LIST_P
    (11) ID_LIST_P -> . empty
    (99) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 18
    COLON           reduce using rule 99 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

  ! COMMA           [ reduce using rule 99 (empty -> .) ]

    ID_LIST_P                      shift and go to state 33
    empty                          shift and go to state 19

state 28

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 34


state 29

    (17) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    MAIN_KWD        reduce using rule 17 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 17 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 30

    (19) FUNC_DEF -> TYPE ID . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 35


state 31

    (8) VAR_LIST -> ID_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 36


state 32

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD . TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    TYPE            shift and go to state 37


state 33

    (10) ID_LIST_P -> COMMA ID ID_LIST_P .

    COLON           reduce using rule 10 (ID_LIST_P -> COMMA ID ID_LIST_P .)
    COMMA           reduce using rule 10 (ID_LIST_P -> COMMA ID ID_LIST_P .)
    CLOSE_PARENTHESIS reduce using rule 10 (ID_LIST_P -> COMMA ID ID_LIST_P .)


state 34

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 38


state 35

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (20) FUNC_PARAM -> . VAR FUNC_PARAM_P
    (21) FUNC_PARAM -> . empty
    (24) VAR -> . ID COLON TYPE
    (99) empty -> .

    ID              shift and go to state 39
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

    FUNC_PARAM                     shift and go to state 40
    VAR                            shift and go to state 41
    empty                          shift and go to state 42

state 36

    (8) VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 8 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE            reduce using rule 8 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 8 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 8 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)


state 37

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE . BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    BIGGER          shift and go to state 43


state 38

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 44


state 39

    (24) VAR -> ID . COLON TYPE

    COLON           shift and go to state 45


state 40

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 46


state 41

    (20) FUNC_PARAM -> VAR . FUNC_PARAM_P
    (22) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (23) FUNC_PARAM_P -> . empty
    (99) empty -> .

    COMMA           shift and go to state 48
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 47
    empty                          shift and go to state 49

state 42

    (21) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 21 (FUNC_PARAM -> empty .)


state 43

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER . OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 50


state 44

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . COMMENT
    (34) STATEMENT -> . REPETITION
    (99) empty -> .
    (35) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (82) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (83) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (84) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (89) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if
    (95) REPETITION -> . CONDITIONAL_REP
    (96) REPETITION -> . UNCONDITIONAL_REP
    (97) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (98) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    COMMENT         shift and go to state 60
    CLOSE_CURLY     reduce using rule 99 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 62
    READ_KWD        shift and go to state 63
    WRITE_KWD       shift and go to state 64
    IF_KWD          shift and go to state 65
    WHILE_KWD       shift and go to state 68
    FROM_KWD        shift and go to state 69

    STATEMENT_STAR                 shift and go to state 52
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 61
    CONDITIONAL_REP                shift and go to state 66
    UNCONDITIONAL_REP              shift and go to state 67

state 45

    (24) VAR -> ID COLON . TYPE

    TYPE            shift and go to state 70


state 46

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (25) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 72

    VARS                           shift and go to state 71

state 47

    (20) FUNC_PARAM -> VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 20 (FUNC_PARAM -> VAR FUNC_PARAM_P .)


state 48

    (22) FUNC_PARAM_P -> COMMA . VAR FUNC_PARAM_P
    (24) VAR -> . ID COLON TYPE

    ID              shift and go to state 39

    VAR                            shift and go to state 73

state 49

    (23) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 23 (FUNC_PARAM_P -> empty .)


state 50

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY . CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (5) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 75

    CLASS_ATTR                     shift and go to state 74

state 51

    (35) ASSIGN -> ID . seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (63) seen_id -> .

    EQUALS          reduce using rule 63 (seen_id -> .)

    seen_id                        shift and go to state 76

state 52

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 77


state 53

    (26) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . COMMENT
    (34) STATEMENT -> . REPETITION
    (99) empty -> .
    (35) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (82) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (83) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (84) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (89) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if
    (95) REPETITION -> . CONDITIONAL_REP
    (96) REPETITION -> . UNCONDITIONAL_REP
    (97) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (98) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    COMMENT         shift and go to state 60
    CLOSE_CURLY     reduce using rule 99 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 62
    READ_KWD        shift and go to state 63
    WRITE_KWD       shift and go to state 64
    IF_KWD          shift and go to state 65
    WHILE_KWD       shift and go to state 68
    FROM_KWD        shift and go to state 69

    STATEMENT                      shift and go to state 53
    STATEMENT_STAR                 shift and go to state 78
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 61
    CONDITIONAL_REP                shift and go to state 66
    UNCONDITIONAL_REP              shift and go to state 67

state 54

    (27) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 27 (STATEMENT_STAR -> empty .)


state 55

    (28) STATEMENT -> ASSIGN .

    COMMENT         reduce using rule 28 (STATEMENT -> ASSIGN .)
    ID              reduce using rule 28 (STATEMENT -> ASSIGN .)
    RETURN_KWD      reduce using rule 28 (STATEMENT -> ASSIGN .)
    READ_KWD        reduce using rule 28 (STATEMENT -> ASSIGN .)
    WRITE_KWD       reduce using rule 28 (STATEMENT -> ASSIGN .)
    IF_KWD          reduce using rule 28 (STATEMENT -> ASSIGN .)
    WHILE_KWD       reduce using rule 28 (STATEMENT -> ASSIGN .)
    FROM_KWD        reduce using rule 28 (STATEMENT -> ASSIGN .)
    CLOSE_CURLY     reduce using rule 28 (STATEMENT -> ASSIGN .)


state 56

    (29) STATEMENT -> FUNC_RETURN .

    COMMENT         reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    ID              reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    RETURN_KWD      reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    READ_KWD        reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    WRITE_KWD       reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    IF_KWD          reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    WHILE_KWD       reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    FROM_KWD        reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    CLOSE_CURLY     reduce using rule 29 (STATEMENT -> FUNC_RETURN .)


state 57

    (30) STATEMENT -> READ .

    COMMENT         reduce using rule 30 (STATEMENT -> READ .)
    ID              reduce using rule 30 (STATEMENT -> READ .)
    RETURN_KWD      reduce using rule 30 (STATEMENT -> READ .)
    READ_KWD        reduce using rule 30 (STATEMENT -> READ .)
    WRITE_KWD       reduce using rule 30 (STATEMENT -> READ .)
    IF_KWD          reduce using rule 30 (STATEMENT -> READ .)
    WHILE_KWD       reduce using rule 30 (STATEMENT -> READ .)
    FROM_KWD        reduce using rule 30 (STATEMENT -> READ .)
    CLOSE_CURLY     reduce using rule 30 (STATEMENT -> READ .)


state 58

    (31) STATEMENT -> WRITE .

    COMMENT         reduce using rule 31 (STATEMENT -> WRITE .)
    ID              reduce using rule 31 (STATEMENT -> WRITE .)
    RETURN_KWD      reduce using rule 31 (STATEMENT -> WRITE .)
    READ_KWD        reduce using rule 31 (STATEMENT -> WRITE .)
    WRITE_KWD       reduce using rule 31 (STATEMENT -> WRITE .)
    IF_KWD          reduce using rule 31 (STATEMENT -> WRITE .)
    WHILE_KWD       reduce using rule 31 (STATEMENT -> WRITE .)
    FROM_KWD        reduce using rule 31 (STATEMENT -> WRITE .)
    CLOSE_CURLY     reduce using rule 31 (STATEMENT -> WRITE .)


state 59

    (32) STATEMENT -> DECISION .

    COMMENT         reduce using rule 32 (STATEMENT -> DECISION .)
    ID              reduce using rule 32 (STATEMENT -> DECISION .)
    RETURN_KWD      reduce using rule 32 (STATEMENT -> DECISION .)
    READ_KWD        reduce using rule 32 (STATEMENT -> DECISION .)
    WRITE_KWD       reduce using rule 32 (STATEMENT -> DECISION .)
    IF_KWD          reduce using rule 32 (STATEMENT -> DECISION .)
    WHILE_KWD       reduce using rule 32 (STATEMENT -> DECISION .)
    FROM_KWD        reduce using rule 32 (STATEMENT -> DECISION .)
    CLOSE_CURLY     reduce using rule 32 (STATEMENT -> DECISION .)


state 60

    (33) STATEMENT -> COMMENT .

    COMMENT         reduce using rule 33 (STATEMENT -> COMMENT .)
    ID              reduce using rule 33 (STATEMENT -> COMMENT .)
    RETURN_KWD      reduce using rule 33 (STATEMENT -> COMMENT .)
    READ_KWD        reduce using rule 33 (STATEMENT -> COMMENT .)
    WRITE_KWD       reduce using rule 33 (STATEMENT -> COMMENT .)
    IF_KWD          reduce using rule 33 (STATEMENT -> COMMENT .)
    WHILE_KWD       reduce using rule 33 (STATEMENT -> COMMENT .)
    FROM_KWD        reduce using rule 33 (STATEMENT -> COMMENT .)
    CLOSE_CURLY     reduce using rule 33 (STATEMENT -> COMMENT .)


state 61

    (34) STATEMENT -> REPETITION .

    COMMENT         reduce using rule 34 (STATEMENT -> REPETITION .)
    ID              reduce using rule 34 (STATEMENT -> REPETITION .)
    RETURN_KWD      reduce using rule 34 (STATEMENT -> REPETITION .)
    READ_KWD        reduce using rule 34 (STATEMENT -> REPETITION .)
    WRITE_KWD       reduce using rule 34 (STATEMENT -> REPETITION .)
    IF_KWD          reduce using rule 34 (STATEMENT -> REPETITION .)
    WHILE_KWD       reduce using rule 34 (STATEMENT -> REPETITION .)
    FROM_KWD        reduce using rule 34 (STATEMENT -> REPETITION .)
    CLOSE_CURLY     reduce using rule 34 (STATEMENT -> REPETITION .)


state 62

    (82) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (44) EXPRESSION -> . EXP
    (45) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    EXPRESSION                     shift and go to state 79
    EXP                            shift and go to state 80
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 63

    (83) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON

    OPEN_PARENTHESIS shift and go to state 91


state 64

    (84) WRITE -> WRITE_KWD . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON

    OPEN_PARENTHESIS shift and go to state 92


state 65

    (89) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if

    OPEN_PARENTHESIS shift and go to state 93


state 66

    (95) REPETITION -> CONDITIONAL_REP .

    COMMENT         reduce using rule 95 (REPETITION -> CONDITIONAL_REP .)
    ID              reduce using rule 95 (REPETITION -> CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 95 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 95 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 95 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 95 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 95 (REPETITION -> CONDITIONAL_REP .)
    FROM_KWD        reduce using rule 95 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 95 (REPETITION -> CONDITIONAL_REP .)


state 67

    (96) REPETITION -> UNCONDITIONAL_REP .

    COMMENT         reduce using rule 96 (REPETITION -> UNCONDITIONAL_REP .)
    ID              reduce using rule 96 (REPETITION -> UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 96 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 96 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 96 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 96 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 96 (REPETITION -> UNCONDITIONAL_REP .)
    FROM_KWD        reduce using rule 96 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 96 (REPETITION -> UNCONDITIONAL_REP .)


state 68

    (97) CONDITIONAL_REP -> WHILE_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 94


state 69

    (98) UNCONDITIONAL_REP -> FROM_KWD . ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 95


state 70

    (24) VAR -> ID COLON TYPE .

    COMMA           reduce using rule 24 (VAR -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 24 (VAR -> ID COLON TYPE .)


state 71

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 96


state 72

    (25) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 97


state 73

    (22) FUNC_PARAM_P -> COMMA VAR . FUNC_PARAM_P
    (22) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (23) FUNC_PARAM_P -> . empty
    (99) empty -> .

    COMMA           shift and go to state 48
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 98
    empty                          shift and go to state 49

state 74

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR . FUNC_DEF_STAR CLOSE_CURLY
    (17) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (18) FUNC_DEF_STAR -> . empty
    (19) FUNC_DEF -> . TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (99) empty -> .

    TYPE            shift and go to state 23
    CLOSE_CURLY     reduce using rule 99 (empty -> .)

    FUNC_DEF_STAR                  shift and go to state 99
    FUNC_DEF                       shift and go to state 21
    empty                          shift and go to state 22

state 75

    (5) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 100


state 76

    (35) ASSIGN -> ID seen_id . EQUALS seen_equals EXPRESSION SEMI_COLON

    EQUALS          shift and go to state 101


state 77

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 78

    (26) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 26 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 79

    (82) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 102


state 80

    (44) EXPRESSION -> EXP .
    (45) EXPRESSION -> EXP . COMP seen_comp_op EXP seen_comp
    (48) COMP -> . BIGGER
    (49) COMP -> . SMALLER
    (50) COMP -> . DOUBLE_EQUALS
    (51) COMP -> . DIFFERENT
    (52) COMP -> . AND
    (53) COMP -> . OR

    SEMI_COLON      reduce using rule 44 (EXPRESSION -> EXP .)
    COMMA           reduce using rule 44 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 44 (EXPRESSION -> EXP .)
    UNTIL_KWD       reduce using rule 44 (EXPRESSION -> EXP .)
    OPEN_CURLY      reduce using rule 44 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 104
    SMALLER         shift and go to state 105
    DOUBLE_EQUALS   shift and go to state 106
    DIFFERENT       shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109

    COMP                           shift and go to state 103

state 81

    (37) EXP -> TERM . seen_term EXP_P
    (39) seen_term -> .

    PLUS            reduce using rule 39 (seen_term -> .)
    MINUS           reduce using rule 39 (seen_term -> .)
    BIGGER          reduce using rule 39 (seen_term -> .)
    SMALLER         reduce using rule 39 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 39 (seen_term -> .)
    DIFFERENT       reduce using rule 39 (seen_term -> .)
    AND             reduce using rule 39 (seen_term -> .)
    OR              reduce using rule 39 (seen_term -> .)
    SEMI_COLON      reduce using rule 39 (seen_term -> .)
    COMMA           reduce using rule 39 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 39 (seen_term -> .)
    UNTIL_KWD       reduce using rule 39 (seen_term -> .)
    OPEN_CURLY      reduce using rule 39 (seen_term -> .)

    seen_term                      shift and go to state 110

state 82

    (38) EXP -> NOT . seen_not EXP pop_not
    (55) FACTOR -> NOT . seen_not FACTOR pop_not
    (60) seen_not -> .

    NOT             reduce using rule 60 (seen_not -> .)
    OPEN_PARENTHESIS reduce using rule 60 (seen_not -> .)
    ID              reduce using rule 60 (seen_not -> .)
    CTE_S           reduce using rule 60 (seen_not -> .)
    CTE_F           reduce using rule 60 (seen_not -> .)
    CTE_I           reduce using rule 60 (seen_not -> .)

    seen_not                       shift and go to state 111

state 83

    (70) TERM -> FACTOR . seen_factor TERM_P
    (74) seen_factor -> .

    STAR            reduce using rule 74 (seen_factor -> .)
    FWD_SLASH       reduce using rule 74 (seen_factor -> .)
    PLUS            reduce using rule 74 (seen_factor -> .)
    MINUS           reduce using rule 74 (seen_factor -> .)
    BIGGER          reduce using rule 74 (seen_factor -> .)
    SMALLER         reduce using rule 74 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 74 (seen_factor -> .)
    DIFFERENT       reduce using rule 74 (seen_factor -> .)
    AND             reduce using rule 74 (seen_factor -> .)
    OR              reduce using rule 74 (seen_factor -> .)
    SEMI_COLON      reduce using rule 74 (seen_factor -> .)
    COMMA           reduce using rule 74 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 74 (seen_factor -> .)
    UNTIL_KWD       reduce using rule 74 (seen_factor -> .)
    OPEN_CURLY      reduce using rule 74 (seen_factor -> .)

    seen_factor                    shift and go to state 112

state 84

    (54) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (61) seen_open_parenthesis -> .

    NOT             reduce using rule 61 (seen_open_parenthesis -> .)
    OPEN_PARENTHESIS reduce using rule 61 (seen_open_parenthesis -> .)
    ID              reduce using rule 61 (seen_open_parenthesis -> .)
    CTE_S           reduce using rule 61 (seen_open_parenthesis -> .)
    CTE_F           reduce using rule 61 (seen_open_parenthesis -> .)
    CTE_I           reduce using rule 61 (seen_open_parenthesis -> .)

    seen_open_parenthesis          shift and go to state 113

state 85

    (56) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 56 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 56 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 56 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 56 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 56 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 56 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 56 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 56 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 56 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 56 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 56 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 56 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 56 (FACTOR -> FUNC_CALL .)
    UNTIL_KWD       reduce using rule 56 (FACTOR -> FUNC_CALL .)
    OPEN_CURLY      reduce using rule 56 (FACTOR -> FUNC_CALL .)


state 86

    (57) FACTOR -> ID . seen_id
    (76) FUNC_CALL -> ID . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (63) seen_id -> .

    OPEN_PARENTHESIS shift and go to state 115
    STAR            reduce using rule 63 (seen_id -> .)
    FWD_SLASH       reduce using rule 63 (seen_id -> .)
    PLUS            reduce using rule 63 (seen_id -> .)
    MINUS           reduce using rule 63 (seen_id -> .)
    BIGGER          reduce using rule 63 (seen_id -> .)
    SMALLER         reduce using rule 63 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 63 (seen_id -> .)
    DIFFERENT       reduce using rule 63 (seen_id -> .)
    AND             reduce using rule 63 (seen_id -> .)
    OR              reduce using rule 63 (seen_id -> .)
    SEMI_COLON      reduce using rule 63 (seen_id -> .)
    COMMA           reduce using rule 63 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 63 (seen_id -> .)
    UNTIL_KWD       reduce using rule 63 (seen_id -> .)
    OPEN_CURLY      reduce using rule 63 (seen_id -> .)

    seen_id                        shift and go to state 114

state 87

    (58) FACTOR -> CNST .

    STAR            reduce using rule 58 (FACTOR -> CNST .)
    FWD_SLASH       reduce using rule 58 (FACTOR -> CNST .)
    PLUS            reduce using rule 58 (FACTOR -> CNST .)
    MINUS           reduce using rule 58 (FACTOR -> CNST .)
    BIGGER          reduce using rule 58 (FACTOR -> CNST .)
    SMALLER         reduce using rule 58 (FACTOR -> CNST .)
    DOUBLE_EQUALS   reduce using rule 58 (FACTOR -> CNST .)
    DIFFERENT       reduce using rule 58 (FACTOR -> CNST .)
    AND             reduce using rule 58 (FACTOR -> CNST .)
    OR              reduce using rule 58 (FACTOR -> CNST .)
    SEMI_COLON      reduce using rule 58 (FACTOR -> CNST .)
    COMMA           reduce using rule 58 (FACTOR -> CNST .)
    CLOSE_PARENTHESIS reduce using rule 58 (FACTOR -> CNST .)
    UNTIL_KWD       reduce using rule 58 (FACTOR -> CNST .)
    OPEN_CURLY      reduce using rule 58 (FACTOR -> CNST .)


state 88

    (67) CNST -> CTE_S . seen_cte_s
    (66) seen_cte_s -> .

    STAR            reduce using rule 66 (seen_cte_s -> .)
    FWD_SLASH       reduce using rule 66 (seen_cte_s -> .)
    PLUS            reduce using rule 66 (seen_cte_s -> .)
    MINUS           reduce using rule 66 (seen_cte_s -> .)
    BIGGER          reduce using rule 66 (seen_cte_s -> .)
    SMALLER         reduce using rule 66 (seen_cte_s -> .)
    DOUBLE_EQUALS   reduce using rule 66 (seen_cte_s -> .)
    DIFFERENT       reduce using rule 66 (seen_cte_s -> .)
    AND             reduce using rule 66 (seen_cte_s -> .)
    OR              reduce using rule 66 (seen_cte_s -> .)
    SEMI_COLON      reduce using rule 66 (seen_cte_s -> .)
    COMMA           reduce using rule 66 (seen_cte_s -> .)
    CLOSE_PARENTHESIS reduce using rule 66 (seen_cte_s -> .)
    UNTIL_KWD       reduce using rule 66 (seen_cte_s -> .)
    OPEN_CURLY      reduce using rule 66 (seen_cte_s -> .)

    seen_cte_s                     shift and go to state 116

state 89

    (68) CNST -> CTE_F . seen_cte_f
    (65) seen_cte_f -> .

    STAR            reduce using rule 65 (seen_cte_f -> .)
    FWD_SLASH       reduce using rule 65 (seen_cte_f -> .)
    PLUS            reduce using rule 65 (seen_cte_f -> .)
    MINUS           reduce using rule 65 (seen_cte_f -> .)
    BIGGER          reduce using rule 65 (seen_cte_f -> .)
    SMALLER         reduce using rule 65 (seen_cte_f -> .)
    DOUBLE_EQUALS   reduce using rule 65 (seen_cte_f -> .)
    DIFFERENT       reduce using rule 65 (seen_cte_f -> .)
    AND             reduce using rule 65 (seen_cte_f -> .)
    OR              reduce using rule 65 (seen_cte_f -> .)
    SEMI_COLON      reduce using rule 65 (seen_cte_f -> .)
    COMMA           reduce using rule 65 (seen_cte_f -> .)
    CLOSE_PARENTHESIS reduce using rule 65 (seen_cte_f -> .)
    UNTIL_KWD       reduce using rule 65 (seen_cte_f -> .)
    OPEN_CURLY      reduce using rule 65 (seen_cte_f -> .)

    seen_cte_f                     shift and go to state 117

state 90

    (69) CNST -> CTE_I . seen_cte_i
    (64) seen_cte_i -> .

    STAR            reduce using rule 64 (seen_cte_i -> .)
    FWD_SLASH       reduce using rule 64 (seen_cte_i -> .)
    PLUS            reduce using rule 64 (seen_cte_i -> .)
    MINUS           reduce using rule 64 (seen_cte_i -> .)
    BIGGER          reduce using rule 64 (seen_cte_i -> .)
    SMALLER         reduce using rule 64 (seen_cte_i -> .)
    DOUBLE_EQUALS   reduce using rule 64 (seen_cte_i -> .)
    DIFFERENT       reduce using rule 64 (seen_cte_i -> .)
    AND             reduce using rule 64 (seen_cte_i -> .)
    OR              reduce using rule 64 (seen_cte_i -> .)
    SEMI_COLON      reduce using rule 64 (seen_cte_i -> .)
    COMMA           reduce using rule 64 (seen_cte_i -> .)
    CLOSE_PARENTHESIS reduce using rule 64 (seen_cte_i -> .)
    UNTIL_KWD       reduce using rule 64 (seen_cte_i -> .)
    OPEN_CURLY      reduce using rule 64 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 118

state 91

    (83) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (12) READABLE_LIST -> . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 120

    READABLE_LIST                  shift and go to state 119

state 92

    (84) WRITE -> WRITE_KWD OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (85) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (44) EXPRESSION -> . EXP
    (45) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    PRINTABLE                      shift and go to state 121
    EXPRESSION                     shift and go to state 122
    EXP                            shift and go to state 80
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 93

    (89) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if
    (44) EXPRESSION -> . EXP
    (45) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    EXPRESSION                     shift and go to state 123
    EXP                            shift and go to state 80
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 94

    (97) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (44) EXPRESSION -> . EXP
    (45) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    EXPRESSION                     shift and go to state 124
    EXP                            shift and go to state 80
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 95

    (98) UNCONDITIONAL_REP -> FROM_KWD ID . EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 125


state 96

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . COMMENT
    (34) STATEMENT -> . REPETITION
    (99) empty -> .
    (35) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (82) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (83) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (84) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (89) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if
    (95) REPETITION -> . CONDITIONAL_REP
    (96) REPETITION -> . UNCONDITIONAL_REP
    (97) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (98) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    COMMENT         shift and go to state 60
    CLOSE_CURLY     reduce using rule 99 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 62
    READ_KWD        shift and go to state 63
    WRITE_KWD       shift and go to state 64
    IF_KWD          shift and go to state 65
    WHILE_KWD       shift and go to state 68
    FROM_KWD        shift and go to state 69

    STATEMENT_STAR                 shift and go to state 126
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 61
    CONDITIONAL_REP                shift and go to state 66
    UNCONDITIONAL_REP              shift and go to state 67

state 97

    (25) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (6) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (7) VAR_LIST_STAR -> . empty
    (8) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (99) empty -> .
    (9) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 99 (empty -> .)
    ID              shift and go to state 9

    VAR_LIST_STAR                  shift and go to state 127
    VAR_LIST                       shift and go to state 12
    empty                          shift and go to state 13
    ID_LIST                        shift and go to state 14

state 98

    (22) FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 22 (FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .)


state 99

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 128


state 100

    (5) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (6) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (7) VAR_LIST_STAR -> . empty
    (8) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (99) empty -> .
    (9) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 99 (empty -> .)
    ID              shift and go to state 9

    VAR_LIST_STAR                  shift and go to state 129
    VAR_LIST                       shift and go to state 12
    empty                          shift and go to state 13
    ID_LIST                        shift and go to state 14

state 101

    (35) ASSIGN -> ID seen_id EQUALS . seen_equals EXPRESSION SEMI_COLON
    (36) seen_equals -> .

    NOT             reduce using rule 36 (seen_equals -> .)
    OPEN_PARENTHESIS reduce using rule 36 (seen_equals -> .)
    ID              reduce using rule 36 (seen_equals -> .)
    CTE_S           reduce using rule 36 (seen_equals -> .)
    CTE_F           reduce using rule 36 (seen_equals -> .)
    CTE_I           reduce using rule 36 (seen_equals -> .)

    seen_equals                    shift and go to state 130

state 102

    (82) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    COMMENT         reduce using rule 82 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    ID              reduce using rule 82 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 82 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 82 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 82 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 82 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 82 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FROM_KWD        reduce using rule 82 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 82 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 103

    (45) EXPRESSION -> EXP COMP . seen_comp_op EXP seen_comp
    (47) seen_comp_op -> .

    NOT             reduce using rule 47 (seen_comp_op -> .)
    OPEN_PARENTHESIS reduce using rule 47 (seen_comp_op -> .)
    ID              reduce using rule 47 (seen_comp_op -> .)
    CTE_S           reduce using rule 47 (seen_comp_op -> .)
    CTE_F           reduce using rule 47 (seen_comp_op -> .)
    CTE_I           reduce using rule 47 (seen_comp_op -> .)

    seen_comp_op                   shift and go to state 131

state 104

    (48) COMP -> BIGGER .

    NOT             reduce using rule 48 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 48 (COMP -> BIGGER .)
    ID              reduce using rule 48 (COMP -> BIGGER .)
    CTE_S           reduce using rule 48 (COMP -> BIGGER .)
    CTE_F           reduce using rule 48 (COMP -> BIGGER .)
    CTE_I           reduce using rule 48 (COMP -> BIGGER .)


state 105

    (49) COMP -> SMALLER .

    NOT             reduce using rule 49 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 49 (COMP -> SMALLER .)
    ID              reduce using rule 49 (COMP -> SMALLER .)
    CTE_S           reduce using rule 49 (COMP -> SMALLER .)
    CTE_F           reduce using rule 49 (COMP -> SMALLER .)
    CTE_I           reduce using rule 49 (COMP -> SMALLER .)


state 106

    (50) COMP -> DOUBLE_EQUALS .

    NOT             reduce using rule 50 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 50 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 50 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 50 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 50 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 50 (COMP -> DOUBLE_EQUALS .)


state 107

    (51) COMP -> DIFFERENT .

    NOT             reduce using rule 51 (COMP -> DIFFERENT .)
    OPEN_PARENTHESIS reduce using rule 51 (COMP -> DIFFERENT .)
    ID              reduce using rule 51 (COMP -> DIFFERENT .)
    CTE_S           reduce using rule 51 (COMP -> DIFFERENT .)
    CTE_F           reduce using rule 51 (COMP -> DIFFERENT .)
    CTE_I           reduce using rule 51 (COMP -> DIFFERENT .)


state 108

    (52) COMP -> AND .

    NOT             reduce using rule 52 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 52 (COMP -> AND .)
    ID              reduce using rule 52 (COMP -> AND .)
    CTE_S           reduce using rule 52 (COMP -> AND .)
    CTE_F           reduce using rule 52 (COMP -> AND .)
    CTE_I           reduce using rule 52 (COMP -> AND .)


state 109

    (53) COMP -> OR .

    NOT             reduce using rule 53 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 53 (COMP -> OR .)
    ID              reduce using rule 53 (COMP -> OR .)
    CTE_S           reduce using rule 53 (COMP -> OR .)
    CTE_F           reduce using rule 53 (COMP -> OR .)
    CTE_I           reduce using rule 53 (COMP -> OR .)


state 110

    (37) EXP -> TERM seen_term . EXP_P
    (40) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (41) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (42) EXP_P -> . empty
    (99) empty -> .

    PLUS            shift and go to state 133
    MINUS           shift and go to state 134
    BIGGER          reduce using rule 99 (empty -> .)
    SMALLER         reduce using rule 99 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 99 (empty -> .)
    DIFFERENT       reduce using rule 99 (empty -> .)
    AND             reduce using rule 99 (empty -> .)
    OR              reduce using rule 99 (empty -> .)
    SEMI_COLON      reduce using rule 99 (empty -> .)
    COMMA           reduce using rule 99 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)
    UNTIL_KWD       reduce using rule 99 (empty -> .)
    OPEN_CURLY      reduce using rule 99 (empty -> .)

    EXP_P                          shift and go to state 132
    empty                          shift and go to state 135

state 111

    (38) EXP -> NOT seen_not . EXP pop_not
    (55) FACTOR -> NOT seen_not . FACTOR pop_not
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (70) TERM -> . FACTOR seen_factor TERM_P
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    EXP                            shift and go to state 136
    FACTOR                         shift and go to state 137
    TERM                           shift and go to state 81
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 112

    (70) TERM -> FACTOR seen_factor . TERM_P
    (71) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (72) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (73) TERM_P -> . empty
    (99) empty -> .

    STAR            shift and go to state 139
    FWD_SLASH       shift and go to state 140
    PLUS            reduce using rule 99 (empty -> .)
    MINUS           reduce using rule 99 (empty -> .)
    BIGGER          reduce using rule 99 (empty -> .)
    SMALLER         reduce using rule 99 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 99 (empty -> .)
    DIFFERENT       reduce using rule 99 (empty -> .)
    AND             reduce using rule 99 (empty -> .)
    OR              reduce using rule 99 (empty -> .)
    SEMI_COLON      reduce using rule 99 (empty -> .)
    COMMA           reduce using rule 99 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)
    UNTIL_KWD       reduce using rule 99 (empty -> .)
    OPEN_CURLY      reduce using rule 99 (empty -> .)

    TERM_P                         shift and go to state 138
    empty                          shift and go to state 141

state 113

    (54) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (44) EXPRESSION -> . EXP
    (45) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    EXPRESSION                     shift and go to state 142
    EXP                            shift and go to state 80
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 114

    (57) FACTOR -> ID seen_id .

    STAR            reduce using rule 57 (FACTOR -> ID seen_id .)
    FWD_SLASH       reduce using rule 57 (FACTOR -> ID seen_id .)
    PLUS            reduce using rule 57 (FACTOR -> ID seen_id .)
    MINUS           reduce using rule 57 (FACTOR -> ID seen_id .)
    BIGGER          reduce using rule 57 (FACTOR -> ID seen_id .)
    SMALLER         reduce using rule 57 (FACTOR -> ID seen_id .)
    DOUBLE_EQUALS   reduce using rule 57 (FACTOR -> ID seen_id .)
    DIFFERENT       reduce using rule 57 (FACTOR -> ID seen_id .)
    AND             reduce using rule 57 (FACTOR -> ID seen_id .)
    OR              reduce using rule 57 (FACTOR -> ID seen_id .)
    SEMI_COLON      reduce using rule 57 (FACTOR -> ID seen_id .)
    COMMA           reduce using rule 57 (FACTOR -> ID seen_id .)
    CLOSE_PARENTHESIS reduce using rule 57 (FACTOR -> ID seen_id .)
    UNTIL_KWD       reduce using rule 57 (FACTOR -> ID seen_id .)
    OPEN_CURLY      reduce using rule 57 (FACTOR -> ID seen_id .)


state 115

    (76) FUNC_CALL -> ID OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (77) ARG_LIST -> . ID_LIST ARG_LIST_P
    (78) ARG_LIST -> . EXPRESSION ARG_LIST_P
    (9) ID_LIST -> . ID ID_LIST_P
    (44) EXPRESSION -> . EXP
    (45) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 143
    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    ARG_LIST                       shift and go to state 144
    ID_LIST                        shift and go to state 145
    EXPRESSION                     shift and go to state 146
    EXP                            shift and go to state 80
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 116

    (67) CNST -> CTE_S seen_cte_s .

    STAR            reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    DIFFERENT       reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    AND             reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    OR              reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    UNTIL_KWD       reduce using rule 67 (CNST -> CTE_S seen_cte_s .)
    OPEN_CURLY      reduce using rule 67 (CNST -> CTE_S seen_cte_s .)


state 117

    (68) CNST -> CTE_F seen_cte_f .

    STAR            reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    DIFFERENT       reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    AND             reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    OR              reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    UNTIL_KWD       reduce using rule 68 (CNST -> CTE_F seen_cte_f .)
    OPEN_CURLY      reduce using rule 68 (CNST -> CTE_F seen_cte_f .)


state 118

    (69) CNST -> CTE_I seen_cte_i .

    STAR            reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    DIFFERENT       reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    AND             reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    OR              reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    UNTIL_KWD       reduce using rule 69 (CNST -> CTE_I seen_cte_i .)
    OPEN_CURLY      reduce using rule 69 (CNST -> CTE_I seen_cte_i .)


state 119

    (83) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS SEMI_COLON

    CLOSE_PARENTHESIS shift and go to state 147


state 120

    (12) READABLE_LIST -> ID . seen_readable READABLE_LIST_P
    (15) seen_readable -> .

    COMMA           reduce using rule 15 (seen_readable -> .)
    CLOSE_PARENTHESIS reduce using rule 15 (seen_readable -> .)

    seen_readable                  shift and go to state 148

state 121

    (84) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS SEMI_COLON

    CLOSE_PARENTHESIS shift and go to state 149


state 122

    (85) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (88) seen_printable -> .

    COMMA           reduce using rule 88 (seen_printable -> .)
    CLOSE_PARENTHESIS reduce using rule 88 (seen_printable -> .)

    seen_printable                 shift and go to state 150

state 123

    (89) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if

    CLOSE_PARENTHESIS shift and go to state 151


state 124

    (97) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 152


state 125

    (98) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS . EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (44) EXPRESSION -> . EXP
    (45) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    EXPRESSION                     shift and go to state 153
    EXP                            shift and go to state 80
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 126

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 154


state 127

    (25) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 155


state 128

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 4 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 4 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE            reduce using rule 4 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 4 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)


state 129

    (5) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 156


state 130

    (35) ASSIGN -> ID seen_id EQUALS seen_equals . EXPRESSION SEMI_COLON
    (44) EXPRESSION -> . EXP
    (45) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    EXPRESSION                     shift and go to state 157
    EXP                            shift and go to state 80
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 131

    (45) EXPRESSION -> EXP COMP seen_comp_op . EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    EXP                            shift and go to state 158
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 132

    (37) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 37 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 37 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 37 (EXP -> TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 37 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 37 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 37 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 37 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 37 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 37 (EXP -> TERM seen_term EXP_P .)
    UNTIL_KWD       reduce using rule 37 (EXP -> TERM seen_term EXP_P .)
    OPEN_CURLY      reduce using rule 37 (EXP -> TERM seen_term EXP_P .)


state 133

    (40) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (43) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 43 (seen_term_op -> .)
    NOT             reduce using rule 43 (seen_term_op -> .)
    ID              reduce using rule 43 (seen_term_op -> .)
    CTE_S           reduce using rule 43 (seen_term_op -> .)
    CTE_F           reduce using rule 43 (seen_term_op -> .)
    CTE_I           reduce using rule 43 (seen_term_op -> .)

    seen_term_op                   shift and go to state 159

state 134

    (41) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (43) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 43 (seen_term_op -> .)
    NOT             reduce using rule 43 (seen_term_op -> .)
    ID              reduce using rule 43 (seen_term_op -> .)
    CTE_S           reduce using rule 43 (seen_term_op -> .)
    CTE_F           reduce using rule 43 (seen_term_op -> .)
    CTE_I           reduce using rule 43 (seen_term_op -> .)

    seen_term_op                   shift and go to state 160

state 135

    (42) EXP_P -> empty .

    BIGGER          reduce using rule 42 (EXP_P -> empty .)
    SMALLER         reduce using rule 42 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 42 (EXP_P -> empty .)
    DIFFERENT       reduce using rule 42 (EXP_P -> empty .)
    AND             reduce using rule 42 (EXP_P -> empty .)
    OR              reduce using rule 42 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 42 (EXP_P -> empty .)
    COMMA           reduce using rule 42 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 42 (EXP_P -> empty .)
    UNTIL_KWD       reduce using rule 42 (EXP_P -> empty .)
    OPEN_CURLY      reduce using rule 42 (EXP_P -> empty .)


state 136

    (38) EXP -> NOT seen_not EXP . pop_not
    (59) pop_not -> .

    BIGGER          reduce using rule 59 (pop_not -> .)
    SMALLER         reduce using rule 59 (pop_not -> .)
    DOUBLE_EQUALS   reduce using rule 59 (pop_not -> .)
    DIFFERENT       reduce using rule 59 (pop_not -> .)
    AND             reduce using rule 59 (pop_not -> .)
    OR              reduce using rule 59 (pop_not -> .)
    SEMI_COLON      reduce using rule 59 (pop_not -> .)
    COMMA           reduce using rule 59 (pop_not -> .)
    CLOSE_PARENTHESIS reduce using rule 59 (pop_not -> .)
    UNTIL_KWD       reduce using rule 59 (pop_not -> .)
    OPEN_CURLY      reduce using rule 59 (pop_not -> .)

    pop_not                        shift and go to state 161

state 137

    (55) FACTOR -> NOT seen_not FACTOR . pop_not
    (70) TERM -> FACTOR . seen_factor TERM_P
    (59) pop_not -> .
    (74) seen_factor -> .

  ! reduce/reduce conflict for STAR resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for BIGGER resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for SMALLER resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for AND resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for OR resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for UNTIL_KWD resolved using rule 59 (pop_not -> .)
  ! reduce/reduce conflict for OPEN_CURLY resolved using rule 59 (pop_not -> .)
    STAR            reduce using rule 59 (pop_not -> .)
    FWD_SLASH       reduce using rule 59 (pop_not -> .)
    PLUS            reduce using rule 59 (pop_not -> .)
    MINUS           reduce using rule 59 (pop_not -> .)
    BIGGER          reduce using rule 59 (pop_not -> .)
    SMALLER         reduce using rule 59 (pop_not -> .)
    DOUBLE_EQUALS   reduce using rule 59 (pop_not -> .)
    DIFFERENT       reduce using rule 59 (pop_not -> .)
    AND             reduce using rule 59 (pop_not -> .)
    OR              reduce using rule 59 (pop_not -> .)
    SEMI_COLON      reduce using rule 59 (pop_not -> .)
    COMMA           reduce using rule 59 (pop_not -> .)
    CLOSE_PARENTHESIS reduce using rule 59 (pop_not -> .)
    UNTIL_KWD       reduce using rule 59 (pop_not -> .)
    OPEN_CURLY      reduce using rule 59 (pop_not -> .)

  ! STAR            [ reduce using rule 74 (seen_factor -> .) ]
  ! FWD_SLASH       [ reduce using rule 74 (seen_factor -> .) ]
  ! PLUS            [ reduce using rule 74 (seen_factor -> .) ]
  ! MINUS           [ reduce using rule 74 (seen_factor -> .) ]
  ! BIGGER          [ reduce using rule 74 (seen_factor -> .) ]
  ! SMALLER         [ reduce using rule 74 (seen_factor -> .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 74 (seen_factor -> .) ]
  ! DIFFERENT       [ reduce using rule 74 (seen_factor -> .) ]
  ! AND             [ reduce using rule 74 (seen_factor -> .) ]
  ! OR              [ reduce using rule 74 (seen_factor -> .) ]
  ! SEMI_COLON      [ reduce using rule 74 (seen_factor -> .) ]
  ! COMMA           [ reduce using rule 74 (seen_factor -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 74 (seen_factor -> .) ]
  ! UNTIL_KWD       [ reduce using rule 74 (seen_factor -> .) ]
  ! OPEN_CURLY      [ reduce using rule 74 (seen_factor -> .) ]

    pop_not                        shift and go to state 162
    seen_factor                    shift and go to state 112

state 138

    (70) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    UNTIL_KWD       reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)
    OPEN_CURLY      reduce using rule 70 (TERM -> FACTOR seen_factor TERM_P .)


state 139

    (71) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (75) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 75 (seen_factor_op -> .)
    NOT             reduce using rule 75 (seen_factor_op -> .)
    ID              reduce using rule 75 (seen_factor_op -> .)
    CTE_S           reduce using rule 75 (seen_factor_op -> .)
    CTE_F           reduce using rule 75 (seen_factor_op -> .)
    CTE_I           reduce using rule 75 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 163

state 140

    (72) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (75) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 75 (seen_factor_op -> .)
    NOT             reduce using rule 75 (seen_factor_op -> .)
    ID              reduce using rule 75 (seen_factor_op -> .)
    CTE_S           reduce using rule 75 (seen_factor_op -> .)
    CTE_F           reduce using rule 75 (seen_factor_op -> .)
    CTE_I           reduce using rule 75 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 164

state 141

    (73) TERM_P -> empty .

    PLUS            reduce using rule 73 (TERM_P -> empty .)
    MINUS           reduce using rule 73 (TERM_P -> empty .)
    BIGGER          reduce using rule 73 (TERM_P -> empty .)
    SMALLER         reduce using rule 73 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 73 (TERM_P -> empty .)
    DIFFERENT       reduce using rule 73 (TERM_P -> empty .)
    AND             reduce using rule 73 (TERM_P -> empty .)
    OR              reduce using rule 73 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 73 (TERM_P -> empty .)
    COMMA           reduce using rule 73 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 73 (TERM_P -> empty .)
    UNTIL_KWD       reduce using rule 73 (TERM_P -> empty .)
    OPEN_CURLY      reduce using rule 73 (TERM_P -> empty .)


state 142

    (54) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 165


state 143

    (9) ID_LIST -> ID . ID_LIST_P
    (57) FACTOR -> ID . seen_id
    (76) FUNC_CALL -> ID . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (10) ID_LIST_P -> . COMMA ID ID_LIST_P
    (11) ID_LIST_P -> . empty
    (63) seen_id -> .
    (99) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 63 (seen_id -> .)
    OPEN_PARENTHESIS shift and go to state 115
    COMMA           shift and go to state 18
    STAR            reduce using rule 63 (seen_id -> .)
    FWD_SLASH       reduce using rule 63 (seen_id -> .)
    PLUS            reduce using rule 63 (seen_id -> .)
    MINUS           reduce using rule 63 (seen_id -> .)
    BIGGER          reduce using rule 63 (seen_id -> .)
    SMALLER         reduce using rule 63 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 63 (seen_id -> .)
    DIFFERENT       reduce using rule 63 (seen_id -> .)
    AND             reduce using rule 63 (seen_id -> .)
    OR              reduce using rule 63 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 63 (seen_id -> .)

  ! COMMA           [ reduce using rule 63 (seen_id -> .) ]
  ! COMMA           [ reduce using rule 99 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 99 (empty -> .) ]

    ID_LIST_P                      shift and go to state 17
    seen_id                        shift and go to state 114
    empty                          shift and go to state 19

state 144

    (76) FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 166


state 145

    (77) ARG_LIST -> ID_LIST . ARG_LIST_P
    (79) ARG_LIST_P -> . COMMA ID_LIST ARG_LIST_P
    (80) ARG_LIST_P -> . COMMA EXPRESSION ARG_LIST_P
    (81) ARG_LIST_P -> . empty
    (99) empty -> .

    COMMA           shift and go to state 168
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

    ARG_LIST_P                     shift and go to state 167
    empty                          shift and go to state 169

state 146

    (78) ARG_LIST -> EXPRESSION . ARG_LIST_P
    (79) ARG_LIST_P -> . COMMA ID_LIST ARG_LIST_P
    (80) ARG_LIST_P -> . COMMA EXPRESSION ARG_LIST_P
    (81) ARG_LIST_P -> . empty
    (99) empty -> .

    COMMA           shift and go to state 168
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

    ARG_LIST_P                     shift and go to state 170
    empty                          shift and go to state 169

state 147

    (83) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS . SEMI_COLON

    SEMI_COLON      shift and go to state 171


state 148

    (12) READABLE_LIST -> ID seen_readable . READABLE_LIST_P
    (13) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (14) READABLE_LIST_P -> . empty
    (99) empty -> .

    COMMA           shift and go to state 173
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

    READABLE_LIST_P                shift and go to state 172
    empty                          shift and go to state 174

state 149

    (84) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS . SEMI_COLON

    SEMI_COLON      shift and go to state 175


state 150

    (85) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (86) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (87) PRINTABLE_P -> . empty
    (99) empty -> .

    COMMA           shift and go to state 177
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

    PRINTABLE_P                    shift and go to state 176
    empty                          shift and go to state 178

state 151

    (89) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if
    (90) seen_if_kwd -> .

    THEN_KWD        reduce using rule 90 (seen_if_kwd -> .)

    seen_if_kwd                    shift and go to state 179

state 152

    (97) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 180


state 153

    (98) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION . UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    UNTIL_KWD       shift and go to state 181


state 154

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    TYPE            reduce using rule 19 (FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 19 (FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 19 (FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 155

    (25) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 25 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 156

    (5) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE            reduce using rule 5 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 5 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 157

    (35) ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 182


state 158

    (45) EXPRESSION -> EXP COMP seen_comp_op EXP . seen_comp
    (46) seen_comp -> .

    SEMI_COLON      reduce using rule 46 (seen_comp -> .)
    COMMA           reduce using rule 46 (seen_comp -> .)
    CLOSE_PARENTHESIS reduce using rule 46 (seen_comp -> .)
    UNTIL_KWD       reduce using rule 46 (seen_comp -> .)
    OPEN_CURLY      reduce using rule 46 (seen_comp -> .)

    seen_comp                      shift and go to state 183

state 159

    (40) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 84
    NOT             shift and go to state 185
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    TERM                           shift and go to state 184
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 160

    (41) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 84
    NOT             shift and go to state 185
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    TERM                           shift and go to state 186
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 161

    (38) EXP -> NOT seen_not EXP pop_not .

    BIGGER          reduce using rule 38 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER         reduce using rule 38 (EXP -> NOT seen_not EXP pop_not .)
    DOUBLE_EQUALS   reduce using rule 38 (EXP -> NOT seen_not EXP pop_not .)
    DIFFERENT       reduce using rule 38 (EXP -> NOT seen_not EXP pop_not .)
    AND             reduce using rule 38 (EXP -> NOT seen_not EXP pop_not .)
    OR              reduce using rule 38 (EXP -> NOT seen_not EXP pop_not .)
    SEMI_COLON      reduce using rule 38 (EXP -> NOT seen_not EXP pop_not .)
    COMMA           reduce using rule 38 (EXP -> NOT seen_not EXP pop_not .)
    CLOSE_PARENTHESIS reduce using rule 38 (EXP -> NOT seen_not EXP pop_not .)
    UNTIL_KWD       reduce using rule 38 (EXP -> NOT seen_not EXP pop_not .)
    OPEN_CURLY      reduce using rule 38 (EXP -> NOT seen_not EXP pop_not .)


state 162

    (55) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DIFFERENT       reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    UNTIL_KWD       reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OPEN_CURLY      reduce using rule 55 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 163

    (71) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 84
    NOT             shift and go to state 185
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    FACTOR                         shift and go to state 187
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 164

    (72) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 84
    NOT             shift and go to state 185
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    FACTOR                         shift and go to state 188
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 165

    (54) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (62) seen_close_parenthesis -> .

    STAR            reduce using rule 62 (seen_close_parenthesis -> .)
    FWD_SLASH       reduce using rule 62 (seen_close_parenthesis -> .)
    PLUS            reduce using rule 62 (seen_close_parenthesis -> .)
    MINUS           reduce using rule 62 (seen_close_parenthesis -> .)
    BIGGER          reduce using rule 62 (seen_close_parenthesis -> .)
    SMALLER         reduce using rule 62 (seen_close_parenthesis -> .)
    DOUBLE_EQUALS   reduce using rule 62 (seen_close_parenthesis -> .)
    DIFFERENT       reduce using rule 62 (seen_close_parenthesis -> .)
    AND             reduce using rule 62 (seen_close_parenthesis -> .)
    OR              reduce using rule 62 (seen_close_parenthesis -> .)
    SEMI_COLON      reduce using rule 62 (seen_close_parenthesis -> .)
    COMMA           reduce using rule 62 (seen_close_parenthesis -> .)
    CLOSE_PARENTHESIS reduce using rule 62 (seen_close_parenthesis -> .)
    UNTIL_KWD       reduce using rule 62 (seen_close_parenthesis -> .)
    OPEN_CURLY      reduce using rule 62 (seen_close_parenthesis -> .)

    seen_close_parenthesis         shift and go to state 189

state 166

    (76) FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    STAR            reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DIFFERENT       reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SEMI_COLON      reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    UNTIL_KWD       reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OPEN_CURLY      reduce using rule 76 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 167

    (77) ARG_LIST -> ID_LIST ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 77 (ARG_LIST -> ID_LIST ARG_LIST_P .)


state 168

    (79) ARG_LIST_P -> COMMA . ID_LIST ARG_LIST_P
    (80) ARG_LIST_P -> COMMA . EXPRESSION ARG_LIST_P
    (9) ID_LIST -> . ID ID_LIST_P
    (44) EXPRESSION -> . EXP
    (45) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 143
    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    ID_LIST                        shift and go to state 190
    EXPRESSION                     shift and go to state 191
    EXP                            shift and go to state 80
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 169

    (81) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 81 (ARG_LIST_P -> empty .)


state 170

    (78) ARG_LIST -> EXPRESSION ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 78 (ARG_LIST -> EXPRESSION ARG_LIST_P .)


state 171

    (83) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .

    COMMENT         reduce using rule 83 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    ID              reduce using rule 83 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    RETURN_KWD      reduce using rule 83 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    READ_KWD        reduce using rule 83 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    WRITE_KWD       reduce using rule 83 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    IF_KWD          reduce using rule 83 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    WHILE_KWD       reduce using rule 83 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    FROM_KWD        reduce using rule 83 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 83 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)


state 172

    (12) READABLE_LIST -> ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 12 (READABLE_LIST -> ID seen_readable READABLE_LIST_P .)


state 173

    (13) READABLE_LIST_P -> COMMA . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 192


state 174

    (14) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 14 (READABLE_LIST_P -> empty .)


state 175

    (84) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .

    COMMENT         reduce using rule 84 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    ID              reduce using rule 84 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    RETURN_KWD      reduce using rule 84 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    READ_KWD        reduce using rule 84 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    WRITE_KWD       reduce using rule 84 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    IF_KWD          reduce using rule 84 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    WHILE_KWD       reduce using rule 84 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    FROM_KWD        reduce using rule 84 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 84 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)


state 176

    (85) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 85 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 177

    (86) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (44) EXPRESSION -> . EXP
    (45) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    EXPRESSION                     shift and go to state 193
    EXP                            shift and go to state 80
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 178

    (87) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 87 (PRINTABLE_P -> empty .)


state 179

    (89) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if

    THEN_KWD        shift and go to state 194


state 180

    (97) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . COMMENT
    (34) STATEMENT -> . REPETITION
    (99) empty -> .
    (35) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (82) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (83) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (84) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (89) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if
    (95) REPETITION -> . CONDITIONAL_REP
    (96) REPETITION -> . UNCONDITIONAL_REP
    (97) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (98) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    COMMENT         shift and go to state 60
    CLOSE_CURLY     reduce using rule 99 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 62
    READ_KWD        shift and go to state 63
    WRITE_KWD       shift and go to state 64
    IF_KWD          shift and go to state 65
    WHILE_KWD       shift and go to state 68
    FROM_KWD        shift and go to state 69

    STATEMENT_STAR                 shift and go to state 195
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 61
    CONDITIONAL_REP                shift and go to state 66
    UNCONDITIONAL_REP              shift and go to state 67

state 181

    (98) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD . EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (44) EXPRESSION -> . EXP
    (45) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (37) EXP -> . TERM seen_term EXP_P
    (38) EXP -> . NOT seen_not EXP pop_not
    (70) TERM -> . FACTOR seen_factor TERM_P
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 82
    OPEN_PARENTHESIS shift and go to state 84
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    EXPRESSION                     shift and go to state 196
    EXP                            shift and go to state 80
    TERM                           shift and go to state 81
    FACTOR                         shift and go to state 83
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 182

    (35) ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .

    COMMENT         reduce using rule 35 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    ID              reduce using rule 35 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 35 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 35 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 35 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 35 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 35 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    FROM_KWD        reduce using rule 35 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 35 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)


state 183

    (45) EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .

    SEMI_COLON      reduce using rule 45 (EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .)
    COMMA           reduce using rule 45 (EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 45 (EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .)
    UNTIL_KWD       reduce using rule 45 (EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .)
    OPEN_CURLY      reduce using rule 45 (EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .)


state 184

    (40) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (39) seen_term -> .

    PLUS            reduce using rule 39 (seen_term -> .)
    MINUS           reduce using rule 39 (seen_term -> .)
    BIGGER          reduce using rule 39 (seen_term -> .)
    SMALLER         reduce using rule 39 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 39 (seen_term -> .)
    DIFFERENT       reduce using rule 39 (seen_term -> .)
    AND             reduce using rule 39 (seen_term -> .)
    OR              reduce using rule 39 (seen_term -> .)
    SEMI_COLON      reduce using rule 39 (seen_term -> .)
    COMMA           reduce using rule 39 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 39 (seen_term -> .)
    UNTIL_KWD       reduce using rule 39 (seen_term -> .)
    OPEN_CURLY      reduce using rule 39 (seen_term -> .)

    seen_term                      shift and go to state 197

state 185

    (55) FACTOR -> NOT . seen_not FACTOR pop_not
    (60) seen_not -> .

    OPEN_PARENTHESIS reduce using rule 60 (seen_not -> .)
    NOT             reduce using rule 60 (seen_not -> .)
    ID              reduce using rule 60 (seen_not -> .)
    CTE_S           reduce using rule 60 (seen_not -> .)
    CTE_F           reduce using rule 60 (seen_not -> .)
    CTE_I           reduce using rule 60 (seen_not -> .)

    seen_not                       shift and go to state 198

state 186

    (41) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (39) seen_term -> .

    PLUS            reduce using rule 39 (seen_term -> .)
    MINUS           reduce using rule 39 (seen_term -> .)
    BIGGER          reduce using rule 39 (seen_term -> .)
    SMALLER         reduce using rule 39 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 39 (seen_term -> .)
    DIFFERENT       reduce using rule 39 (seen_term -> .)
    AND             reduce using rule 39 (seen_term -> .)
    OR              reduce using rule 39 (seen_term -> .)
    SEMI_COLON      reduce using rule 39 (seen_term -> .)
    COMMA           reduce using rule 39 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 39 (seen_term -> .)
    UNTIL_KWD       reduce using rule 39 (seen_term -> .)
    OPEN_CURLY      reduce using rule 39 (seen_term -> .)

    seen_term                      shift and go to state 199

state 187

    (71) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (74) seen_factor -> .

    STAR            reduce using rule 74 (seen_factor -> .)
    FWD_SLASH       reduce using rule 74 (seen_factor -> .)
    PLUS            reduce using rule 74 (seen_factor -> .)
    MINUS           reduce using rule 74 (seen_factor -> .)
    BIGGER          reduce using rule 74 (seen_factor -> .)
    SMALLER         reduce using rule 74 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 74 (seen_factor -> .)
    DIFFERENT       reduce using rule 74 (seen_factor -> .)
    AND             reduce using rule 74 (seen_factor -> .)
    OR              reduce using rule 74 (seen_factor -> .)
    SEMI_COLON      reduce using rule 74 (seen_factor -> .)
    COMMA           reduce using rule 74 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 74 (seen_factor -> .)
    UNTIL_KWD       reduce using rule 74 (seen_factor -> .)
    OPEN_CURLY      reduce using rule 74 (seen_factor -> .)

    seen_factor                    shift and go to state 200

state 188

    (72) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (74) seen_factor -> .

    STAR            reduce using rule 74 (seen_factor -> .)
    FWD_SLASH       reduce using rule 74 (seen_factor -> .)
    PLUS            reduce using rule 74 (seen_factor -> .)
    MINUS           reduce using rule 74 (seen_factor -> .)
    BIGGER          reduce using rule 74 (seen_factor -> .)
    SMALLER         reduce using rule 74 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 74 (seen_factor -> .)
    DIFFERENT       reduce using rule 74 (seen_factor -> .)
    AND             reduce using rule 74 (seen_factor -> .)
    OR              reduce using rule 74 (seen_factor -> .)
    SEMI_COLON      reduce using rule 74 (seen_factor -> .)
    COMMA           reduce using rule 74 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 74 (seen_factor -> .)
    UNTIL_KWD       reduce using rule 74 (seen_factor -> .)
    OPEN_CURLY      reduce using rule 74 (seen_factor -> .)

    seen_factor                    shift and go to state 201

state 189

    (54) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DIFFERENT       reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    UNTIL_KWD       reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OPEN_CURLY      reduce using rule 54 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 190

    (79) ARG_LIST_P -> COMMA ID_LIST . ARG_LIST_P
    (79) ARG_LIST_P -> . COMMA ID_LIST ARG_LIST_P
    (80) ARG_LIST_P -> . COMMA EXPRESSION ARG_LIST_P
    (81) ARG_LIST_P -> . empty
    (99) empty -> .

    COMMA           shift and go to state 168
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

    ARG_LIST_P                     shift and go to state 202
    empty                          shift and go to state 169

state 191

    (80) ARG_LIST_P -> COMMA EXPRESSION . ARG_LIST_P
    (79) ARG_LIST_P -> . COMMA ID_LIST ARG_LIST_P
    (80) ARG_LIST_P -> . COMMA EXPRESSION ARG_LIST_P
    (81) ARG_LIST_P -> . empty
    (99) empty -> .

    COMMA           shift and go to state 168
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

    ARG_LIST_P                     shift and go to state 203
    empty                          shift and go to state 169

state 192

    (13) READABLE_LIST_P -> COMMA ID . seen_readable READABLE_LIST_P
    (15) seen_readable -> .

    COMMA           reduce using rule 15 (seen_readable -> .)
    CLOSE_PARENTHESIS reduce using rule 15 (seen_readable -> .)

    seen_readable                  shift and go to state 204

state 193

    (86) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (88) seen_printable -> .

    COMMA           reduce using rule 88 (seen_printable -> .)
    CLOSE_PARENTHESIS reduce using rule 88 (seen_printable -> .)

    seen_printable                 shift and go to state 205

state 194

    (89) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if

    OPEN_CURLY      shift and go to state 206


state 195

    (97) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 207


state 196

    (98) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 208


state 197

    (40) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (40) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (41) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (42) EXP_P -> . empty
    (99) empty -> .

    PLUS            shift and go to state 133
    MINUS           shift and go to state 134
    BIGGER          reduce using rule 99 (empty -> .)
    SMALLER         reduce using rule 99 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 99 (empty -> .)
    DIFFERENT       reduce using rule 99 (empty -> .)
    AND             reduce using rule 99 (empty -> .)
    OR              reduce using rule 99 (empty -> .)
    SEMI_COLON      reduce using rule 99 (empty -> .)
    COMMA           reduce using rule 99 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)
    UNTIL_KWD       reduce using rule 99 (empty -> .)
    OPEN_CURLY      reduce using rule 99 (empty -> .)

    EXP_P                          shift and go to state 209
    empty                          shift and go to state 135

state 198

    (55) FACTOR -> NOT seen_not . FACTOR pop_not
    (54) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) FACTOR -> . NOT seen_not FACTOR pop_not
    (56) FACTOR -> . FUNC_CALL
    (57) FACTOR -> . ID seen_id
    (58) FACTOR -> . CNST
    (76) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (67) CNST -> . CTE_S seen_cte_s
    (68) CNST -> . CTE_F seen_cte_f
    (69) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 84
    NOT             shift and go to state 185
    ID              shift and go to state 86
    CTE_S           shift and go to state 88
    CTE_F           shift and go to state 89
    CTE_I           shift and go to state 90

    FACTOR                         shift and go to state 210
    FUNC_CALL                      shift and go to state 85
    CNST                           shift and go to state 87

state 199

    (41) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (40) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (41) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (42) EXP_P -> . empty
    (99) empty -> .

    PLUS            shift and go to state 133
    MINUS           shift and go to state 134
    BIGGER          reduce using rule 99 (empty -> .)
    SMALLER         reduce using rule 99 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 99 (empty -> .)
    DIFFERENT       reduce using rule 99 (empty -> .)
    AND             reduce using rule 99 (empty -> .)
    OR              reduce using rule 99 (empty -> .)
    SEMI_COLON      reduce using rule 99 (empty -> .)
    COMMA           reduce using rule 99 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)
    UNTIL_KWD       reduce using rule 99 (empty -> .)
    OPEN_CURLY      reduce using rule 99 (empty -> .)

    EXP_P                          shift and go to state 211
    empty                          shift and go to state 135

state 200

    (71) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (71) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (72) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (73) TERM_P -> . empty
    (99) empty -> .

    STAR            shift and go to state 139
    FWD_SLASH       shift and go to state 140
    PLUS            reduce using rule 99 (empty -> .)
    MINUS           reduce using rule 99 (empty -> .)
    BIGGER          reduce using rule 99 (empty -> .)
    SMALLER         reduce using rule 99 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 99 (empty -> .)
    DIFFERENT       reduce using rule 99 (empty -> .)
    AND             reduce using rule 99 (empty -> .)
    OR              reduce using rule 99 (empty -> .)
    SEMI_COLON      reduce using rule 99 (empty -> .)
    COMMA           reduce using rule 99 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)
    UNTIL_KWD       reduce using rule 99 (empty -> .)
    OPEN_CURLY      reduce using rule 99 (empty -> .)

    TERM_P                         shift and go to state 212
    empty                          shift and go to state 141

state 201

    (72) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (71) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (72) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (73) TERM_P -> . empty
    (99) empty -> .

    STAR            shift and go to state 139
    FWD_SLASH       shift and go to state 140
    PLUS            reduce using rule 99 (empty -> .)
    MINUS           reduce using rule 99 (empty -> .)
    BIGGER          reduce using rule 99 (empty -> .)
    SMALLER         reduce using rule 99 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 99 (empty -> .)
    DIFFERENT       reduce using rule 99 (empty -> .)
    AND             reduce using rule 99 (empty -> .)
    OR              reduce using rule 99 (empty -> .)
    SEMI_COLON      reduce using rule 99 (empty -> .)
    COMMA           reduce using rule 99 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)
    UNTIL_KWD       reduce using rule 99 (empty -> .)
    OPEN_CURLY      reduce using rule 99 (empty -> .)

    TERM_P                         shift and go to state 213
    empty                          shift and go to state 141

state 202

    (79) ARG_LIST_P -> COMMA ID_LIST ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 79 (ARG_LIST_P -> COMMA ID_LIST ARG_LIST_P .)


state 203

    (80) ARG_LIST_P -> COMMA EXPRESSION ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 80 (ARG_LIST_P -> COMMA EXPRESSION ARG_LIST_P .)


state 204

    (13) READABLE_LIST_P -> COMMA ID seen_readable . READABLE_LIST_P
    (13) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (14) READABLE_LIST_P -> . empty
    (99) empty -> .

    COMMA           shift and go to state 173
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

    READABLE_LIST_P                shift and go to state 214
    empty                          shift and go to state 174

state 205

    (86) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (86) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (87) PRINTABLE_P -> . empty
    (99) empty -> .

    COMMA           shift and go to state 177
    CLOSE_PARENTHESIS reduce using rule 99 (empty -> .)

    PRINTABLE_P                    shift and go to state 215
    empty                          shift and go to state 178

state 206

    (89) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . COMMENT
    (34) STATEMENT -> . REPETITION
    (99) empty -> .
    (35) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (82) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (83) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (84) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (89) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if
    (95) REPETITION -> . CONDITIONAL_REP
    (96) REPETITION -> . UNCONDITIONAL_REP
    (97) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (98) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    COMMENT         shift and go to state 60
    CLOSE_CURLY     reduce using rule 99 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 62
    READ_KWD        shift and go to state 63
    WRITE_KWD       shift and go to state 64
    IF_KWD          shift and go to state 65
    WHILE_KWD       shift and go to state 68
    FROM_KWD        shift and go to state 69

    STATEMENT_STAR                 shift and go to state 216
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 61
    CONDITIONAL_REP                shift and go to state 66
    UNCONDITIONAL_REP              shift and go to state 67

state 207

    (97) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    COMMENT         reduce using rule 97 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    ID              reduce using rule 97 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 97 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 97 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 97 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 97 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 97 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FROM_KWD        reduce using rule 97 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 97 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 208

    (98) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . COMMENT
    (34) STATEMENT -> . REPETITION
    (99) empty -> .
    (35) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (82) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (83) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (84) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (89) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if
    (95) REPETITION -> . CONDITIONAL_REP
    (96) REPETITION -> . UNCONDITIONAL_REP
    (97) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (98) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    COMMENT         shift and go to state 60
    CLOSE_CURLY     reduce using rule 99 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 62
    READ_KWD        shift and go to state 63
    WRITE_KWD       shift and go to state 64
    IF_KWD          shift and go to state 65
    WHILE_KWD       shift and go to state 68
    FROM_KWD        shift and go to state 69

    STATEMENT_STAR                 shift and go to state 217
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 61
    CONDITIONAL_REP                shift and go to state 66
    UNCONDITIONAL_REP              shift and go to state 67

state 209

    (40) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 40 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 40 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 40 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 40 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 40 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 40 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 40 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 40 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 40 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    UNTIL_KWD       reduce using rule 40 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OPEN_CURLY      reduce using rule 40 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 210

    (55) FACTOR -> NOT seen_not FACTOR . pop_not
    (59) pop_not -> .

    STAR            reduce using rule 59 (pop_not -> .)
    FWD_SLASH       reduce using rule 59 (pop_not -> .)
    PLUS            reduce using rule 59 (pop_not -> .)
    MINUS           reduce using rule 59 (pop_not -> .)
    BIGGER          reduce using rule 59 (pop_not -> .)
    SMALLER         reduce using rule 59 (pop_not -> .)
    DOUBLE_EQUALS   reduce using rule 59 (pop_not -> .)
    DIFFERENT       reduce using rule 59 (pop_not -> .)
    AND             reduce using rule 59 (pop_not -> .)
    OR              reduce using rule 59 (pop_not -> .)
    SEMI_COLON      reduce using rule 59 (pop_not -> .)
    COMMA           reduce using rule 59 (pop_not -> .)
    CLOSE_PARENTHESIS reduce using rule 59 (pop_not -> .)
    UNTIL_KWD       reduce using rule 59 (pop_not -> .)
    OPEN_CURLY      reduce using rule 59 (pop_not -> .)

    pop_not                        shift and go to state 162

state 211

    (41) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 41 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 41 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 41 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 41 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 41 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 41 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 41 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 41 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 41 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    UNTIL_KWD       reduce using rule 41 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OPEN_CURLY      reduce using rule 41 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 212

    (71) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    UNTIL_KWD       reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OPEN_CURLY      reduce using rule 71 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 213

    (72) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    UNTIL_KWD       reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OPEN_CURLY      reduce using rule 72 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 214

    (13) READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 13 (READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .)


state 215

    (86) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 86 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 216

    (89) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P seen_if

    CLOSE_CURLY     shift and go to state 218


state 217

    (98) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 219


state 218

    (89) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P seen_if
    (92) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (93) DECISION_P -> . empty
    (99) empty -> .

    ELSE_KWD        shift and go to state 221
    COMMENT         reduce using rule 99 (empty -> .)
    ID              reduce using rule 99 (empty -> .)
    RETURN_KWD      reduce using rule 99 (empty -> .)
    READ_KWD        reduce using rule 99 (empty -> .)
    WRITE_KWD       reduce using rule 99 (empty -> .)
    IF_KWD          reduce using rule 99 (empty -> .)
    WHILE_KWD       reduce using rule 99 (empty -> .)
    FROM_KWD        reduce using rule 99 (empty -> .)
    CLOSE_CURLY     reduce using rule 99 (empty -> .)

    DECISION_P                     shift and go to state 220
    empty                          shift and go to state 222

state 219

    (98) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    COMMENT         reduce using rule 98 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    ID              reduce using rule 98 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 98 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 98 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 98 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 98 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 98 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FROM_KWD        reduce using rule 98 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 98 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 220

    (89) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P . seen_if
    (91) seen_if -> .

    COMMENT         reduce using rule 91 (seen_if -> .)
    ID              reduce using rule 91 (seen_if -> .)
    RETURN_KWD      reduce using rule 91 (seen_if -> .)
    READ_KWD        reduce using rule 91 (seen_if -> .)
    WRITE_KWD       reduce using rule 91 (seen_if -> .)
    IF_KWD          reduce using rule 91 (seen_if -> .)
    WHILE_KWD       reduce using rule 91 (seen_if -> .)
    FROM_KWD        reduce using rule 91 (seen_if -> .)
    CLOSE_CURLY     reduce using rule 91 (seen_if -> .)

    seen_if                        shift and go to state 223

state 221

    (92) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (94) seen_else_kwd -> .

    OPEN_CURLY      reduce using rule 94 (seen_else_kwd -> .)

    seen_else_kwd                  shift and go to state 224

state 222

    (93) DECISION_P -> empty .

    COMMENT         reduce using rule 93 (DECISION_P -> empty .)
    ID              reduce using rule 93 (DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 93 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 93 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 93 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 93 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 93 (DECISION_P -> empty .)
    FROM_KWD        reduce using rule 93 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 93 (DECISION_P -> empty .)


state 223

    (89) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if .

    COMMENT         reduce using rule 89 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if .)
    ID              reduce using rule 89 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if .)
    RETURN_KWD      reduce using rule 89 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if .)
    READ_KWD        reduce using rule 89 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if .)
    WRITE_KWD       reduce using rule 89 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if .)
    IF_KWD          reduce using rule 89 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if .)
    WHILE_KWD       reduce using rule 89 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if .)
    FROM_KWD        reduce using rule 89 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if .)
    CLOSE_CURLY     reduce using rule 89 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if .)


state 224

    (92) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 225


state 225

    (92) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . COMMENT
    (34) STATEMENT -> . REPETITION
    (99) empty -> .
    (35) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (82) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (83) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (84) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (89) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P seen_if
    (95) REPETITION -> . CONDITIONAL_REP
    (96) REPETITION -> . UNCONDITIONAL_REP
    (97) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (98) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    COMMENT         shift and go to state 60
    CLOSE_CURLY     reduce using rule 99 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 62
    READ_KWD        shift and go to state 63
    WRITE_KWD       shift and go to state 64
    IF_KWD          shift and go to state 65
    WHILE_KWD       shift and go to state 68
    FROM_KWD        shift and go to state 69

    STATEMENT_STAR                 shift and go to state 226
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 61
    CONDITIONAL_REP                shift and go to state 66
    UNCONDITIONAL_REP              shift and go to state 67

state 226

    (92) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 227


state 227

    (92) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    COMMENT         reduce using rule 92 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    ID              reduce using rule 92 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 92 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 92 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 92 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 92 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 92 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FROM_KWD        reduce using rule 92 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 92 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 27 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 143 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 143 resolved as shift
WARNING: reduce/reduce conflict in state 137 resolved using rule (pop_not -> <empty>)
WARNING: rejected rule (seen_factor -> <empty>) in state 137
WARNING: reduce/reduce conflict in state 143 resolved using rule (seen_id -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 143
