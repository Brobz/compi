Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION
Rule 3     STRUCTURE_DEFINITION -> CLASS STRUCTURE_DEFINITION
Rule 4     STRUCTURE_DEFINITION -> FUNC_DEF STRUCTURE_DEFINITION
Rule 5     STRUCTURE_DEFINITION -> empty
Rule 6     seen_program_id -> empty
Rule 7     seen_main_kwd -> empty
Rule 8     CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
Rule 9     seen_class_id_declaration -> empty
Rule 10    seen_class_attr -> empty
Rule 11    CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 12    VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 13    VAR_LIST_STAR -> empty
Rule 14    VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON
Rule 15    SYMBOL_LIST -> ID SYMBOL_LIST_P
Rule 16    SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P
Rule 17    SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P
Rule 18    SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P
Rule 19    SYMBOL_LIST_P -> COMMA
Rule 20    SYMBOL_LIST_P -> empty
Rule 21    READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 22    READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 23    READABLE_LIST_P -> empty
Rule 24    seen_readable -> empty
Rule 25    GLOBAL_VAR -> VAR_LIST_STAR
Rule 26    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 27    FUNC_DEF_STAR -> empty
Rule 28    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 29    seen_func_id -> empty
Rule 30    seen_func_params -> empty
Rule 31    seen_func_vars -> empty
Rule 32    FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P
Rule 33    FUNC_PARAM -> empty
Rule 34    FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P
Rule 35    FUNC_PARAM_P -> empty
Rule 36    ARG_DECLARATION -> ID COLON TYPE
Rule 37    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 38    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 39    STATEMENT_STAR -> empty
Rule 40    STATEMENT -> ASSIGN SEMI_COLON
Rule 41    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 42    STATEMENT -> READ SEMI_COLON
Rule 43    STATEMENT -> PRINT SEMI_COLON
Rule 44    STATEMENT -> PRINTLN SEMI_COLON
Rule 45    STATEMENT -> OPEN SEMI_COLON
Rule 46    STATEMENT -> WRITE SEMI_COLON
Rule 47    STATEMENT -> FLOW_CONTROL
Rule 48    STATEMENT -> FUNC_RETURN
Rule 49    OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 50    seen_open_buffer -> empty
Rule 51    WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 52    seen_write_buffer -> empty
Rule 53    seen_file_path -> empty
Rule 54    seen_separator -> empty
Rule 55    FLOW_CONTROL -> DECISION
Rule 56    FLOW_CONTROL -> REPETITION
Rule 57    FOR_INCR_STATEMENT -> ASSIGN
Rule 58    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 59    FOR_INCR_STATEMENT -> READ
Rule 60    FOR_INCR_STATEMENT -> PRINT
Rule 61    FOR_INCR_STATEMENT -> PRINTLN
Rule 62    ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
Rule 63    ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
Rule 64    ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
Rule 65    ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
Rule 66    ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
Rule 67    ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
Rule 68    ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
Rule 69    seen_equals -> empty
Rule 70    seen_plus_equals -> empty
Rule 71    seen_minus_equals -> empty
Rule 72    seen_times_equals -> empty
Rule 73    seen_over_equals -> empty
Rule 74    seen_plus_plus -> empty
Rule 75    seen_minus_minus -> empty
Rule 76    EXP -> TERM seen_term EXP_P
Rule 77    EXP -> MINUS seen_unary_minus EXP pop_unary_minus
Rule 78    seen_term -> <empty>
Rule 79    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 80    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 81    EXP_P -> empty
Rule 82    seen_term_op -> <empty>
Rule 83    EXPRESSION -> EXP
Rule 84    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 85    seen_comp -> empty
Rule 86    seen_comp_op -> empty
Rule 87    COMP -> BIGGER
Rule 88    COMP -> BIGGER_EQ
Rule 89    COMP -> SMALLER
Rule 90    COMP -> SMALLER_EQ
Rule 91    COMP -> DOUBLE_EQUALS
Rule 92    COMP -> NOT_EQUALS
Rule 93    COMP -> AND
Rule 94    COMP -> OR
Rule 95    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 96    FACTOR -> NOT seen_not FACTOR pop_not
Rule 97    FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus
Rule 98    FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 99    FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 100   FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 101   FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
Rule 102   FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
Rule 103   FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
Rule 104   FACTOR -> FUNC_CALL
Rule 105   FACTOR -> CLASS_INSTANCE
Rule 106   FACTOR -> VAR seen_var_as_factor
Rule 107   FACTOR -> CONSTANT
Rule 108   seen_randint -> empty
Rule 109   seen_randint_arg -> empty
Rule 110   seen_strlen -> empty
Rule 111   seen_substr_str -> empty
Rule 112   seen_substr_idx -> empty
Rule 113   seen_substr_size -> empty
Rule 114   seen_substr -> empty
Rule 115   seen_stox_factor -> empty
Rule 116   seen_stoi_kwd -> empty
Rule 117   seen_stof_kwd -> empty
Rule 118   seen_stob_kwd -> empty
Rule 119   pop_not -> empty
Rule 120   seen_not -> empty
Rule 121   pop_unary_minus -> empty
Rule 122   seen_unary_minus -> empty
Rule 123   seen_open_parenthesis -> empty
Rule 124   seen_close_parenthesis -> empty
Rule 125   seen_var_in_assign -> empty
Rule 126   seen_var_as_factor -> empty
Rule 127   seen_var_in_io -> empty
Rule 128   seen_cte_i -> empty
Rule 129   seen_cte_f -> empty
Rule 130   seen_cte_s -> empty
Rule 131   seen_cte_false -> empty
Rule 132   seen_cte_true -> empty
Rule 133   CONSTANT -> CTE_I seen_cte_i
Rule 134   CONSTANT -> CTE_F seen_cte_f
Rule 135   CONSTANT -> CTE_S seen_cte_s
Rule 136   CONSTANT -> CTE_B
Rule 137   CTE_B -> CTE_TRUE seen_cte_true
Rule 138   CTE_B -> CTE_FALSE seen_cte_false
Rule 139   CLASS_REFERENCE -> ID DOT seen_dot_operator
Rule 140   CLASS_REFERENCE -> ARRAY seen_var_in_assign DOT seen_dot_operator
Rule 141   CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator
Rule 142   seen_this_kwd -> empty
Rule 143   VAR -> ID
Rule 144   VAR -> ARRAY
Rule 145   VAR -> CLASS_REFERENCE VAR
Rule 146   CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 147   seen_class_id_instance -> empty
Rule 148   seen_dot_operator -> empty
Rule 149   seen_this_dot_operator -> empty
Rule 150   ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 151   ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 152   ARRAY_P -> empty
Rule 153   seen_array_id -> empty
Rule 154   seen_open_bracket -> empty
Rule 155   seen_array_access -> empty
Rule 156   ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
Rule 157   ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
Rule 158   ARRAY_DECLARATION_P -> empty
Rule 159   seen_array_def_id -> empty
Rule 160   seen_array_def_dim -> empty
Rule 161   TERM -> FACTOR seen_factor TERM_P
Rule 162   TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 163   TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 164   TERM_P -> empty
Rule 165   seen_factor -> empty
Rule 166   seen_factor_op -> empty
Rule 167   FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 168   FUNC_CALL -> CLASS_REFERENCE FUNC_CALL
Rule 169   seen_func_call_id -> empty
Rule 170   ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 171   ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 172   ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 173   ARG_LIST -> empty
Rule 174   ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 175   ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 176   ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 177   ARG_LIST_P -> empty
Rule 178   seen_arg -> empty
Rule 179   FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 180   FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 181   FUNC_RETURN -> RETURN_KWD SEMI_COLON
Rule 182   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 183   PRINT -> PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 184   PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 185   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 186   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 187   PRINTABLE_P -> empty
Rule 188   seen_printable -> empty
Rule 189   entered_condition -> empty
Rule 190   left_condition -> empty
Rule 191   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
Rule 192   DECISION_P -> ELSE_KWD seen_else_kwd DECISION
Rule 193   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 194   DECISION_P -> empty
Rule 195   seen_if_kwd -> empty
Rule 196   seen_else_kwd -> empty
Rule 197   REPETITION -> CONDITIONAL_REP
Rule 198   REPETITION -> UNCONDITIONAL_REP
Rule 199   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
Rule 200   seen_while_kwd -> empty
Rule 201   seen_while_exp -> empty
Rule 202   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
Rule 203   seen_for_kwd -> empty
Rule 204   seen_for_incr_exp -> empty
Rule 205   seen_for_start_exp -> empty
Rule 206   seen_for_end_exp -> empty
Rule 207   TYPE -> TYPE_I
Rule 208   TYPE -> TYPE_F
Rule 209   TYPE -> TYPE_S
Rule 210   TYPE -> TYPE_B
Rule 211   TYPE -> ID seen_id_as_class_name
Rule 212   TYPE -> TYPE_V
Rule 213   seen_id_as_class_name -> empty
Rule 214   empty -> <empty>

Terminals, with rules where they appear

AND                  : 93
ATTR_KWD             : 11
BIGGER               : 87
BIGGER_EQ            : 88
CLASS_KWD            : 8
CLOSE_BRACKET        : 150 151 156 157
CLOSE_CURLY          : 1 8 11 28 37 191 193 199 202
CLOSE_PARENTHESIS    : 1 28 49 51 95 98 99 100 101 102 103 146 167 182 183 184 191 199 202
COLON                : 14 36
COMMA                : 17 18 19 22 34 49 49 51 51 101 101 103 174 175 176 186
CTE_F                : 134
CTE_FALSE            : 138
CTE_I                : 133 156 157
CTE_S                : 135
CTE_TRUE             : 137
DOT                  : 139 140 141
DOUBLE_EQUALS        : 91
ELSE_KWD             : 192 193
EQUALS               : 62 202
FOR_KWD              : 202
FWD_SLASH            : 163
ID                   : 1 8 15 17 28 36 139 143 146 150 156 167 211
IF_KWD               : 191
MAIN_KWD             : 1
MINUS                : 77 80 97
MINUS_EQUALS         : 64
MINUS_MINUS          : 68
NEW_KWD              : 146
NOT                  : 96
NOT_EQUALS           : 92
OPEN_BRACKET         : 150 151 156 157
OPEN_CURLY           : 1 8 11 28 37 191 193 199 202
OPEN_KWD             : 49
OPEN_PARENTHESIS     : 1 28 49 51 95 98 99 100 101 102 103 146 167 182 183 184 191 199 202
OR                   : 94
OVER_EQUALS          : 66
PLUS                 : 79
PLUS_EQUALS          : 63
PLUS_PLUS            : 67
PRINTLN_KWD          : 184
PRINT_KWD            : 183
PROGRAM_KWD          : 1
RANDINT_KWD          : 103
READ_KWD             : 182
RETURN_KWD           : 179 180 181
SEMI_COLON           : 1 14 40 41 42 43 44 45 46 179 180 181 202 202
SMALLER              : 89
SMALLER_EQ           : 90
STAR                 : 162
STOB_KWD             : 100
STOF_KWD             : 99
STOI_KWD             : 98
STRLEN_KWD           : 102
SUBSTR_KWD           : 101
THIS_KWD             : 141
TIMES_EQUALS         : 65
TYPE_B               : 210
TYPE_F               : 208
TYPE_I               : 207
TYPE_S               : 209
TYPE_V               : 212
VARS_KWD             : 37
WHILE_KWD            : 199
WRITE_KWD            : 51
error                : 

Nonterminals, with rules where they appear

ARG_DECLARATION      : 32 34
ARG_LIST             : 167
ARG_LIST_P           : 170 171 172 174 175 176
ARRAY                : 140 144
ARRAY_DECLARATION    : 16 18
ARRAY_DECLARATION_P  : 156 157
ARRAY_P              : 150 151
ASSIGN               : 40 57
CLASS                : 3
CLASS_ATTR           : 8
CLASS_INSTANCE       : 105
CLASS_REFERENCE      : 145 168
COMP                 : 84
CONDITIONAL_REP      : 197
CONSTANT             : 107
CTE_B                : 136
DECISION             : 55 192
DECISION_P           : 191
EXP                  : 77 83 84
EXPRESSION           : 49 49 51 51 62 63 64 65 66 84 95 98 99 100 101 101 101 102 103 103 150 151 171 175 179 185 186 191 199 202 202
EXP_P                : 76 79 80
FACTOR               : 96 97 161 162 163
FLOW_CONTROL         : 47
FOR_INCR_STATEMENT   : 202
FUNC_CALL            : 41 58 104 168 172 176 180
FUNC_DEF             : 4 26
FUNC_DEF_STAR        : 8 26
FUNC_PARAM           : 28
FUNC_PARAM_P         : 32 34
FUNC_RETURN          : 48
GLOBAL_VAR           : 2
OPEN                 : 45
PRINT                : 43 60
PRINTABLE            : 183 184
PRINTABLE_P          : 185 186
PRINTLN              : 44 61
PROGRAM              : 0
READ                 : 42 59
READABLE_LIST        : 182
READABLE_LIST_P      : 21 22
REPETITION           : 56
STATEMENT            : 38
STATEMENT_STAR       : 1 28 38 191 193 199 202
STRUCTURE_DEFINITION : 1 2 3 4
SYMBOL_LIST          : 14
SYMBOL_LIST_P        : 15 16 17 18
TERM                 : 76 79 80
TERM_P               : 161 162 163
TYPE                 : 14 28 36
UNCONDITIONAL_REP    : 198
VAR                  : 21 22 49 51 62 63 64 65 66 67 68 106 145 170 174 202
VARS                 : 28
VAR_LIST             : 12
VAR_LIST_STAR        : 11 12 25 37
WRITE                : 46
empty                : 5 6 7 9 10 13 20 23 24 27 29 30 31 33 35 39 50 52 53 54 69 70 71 72 73 74 75 81 85 86 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 142 147 148 149 152 153 154 155 158 159 160 164 165 166 169 173 177 178 187 188 189 190 194 195 196 200 201 203 204 205 206 213
entered_condition    : 191 199 202
left_condition       : 191 199 202
pop_not              : 96
pop_unary_minus      : 77 97
seen_arg             : 170 171 172 174 175 176
seen_array_access    : 150 151
seen_array_def_dim   : 156 157
seen_array_def_id    : 156
seen_array_id        : 150
seen_class_attr      : 8
seen_class_id_declaration : 8
seen_class_id_instance : 146
seen_close_parenthesis : 95 98 99 100 101 102 103
seen_comp            : 84
seen_comp_op         : 84
seen_cte_f           : 134
seen_cte_false       : 138
seen_cte_i           : 133 156 157
seen_cte_s           : 135
seen_cte_true        : 137
seen_dot_operator    : 139 140
seen_else_kwd        : 192 193
seen_equals          : 62
seen_factor          : 161 162 163
seen_factor_op       : 162 163
seen_file_path       : 49 51
seen_for_end_exp     : 202
seen_for_incr_exp    : 202
seen_for_kwd         : 202
seen_for_start_exp   : 202
seen_func_call_id    : 167
seen_func_id         : 28
seen_func_params     : 28
seen_func_vars       : 28
seen_id_as_class_name : 211
seen_if_kwd          : 191
seen_main_kwd        : 1
seen_minus_equals    : 64
seen_minus_minus     : 68
seen_not             : 96
seen_open_bracket    : 150 151
seen_open_buffer     : 49
seen_open_parenthesis : 95 98 99 100 101 102 103
seen_over_equals     : 66
seen_plus_equals     : 63
seen_plus_plus       : 67
seen_printable       : 185 186
seen_program_id      : 1
seen_randint         : 103
seen_randint_arg     : 103 103
seen_readable        : 21 22
seen_separator       : 49 51
seen_stob_kwd        : 100
seen_stof_kwd        : 99
seen_stoi_kwd        : 98
seen_stox_factor     : 98 99 100
seen_strlen          : 102
seen_substr          : 101
seen_substr_idx      : 101
seen_substr_size     : 101
seen_substr_str      : 101
seen_term            : 76 79 80
seen_term_op         : 79 80
seen_this_dot_operator : 141
seen_this_kwd        : 141
seen_times_equals    : 65
seen_unary_minus     : 77 97
seen_var_as_factor   : 106 170 174
seen_var_in_assign   : 21 22 62 63 64 65 66 67 68 140
seen_var_in_io       : 49 51
seen_while_exp       : 199
seen_while_kwd       : 199
seen_write_buffer    : 51

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (6) seen_program_id -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (6) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 6 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (25) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (28) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (214) empty -> .
    (12) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (13) VAR_LIST_STAR -> . empty
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V
    (14) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (15) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (16) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (156) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    CLASS_KWD       shift and go to state 14
    MAIN_KWD        reduce using rule 214 (empty -> .)
    TYPE_I          shift and go to state 17
    TYPE_F          shift and go to state 18
    TYPE_S          shift and go to state 19
    TYPE_B          shift and go to state 20
    ID              shift and go to state 7
    TYPE_V          shift and go to state 21

  ! CLASS_KWD       [ reduce using rule 214 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 214 (empty -> .) ]
  ! ID              [ reduce using rule 214 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 214 (empty -> .) ]

    STRUCTURE_DEFINITION           shift and go to state 8
    GLOBAL_VAR                     shift and go to state 9
    CLASS                          shift and go to state 10
    FUNC_DEF                       shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    TYPE                           shift and go to state 15
    VAR_LIST                       shift and go to state 16
    SYMBOL_LIST                    shift and go to state 22
    ARRAY_DECLARATION              shift and go to state 23

state 7

    (211) TYPE -> ID . seen_id_as_class_name
    (15) SYMBOL_LIST -> ID . SYMBOL_LIST_P
    (156) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (213) seen_id_as_class_name -> . empty
    (17) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (18) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA
    (20) SYMBOL_LIST_P -> . empty
    (159) seen_array_def_id -> . empty
    (214) empty -> .

    COMMA           shift and go to state 28
    ID              reduce using rule 214 (empty -> .)
    COLON           reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    seen_id_as_class_name          shift and go to state 24
    SYMBOL_LIST_P                  shift and go to state 25
    seen_array_def_id              shift and go to state 26
    empty                          shift and go to state 27

state 8

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 29


state 9

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (25) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (28) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (214) empty -> .
    (12) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (13) VAR_LIST_STAR -> . empty
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V
    (14) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (15) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (16) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (156) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    CLASS_KWD       shift and go to state 14
    MAIN_KWD        reduce using rule 214 (empty -> .)
    TYPE_I          shift and go to state 17
    TYPE_F          shift and go to state 18
    TYPE_S          shift and go to state 19
    TYPE_B          shift and go to state 20
    ID              shift and go to state 7
    TYPE_V          shift and go to state 21

  ! CLASS_KWD       [ reduce using rule 214 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 214 (empty -> .) ]
  ! ID              [ reduce using rule 214 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 214 (empty -> .) ]

    GLOBAL_VAR                     shift and go to state 9
    STRUCTURE_DEFINITION           shift and go to state 30
    CLASS                          shift and go to state 10
    FUNC_DEF                       shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    TYPE                           shift and go to state 15
    VAR_LIST                       shift and go to state 16
    SYMBOL_LIST                    shift and go to state 22
    ARRAY_DECLARATION              shift and go to state 23

state 10

    (3) STRUCTURE_DEFINITION -> CLASS . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (25) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (28) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (214) empty -> .
    (12) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (13) VAR_LIST_STAR -> . empty
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V
    (14) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (15) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (16) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (156) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    CLASS_KWD       shift and go to state 14
    MAIN_KWD        reduce using rule 214 (empty -> .)
    TYPE_I          shift and go to state 17
    TYPE_F          shift and go to state 18
    TYPE_S          shift and go to state 19
    TYPE_B          shift and go to state 20
    ID              shift and go to state 7
    TYPE_V          shift and go to state 21

  ! CLASS_KWD       [ reduce using rule 214 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 214 (empty -> .) ]
  ! ID              [ reduce using rule 214 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 214 (empty -> .) ]

    CLASS                          shift and go to state 10
    STRUCTURE_DEFINITION           shift and go to state 31
    GLOBAL_VAR                     shift and go to state 9
    FUNC_DEF                       shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    TYPE                           shift and go to state 15
    VAR_LIST                       shift and go to state 16
    SYMBOL_LIST                    shift and go to state 22
    ARRAY_DECLARATION              shift and go to state 23

state 11

    (4) STRUCTURE_DEFINITION -> FUNC_DEF . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (25) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (28) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (214) empty -> .
    (12) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (13) VAR_LIST_STAR -> . empty
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V
    (14) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (15) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (16) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (156) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    CLASS_KWD       shift and go to state 14
    MAIN_KWD        reduce using rule 214 (empty -> .)
    TYPE_I          shift and go to state 17
    TYPE_F          shift and go to state 18
    TYPE_S          shift and go to state 19
    TYPE_B          shift and go to state 20
    ID              shift and go to state 7
    TYPE_V          shift and go to state 21

  ! CLASS_KWD       [ reduce using rule 214 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 214 (empty -> .) ]
  ! ID              [ reduce using rule 214 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 214 (empty -> .) ]

    FUNC_DEF                       shift and go to state 11
    STRUCTURE_DEFINITION           shift and go to state 32
    GLOBAL_VAR                     shift and go to state 9
    CLASS                          shift and go to state 10
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    TYPE                           shift and go to state 15
    VAR_LIST                       shift and go to state 16
    SYMBOL_LIST                    shift and go to state 22
    ARRAY_DECLARATION              shift and go to state 23

state 12

    (5) STRUCTURE_DEFINITION -> empty .
    (13) VAR_LIST_STAR -> empty .

  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
    MAIN_KWD        reduce using rule 5 (STRUCTURE_DEFINITION -> empty .)
    CLASS_KWD       reduce using rule 13 (VAR_LIST_STAR -> empty .)
    TYPE_I          reduce using rule 13 (VAR_LIST_STAR -> empty .)
    TYPE_F          reduce using rule 13 (VAR_LIST_STAR -> empty .)
    TYPE_S          reduce using rule 13 (VAR_LIST_STAR -> empty .)
    TYPE_B          reduce using rule 13 (VAR_LIST_STAR -> empty .)
    ID              reduce using rule 13 (VAR_LIST_STAR -> empty .)
    TYPE_V          reduce using rule 13 (VAR_LIST_STAR -> empty .)

  ! MAIN_KWD        [ reduce using rule 13 (VAR_LIST_STAR -> empty .) ]


state 13

    (25) GLOBAL_VAR -> VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 25 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_I          reduce using rule 25 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_F          reduce using rule 25 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_S          reduce using rule 25 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_B          reduce using rule 25 (GLOBAL_VAR -> VAR_LIST_STAR .)
    ID              reduce using rule 25 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_V          reduce using rule 25 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 25 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) CLASS -> CLASS_KWD . ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 33


state 15

    (28) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 34


state 16

    (12) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (12) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (13) VAR_LIST_STAR -> . empty
    (14) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (214) empty -> .
    (15) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (16) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (156) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for ID resolved as shift
    CLASS_KWD       reduce using rule 214 (empty -> .)
    TYPE_I          reduce using rule 214 (empty -> .)
    TYPE_F          reduce using rule 214 (empty -> .)
    TYPE_S          reduce using rule 214 (empty -> .)
    TYPE_B          reduce using rule 214 (empty -> .)
    TYPE_V          reduce using rule 214 (empty -> .)
    MAIN_KWD        reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 37

  ! ID              [ reduce using rule 214 (empty -> .) ]

    VAR_LIST                       shift and go to state 16
    VAR_LIST_STAR                  shift and go to state 35
    empty                          shift and go to state 36
    SYMBOL_LIST                    shift and go to state 22
    ARRAY_DECLARATION              shift and go to state 23

state 17

    (207) TYPE -> TYPE_I .

    ID              reduce using rule 207 (TYPE -> TYPE_I .)
    SEMI_COLON      reduce using rule 207 (TYPE -> TYPE_I .)
    COMMA           reduce using rule 207 (TYPE -> TYPE_I .)
    CLOSE_PARENTHESIS reduce using rule 207 (TYPE -> TYPE_I .)


state 18

    (208) TYPE -> TYPE_F .

    ID              reduce using rule 208 (TYPE -> TYPE_F .)
    SEMI_COLON      reduce using rule 208 (TYPE -> TYPE_F .)
    COMMA           reduce using rule 208 (TYPE -> TYPE_F .)
    CLOSE_PARENTHESIS reduce using rule 208 (TYPE -> TYPE_F .)


state 19

    (209) TYPE -> TYPE_S .

    ID              reduce using rule 209 (TYPE -> TYPE_S .)
    SEMI_COLON      reduce using rule 209 (TYPE -> TYPE_S .)
    COMMA           reduce using rule 209 (TYPE -> TYPE_S .)
    CLOSE_PARENTHESIS reduce using rule 209 (TYPE -> TYPE_S .)


state 20

    (210) TYPE -> TYPE_B .

    ID              reduce using rule 210 (TYPE -> TYPE_B .)
    SEMI_COLON      reduce using rule 210 (TYPE -> TYPE_B .)
    COMMA           reduce using rule 210 (TYPE -> TYPE_B .)
    CLOSE_PARENTHESIS reduce using rule 210 (TYPE -> TYPE_B .)


state 21

    (212) TYPE -> TYPE_V .

    ID              reduce using rule 212 (TYPE -> TYPE_V .)
    SEMI_COLON      reduce using rule 212 (TYPE -> TYPE_V .)
    COMMA           reduce using rule 212 (TYPE -> TYPE_V .)
    CLOSE_PARENTHESIS reduce using rule 212 (TYPE -> TYPE_V .)


state 22

    (14) VAR_LIST -> SYMBOL_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 38


state 23

    (16) SYMBOL_LIST -> ARRAY_DECLARATION . SYMBOL_LIST_P
    (17) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (18) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA
    (20) SYMBOL_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 28
    COLON           reduce using rule 214 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 39
    empty                          shift and go to state 40

state 24

    (211) TYPE -> ID seen_id_as_class_name .

    ID              reduce using rule 211 (TYPE -> ID seen_id_as_class_name .)
    SEMI_COLON      reduce using rule 211 (TYPE -> ID seen_id_as_class_name .)
    COMMA           reduce using rule 211 (TYPE -> ID seen_id_as_class_name .)
    CLOSE_PARENTHESIS reduce using rule 211 (TYPE -> ID seen_id_as_class_name .)


state 25

    (15) SYMBOL_LIST -> ID SYMBOL_LIST_P .

    COLON           reduce using rule 15 (SYMBOL_LIST -> ID SYMBOL_LIST_P .)


state 26

    (156) ARRAY_DECLARATION -> ID seen_array_def_id . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    OPEN_BRACKET    shift and go to state 41


state 27

    (213) seen_id_as_class_name -> empty .
    (20) SYMBOL_LIST_P -> empty .
    (159) seen_array_def_id -> empty .

    ID              reduce using rule 213 (seen_id_as_class_name -> empty .)
    COLON           reduce using rule 20 (SYMBOL_LIST_P -> empty .)
    OPEN_BRACKET    reduce using rule 159 (seen_array_def_id -> empty .)


state 28

    (17) SYMBOL_LIST_P -> COMMA . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST_P -> COMMA . ARRAY_DECLARATION SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> COMMA .
    (156) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    ID              shift and go to state 42
    COLON           reduce using rule 19 (SYMBOL_LIST_P -> COMMA .)

    ARRAY_DECLARATION              shift and go to state 43

state 29

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 44


state 30

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 2 (STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .)


state 31

    (3) STRUCTURE_DEFINITION -> CLASS STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 3 (STRUCTURE_DEFINITION -> CLASS STRUCTURE_DEFINITION .)


state 32

    (4) STRUCTURE_DEFINITION -> FUNC_DEF STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 4 (STRUCTURE_DEFINITION -> FUNC_DEF STRUCTURE_DEFINITION .)


state 33

    (8) CLASS -> CLASS_KWD ID . seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (9) seen_class_id_declaration -> . empty
    (214) empty -> .

    OPEN_CURLY      reduce using rule 214 (empty -> .)

    seen_class_id_declaration      shift and go to state 45
    empty                          shift and go to state 46

state 34

    (28) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (29) seen_func_id -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_func_id                   shift and go to state 47
    empty                          shift and go to state 48

state 35

    (12) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 12 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_I          reduce using rule 12 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_F          reduce using rule 12 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_S          reduce using rule 12 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_B          reduce using rule 12 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    ID              reduce using rule 12 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_V          reduce using rule 12 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 12 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 12 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 36

    (13) VAR_LIST_STAR -> empty .

    CLASS_KWD       reduce using rule 13 (VAR_LIST_STAR -> empty .)
    TYPE_I          reduce using rule 13 (VAR_LIST_STAR -> empty .)
    TYPE_F          reduce using rule 13 (VAR_LIST_STAR -> empty .)
    TYPE_S          reduce using rule 13 (VAR_LIST_STAR -> empty .)
    TYPE_B          reduce using rule 13 (VAR_LIST_STAR -> empty .)
    ID              reduce using rule 13 (VAR_LIST_STAR -> empty .)
    TYPE_V          reduce using rule 13 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 13 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 13 (VAR_LIST_STAR -> empty .)


state 37

    (15) SYMBOL_LIST -> ID . SYMBOL_LIST_P
    (156) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (17) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (18) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA
    (20) SYMBOL_LIST_P -> . empty
    (159) seen_array_def_id -> . empty
    (214) empty -> .

    COMMA           shift and go to state 28
    COLON           reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 25
    seen_array_def_id              shift and go to state 26
    empty                          shift and go to state 49

state 38

    (14) VAR_LIST -> SYMBOL_LIST COLON . TYPE SEMI_COLON
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 17
    TYPE_F          shift and go to state 18
    TYPE_S          shift and go to state 19
    TYPE_B          shift and go to state 20
    ID              shift and go to state 51
    TYPE_V          shift and go to state 21

    TYPE                           shift and go to state 50

state 39

    (16) SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P .

    COLON           reduce using rule 16 (SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P .)


state 40

    (20) SYMBOL_LIST_P -> empty .

    COLON           reduce using rule 20 (SYMBOL_LIST_P -> empty .)


state 41

    (156) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CTE_I           shift and go to state 52


state 42

    (17) SYMBOL_LIST_P -> COMMA ID . SYMBOL_LIST_P
    (156) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (17) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (18) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA
    (20) SYMBOL_LIST_P -> . empty
    (159) seen_array_def_id -> . empty
    (214) empty -> .

    COMMA           shift and go to state 28
    COLON           reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 53
    seen_array_def_id              shift and go to state 26
    empty                          shift and go to state 49

state 43

    (18) SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION . SYMBOL_LIST_P
    (17) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (18) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA
    (20) SYMBOL_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 28
    COLON           reduce using rule 214 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 54
    empty                          shift and go to state 40

state 44

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 55


state 45

    (8) CLASS -> CLASS_KWD ID seen_class_id_declaration . OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 56


state 46

    (9) seen_class_id_declaration -> empty .

    OPEN_CURLY      reduce using rule 9 (seen_class_id_declaration -> empty .)


state 47

    (28) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 57


state 48

    (29) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 29 (seen_func_id -> empty .)


state 49

    (20) SYMBOL_LIST_P -> empty .
    (159) seen_array_def_id -> empty .

    COLON           reduce using rule 20 (SYMBOL_LIST_P -> empty .)
    OPEN_BRACKET    reduce using rule 159 (seen_array_def_id -> empty .)


state 50

    (14) VAR_LIST -> SYMBOL_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 58


state 51

    (211) TYPE -> ID . seen_id_as_class_name
    (213) seen_id_as_class_name -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_id_as_class_name          shift and go to state 24
    empty                          shift and go to state 59

state 52

    (156) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (128) seen_cte_i -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_i                     shift and go to state 60
    empty                          shift and go to state 61

state 53

    (17) SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .

    COLON           reduce using rule 17 (SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .)


state 54

    (18) SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P .

    COLON           reduce using rule 18 (SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P .)


state 55

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 62


state 56

    (8) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY . CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (11) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 64

    CLASS_ATTR                     shift and go to state 63

state 57

    (28) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (32) FUNC_PARAM -> . ARG_DECLARATION FUNC_PARAM_P
    (33) FUNC_PARAM -> . empty
    (36) ARG_DECLARATION -> . ID COLON TYPE
    (214) empty -> .

    ID              shift and go to state 65
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    FUNC_PARAM                     shift and go to state 66
    ARG_DECLARATION                shift and go to state 67
    empty                          shift and go to state 68

state 58

    (14) VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 14 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLASS_KWD       reduce using rule 14 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_I          reduce using rule 14 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_F          reduce using rule 14 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_S          reduce using rule 14 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_B          reduce using rule 14 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_V          reduce using rule 14 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 14 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 14 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)


state 59

    (213) seen_id_as_class_name -> empty .

    SEMI_COLON      reduce using rule 213 (seen_id_as_class_name -> empty .)
    ID              reduce using rule 213 (seen_id_as_class_name -> empty .)
    COMMA           reduce using rule 213 (seen_id_as_class_name -> empty .)
    CLOSE_PARENTHESIS reduce using rule 213 (seen_id_as_class_name -> empty .)


state 60

    (156) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (160) seen_array_def_dim -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_array_def_dim             shift and go to state 69
    empty                          shift and go to state 70

state 61

    (128) seen_cte_i -> empty .

    CLOSE_BRACKET   reduce using rule 128 (seen_cte_i -> empty .)
    STAR            reduce using rule 128 (seen_cte_i -> empty .)
    FWD_SLASH       reduce using rule 128 (seen_cte_i -> empty .)
    PLUS            reduce using rule 128 (seen_cte_i -> empty .)
    MINUS           reduce using rule 128 (seen_cte_i -> empty .)
    BIGGER          reduce using rule 128 (seen_cte_i -> empty .)
    BIGGER_EQ       reduce using rule 128 (seen_cte_i -> empty .)
    SMALLER         reduce using rule 128 (seen_cte_i -> empty .)
    SMALLER_EQ      reduce using rule 128 (seen_cte_i -> empty .)
    DOUBLE_EQUALS   reduce using rule 128 (seen_cte_i -> empty .)
    NOT_EQUALS      reduce using rule 128 (seen_cte_i -> empty .)
    AND             reduce using rule 128 (seen_cte_i -> empty .)
    OR              reduce using rule 128 (seen_cte_i -> empty .)
    SEMI_COLON      reduce using rule 128 (seen_cte_i -> empty .)
    COMMA           reduce using rule 128 (seen_cte_i -> empty .)
    CLOSE_PARENTHESIS reduce using rule 128 (seen_cte_i -> empty .)


state 62

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (7) seen_main_kwd -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    READ_KWD        reduce using rule 214 (empty -> .)
    PRINT_KWD       reduce using rule 214 (empty -> .)
    PRINTLN_KWD     reduce using rule 214 (empty -> .)
    OPEN_KWD        reduce using rule 214 (empty -> .)
    WRITE_KWD       reduce using rule 214 (empty -> .)
    RETURN_KWD      reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    IF_KWD          reduce using rule 214 (empty -> .)
    WHILE_KWD       reduce using rule 214 (empty -> .)
    FOR_KWD         reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    seen_main_kwd                  shift and go to state 71
    empty                          shift and go to state 72

state 63

    (8) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR . seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (10) seen_class_attr -> . empty
    (214) empty -> .

    TYPE_I          reduce using rule 214 (empty -> .)
    TYPE_F          reduce using rule 214 (empty -> .)
    TYPE_S          reduce using rule 214 (empty -> .)
    TYPE_B          reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    TYPE_V          reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    seen_class_attr                shift and go to state 73
    empty                          shift and go to state 74

state 64

    (11) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 75


state 65

    (36) ARG_DECLARATION -> ID . COLON TYPE

    COLON           shift and go to state 76


state 66

    (28) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 77


state 67

    (32) FUNC_PARAM -> ARG_DECLARATION . FUNC_PARAM_P
    (34) FUNC_PARAM_P -> . COMMA ARG_DECLARATION FUNC_PARAM_P
    (35) FUNC_PARAM_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 79
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 78
    empty                          shift and go to state 80

state 68

    (33) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 33 (FUNC_PARAM -> empty .)


state 69

    (156) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_BRACKET   shift and go to state 81


state 70

    (160) seen_array_def_dim -> empty .

    CLOSE_BRACKET   reduce using rule 160 (seen_array_def_dim -> empty .)


state 71

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . PRINT SEMI_COLON
    (44) STATEMENT -> . PRINTLN SEMI_COLON
    (45) STATEMENT -> . OPEN SEMI_COLON
    (46) STATEMENT -> . WRITE SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (62) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (63) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (64) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (182) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (183) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (184) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (51) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) FLOW_CONTROL -> . DECISION
    (56) FLOW_CONTROL -> . REPETITION
    (179) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (180) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (181) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 82
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    WRITE_KWD       shift and go to state 101
    RETURN_KWD      shift and go to state 104
    THIS_KWD        shift and go to state 106
    IF_KWD          shift and go to state 107
    WHILE_KWD       shift and go to state 110
    FOR_KWD         shift and go to state 111

    STATEMENT_STAR                 shift and go to state 83
    STATEMENT                      shift and go to state 84
    empty                          shift and go to state 85
    ASSIGN                         shift and go to state 86
    FUNC_CALL                      shift and go to state 87
    READ                           shift and go to state 88
    PRINT                          shift and go to state 89
    PRINTLN                        shift and go to state 90
    OPEN                           shift and go to state 91
    WRITE                          shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 102
    REPETITION                     shift and go to state 103
    ARRAY                          shift and go to state 105
    CONDITIONAL_REP                shift and go to state 108
    UNCONDITIONAL_REP              shift and go to state 109

state 72

    (7) seen_main_kwd -> empty .

    ID              reduce using rule 7 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    PRINT_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    PRINTLN_KWD     reduce using rule 7 (seen_main_kwd -> empty .)
    OPEN_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    WRITE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    RETURN_KWD      reduce using rule 7 (seen_main_kwd -> empty .)
    THIS_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 7 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 7 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 7 (seen_main_kwd -> empty .)


state 73

    (8) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr . FUNC_DEF_STAR CLOSE_CURLY
    (26) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (27) FUNC_DEF_STAR -> . empty
    (28) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (214) empty -> .
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    TYPE_I          shift and go to state 17
    TYPE_F          shift and go to state 18
    TYPE_S          shift and go to state 19
    TYPE_B          shift and go to state 20
    ID              shift and go to state 51
    TYPE_V          shift and go to state 21

    FUNC_DEF_STAR                  shift and go to state 112
    FUNC_DEF                       shift and go to state 113
    empty                          shift and go to state 114
    TYPE                           shift and go to state 15

state 74

    (10) seen_class_attr -> empty .

    TYPE_I          reduce using rule 10 (seen_class_attr -> empty .)
    TYPE_F          reduce using rule 10 (seen_class_attr -> empty .)
    TYPE_S          reduce using rule 10 (seen_class_attr -> empty .)
    TYPE_B          reduce using rule 10 (seen_class_attr -> empty .)
    ID              reduce using rule 10 (seen_class_attr -> empty .)
    TYPE_V          reduce using rule 10 (seen_class_attr -> empty .)
    CLOSE_CURLY     reduce using rule 10 (seen_class_attr -> empty .)


state 75

    (11) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (12) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (13) VAR_LIST_STAR -> . empty
    (14) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (214) empty -> .
    (15) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (16) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (156) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 37

    VAR_LIST_STAR                  shift and go to state 115
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 36
    SYMBOL_LIST                    shift and go to state 22
    ARRAY_DECLARATION              shift and go to state 23

state 76

    (36) ARG_DECLARATION -> ID COLON . TYPE
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 17
    TYPE_F          shift and go to state 18
    TYPE_S          shift and go to state 19
    TYPE_B          shift and go to state 20
    ID              shift and go to state 51
    TYPE_V          shift and go to state 21

    TYPE                           shift and go to state 116

state 77

    (28) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (30) seen_func_params -> . empty
    (214) empty -> .

    VARS_KWD        reduce using rule 214 (empty -> .)

    seen_func_params               shift and go to state 117
    empty                          shift and go to state 118

state 78

    (32) FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 32 (FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P .)


state 79

    (34) FUNC_PARAM_P -> COMMA . ARG_DECLARATION FUNC_PARAM_P
    (36) ARG_DECLARATION -> . ID COLON TYPE

    ID              shift and go to state 65

    ARG_DECLARATION                shift and go to state 119

state 80

    (35) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 35 (FUNC_PARAM_P -> empty .)


state 81

    (156) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DECLARATION_P
    (157) ARRAY_DECLARATION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (158) ARRAY_DECLARATION_P -> . empty
    (214) empty -> .

    OPEN_BRACKET    shift and go to state 120
    COMMA           reduce using rule 214 (empty -> .)
    COLON           reduce using rule 214 (empty -> .)

    ARRAY_DECLARATION_P            shift and go to state 121
    empty                          shift and go to state 122

state 82

    (167) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (143) VAR -> ID .
    (139) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (150) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (169) seen_func_call_id -> . empty
    (153) seen_array_id -> . empty
    (214) empty -> .

    EQUALS          reduce using rule 143 (VAR -> ID .)
    PLUS_EQUALS     reduce using rule 143 (VAR -> ID .)
    MINUS_EQUALS    reduce using rule 143 (VAR -> ID .)
    TIMES_EQUALS    reduce using rule 143 (VAR -> ID .)
    OVER_EQUALS     reduce using rule 143 (VAR -> ID .)
    PLUS_PLUS       reduce using rule 143 (VAR -> ID .)
    MINUS_MINUS     reduce using rule 143 (VAR -> ID .)
    STAR            reduce using rule 143 (VAR -> ID .)
    FWD_SLASH       reduce using rule 143 (VAR -> ID .)
    PLUS            reduce using rule 143 (VAR -> ID .)
    MINUS           reduce using rule 143 (VAR -> ID .)
    BIGGER          reduce using rule 143 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 143 (VAR -> ID .)
    SMALLER         reduce using rule 143 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 143 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 143 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 143 (VAR -> ID .)
    AND             reduce using rule 143 (VAR -> ID .)
    OR              reduce using rule 143 (VAR -> ID .)
    SEMI_COLON      reduce using rule 143 (VAR -> ID .)
    COMMA           reduce using rule 143 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 143 (VAR -> ID .)
    CLOSE_BRACKET   reduce using rule 143 (VAR -> ID .)
    DOT             shift and go to state 124
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    seen_func_call_id              shift and go to state 123
    seen_array_id                  shift and go to state 125
    empty                          shift and go to state 126

state 83

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 127


state 84

    (38) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . PRINT SEMI_COLON
    (44) STATEMENT -> . PRINTLN SEMI_COLON
    (45) STATEMENT -> . OPEN SEMI_COLON
    (46) STATEMENT -> . WRITE SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (62) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (63) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (64) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (182) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (183) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (184) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (51) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) FLOW_CONTROL -> . DECISION
    (56) FLOW_CONTROL -> . REPETITION
    (179) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (180) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (181) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 82
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    WRITE_KWD       shift and go to state 101
    RETURN_KWD      shift and go to state 104
    THIS_KWD        shift and go to state 106
    IF_KWD          shift and go to state 107
    WHILE_KWD       shift and go to state 110
    FOR_KWD         shift and go to state 111

    STATEMENT                      shift and go to state 84
    STATEMENT_STAR                 shift and go to state 128
    empty                          shift and go to state 85
    ASSIGN                         shift and go to state 86
    FUNC_CALL                      shift and go to state 87
    READ                           shift and go to state 88
    PRINT                          shift and go to state 89
    PRINTLN                        shift and go to state 90
    OPEN                           shift and go to state 91
    WRITE                          shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 102
    REPETITION                     shift and go to state 103
    ARRAY                          shift and go to state 105
    CONDITIONAL_REP                shift and go to state 108
    UNCONDITIONAL_REP              shift and go to state 109

state 85

    (39) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 39 (STATEMENT_STAR -> empty .)


state 86

    (40) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 129


state 87

    (41) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 130


state 88

    (42) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 131


state 89

    (43) STATEMENT -> PRINT . SEMI_COLON

    SEMI_COLON      shift and go to state 132


state 90

    (44) STATEMENT -> PRINTLN . SEMI_COLON

    SEMI_COLON      shift and go to state 133


state 91

    (45) STATEMENT -> OPEN . SEMI_COLON

    SEMI_COLON      shift and go to state 134


state 92

    (46) STATEMENT -> WRITE . SEMI_COLON

    SEMI_COLON      shift and go to state 135


state 93

    (47) STATEMENT -> FLOW_CONTROL .

    ID              reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    READ_KWD        reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    PRINT_KWD       reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    PRINTLN_KWD     reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    OPEN_KWD        reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    WRITE_KWD       reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    RETURN_KWD      reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    THIS_KWD        reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    IF_KWD          reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    WHILE_KWD       reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    FOR_KWD         reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    CLOSE_CURLY     reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)


state 94

    (48) STATEMENT -> FUNC_RETURN .

    ID              reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    READ_KWD        reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    PRINT_KWD       reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    PRINTLN_KWD     reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    OPEN_KWD        reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    WRITE_KWD       reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    RETURN_KWD      reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    THIS_KWD        reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    IF_KWD          reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    WHILE_KWD       reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    FOR_KWD         reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    CLOSE_CURLY     reduce using rule 48 (STATEMENT -> FUNC_RETURN .)


state 95

    (62) ASSIGN -> VAR . seen_var_in_assign EQUALS seen_equals EXPRESSION
    (63) ASSIGN -> VAR . seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (64) ASSIGN -> VAR . seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (65) ASSIGN -> VAR . seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (66) ASSIGN -> VAR . seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (67) ASSIGN -> VAR . seen_var_in_assign PLUS_PLUS seen_plus_plus
    (68) ASSIGN -> VAR . seen_var_in_assign MINUS_MINUS seen_minus_minus
    (125) seen_var_in_assign -> . empty
    (214) empty -> .

    EQUALS          reduce using rule 214 (empty -> .)
    PLUS_EQUALS     reduce using rule 214 (empty -> .)
    MINUS_EQUALS    reduce using rule 214 (empty -> .)
    TIMES_EQUALS    reduce using rule 214 (empty -> .)
    OVER_EQUALS     reduce using rule 214 (empty -> .)
    PLUS_PLUS       reduce using rule 214 (empty -> .)
    MINUS_MINUS     reduce using rule 214 (empty -> .)

    seen_var_in_assign             shift and go to state 136
    empty                          shift and go to state 137

state 96

    (168) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (145) VAR -> CLASS_REFERENCE . VAR
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 82
    THIS_KWD        shift and go to state 106

    CLASS_REFERENCE                shift and go to state 96
    FUNC_CALL                      shift and go to state 138
    VAR                            shift and go to state 139
    ARRAY                          shift and go to state 105

state 97

    (182) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 140


state 98

    (183) PRINT -> PRINT_KWD . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 141


state 99

    (184) PRINTLN -> PRINTLN_KWD . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 142


state 100

    (49) OPEN -> OPEN_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 143


state 101

    (51) WRITE -> WRITE_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 144


state 102

    (55) FLOW_CONTROL -> DECISION .

    ID              reduce using rule 55 (FLOW_CONTROL -> DECISION .)
    READ_KWD        reduce using rule 55 (FLOW_CONTROL -> DECISION .)
    PRINT_KWD       reduce using rule 55 (FLOW_CONTROL -> DECISION .)
    PRINTLN_KWD     reduce using rule 55 (FLOW_CONTROL -> DECISION .)
    OPEN_KWD        reduce using rule 55 (FLOW_CONTROL -> DECISION .)
    WRITE_KWD       reduce using rule 55 (FLOW_CONTROL -> DECISION .)
    RETURN_KWD      reduce using rule 55 (FLOW_CONTROL -> DECISION .)
    THIS_KWD        reduce using rule 55 (FLOW_CONTROL -> DECISION .)
    IF_KWD          reduce using rule 55 (FLOW_CONTROL -> DECISION .)
    WHILE_KWD       reduce using rule 55 (FLOW_CONTROL -> DECISION .)
    FOR_KWD         reduce using rule 55 (FLOW_CONTROL -> DECISION .)
    CLOSE_CURLY     reduce using rule 55 (FLOW_CONTROL -> DECISION .)


state 103

    (56) FLOW_CONTROL -> REPETITION .

    ID              reduce using rule 56 (FLOW_CONTROL -> REPETITION .)
    READ_KWD        reduce using rule 56 (FLOW_CONTROL -> REPETITION .)
    PRINT_KWD       reduce using rule 56 (FLOW_CONTROL -> REPETITION .)
    PRINTLN_KWD     reduce using rule 56 (FLOW_CONTROL -> REPETITION .)
    OPEN_KWD        reduce using rule 56 (FLOW_CONTROL -> REPETITION .)
    WRITE_KWD       reduce using rule 56 (FLOW_CONTROL -> REPETITION .)
    RETURN_KWD      reduce using rule 56 (FLOW_CONTROL -> REPETITION .)
    THIS_KWD        reduce using rule 56 (FLOW_CONTROL -> REPETITION .)
    IF_KWD          reduce using rule 56 (FLOW_CONTROL -> REPETITION .)
    WHILE_KWD       reduce using rule 56 (FLOW_CONTROL -> REPETITION .)
    FOR_KWD         reduce using rule 56 (FLOW_CONTROL -> REPETITION .)
    CLOSE_CURLY     reduce using rule 56 (FLOW_CONTROL -> REPETITION .)


state 104

    (179) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (180) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (181) FUNC_RETURN -> RETURN_KWD . SEMI_COLON
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (161) TERM -> . FACTOR seen_factor TERM_P
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    SEMI_COLON      shift and go to state 146
    ID              shift and go to state 149
    MINUS           shift and go to state 152
    THIS_KWD        shift and go to state 106
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 145
    FUNC_CALL                      shift and go to state 147
    EXP                            shift and go to state 148
    CLASS_REFERENCE                shift and go to state 96
    TERM                           shift and go to state 151
    ARRAY                          shift and go to state 153
    FACTOR                         shift and go to state 154
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CTE_B                          shift and go to state 169

state 105

    (144) VAR -> ARRAY .
    (140) CLASS_REFERENCE -> ARRAY . seen_var_in_assign DOT seen_dot_operator
    (125) seen_var_in_assign -> . empty
    (214) empty -> .

    EQUALS          reduce using rule 144 (VAR -> ARRAY .)
    PLUS_EQUALS     reduce using rule 144 (VAR -> ARRAY .)
    MINUS_EQUALS    reduce using rule 144 (VAR -> ARRAY .)
    TIMES_EQUALS    reduce using rule 144 (VAR -> ARRAY .)
    OVER_EQUALS     reduce using rule 144 (VAR -> ARRAY .)
    PLUS_PLUS       reduce using rule 144 (VAR -> ARRAY .)
    MINUS_MINUS     reduce using rule 144 (VAR -> ARRAY .)
    STAR            reduce using rule 144 (VAR -> ARRAY .)
    FWD_SLASH       reduce using rule 144 (VAR -> ARRAY .)
    PLUS            reduce using rule 144 (VAR -> ARRAY .)
    MINUS           reduce using rule 144 (VAR -> ARRAY .)
    BIGGER          reduce using rule 144 (VAR -> ARRAY .)
    BIGGER_EQ       reduce using rule 144 (VAR -> ARRAY .)
    SMALLER         reduce using rule 144 (VAR -> ARRAY .)
    SMALLER_EQ      reduce using rule 144 (VAR -> ARRAY .)
    DOUBLE_EQUALS   reduce using rule 144 (VAR -> ARRAY .)
    NOT_EQUALS      reduce using rule 144 (VAR -> ARRAY .)
    AND             reduce using rule 144 (VAR -> ARRAY .)
    OR              reduce using rule 144 (VAR -> ARRAY .)
    SEMI_COLON      reduce using rule 144 (VAR -> ARRAY .)
    COMMA           reduce using rule 144 (VAR -> ARRAY .)
    CLOSE_PARENTHESIS reduce using rule 144 (VAR -> ARRAY .)
    CLOSE_BRACKET   reduce using rule 144 (VAR -> ARRAY .)
    DOT             reduce using rule 214 (empty -> .)

    seen_var_in_assign             shift and go to state 172
    empty                          shift and go to state 137

state 106

    (141) CLASS_REFERENCE -> THIS_KWD . seen_this_kwd DOT seen_this_dot_operator
    (142) seen_this_kwd -> . empty
    (214) empty -> .

    DOT             reduce using rule 214 (empty -> .)

    seen_this_kwd                  shift and go to state 173
    empty                          shift and go to state 174

state 107

    (191) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 175


state 108

    (197) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    THIS_KWD        reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)


state 109

    (198) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    THIS_KWD        reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)


state 110

    (199) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (200) seen_while_kwd -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_while_kwd                 shift and go to state 176
    empty                          shift and go to state 177

state 111

    (202) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    OPEN_PARENTHESIS shift and go to state 178


state 112

    (8) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 179


state 113

    (26) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (26) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (27) FUNC_DEF_STAR -> . empty
    (28) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (214) empty -> .
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    TYPE_I          shift and go to state 17
    TYPE_F          shift and go to state 18
    TYPE_S          shift and go to state 19
    TYPE_B          shift and go to state 20
    ID              shift and go to state 51
    TYPE_V          shift and go to state 21

    FUNC_DEF                       shift and go to state 113
    FUNC_DEF_STAR                  shift and go to state 180
    empty                          shift and go to state 114
    TYPE                           shift and go to state 15

state 114

    (27) FUNC_DEF_STAR -> empty .

    CLOSE_CURLY     reduce using rule 27 (FUNC_DEF_STAR -> empty .)


state 115

    (11) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 181


state 116

    (36) ARG_DECLARATION -> ID COLON TYPE .

    COMMA           reduce using rule 36 (ARG_DECLARATION -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 36 (ARG_DECLARATION -> ID COLON TYPE .)


state 117

    (28) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (37) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 183

    VARS                           shift and go to state 182

state 118

    (30) seen_func_params -> empty .

    VARS_KWD        reduce using rule 30 (seen_func_params -> empty .)


state 119

    (34) FUNC_PARAM_P -> COMMA ARG_DECLARATION . FUNC_PARAM_P
    (34) FUNC_PARAM_P -> . COMMA ARG_DECLARATION FUNC_PARAM_P
    (35) FUNC_PARAM_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 79
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 184
    empty                          shift and go to state 80

state 120

    (157) ARRAY_DECLARATION_P -> OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CTE_I           shift and go to state 185


state 121

    (156) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .

    COMMA           reduce using rule 156 (ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)
    COLON           reduce using rule 156 (ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)


state 122

    (158) ARRAY_DECLARATION_P -> empty .

    COMMA           reduce using rule 158 (ARRAY_DECLARATION_P -> empty .)
    COLON           reduce using rule 158 (ARRAY_DECLARATION_P -> empty .)


state 123

    (167) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 186


state 124

    (139) CLASS_REFERENCE -> ID DOT . seen_dot_operator
    (148) seen_dot_operator -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)

    seen_dot_operator              shift and go to state 187
    empty                          shift and go to state 188

state 125

    (150) ARRAY -> ID seen_array_id . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_BRACKET    shift and go to state 189


state 126

    (169) seen_func_call_id -> empty .
    (153) seen_array_id -> empty .

    OPEN_PARENTHESIS reduce using rule 169 (seen_func_call_id -> empty .)
    OPEN_BRACKET    reduce using rule 153 (seen_array_id -> empty .)


state 127

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 128

    (38) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 38 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 129

    (40) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINT_KWD       reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    OPEN_KWD        reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    WRITE_KWD       reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    RETURN_KWD      reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    THIS_KWD        reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)


state 130

    (41) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 131

    (42) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    PRINT_KWD       reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    OPEN_KWD        reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    WRITE_KWD       reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    RETURN_KWD      reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    THIS_KWD        reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)


state 132

    (43) STATEMENT -> PRINT SEMI_COLON .

    ID              reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)
    READ_KWD        reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)
    PRINT_KWD       reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)
    OPEN_KWD        reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)
    WRITE_KWD       reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)
    RETURN_KWD      reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)
    THIS_KWD        reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)
    IF_KWD          reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)
    WHILE_KWD       reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)
    FOR_KWD         reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 43 (STATEMENT -> PRINT SEMI_COLON .)


state 133

    (44) STATEMENT -> PRINTLN SEMI_COLON .

    ID              reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)
    READ_KWD        reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINT_KWD       reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)
    OPEN_KWD        reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)
    WRITE_KWD       reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)
    RETURN_KWD      reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)
    THIS_KWD        reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)
    IF_KWD          reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)
    WHILE_KWD       reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)
    FOR_KWD         reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 44 (STATEMENT -> PRINTLN SEMI_COLON .)


state 134

    (45) STATEMENT -> OPEN SEMI_COLON .

    ID              reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)
    READ_KWD        reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)
    PRINT_KWD       reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)
    OPEN_KWD        reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)
    WRITE_KWD       reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)
    RETURN_KWD      reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)
    THIS_KWD        reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)
    IF_KWD          reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)
    WHILE_KWD       reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)
    FOR_KWD         reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 45 (STATEMENT -> OPEN SEMI_COLON .)


state 135

    (46) STATEMENT -> WRITE SEMI_COLON .

    ID              reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)
    READ_KWD        reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)
    PRINT_KWD       reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)
    OPEN_KWD        reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)
    WRITE_KWD       reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)
    RETURN_KWD      reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)
    THIS_KWD        reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)
    IF_KWD          reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)
    WHILE_KWD       reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)
    FOR_KWD         reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 46 (STATEMENT -> WRITE SEMI_COLON .)


state 136

    (62) ASSIGN -> VAR seen_var_in_assign . EQUALS seen_equals EXPRESSION
    (63) ASSIGN -> VAR seen_var_in_assign . PLUS_EQUALS seen_plus_equals EXPRESSION
    (64) ASSIGN -> VAR seen_var_in_assign . MINUS_EQUALS seen_minus_equals EXPRESSION
    (65) ASSIGN -> VAR seen_var_in_assign . TIMES_EQUALS seen_times_equals EXPRESSION
    (66) ASSIGN -> VAR seen_var_in_assign . OVER_EQUALS seen_over_equals EXPRESSION
    (67) ASSIGN -> VAR seen_var_in_assign . PLUS_PLUS seen_plus_plus
    (68) ASSIGN -> VAR seen_var_in_assign . MINUS_MINUS seen_minus_minus

    EQUALS          shift and go to state 190
    PLUS_EQUALS     shift and go to state 191
    MINUS_EQUALS    shift and go to state 192
    TIMES_EQUALS    shift and go to state 193
    OVER_EQUALS     shift and go to state 194
    PLUS_PLUS       shift and go to state 195
    MINUS_MINUS     shift and go to state 196


state 137

    (125) seen_var_in_assign -> empty .

    EQUALS          reduce using rule 125 (seen_var_in_assign -> empty .)
    PLUS_EQUALS     reduce using rule 125 (seen_var_in_assign -> empty .)
    MINUS_EQUALS    reduce using rule 125 (seen_var_in_assign -> empty .)
    TIMES_EQUALS    reduce using rule 125 (seen_var_in_assign -> empty .)
    OVER_EQUALS     reduce using rule 125 (seen_var_in_assign -> empty .)
    PLUS_PLUS       reduce using rule 125 (seen_var_in_assign -> empty .)
    MINUS_MINUS     reduce using rule 125 (seen_var_in_assign -> empty .)
    DOT             reduce using rule 125 (seen_var_in_assign -> empty .)
    COMMA           reduce using rule 125 (seen_var_in_assign -> empty .)
    CLOSE_PARENTHESIS reduce using rule 125 (seen_var_in_assign -> empty .)


state 138

    (168) FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .

    SEMI_COLON      reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    STAR            reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    FWD_SLASH       reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    PLUS            reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    MINUS           reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER          reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER_EQ       reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER         reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER_EQ      reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    NOT_EQUALS      reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    AND             reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    OR              reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    COMMA           reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 168 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)


state 139

    (145) VAR -> CLASS_REFERENCE VAR .

    EQUALS          reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    PLUS_EQUALS     reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    MINUS_EQUALS    reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    TIMES_EQUALS    reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    OVER_EQUALS     reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    PLUS_PLUS       reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    MINUS_MINUS     reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    STAR            reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    FWD_SLASH       reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    PLUS            reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    MINUS           reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER          reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER_EQ       reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER         reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER_EQ      reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    DOUBLE_EQUALS   reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    NOT_EQUALS      reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    AND             reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    OR              reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    SEMI_COLON      reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    COMMA           reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_PARENTHESIS reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_BRACKET   reduce using rule 145 (VAR -> CLASS_REFERENCE VAR .)


state 140

    (182) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (21) READABLE_LIST -> . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 199
    THIS_KWD        shift and go to state 106

    READABLE_LIST                  shift and go to state 197
    VAR                            shift and go to state 198
    ARRAY                          shift and go to state 105
    CLASS_REFERENCE                shift and go to state 200

state 141

    (183) PRINT -> PRINT_KWD OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (185) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    PRINTABLE                      shift and go to state 201
    EXPRESSION                     shift and go to state 202
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 142

    (184) PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (185) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    PRINTABLE                      shift and go to state 204
    EXPRESSION                     shift and go to state 202
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 143

    (49) OPEN -> OPEN_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 199
    THIS_KWD        shift and go to state 106

    VAR                            shift and go to state 205
    ARRAY                          shift and go to state 105
    CLASS_REFERENCE                shift and go to state 200

state 144

    (51) WRITE -> WRITE_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 199
    THIS_KWD        shift and go to state 106

    VAR                            shift and go to state 206
    ARRAY                          shift and go to state 105
    CLASS_REFERENCE                shift and go to state 200

state 145

    (179) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 207


state 146

    (181) FUNC_RETURN -> RETURN_KWD SEMI_COLON .

    ID              reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    READ_KWD        reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINT_KWD       reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    OPEN_KWD        reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WRITE_KWD       reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    RETURN_KWD      reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    THIS_KWD        reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    IF_KWD          reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WHILE_KWD       reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    FOR_KWD         reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 181 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)


state 147

    (180) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (104) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 208
    STAR            reduce using rule 104 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 104 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 104 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 104 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 104 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 104 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 104 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 104 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 104 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 104 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 104 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 104 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 104 (FACTOR -> FUNC_CALL .) ]


state 148

    (83) EXPRESSION -> EXP .
    (84) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (87) COMP -> . BIGGER
    (88) COMP -> . BIGGER_EQ
    (89) COMP -> . SMALLER
    (90) COMP -> . SMALLER_EQ
    (91) COMP -> . DOUBLE_EQUALS
    (92) COMP -> . NOT_EQUALS
    (93) COMP -> . AND
    (94) COMP -> . OR

    SEMI_COLON      reduce using rule 83 (EXPRESSION -> EXP .)
    COMMA           reduce using rule 83 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 83 (EXPRESSION -> EXP .)
    CLOSE_BRACKET   reduce using rule 83 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 210
    BIGGER_EQ       shift and go to state 211
    SMALLER         shift and go to state 212
    SMALLER_EQ      shift and go to state 213
    DOUBLE_EQUALS   shift and go to state 214
    NOT_EQUALS      shift and go to state 215
    AND             shift and go to state 216
    OR              shift and go to state 217

    COMP                           shift and go to state 209

state 149

    (167) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (139) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (150) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (143) VAR -> ID .
    (169) seen_func_call_id -> . empty
    (153) seen_array_id -> . empty
    (214) empty -> .

    DOT             shift and go to state 124
    STAR            reduce using rule 143 (VAR -> ID .)
    FWD_SLASH       reduce using rule 143 (VAR -> ID .)
    PLUS            reduce using rule 143 (VAR -> ID .)
    MINUS           reduce using rule 143 (VAR -> ID .)
    BIGGER          reduce using rule 143 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 143 (VAR -> ID .)
    SMALLER         reduce using rule 143 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 143 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 143 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 143 (VAR -> ID .)
    AND             reduce using rule 143 (VAR -> ID .)
    OR              reduce using rule 143 (VAR -> ID .)
    SEMI_COLON      reduce using rule 143 (VAR -> ID .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    seen_func_call_id              shift and go to state 123
    seen_array_id                  shift and go to state 125
    empty                          shift and go to state 126

state 150

    (95) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (123) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 218
    empty                          shift and go to state 219

state 151

    (76) EXP -> TERM . seen_term EXP_P
    (78) seen_term -> .

    PLUS            reduce using rule 78 (seen_term -> .)
    MINUS           reduce using rule 78 (seen_term -> .)
    BIGGER          reduce using rule 78 (seen_term -> .)
    BIGGER_EQ       reduce using rule 78 (seen_term -> .)
    SMALLER         reduce using rule 78 (seen_term -> .)
    SMALLER_EQ      reduce using rule 78 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 78 (seen_term -> .)
    NOT_EQUALS      reduce using rule 78 (seen_term -> .)
    AND             reduce using rule 78 (seen_term -> .)
    OR              reduce using rule 78 (seen_term -> .)
    SEMI_COLON      reduce using rule 78 (seen_term -> .)
    COMMA           reduce using rule 78 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 78 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 78 (seen_term -> .)

    seen_term                      shift and go to state 220

state 152

    (77) EXP -> MINUS . seen_unary_minus EXP pop_unary_minus
    (97) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (122) seen_unary_minus -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_unary_minus               shift and go to state 221
    empty                          shift and go to state 222

state 153

    (140) CLASS_REFERENCE -> ARRAY . seen_var_in_assign DOT seen_dot_operator
    (144) VAR -> ARRAY .
    (125) seen_var_in_assign -> . empty
    (214) empty -> .

    STAR            reduce using rule 144 (VAR -> ARRAY .)
    FWD_SLASH       reduce using rule 144 (VAR -> ARRAY .)
    PLUS            reduce using rule 144 (VAR -> ARRAY .)
    MINUS           reduce using rule 144 (VAR -> ARRAY .)
    BIGGER          reduce using rule 144 (VAR -> ARRAY .)
    BIGGER_EQ       reduce using rule 144 (VAR -> ARRAY .)
    SMALLER         reduce using rule 144 (VAR -> ARRAY .)
    SMALLER_EQ      reduce using rule 144 (VAR -> ARRAY .)
    DOUBLE_EQUALS   reduce using rule 144 (VAR -> ARRAY .)
    NOT_EQUALS      reduce using rule 144 (VAR -> ARRAY .)
    AND             reduce using rule 144 (VAR -> ARRAY .)
    OR              reduce using rule 144 (VAR -> ARRAY .)
    SEMI_COLON      reduce using rule 144 (VAR -> ARRAY .)
    DOT             reduce using rule 214 (empty -> .)

    seen_var_in_assign             shift and go to state 172
    empty                          shift and go to state 137

state 154

    (161) TERM -> FACTOR . seen_factor TERM_P
    (165) seen_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_factor                    shift and go to state 223
    empty                          shift and go to state 224

state 155

    (96) FACTOR -> NOT . seen_not FACTOR pop_not
    (120) seen_not -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_not                       shift and go to state 225
    empty                          shift and go to state 226

state 156

    (98) FACTOR -> STOI_KWD . seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (116) seen_stoi_kwd -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_stoi_kwd                  shift and go to state 227
    empty                          shift and go to state 228

state 157

    (99) FACTOR -> STOF_KWD . seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (117) seen_stof_kwd -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_stof_kwd                  shift and go to state 229
    empty                          shift and go to state 230

state 158

    (100) FACTOR -> STOB_KWD . seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (118) seen_stob_kwd -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_stob_kwd                  shift and go to state 231
    empty                          shift and go to state 232

state 159

    (101) FACTOR -> SUBSTR_KWD . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    OPEN_PARENTHESIS shift and go to state 233


state 160

    (102) FACTOR -> STRLEN_KWD . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis

    OPEN_PARENTHESIS shift and go to state 234


state 161

    (103) FACTOR -> RANDINT_KWD . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis

    OPEN_PARENTHESIS shift and go to state 235


state 162

    (105) FACTOR -> CLASS_INSTANCE .

    STAR            reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    FWD_SLASH       reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    PLUS            reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    MINUS           reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    BIGGER          reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    BIGGER_EQ       reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    SMALLER         reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    SMALLER_EQ      reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    DOUBLE_EQUALS   reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    NOT_EQUALS      reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    AND             reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    OR              reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    SEMI_COLON      reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    COMMA           reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_PARENTHESIS reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_BRACKET   reduce using rule 105 (FACTOR -> CLASS_INSTANCE .)


state 163

    (106) FACTOR -> VAR . seen_var_as_factor
    (126) seen_var_as_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_var_as_factor             shift and go to state 236
    empty                          shift and go to state 237

state 164

    (107) FACTOR -> CONSTANT .

    STAR            reduce using rule 107 (FACTOR -> CONSTANT .)
    FWD_SLASH       reduce using rule 107 (FACTOR -> CONSTANT .)
    PLUS            reduce using rule 107 (FACTOR -> CONSTANT .)
    MINUS           reduce using rule 107 (FACTOR -> CONSTANT .)
    BIGGER          reduce using rule 107 (FACTOR -> CONSTANT .)
    BIGGER_EQ       reduce using rule 107 (FACTOR -> CONSTANT .)
    SMALLER         reduce using rule 107 (FACTOR -> CONSTANT .)
    SMALLER_EQ      reduce using rule 107 (FACTOR -> CONSTANT .)
    DOUBLE_EQUALS   reduce using rule 107 (FACTOR -> CONSTANT .)
    NOT_EQUALS      reduce using rule 107 (FACTOR -> CONSTANT .)
    AND             reduce using rule 107 (FACTOR -> CONSTANT .)
    OR              reduce using rule 107 (FACTOR -> CONSTANT .)
    SEMI_COLON      reduce using rule 107 (FACTOR -> CONSTANT .)
    COMMA           reduce using rule 107 (FACTOR -> CONSTANT .)
    CLOSE_PARENTHESIS reduce using rule 107 (FACTOR -> CONSTANT .)
    CLOSE_BRACKET   reduce using rule 107 (FACTOR -> CONSTANT .)


state 165

    (146) CLASS_INSTANCE -> NEW_KWD . ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS

    ID              shift and go to state 238


state 166

    (133) CONSTANT -> CTE_I . seen_cte_i
    (128) seen_cte_i -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_i                     shift and go to state 239
    empty                          shift and go to state 61

state 167

    (134) CONSTANT -> CTE_F . seen_cte_f
    (129) seen_cte_f -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_f                     shift and go to state 240
    empty                          shift and go to state 241

state 168

    (135) CONSTANT -> CTE_S . seen_cte_s
    (130) seen_cte_s -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_s                     shift and go to state 242
    empty                          shift and go to state 243

state 169

    (136) CONSTANT -> CTE_B .

    STAR            reduce using rule 136 (CONSTANT -> CTE_B .)
    FWD_SLASH       reduce using rule 136 (CONSTANT -> CTE_B .)
    PLUS            reduce using rule 136 (CONSTANT -> CTE_B .)
    MINUS           reduce using rule 136 (CONSTANT -> CTE_B .)
    BIGGER          reduce using rule 136 (CONSTANT -> CTE_B .)
    BIGGER_EQ       reduce using rule 136 (CONSTANT -> CTE_B .)
    SMALLER         reduce using rule 136 (CONSTANT -> CTE_B .)
    SMALLER_EQ      reduce using rule 136 (CONSTANT -> CTE_B .)
    DOUBLE_EQUALS   reduce using rule 136 (CONSTANT -> CTE_B .)
    NOT_EQUALS      reduce using rule 136 (CONSTANT -> CTE_B .)
    AND             reduce using rule 136 (CONSTANT -> CTE_B .)
    OR              reduce using rule 136 (CONSTANT -> CTE_B .)
    SEMI_COLON      reduce using rule 136 (CONSTANT -> CTE_B .)
    COMMA           reduce using rule 136 (CONSTANT -> CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 136 (CONSTANT -> CTE_B .)
    CLOSE_BRACKET   reduce using rule 136 (CONSTANT -> CTE_B .)


state 170

    (137) CTE_B -> CTE_TRUE . seen_cte_true
    (132) seen_cte_true -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_true                  shift and go to state 244
    empty                          shift and go to state 245

state 171

    (138) CTE_B -> CTE_FALSE . seen_cte_false
    (131) seen_cte_false -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_false                 shift and go to state 246
    empty                          shift and go to state 247

state 172

    (140) CLASS_REFERENCE -> ARRAY seen_var_in_assign . DOT seen_dot_operator

    DOT             shift and go to state 248


state 173

    (141) CLASS_REFERENCE -> THIS_KWD seen_this_kwd . DOT seen_this_dot_operator

    DOT             shift and go to state 249


state 174

    (142) seen_this_kwd -> empty .

    DOT             reduce using rule 142 (seen_this_kwd -> empty .)


state 175

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 250
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 176

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    OPEN_PARENTHESIS shift and go to state 251


state 177

    (200) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 200 (seen_while_kwd -> empty .)


state 178

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 199
    THIS_KWD        shift and go to state 106

    VAR                            shift and go to state 252
    ARRAY                          shift and go to state 105
    CLASS_REFERENCE                shift and go to state 200

state 179

    (8) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 8 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_I          reduce using rule 8 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 8 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 8 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 8 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 8 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 8 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 8 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)


state 180

    (26) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    CLOSE_CURLY     reduce using rule 26 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 181

    (11) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 11 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 11 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 11 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 11 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    ID              reduce using rule 11 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 11 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 11 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 182

    (28) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (31) seen_func_vars -> . empty
    (214) empty -> .

    OPEN_CURLY      reduce using rule 214 (empty -> .)

    seen_func_vars                 shift and go to state 253
    empty                          shift and go to state 254

state 183

    (37) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 255


state 184

    (34) FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 34 (FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P .)


state 185

    (157) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (128) seen_cte_i -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_i                     shift and go to state 256
    empty                          shift and go to state 61

state 186

    (167) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (170) ARG_LIST -> . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (171) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (172) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (173) ARG_LIST -> . empty
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (214) empty -> .
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    ID              shift and go to state 257
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    THIS_KWD        shift and go to state 106
    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    ARG_LIST                       shift and go to state 258
    VAR                            shift and go to state 259
    EXPRESSION                     shift and go to state 260
    FUNC_CALL                      shift and go to state 261
    empty                          shift and go to state 262
    ARRAY                          shift and go to state 105
    CLASS_REFERENCE                shift and go to state 263
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CTE_B                          shift and go to state 169

state 187

    (139) CLASS_REFERENCE -> ID DOT seen_dot_operator .

    ID              reduce using rule 139 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)
    THIS_KWD        reduce using rule 139 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)


state 188

    (148) seen_dot_operator -> empty .

    ID              reduce using rule 148 (seen_dot_operator -> empty .)
    THIS_KWD        reduce using rule 148 (seen_dot_operator -> empty .)


state 189

    (150) ARRAY -> ID seen_array_id OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (154) seen_open_bracket -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_bracket              shift and go to state 264
    empty                          shift and go to state 265

state 190

    (62) ASSIGN -> VAR seen_var_in_assign EQUALS . seen_equals EXPRESSION
    (69) seen_equals -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_equals                    shift and go to state 266
    empty                          shift and go to state 267

state 191

    (63) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS . seen_plus_equals EXPRESSION
    (70) seen_plus_equals -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_plus_equals               shift and go to state 268
    empty                          shift and go to state 269

state 192

    (64) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS . seen_minus_equals EXPRESSION
    (71) seen_minus_equals -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_minus_equals              shift and go to state 270
    empty                          shift and go to state 271

state 193

    (65) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS . seen_times_equals EXPRESSION
    (72) seen_times_equals -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_times_equals              shift and go to state 272
    empty                          shift and go to state 273

state 194

    (66) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS . seen_over_equals EXPRESSION
    (73) seen_over_equals -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_over_equals               shift and go to state 274
    empty                          shift and go to state 275

state 195

    (67) ASSIGN -> VAR seen_var_in_assign PLUS_PLUS . seen_plus_plus
    (74) seen_plus_plus -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_plus_plus                 shift and go to state 276
    empty                          shift and go to state 277

state 196

    (68) ASSIGN -> VAR seen_var_in_assign MINUS_MINUS . seen_minus_minus
    (75) seen_minus_minus -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_minus_minus               shift and go to state 278
    empty                          shift and go to state 279

state 197

    (182) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 280


state 198

    (21) READABLE_LIST -> VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (125) seen_var_in_assign -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_var_in_assign             shift and go to state 281
    empty                          shift and go to state 137

state 199

    (143) VAR -> ID .
    (150) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (153) seen_array_id -> . empty
    (214) empty -> .

    COMMA           reduce using rule 143 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 143 (VAR -> ID .)
    EQUALS          reduce using rule 143 (VAR -> ID .)
    DOT             shift and go to state 124
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    seen_array_id                  shift and go to state 125
    empty                          shift and go to state 282

state 200

    (145) VAR -> CLASS_REFERENCE . VAR
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 199
    THIS_KWD        shift and go to state 106

    CLASS_REFERENCE                shift and go to state 200
    VAR                            shift and go to state 139
    ARRAY                          shift and go to state 105

state 201

    (183) PRINT -> PRINT_KWD OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 283


state 202

    (185) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (188) seen_printable -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_printable                 shift and go to state 284
    empty                          shift and go to state 285

state 203

    (104) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 104 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 104 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 104 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 104 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 104 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 104 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 104 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 104 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 104 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 104 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 104 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 104 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 104 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 104 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 104 (FACTOR -> FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 104 (FACTOR -> FUNC_CALL .)


state 204

    (184) PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 286


state 205

    (49) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (127) seen_var_in_io -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_var_in_io                 shift and go to state 287
    empty                          shift and go to state 288

state 206

    (51) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (127) seen_var_in_io -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_var_in_io                 shift and go to state 289
    empty                          shift and go to state 288

state 207

    (179) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINT_KWD       reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    OPEN_KWD        reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    THIS_KWD        reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 179 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 208

    (180) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    ID              reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 180 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 209

    (84) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (86) seen_comp_op -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_comp_op                   shift and go to state 290
    empty                          shift and go to state 291

state 210

    (87) COMP -> BIGGER .

    MINUS           reduce using rule 87 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 87 (COMP -> BIGGER .)
    NOT             reduce using rule 87 (COMP -> BIGGER .)
    STOI_KWD        reduce using rule 87 (COMP -> BIGGER .)
    STOF_KWD        reduce using rule 87 (COMP -> BIGGER .)
    STOB_KWD        reduce using rule 87 (COMP -> BIGGER .)
    SUBSTR_KWD      reduce using rule 87 (COMP -> BIGGER .)
    STRLEN_KWD      reduce using rule 87 (COMP -> BIGGER .)
    RANDINT_KWD     reduce using rule 87 (COMP -> BIGGER .)
    ID              reduce using rule 87 (COMP -> BIGGER .)
    NEW_KWD         reduce using rule 87 (COMP -> BIGGER .)
    CTE_I           reduce using rule 87 (COMP -> BIGGER .)
    CTE_F           reduce using rule 87 (COMP -> BIGGER .)
    CTE_S           reduce using rule 87 (COMP -> BIGGER .)
    THIS_KWD        reduce using rule 87 (COMP -> BIGGER .)
    CTE_TRUE        reduce using rule 87 (COMP -> BIGGER .)
    CTE_FALSE       reduce using rule 87 (COMP -> BIGGER .)


state 211

    (88) COMP -> BIGGER_EQ .

    MINUS           reduce using rule 88 (COMP -> BIGGER_EQ .)
    OPEN_PARENTHESIS reduce using rule 88 (COMP -> BIGGER_EQ .)
    NOT             reduce using rule 88 (COMP -> BIGGER_EQ .)
    STOI_KWD        reduce using rule 88 (COMP -> BIGGER_EQ .)
    STOF_KWD        reduce using rule 88 (COMP -> BIGGER_EQ .)
    STOB_KWD        reduce using rule 88 (COMP -> BIGGER_EQ .)
    SUBSTR_KWD      reduce using rule 88 (COMP -> BIGGER_EQ .)
    STRLEN_KWD      reduce using rule 88 (COMP -> BIGGER_EQ .)
    RANDINT_KWD     reduce using rule 88 (COMP -> BIGGER_EQ .)
    ID              reduce using rule 88 (COMP -> BIGGER_EQ .)
    NEW_KWD         reduce using rule 88 (COMP -> BIGGER_EQ .)
    CTE_I           reduce using rule 88 (COMP -> BIGGER_EQ .)
    CTE_F           reduce using rule 88 (COMP -> BIGGER_EQ .)
    CTE_S           reduce using rule 88 (COMP -> BIGGER_EQ .)
    THIS_KWD        reduce using rule 88 (COMP -> BIGGER_EQ .)
    CTE_TRUE        reduce using rule 88 (COMP -> BIGGER_EQ .)
    CTE_FALSE       reduce using rule 88 (COMP -> BIGGER_EQ .)


state 212

    (89) COMP -> SMALLER .

    MINUS           reduce using rule 89 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 89 (COMP -> SMALLER .)
    NOT             reduce using rule 89 (COMP -> SMALLER .)
    STOI_KWD        reduce using rule 89 (COMP -> SMALLER .)
    STOF_KWD        reduce using rule 89 (COMP -> SMALLER .)
    STOB_KWD        reduce using rule 89 (COMP -> SMALLER .)
    SUBSTR_KWD      reduce using rule 89 (COMP -> SMALLER .)
    STRLEN_KWD      reduce using rule 89 (COMP -> SMALLER .)
    RANDINT_KWD     reduce using rule 89 (COMP -> SMALLER .)
    ID              reduce using rule 89 (COMP -> SMALLER .)
    NEW_KWD         reduce using rule 89 (COMP -> SMALLER .)
    CTE_I           reduce using rule 89 (COMP -> SMALLER .)
    CTE_F           reduce using rule 89 (COMP -> SMALLER .)
    CTE_S           reduce using rule 89 (COMP -> SMALLER .)
    THIS_KWD        reduce using rule 89 (COMP -> SMALLER .)
    CTE_TRUE        reduce using rule 89 (COMP -> SMALLER .)
    CTE_FALSE       reduce using rule 89 (COMP -> SMALLER .)


state 213

    (90) COMP -> SMALLER_EQ .

    MINUS           reduce using rule 90 (COMP -> SMALLER_EQ .)
    OPEN_PARENTHESIS reduce using rule 90 (COMP -> SMALLER_EQ .)
    NOT             reduce using rule 90 (COMP -> SMALLER_EQ .)
    STOI_KWD        reduce using rule 90 (COMP -> SMALLER_EQ .)
    STOF_KWD        reduce using rule 90 (COMP -> SMALLER_EQ .)
    STOB_KWD        reduce using rule 90 (COMP -> SMALLER_EQ .)
    SUBSTR_KWD      reduce using rule 90 (COMP -> SMALLER_EQ .)
    STRLEN_KWD      reduce using rule 90 (COMP -> SMALLER_EQ .)
    RANDINT_KWD     reduce using rule 90 (COMP -> SMALLER_EQ .)
    ID              reduce using rule 90 (COMP -> SMALLER_EQ .)
    NEW_KWD         reduce using rule 90 (COMP -> SMALLER_EQ .)
    CTE_I           reduce using rule 90 (COMP -> SMALLER_EQ .)
    CTE_F           reduce using rule 90 (COMP -> SMALLER_EQ .)
    CTE_S           reduce using rule 90 (COMP -> SMALLER_EQ .)
    THIS_KWD        reduce using rule 90 (COMP -> SMALLER_EQ .)
    CTE_TRUE        reduce using rule 90 (COMP -> SMALLER_EQ .)
    CTE_FALSE       reduce using rule 90 (COMP -> SMALLER_EQ .)


state 214

    (91) COMP -> DOUBLE_EQUALS .

    MINUS           reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    NOT             reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    STOI_KWD        reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    STOF_KWD        reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    STOB_KWD        reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    SUBSTR_KWD      reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    STRLEN_KWD      reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    RANDINT_KWD     reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    NEW_KWD         reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    THIS_KWD        reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    CTE_TRUE        reduce using rule 91 (COMP -> DOUBLE_EQUALS .)
    CTE_FALSE       reduce using rule 91 (COMP -> DOUBLE_EQUALS .)


state 215

    (92) COMP -> NOT_EQUALS .

    MINUS           reduce using rule 92 (COMP -> NOT_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 92 (COMP -> NOT_EQUALS .)
    NOT             reduce using rule 92 (COMP -> NOT_EQUALS .)
    STOI_KWD        reduce using rule 92 (COMP -> NOT_EQUALS .)
    STOF_KWD        reduce using rule 92 (COMP -> NOT_EQUALS .)
    STOB_KWD        reduce using rule 92 (COMP -> NOT_EQUALS .)
    SUBSTR_KWD      reduce using rule 92 (COMP -> NOT_EQUALS .)
    STRLEN_KWD      reduce using rule 92 (COMP -> NOT_EQUALS .)
    RANDINT_KWD     reduce using rule 92 (COMP -> NOT_EQUALS .)
    ID              reduce using rule 92 (COMP -> NOT_EQUALS .)
    NEW_KWD         reduce using rule 92 (COMP -> NOT_EQUALS .)
    CTE_I           reduce using rule 92 (COMP -> NOT_EQUALS .)
    CTE_F           reduce using rule 92 (COMP -> NOT_EQUALS .)
    CTE_S           reduce using rule 92 (COMP -> NOT_EQUALS .)
    THIS_KWD        reduce using rule 92 (COMP -> NOT_EQUALS .)
    CTE_TRUE        reduce using rule 92 (COMP -> NOT_EQUALS .)
    CTE_FALSE       reduce using rule 92 (COMP -> NOT_EQUALS .)


state 216

    (93) COMP -> AND .

    MINUS           reduce using rule 93 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 93 (COMP -> AND .)
    NOT             reduce using rule 93 (COMP -> AND .)
    STOI_KWD        reduce using rule 93 (COMP -> AND .)
    STOF_KWD        reduce using rule 93 (COMP -> AND .)
    STOB_KWD        reduce using rule 93 (COMP -> AND .)
    SUBSTR_KWD      reduce using rule 93 (COMP -> AND .)
    STRLEN_KWD      reduce using rule 93 (COMP -> AND .)
    RANDINT_KWD     reduce using rule 93 (COMP -> AND .)
    ID              reduce using rule 93 (COMP -> AND .)
    NEW_KWD         reduce using rule 93 (COMP -> AND .)
    CTE_I           reduce using rule 93 (COMP -> AND .)
    CTE_F           reduce using rule 93 (COMP -> AND .)
    CTE_S           reduce using rule 93 (COMP -> AND .)
    THIS_KWD        reduce using rule 93 (COMP -> AND .)
    CTE_TRUE        reduce using rule 93 (COMP -> AND .)
    CTE_FALSE       reduce using rule 93 (COMP -> AND .)


state 217

    (94) COMP -> OR .

    MINUS           reduce using rule 94 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 94 (COMP -> OR .)
    NOT             reduce using rule 94 (COMP -> OR .)
    STOI_KWD        reduce using rule 94 (COMP -> OR .)
    STOF_KWD        reduce using rule 94 (COMP -> OR .)
    STOB_KWD        reduce using rule 94 (COMP -> OR .)
    SUBSTR_KWD      reduce using rule 94 (COMP -> OR .)
    STRLEN_KWD      reduce using rule 94 (COMP -> OR .)
    RANDINT_KWD     reduce using rule 94 (COMP -> OR .)
    ID              reduce using rule 94 (COMP -> OR .)
    NEW_KWD         reduce using rule 94 (COMP -> OR .)
    CTE_I           reduce using rule 94 (COMP -> OR .)
    CTE_F           reduce using rule 94 (COMP -> OR .)
    CTE_S           reduce using rule 94 (COMP -> OR .)
    THIS_KWD        reduce using rule 94 (COMP -> OR .)
    CTE_TRUE        reduce using rule 94 (COMP -> OR .)
    CTE_FALSE       reduce using rule 94 (COMP -> OR .)


state 218

    (95) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 292
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 219

    (123) seen_open_parenthesis -> empty .

    MINUS           reduce using rule 123 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 123 (seen_open_parenthesis -> empty .)
    NOT             reduce using rule 123 (seen_open_parenthesis -> empty .)
    STOI_KWD        reduce using rule 123 (seen_open_parenthesis -> empty .)
    STOF_KWD        reduce using rule 123 (seen_open_parenthesis -> empty .)
    STOB_KWD        reduce using rule 123 (seen_open_parenthesis -> empty .)
    SUBSTR_KWD      reduce using rule 123 (seen_open_parenthesis -> empty .)
    STRLEN_KWD      reduce using rule 123 (seen_open_parenthesis -> empty .)
    RANDINT_KWD     reduce using rule 123 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 123 (seen_open_parenthesis -> empty .)
    NEW_KWD         reduce using rule 123 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 123 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 123 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 123 (seen_open_parenthesis -> empty .)
    THIS_KWD        reduce using rule 123 (seen_open_parenthesis -> empty .)
    CTE_TRUE        reduce using rule 123 (seen_open_parenthesis -> empty .)
    CTE_FALSE       reduce using rule 123 (seen_open_parenthesis -> empty .)


state 220

    (76) EXP -> TERM seen_term . EXP_P
    (79) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (80) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (81) EXP_P -> . empty
    (214) empty -> .

    PLUS            shift and go to state 294
    MINUS           shift and go to state 295
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    EXP_P                          shift and go to state 293
    empty                          shift and go to state 296

state 221

    (77) EXP -> MINUS seen_unary_minus . EXP pop_unary_minus
    (97) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (161) TERM -> . FACTOR seen_factor TERM_P
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXP                            shift and go to state 297
    FACTOR                         shift and go to state 298
    TERM                           shift and go to state 151
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 222

    (122) seen_unary_minus -> empty .

    MINUS           reduce using rule 122 (seen_unary_minus -> empty .)
    OPEN_PARENTHESIS reduce using rule 122 (seen_unary_minus -> empty .)
    NOT             reduce using rule 122 (seen_unary_minus -> empty .)
    STOI_KWD        reduce using rule 122 (seen_unary_minus -> empty .)
    STOF_KWD        reduce using rule 122 (seen_unary_minus -> empty .)
    STOB_KWD        reduce using rule 122 (seen_unary_minus -> empty .)
    SUBSTR_KWD      reduce using rule 122 (seen_unary_minus -> empty .)
    STRLEN_KWD      reduce using rule 122 (seen_unary_minus -> empty .)
    RANDINT_KWD     reduce using rule 122 (seen_unary_minus -> empty .)
    ID              reduce using rule 122 (seen_unary_minus -> empty .)
    NEW_KWD         reduce using rule 122 (seen_unary_minus -> empty .)
    CTE_I           reduce using rule 122 (seen_unary_minus -> empty .)
    CTE_F           reduce using rule 122 (seen_unary_minus -> empty .)
    CTE_S           reduce using rule 122 (seen_unary_minus -> empty .)
    THIS_KWD        reduce using rule 122 (seen_unary_minus -> empty .)
    CTE_TRUE        reduce using rule 122 (seen_unary_minus -> empty .)
    CTE_FALSE       reduce using rule 122 (seen_unary_minus -> empty .)


state 223

    (161) TERM -> FACTOR seen_factor . TERM_P
    (162) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (163) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (164) TERM_P -> . empty
    (214) empty -> .

    STAR            shift and go to state 300
    FWD_SLASH       shift and go to state 301
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    TERM_P                         shift and go to state 299
    empty                          shift and go to state 302

state 224

    (165) seen_factor -> empty .

    STAR            reduce using rule 165 (seen_factor -> empty .)
    FWD_SLASH       reduce using rule 165 (seen_factor -> empty .)
    PLUS            reduce using rule 165 (seen_factor -> empty .)
    MINUS           reduce using rule 165 (seen_factor -> empty .)
    BIGGER          reduce using rule 165 (seen_factor -> empty .)
    BIGGER_EQ       reduce using rule 165 (seen_factor -> empty .)
    SMALLER         reduce using rule 165 (seen_factor -> empty .)
    SMALLER_EQ      reduce using rule 165 (seen_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 165 (seen_factor -> empty .)
    NOT_EQUALS      reduce using rule 165 (seen_factor -> empty .)
    AND             reduce using rule 165 (seen_factor -> empty .)
    OR              reduce using rule 165 (seen_factor -> empty .)
    SEMI_COLON      reduce using rule 165 (seen_factor -> empty .)
    COMMA           reduce using rule 165 (seen_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 165 (seen_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 165 (seen_factor -> empty .)


state 225

    (96) FACTOR -> NOT seen_not . FACTOR pop_not
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    MINUS           shift and go to state 304
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    FACTOR                         shift and go to state 303
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 226

    (120) seen_not -> empty .

    OPEN_PARENTHESIS reduce using rule 120 (seen_not -> empty .)
    NOT             reduce using rule 120 (seen_not -> empty .)
    MINUS           reduce using rule 120 (seen_not -> empty .)
    STOI_KWD        reduce using rule 120 (seen_not -> empty .)
    STOF_KWD        reduce using rule 120 (seen_not -> empty .)
    STOB_KWD        reduce using rule 120 (seen_not -> empty .)
    SUBSTR_KWD      reduce using rule 120 (seen_not -> empty .)
    STRLEN_KWD      reduce using rule 120 (seen_not -> empty .)
    RANDINT_KWD     reduce using rule 120 (seen_not -> empty .)
    ID              reduce using rule 120 (seen_not -> empty .)
    NEW_KWD         reduce using rule 120 (seen_not -> empty .)
    CTE_I           reduce using rule 120 (seen_not -> empty .)
    CTE_F           reduce using rule 120 (seen_not -> empty .)
    CTE_S           reduce using rule 120 (seen_not -> empty .)
    THIS_KWD        reduce using rule 120 (seen_not -> empty .)
    CTE_TRUE        reduce using rule 120 (seen_not -> empty .)
    CTE_FALSE       reduce using rule 120 (seen_not -> empty .)


state 227

    (98) FACTOR -> STOI_KWD seen_stoi_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 305


state 228

    (116) seen_stoi_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 116 (seen_stoi_kwd -> empty .)


state 229

    (99) FACTOR -> STOF_KWD seen_stof_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 306


state 230

    (117) seen_stof_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 117 (seen_stof_kwd -> empty .)


state 231

    (100) FACTOR -> STOB_KWD seen_stob_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 307


state 232

    (118) seen_stob_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 118 (seen_stob_kwd -> empty .)


state 233

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (123) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 308
    empty                          shift and go to state 219

state 234

    (102) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (123) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 309
    empty                          shift and go to state 219

state 235

    (103) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (123) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 310
    empty                          shift and go to state 219

state 236

    (106) FACTOR -> VAR seen_var_as_factor .

    STAR            reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    SEMI_COLON      reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_BRACKET   reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)


state 237

    (126) seen_var_as_factor -> empty .

    STAR            reduce using rule 126 (seen_var_as_factor -> empty .)
    FWD_SLASH       reduce using rule 126 (seen_var_as_factor -> empty .)
    PLUS            reduce using rule 126 (seen_var_as_factor -> empty .)
    MINUS           reduce using rule 126 (seen_var_as_factor -> empty .)
    BIGGER          reduce using rule 126 (seen_var_as_factor -> empty .)
    BIGGER_EQ       reduce using rule 126 (seen_var_as_factor -> empty .)
    SMALLER         reduce using rule 126 (seen_var_as_factor -> empty .)
    SMALLER_EQ      reduce using rule 126 (seen_var_as_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 126 (seen_var_as_factor -> empty .)
    NOT_EQUALS      reduce using rule 126 (seen_var_as_factor -> empty .)
    AND             reduce using rule 126 (seen_var_as_factor -> empty .)
    OR              reduce using rule 126 (seen_var_as_factor -> empty .)
    SEMI_COLON      reduce using rule 126 (seen_var_as_factor -> empty .)
    COMMA           reduce using rule 126 (seen_var_as_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 126 (seen_var_as_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 126 (seen_var_as_factor -> empty .)


state 238

    (146) CLASS_INSTANCE -> NEW_KWD ID . seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (147) seen_class_id_instance -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_class_id_instance         shift and go to state 311
    empty                          shift and go to state 312

state 239

    (133) CONSTANT -> CTE_I seen_cte_i .

    STAR            reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    BIGGER_EQ       reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    SMALLER_EQ      reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    NOT_EQUALS      reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    AND             reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    OR              reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)
    CLOSE_BRACKET   reduce using rule 133 (CONSTANT -> CTE_I seen_cte_i .)


state 240

    (134) CONSTANT -> CTE_F seen_cte_f .

    STAR            reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    BIGGER_EQ       reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    SMALLER_EQ      reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    NOT_EQUALS      reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    AND             reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    OR              reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)
    CLOSE_BRACKET   reduce using rule 134 (CONSTANT -> CTE_F seen_cte_f .)


state 241

    (129) seen_cte_f -> empty .

    STAR            reduce using rule 129 (seen_cte_f -> empty .)
    FWD_SLASH       reduce using rule 129 (seen_cte_f -> empty .)
    PLUS            reduce using rule 129 (seen_cte_f -> empty .)
    MINUS           reduce using rule 129 (seen_cte_f -> empty .)
    BIGGER          reduce using rule 129 (seen_cte_f -> empty .)
    BIGGER_EQ       reduce using rule 129 (seen_cte_f -> empty .)
    SMALLER         reduce using rule 129 (seen_cte_f -> empty .)
    SMALLER_EQ      reduce using rule 129 (seen_cte_f -> empty .)
    DOUBLE_EQUALS   reduce using rule 129 (seen_cte_f -> empty .)
    NOT_EQUALS      reduce using rule 129 (seen_cte_f -> empty .)
    AND             reduce using rule 129 (seen_cte_f -> empty .)
    OR              reduce using rule 129 (seen_cte_f -> empty .)
    SEMI_COLON      reduce using rule 129 (seen_cte_f -> empty .)
    COMMA           reduce using rule 129 (seen_cte_f -> empty .)
    CLOSE_PARENTHESIS reduce using rule 129 (seen_cte_f -> empty .)
    CLOSE_BRACKET   reduce using rule 129 (seen_cte_f -> empty .)


state 242

    (135) CONSTANT -> CTE_S seen_cte_s .

    STAR            reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    BIGGER_EQ       reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    SMALLER_EQ      reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    NOT_EQUALS      reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    AND             reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    OR              reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)
    CLOSE_BRACKET   reduce using rule 135 (CONSTANT -> CTE_S seen_cte_s .)


state 243

    (130) seen_cte_s -> empty .

    STAR            reduce using rule 130 (seen_cte_s -> empty .)
    FWD_SLASH       reduce using rule 130 (seen_cte_s -> empty .)
    PLUS            reduce using rule 130 (seen_cte_s -> empty .)
    MINUS           reduce using rule 130 (seen_cte_s -> empty .)
    BIGGER          reduce using rule 130 (seen_cte_s -> empty .)
    BIGGER_EQ       reduce using rule 130 (seen_cte_s -> empty .)
    SMALLER         reduce using rule 130 (seen_cte_s -> empty .)
    SMALLER_EQ      reduce using rule 130 (seen_cte_s -> empty .)
    DOUBLE_EQUALS   reduce using rule 130 (seen_cte_s -> empty .)
    NOT_EQUALS      reduce using rule 130 (seen_cte_s -> empty .)
    AND             reduce using rule 130 (seen_cte_s -> empty .)
    OR              reduce using rule 130 (seen_cte_s -> empty .)
    SEMI_COLON      reduce using rule 130 (seen_cte_s -> empty .)
    COMMA           reduce using rule 130 (seen_cte_s -> empty .)
    CLOSE_PARENTHESIS reduce using rule 130 (seen_cte_s -> empty .)
    CLOSE_BRACKET   reduce using rule 130 (seen_cte_s -> empty .)


state 244

    (137) CTE_B -> CTE_TRUE seen_cte_true .

    STAR            reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    FWD_SLASH       reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    PLUS            reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    MINUS           reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    BIGGER          reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    BIGGER_EQ       reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    SMALLER         reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    SMALLER_EQ      reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    DOUBLE_EQUALS   reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    NOT_EQUALS      reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    AND             reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    OR              reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    SEMI_COLON      reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    COMMA           reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    CLOSE_PARENTHESIS reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)
    CLOSE_BRACKET   reduce using rule 137 (CTE_B -> CTE_TRUE seen_cte_true .)


state 245

    (132) seen_cte_true -> empty .

    STAR            reduce using rule 132 (seen_cte_true -> empty .)
    FWD_SLASH       reduce using rule 132 (seen_cte_true -> empty .)
    PLUS            reduce using rule 132 (seen_cte_true -> empty .)
    MINUS           reduce using rule 132 (seen_cte_true -> empty .)
    BIGGER          reduce using rule 132 (seen_cte_true -> empty .)
    BIGGER_EQ       reduce using rule 132 (seen_cte_true -> empty .)
    SMALLER         reduce using rule 132 (seen_cte_true -> empty .)
    SMALLER_EQ      reduce using rule 132 (seen_cte_true -> empty .)
    DOUBLE_EQUALS   reduce using rule 132 (seen_cte_true -> empty .)
    NOT_EQUALS      reduce using rule 132 (seen_cte_true -> empty .)
    AND             reduce using rule 132 (seen_cte_true -> empty .)
    OR              reduce using rule 132 (seen_cte_true -> empty .)
    SEMI_COLON      reduce using rule 132 (seen_cte_true -> empty .)
    COMMA           reduce using rule 132 (seen_cte_true -> empty .)
    CLOSE_PARENTHESIS reduce using rule 132 (seen_cte_true -> empty .)
    CLOSE_BRACKET   reduce using rule 132 (seen_cte_true -> empty .)


state 246

    (138) CTE_B -> CTE_FALSE seen_cte_false .

    STAR            reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    FWD_SLASH       reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    PLUS            reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    MINUS           reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    BIGGER          reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    BIGGER_EQ       reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    SMALLER         reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    SMALLER_EQ      reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    DOUBLE_EQUALS   reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    NOT_EQUALS      reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    AND             reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    OR              reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    SEMI_COLON      reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    COMMA           reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    CLOSE_PARENTHESIS reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)
    CLOSE_BRACKET   reduce using rule 138 (CTE_B -> CTE_FALSE seen_cte_false .)


state 247

    (131) seen_cte_false -> empty .

    STAR            reduce using rule 131 (seen_cte_false -> empty .)
    FWD_SLASH       reduce using rule 131 (seen_cte_false -> empty .)
    PLUS            reduce using rule 131 (seen_cte_false -> empty .)
    MINUS           reduce using rule 131 (seen_cte_false -> empty .)
    BIGGER          reduce using rule 131 (seen_cte_false -> empty .)
    BIGGER_EQ       reduce using rule 131 (seen_cte_false -> empty .)
    SMALLER         reduce using rule 131 (seen_cte_false -> empty .)
    SMALLER_EQ      reduce using rule 131 (seen_cte_false -> empty .)
    DOUBLE_EQUALS   reduce using rule 131 (seen_cte_false -> empty .)
    NOT_EQUALS      reduce using rule 131 (seen_cte_false -> empty .)
    AND             reduce using rule 131 (seen_cte_false -> empty .)
    OR              reduce using rule 131 (seen_cte_false -> empty .)
    SEMI_COLON      reduce using rule 131 (seen_cte_false -> empty .)
    COMMA           reduce using rule 131 (seen_cte_false -> empty .)
    CLOSE_PARENTHESIS reduce using rule 131 (seen_cte_false -> empty .)
    CLOSE_BRACKET   reduce using rule 131 (seen_cte_false -> empty .)


state 248

    (140) CLASS_REFERENCE -> ARRAY seen_var_in_assign DOT . seen_dot_operator
    (148) seen_dot_operator -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)

    seen_dot_operator              shift and go to state 313
    empty                          shift and go to state 188

state 249

    (141) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT . seen_this_dot_operator
    (149) seen_this_dot_operator -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)

    seen_this_dot_operator         shift and go to state 314
    empty                          shift and go to state 315

state 250

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 316


state 251

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 317
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 252

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (203) seen_for_kwd -> . empty
    (214) empty -> .

    EQUALS          reduce using rule 214 (empty -> .)

    seen_for_kwd                   shift and go to state 318
    empty                          shift and go to state 319

state 253

    (28) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 320


state 254

    (31) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 31 (seen_func_vars -> empty .)


state 255

    (37) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (12) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (13) VAR_LIST_STAR -> . empty
    (14) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (214) empty -> .
    (15) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (16) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (156) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 37

    VAR_LIST_STAR                  shift and go to state 321
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 36
    SYMBOL_LIST                    shift and go to state 22
    ARRAY_DECLARATION              shift and go to state 23

state 256

    (157) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (160) seen_array_def_dim -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_array_def_dim             shift and go to state 322
    empty                          shift and go to state 70

state 257

    (143) VAR -> ID .
    (167) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (150) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (169) seen_func_call_id -> . empty
    (153) seen_array_id -> . empty
    (214) empty -> .

    COMMA           reduce using rule 143 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 143 (VAR -> ID .)
    STAR            reduce using rule 143 (VAR -> ID .)
    FWD_SLASH       reduce using rule 143 (VAR -> ID .)
    PLUS            reduce using rule 143 (VAR -> ID .)
    MINUS           reduce using rule 143 (VAR -> ID .)
    BIGGER          reduce using rule 143 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 143 (VAR -> ID .)
    SMALLER         reduce using rule 143 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 143 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 143 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 143 (VAR -> ID .)
    AND             reduce using rule 143 (VAR -> ID .)
    OR              reduce using rule 143 (VAR -> ID .)
    DOT             shift and go to state 124
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    seen_func_call_id              shift and go to state 123
    seen_array_id                  shift and go to state 125
    empty                          shift and go to state 126

state 258

    (167) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 323


state 259

    (170) ARG_LIST -> VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (106) FACTOR -> VAR . seen_var_as_factor
    (126) seen_var_as_factor -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)

    seen_var_as_factor             shift and go to state 324
    empty                          shift and go to state 237

state 260

    (171) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (178) seen_arg -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_arg                       shift and go to state 325
    empty                          shift and go to state 326

state 261

    (172) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (104) FACTOR -> FUNC_CALL .
    (178) seen_arg -> . empty
    (214) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 104 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 104 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 104 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 104 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 104 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 104 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 104 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 104 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 104 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 104 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 104 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 104 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 104 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 104 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 104 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 104 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 214 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 214 (empty -> .) ]

    seen_arg                       shift and go to state 327
    empty                          shift and go to state 326

state 262

    (173) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 173 (ARG_LIST -> empty .)


state 263

    (145) VAR -> CLASS_REFERENCE . VAR
    (168) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 257
    THIS_KWD        shift and go to state 106

    CLASS_REFERENCE                shift and go to state 263
    VAR                            shift and go to state 139
    FUNC_CALL                      shift and go to state 138
    ARRAY                          shift and go to state 105

state 264

    (150) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 328
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 265

    (154) seen_open_bracket -> empty .

    MINUS           reduce using rule 154 (seen_open_bracket -> empty .)
    OPEN_PARENTHESIS reduce using rule 154 (seen_open_bracket -> empty .)
    NOT             reduce using rule 154 (seen_open_bracket -> empty .)
    STOI_KWD        reduce using rule 154 (seen_open_bracket -> empty .)
    STOF_KWD        reduce using rule 154 (seen_open_bracket -> empty .)
    STOB_KWD        reduce using rule 154 (seen_open_bracket -> empty .)
    SUBSTR_KWD      reduce using rule 154 (seen_open_bracket -> empty .)
    STRLEN_KWD      reduce using rule 154 (seen_open_bracket -> empty .)
    RANDINT_KWD     reduce using rule 154 (seen_open_bracket -> empty .)
    ID              reduce using rule 154 (seen_open_bracket -> empty .)
    NEW_KWD         reduce using rule 154 (seen_open_bracket -> empty .)
    CTE_I           reduce using rule 154 (seen_open_bracket -> empty .)
    CTE_F           reduce using rule 154 (seen_open_bracket -> empty .)
    CTE_S           reduce using rule 154 (seen_open_bracket -> empty .)
    THIS_KWD        reduce using rule 154 (seen_open_bracket -> empty .)
    CTE_TRUE        reduce using rule 154 (seen_open_bracket -> empty .)
    CTE_FALSE       reduce using rule 154 (seen_open_bracket -> empty .)


state 266

    (62) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals . EXPRESSION
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 163
    EXPRESSION                     shift and go to state 329
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 267

    (69) seen_equals -> empty .

    MINUS           reduce using rule 69 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 69 (seen_equals -> empty .)
    NOT             reduce using rule 69 (seen_equals -> empty .)
    STOI_KWD        reduce using rule 69 (seen_equals -> empty .)
    STOF_KWD        reduce using rule 69 (seen_equals -> empty .)
    STOB_KWD        reduce using rule 69 (seen_equals -> empty .)
    SUBSTR_KWD      reduce using rule 69 (seen_equals -> empty .)
    STRLEN_KWD      reduce using rule 69 (seen_equals -> empty .)
    RANDINT_KWD     reduce using rule 69 (seen_equals -> empty .)
    ID              reduce using rule 69 (seen_equals -> empty .)
    NEW_KWD         reduce using rule 69 (seen_equals -> empty .)
    CTE_I           reduce using rule 69 (seen_equals -> empty .)
    CTE_F           reduce using rule 69 (seen_equals -> empty .)
    CTE_S           reduce using rule 69 (seen_equals -> empty .)
    THIS_KWD        reduce using rule 69 (seen_equals -> empty .)
    CTE_TRUE        reduce using rule 69 (seen_equals -> empty .)
    CTE_FALSE       reduce using rule 69 (seen_equals -> empty .)


state 268

    (63) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals . EXPRESSION
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 163
    EXPRESSION                     shift and go to state 330
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 269

    (70) seen_plus_equals -> empty .

    MINUS           reduce using rule 70 (seen_plus_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 70 (seen_plus_equals -> empty .)
    NOT             reduce using rule 70 (seen_plus_equals -> empty .)
    STOI_KWD        reduce using rule 70 (seen_plus_equals -> empty .)
    STOF_KWD        reduce using rule 70 (seen_plus_equals -> empty .)
    STOB_KWD        reduce using rule 70 (seen_plus_equals -> empty .)
    SUBSTR_KWD      reduce using rule 70 (seen_plus_equals -> empty .)
    STRLEN_KWD      reduce using rule 70 (seen_plus_equals -> empty .)
    RANDINT_KWD     reduce using rule 70 (seen_plus_equals -> empty .)
    ID              reduce using rule 70 (seen_plus_equals -> empty .)
    NEW_KWD         reduce using rule 70 (seen_plus_equals -> empty .)
    CTE_I           reduce using rule 70 (seen_plus_equals -> empty .)
    CTE_F           reduce using rule 70 (seen_plus_equals -> empty .)
    CTE_S           reduce using rule 70 (seen_plus_equals -> empty .)
    THIS_KWD        reduce using rule 70 (seen_plus_equals -> empty .)
    CTE_TRUE        reduce using rule 70 (seen_plus_equals -> empty .)
    CTE_FALSE       reduce using rule 70 (seen_plus_equals -> empty .)


state 270

    (64) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals . EXPRESSION
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 163
    EXPRESSION                     shift and go to state 331
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 271

    (71) seen_minus_equals -> empty .

    MINUS           reduce using rule 71 (seen_minus_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 71 (seen_minus_equals -> empty .)
    NOT             reduce using rule 71 (seen_minus_equals -> empty .)
    STOI_KWD        reduce using rule 71 (seen_minus_equals -> empty .)
    STOF_KWD        reduce using rule 71 (seen_minus_equals -> empty .)
    STOB_KWD        reduce using rule 71 (seen_minus_equals -> empty .)
    SUBSTR_KWD      reduce using rule 71 (seen_minus_equals -> empty .)
    STRLEN_KWD      reduce using rule 71 (seen_minus_equals -> empty .)
    RANDINT_KWD     reduce using rule 71 (seen_minus_equals -> empty .)
    ID              reduce using rule 71 (seen_minus_equals -> empty .)
    NEW_KWD         reduce using rule 71 (seen_minus_equals -> empty .)
    CTE_I           reduce using rule 71 (seen_minus_equals -> empty .)
    CTE_F           reduce using rule 71 (seen_minus_equals -> empty .)
    CTE_S           reduce using rule 71 (seen_minus_equals -> empty .)
    THIS_KWD        reduce using rule 71 (seen_minus_equals -> empty .)
    CTE_TRUE        reduce using rule 71 (seen_minus_equals -> empty .)
    CTE_FALSE       reduce using rule 71 (seen_minus_equals -> empty .)


state 272

    (65) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals . EXPRESSION
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 163
    EXPRESSION                     shift and go to state 332
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 273

    (72) seen_times_equals -> empty .

    MINUS           reduce using rule 72 (seen_times_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 72 (seen_times_equals -> empty .)
    NOT             reduce using rule 72 (seen_times_equals -> empty .)
    STOI_KWD        reduce using rule 72 (seen_times_equals -> empty .)
    STOF_KWD        reduce using rule 72 (seen_times_equals -> empty .)
    STOB_KWD        reduce using rule 72 (seen_times_equals -> empty .)
    SUBSTR_KWD      reduce using rule 72 (seen_times_equals -> empty .)
    STRLEN_KWD      reduce using rule 72 (seen_times_equals -> empty .)
    RANDINT_KWD     reduce using rule 72 (seen_times_equals -> empty .)
    ID              reduce using rule 72 (seen_times_equals -> empty .)
    NEW_KWD         reduce using rule 72 (seen_times_equals -> empty .)
    CTE_I           reduce using rule 72 (seen_times_equals -> empty .)
    CTE_F           reduce using rule 72 (seen_times_equals -> empty .)
    CTE_S           reduce using rule 72 (seen_times_equals -> empty .)
    THIS_KWD        reduce using rule 72 (seen_times_equals -> empty .)
    CTE_TRUE        reduce using rule 72 (seen_times_equals -> empty .)
    CTE_FALSE       reduce using rule 72 (seen_times_equals -> empty .)


state 274

    (66) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals . EXPRESSION
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 163
    EXPRESSION                     shift and go to state 333
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 275

    (73) seen_over_equals -> empty .

    MINUS           reduce using rule 73 (seen_over_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 73 (seen_over_equals -> empty .)
    NOT             reduce using rule 73 (seen_over_equals -> empty .)
    STOI_KWD        reduce using rule 73 (seen_over_equals -> empty .)
    STOF_KWD        reduce using rule 73 (seen_over_equals -> empty .)
    STOB_KWD        reduce using rule 73 (seen_over_equals -> empty .)
    SUBSTR_KWD      reduce using rule 73 (seen_over_equals -> empty .)
    STRLEN_KWD      reduce using rule 73 (seen_over_equals -> empty .)
    RANDINT_KWD     reduce using rule 73 (seen_over_equals -> empty .)
    ID              reduce using rule 73 (seen_over_equals -> empty .)
    NEW_KWD         reduce using rule 73 (seen_over_equals -> empty .)
    CTE_I           reduce using rule 73 (seen_over_equals -> empty .)
    CTE_F           reduce using rule 73 (seen_over_equals -> empty .)
    CTE_S           reduce using rule 73 (seen_over_equals -> empty .)
    THIS_KWD        reduce using rule 73 (seen_over_equals -> empty .)
    CTE_TRUE        reduce using rule 73 (seen_over_equals -> empty .)
    CTE_FALSE       reduce using rule 73 (seen_over_equals -> empty .)


state 276

    (67) ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .

    SEMI_COLON      reduce using rule 67 (ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .)
    CLOSE_PARENTHESIS reduce using rule 67 (ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .)


state 277

    (74) seen_plus_plus -> empty .

    SEMI_COLON      reduce using rule 74 (seen_plus_plus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 74 (seen_plus_plus -> empty .)


state 278

    (68) ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .

    SEMI_COLON      reduce using rule 68 (ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .)
    CLOSE_PARENTHESIS reduce using rule 68 (ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .)


state 279

    (75) seen_minus_minus -> empty .

    SEMI_COLON      reduce using rule 75 (seen_minus_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 75 (seen_minus_minus -> empty .)


state 280

    (182) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 182 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 182 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 281

    (21) READABLE_LIST -> VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (24) seen_readable -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_readable                  shift and go to state 334
    empty                          shift and go to state 335

state 282

    (153) seen_array_id -> empty .

    OPEN_BRACKET    reduce using rule 153 (seen_array_id -> empty .)


state 283

    (183) PRINT -> PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 183 (PRINT -> PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 183 (PRINT -> PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 284

    (185) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (186) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (187) PRINTABLE_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 337
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    PRINTABLE_P                    shift and go to state 336
    empty                          shift and go to state 338

state 285

    (188) seen_printable -> empty .

    COMMA           reduce using rule 188 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 188 (seen_printable -> empty .)


state 286

    (184) PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 184 (PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 184 (PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 287

    (49) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (50) seen_open_buffer -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_open_buffer               shift and go to state 339
    empty                          shift and go to state 340

state 288

    (127) seen_var_in_io -> empty .

    COMMA           reduce using rule 127 (seen_var_in_io -> empty .)


state 289

    (51) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (52) seen_write_buffer -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_write_buffer              shift and go to state 341
    empty                          shift and go to state 342

state 290

    (84) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXP                            shift and go to state 148
    EXPRESSION                     shift and go to state 343
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 291

    (86) seen_comp_op -> empty .

    MINUS           reduce using rule 86 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 86 (seen_comp_op -> empty .)
    NOT             reduce using rule 86 (seen_comp_op -> empty .)
    STOI_KWD        reduce using rule 86 (seen_comp_op -> empty .)
    STOF_KWD        reduce using rule 86 (seen_comp_op -> empty .)
    STOB_KWD        reduce using rule 86 (seen_comp_op -> empty .)
    SUBSTR_KWD      reduce using rule 86 (seen_comp_op -> empty .)
    STRLEN_KWD      reduce using rule 86 (seen_comp_op -> empty .)
    RANDINT_KWD     reduce using rule 86 (seen_comp_op -> empty .)
    ID              reduce using rule 86 (seen_comp_op -> empty .)
    NEW_KWD         reduce using rule 86 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 86 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 86 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 86 (seen_comp_op -> empty .)
    THIS_KWD        reduce using rule 86 (seen_comp_op -> empty .)
    CTE_TRUE        reduce using rule 86 (seen_comp_op -> empty .)
    CTE_FALSE       reduce using rule 86 (seen_comp_op -> empty .)


state 292

    (95) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 344


state 293

    (76) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 76 (EXP -> TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 76 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 76 (EXP -> TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 76 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 76 (EXP -> TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 76 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 76 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 76 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 76 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 76 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 76 (EXP -> TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 76 (EXP -> TERM seen_term EXP_P .)


state 294

    (79) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (82) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 82 (seen_term_op -> .)
    NOT             reduce using rule 82 (seen_term_op -> .)
    MINUS           reduce using rule 82 (seen_term_op -> .)
    STOI_KWD        reduce using rule 82 (seen_term_op -> .)
    STOF_KWD        reduce using rule 82 (seen_term_op -> .)
    STOB_KWD        reduce using rule 82 (seen_term_op -> .)
    SUBSTR_KWD      reduce using rule 82 (seen_term_op -> .)
    STRLEN_KWD      reduce using rule 82 (seen_term_op -> .)
    RANDINT_KWD     reduce using rule 82 (seen_term_op -> .)
    ID              reduce using rule 82 (seen_term_op -> .)
    NEW_KWD         reduce using rule 82 (seen_term_op -> .)
    CTE_I           reduce using rule 82 (seen_term_op -> .)
    CTE_F           reduce using rule 82 (seen_term_op -> .)
    CTE_S           reduce using rule 82 (seen_term_op -> .)
    THIS_KWD        reduce using rule 82 (seen_term_op -> .)
    CTE_TRUE        reduce using rule 82 (seen_term_op -> .)
    CTE_FALSE       reduce using rule 82 (seen_term_op -> .)

    seen_term_op                   shift and go to state 345

state 295

    (80) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (82) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 82 (seen_term_op -> .)
    NOT             reduce using rule 82 (seen_term_op -> .)
    MINUS           reduce using rule 82 (seen_term_op -> .)
    STOI_KWD        reduce using rule 82 (seen_term_op -> .)
    STOF_KWD        reduce using rule 82 (seen_term_op -> .)
    STOB_KWD        reduce using rule 82 (seen_term_op -> .)
    SUBSTR_KWD      reduce using rule 82 (seen_term_op -> .)
    STRLEN_KWD      reduce using rule 82 (seen_term_op -> .)
    RANDINT_KWD     reduce using rule 82 (seen_term_op -> .)
    ID              reduce using rule 82 (seen_term_op -> .)
    NEW_KWD         reduce using rule 82 (seen_term_op -> .)
    CTE_I           reduce using rule 82 (seen_term_op -> .)
    CTE_F           reduce using rule 82 (seen_term_op -> .)
    CTE_S           reduce using rule 82 (seen_term_op -> .)
    THIS_KWD        reduce using rule 82 (seen_term_op -> .)
    CTE_TRUE        reduce using rule 82 (seen_term_op -> .)
    CTE_FALSE       reduce using rule 82 (seen_term_op -> .)

    seen_term_op                   shift and go to state 346

state 296

    (81) EXP_P -> empty .

    BIGGER          reduce using rule 81 (EXP_P -> empty .)
    BIGGER_EQ       reduce using rule 81 (EXP_P -> empty .)
    SMALLER         reduce using rule 81 (EXP_P -> empty .)
    SMALLER_EQ      reduce using rule 81 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 81 (EXP_P -> empty .)
    NOT_EQUALS      reduce using rule 81 (EXP_P -> empty .)
    AND             reduce using rule 81 (EXP_P -> empty .)
    OR              reduce using rule 81 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 81 (EXP_P -> empty .)
    COMMA           reduce using rule 81 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 81 (EXP_P -> empty .)
    CLOSE_BRACKET   reduce using rule 81 (EXP_P -> empty .)


state 297

    (77) EXP -> MINUS seen_unary_minus EXP . pop_unary_minus
    (121) pop_unary_minus -> . empty
    (214) empty -> .

    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    pop_unary_minus                shift and go to state 347
    empty                          shift and go to state 348

state 298

    (97) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (161) TERM -> FACTOR . seen_factor TERM_P
    (121) pop_unary_minus -> . empty
    (165) seen_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    pop_unary_minus                shift and go to state 349
    seen_factor                    shift and go to state 223
    empty                          shift and go to state 350

state 299

    (161) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 161 (TERM -> FACTOR seen_factor TERM_P .)


state 300

    (162) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (166) seen_factor_op -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_factor_op                 shift and go to state 351
    empty                          shift and go to state 352

state 301

    (163) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (166) seen_factor_op -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_factor_op                 shift and go to state 353
    empty                          shift and go to state 352

state 302

    (164) TERM_P -> empty .

    PLUS            reduce using rule 164 (TERM_P -> empty .)
    MINUS           reduce using rule 164 (TERM_P -> empty .)
    BIGGER          reduce using rule 164 (TERM_P -> empty .)
    BIGGER_EQ       reduce using rule 164 (TERM_P -> empty .)
    SMALLER         reduce using rule 164 (TERM_P -> empty .)
    SMALLER_EQ      reduce using rule 164 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 164 (TERM_P -> empty .)
    NOT_EQUALS      reduce using rule 164 (TERM_P -> empty .)
    AND             reduce using rule 164 (TERM_P -> empty .)
    OR              reduce using rule 164 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 164 (TERM_P -> empty .)
    COMMA           reduce using rule 164 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 164 (TERM_P -> empty .)
    CLOSE_BRACKET   reduce using rule 164 (TERM_P -> empty .)


state 303

    (96) FACTOR -> NOT seen_not FACTOR . pop_not
    (119) pop_not -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    pop_not                        shift and go to state 354
    empty                          shift and go to state 355

state 304

    (97) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (122) seen_unary_minus -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_unary_minus               shift and go to state 356
    empty                          shift and go to state 222

state 305

    (98) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (123) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 357
    empty                          shift and go to state 219

state 306

    (99) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (123) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 358
    empty                          shift and go to state 219

state 307

    (100) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (123) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 359
    empty                          shift and go to state 219

state 308

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 360
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 309

    (102) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 361
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 310

    (103) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 362
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 311

    (146) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 363


state 312

    (147) seen_class_id_instance -> empty .

    OPEN_PARENTHESIS reduce using rule 147 (seen_class_id_instance -> empty .)


state 313

    (140) CLASS_REFERENCE -> ARRAY seen_var_in_assign DOT seen_dot_operator .

    ID              reduce using rule 140 (CLASS_REFERENCE -> ARRAY seen_var_in_assign DOT seen_dot_operator .)
    THIS_KWD        reduce using rule 140 (CLASS_REFERENCE -> ARRAY seen_var_in_assign DOT seen_dot_operator .)


state 314

    (141) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .

    ID              reduce using rule 141 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)
    THIS_KWD        reduce using rule 141 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)


state 315

    (149) seen_this_dot_operator -> empty .

    ID              reduce using rule 149 (seen_this_dot_operator -> empty .)
    THIS_KWD        reduce using rule 149 (seen_this_dot_operator -> empty .)


state 316

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
    (195) seen_if_kwd -> . empty
    (214) empty -> .

    OPEN_CURLY      reduce using rule 214 (empty -> .)

    seen_if_kwd                    shift and go to state 364
    empty                          shift and go to state 365

state 317

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    CLOSE_PARENTHESIS shift and go to state 366


state 318

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    EQUALS          shift and go to state 367


state 319

    (203) seen_for_kwd -> empty .

    EQUALS          reduce using rule 203 (seen_for_kwd -> empty .)


state 320

    (28) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . PRINT SEMI_COLON
    (44) STATEMENT -> . PRINTLN SEMI_COLON
    (45) STATEMENT -> . OPEN SEMI_COLON
    (46) STATEMENT -> . WRITE SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (62) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (63) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (64) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (182) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (183) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (184) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (51) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) FLOW_CONTROL -> . DECISION
    (56) FLOW_CONTROL -> . REPETITION
    (179) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (180) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (181) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 82
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    WRITE_KWD       shift and go to state 101
    RETURN_KWD      shift and go to state 104
    THIS_KWD        shift and go to state 106
    IF_KWD          shift and go to state 107
    WHILE_KWD       shift and go to state 110
    FOR_KWD         shift and go to state 111

    STATEMENT_STAR                 shift and go to state 368
    STATEMENT                      shift and go to state 84
    empty                          shift and go to state 85
    ASSIGN                         shift and go to state 86
    FUNC_CALL                      shift and go to state 87
    READ                           shift and go to state 88
    PRINT                          shift and go to state 89
    PRINTLN                        shift and go to state 90
    OPEN                           shift and go to state 91
    WRITE                          shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 102
    REPETITION                     shift and go to state 103
    ARRAY                          shift and go to state 105
    CONDITIONAL_REP                shift and go to state 108
    UNCONDITIONAL_REP              shift and go to state 109

state 321

    (37) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 369


state 322

    (157) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_BRACKET   shift and go to state 370


state 323

    (167) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 167 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 324

    (170) ARG_LIST -> VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (106) FACTOR -> VAR seen_var_as_factor .
    (178) seen_arg -> . empty
    (214) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 106 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 214 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 214 (empty -> .) ]

    seen_arg                       shift and go to state 371
    empty                          shift and go to state 326

state 325

    (171) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 372
    empty                          shift and go to state 374

state 326

    (178) seen_arg -> empty .

    COMMA           reduce using rule 178 (seen_arg -> empty .)
    CLOSE_PARENTHESIS reduce using rule 178 (seen_arg -> empty .)


state 327

    (172) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 375
    empty                          shift and go to state 374

state 328

    (150) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (155) seen_array_access -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_array_access              shift and go to state 376
    empty                          shift and go to state 377

state 329

    (62) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 62 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 62 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)


state 330

    (63) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .

    SEMI_COLON      reduce using rule 63 (ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 63 (ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .)


state 331

    (64) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .

    SEMI_COLON      reduce using rule 64 (ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 64 (ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .)


state 332

    (65) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .

    SEMI_COLON      reduce using rule 65 (ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 65 (ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .)


state 333

    (66) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .

    SEMI_COLON      reduce using rule 66 (ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 66 (ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .)


state 334

    (21) READABLE_LIST -> VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (22) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (23) READABLE_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 379
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    READABLE_LIST_P                shift and go to state 378
    empty                          shift and go to state 380

state 335

    (24) seen_readable -> empty .

    COMMA           reduce using rule 24 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 24 (seen_readable -> empty .)


state 336

    (185) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 185 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 337

    (186) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 381
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 338

    (187) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 187 (PRINTABLE_P -> empty .)


state 339

    (49) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 382


state 340

    (50) seen_open_buffer -> empty .

    COMMA           reduce using rule 50 (seen_open_buffer -> empty .)


state 341

    (51) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 383


state 342

    (52) seen_write_buffer -> empty .

    COMMA           reduce using rule 52 (seen_write_buffer -> empty .)


state 343

    (84) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (85) seen_comp -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_comp                      shift and go to state 384
    empty                          shift and go to state 385

state 344

    (95) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (124) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 386
    empty                          shift and go to state 387

state 345

    (79) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    MINUS           shift and go to state 304
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    TERM                           shift and go to state 388
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 346

    (80) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    MINUS           shift and go to state 304
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    TERM                           shift and go to state 389
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 347

    (77) EXP -> MINUS seen_unary_minus EXP pop_unary_minus .

    BIGGER          reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    BIGGER_EQ       reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER         reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER_EQ      reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    NOT_EQUALS      reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    AND             reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    OR              reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SEMI_COLON      reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    COMMA           reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 77 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)


state 348

    (121) pop_unary_minus -> empty .

    BIGGER          reduce using rule 121 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 121 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 121 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 121 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 121 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 121 (pop_unary_minus -> empty .)
    AND             reduce using rule 121 (pop_unary_minus -> empty .)
    OR              reduce using rule 121 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 121 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 121 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 121 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 121 (pop_unary_minus -> empty .)
    STAR            reduce using rule 121 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 121 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 121 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 121 (pop_unary_minus -> empty .)


state 349

    (97) FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .

    STAR            reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    FWD_SLASH       reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    PLUS            reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    MINUS           reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER          reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER_EQ       reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER         reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER_EQ      reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    NOT_EQUALS      reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    AND             reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    OR              reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SEMI_COLON      reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    COMMA           reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 97 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)


state 350

    (121) pop_unary_minus -> empty .
    (165) seen_factor -> empty .

  ! reduce/reduce conflict for STAR resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 121 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 121 (pop_unary_minus -> empty .)
    STAR            reduce using rule 121 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 121 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 121 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 121 (pop_unary_minus -> empty .)
    BIGGER          reduce using rule 121 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 121 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 121 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 121 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 121 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 121 (pop_unary_minus -> empty .)
    AND             reduce using rule 121 (pop_unary_minus -> empty .)
    OR              reduce using rule 121 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 121 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 121 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 121 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 121 (pop_unary_minus -> empty .)

  ! STAR            [ reduce using rule 165 (seen_factor -> empty .) ]
  ! FWD_SLASH       [ reduce using rule 165 (seen_factor -> empty .) ]
  ! PLUS            [ reduce using rule 165 (seen_factor -> empty .) ]
  ! MINUS           [ reduce using rule 165 (seen_factor -> empty .) ]
  ! BIGGER          [ reduce using rule 165 (seen_factor -> empty .) ]
  ! BIGGER_EQ       [ reduce using rule 165 (seen_factor -> empty .) ]
  ! SMALLER         [ reduce using rule 165 (seen_factor -> empty .) ]
  ! SMALLER_EQ      [ reduce using rule 165 (seen_factor -> empty .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 165 (seen_factor -> empty .) ]
  ! NOT_EQUALS      [ reduce using rule 165 (seen_factor -> empty .) ]
  ! AND             [ reduce using rule 165 (seen_factor -> empty .) ]
  ! OR              [ reduce using rule 165 (seen_factor -> empty .) ]
  ! SEMI_COLON      [ reduce using rule 165 (seen_factor -> empty .) ]
  ! COMMA           [ reduce using rule 165 (seen_factor -> empty .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 165 (seen_factor -> empty .) ]
  ! CLOSE_BRACKET   [ reduce using rule 165 (seen_factor -> empty .) ]


state 351

    (162) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    MINUS           shift and go to state 304
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    FACTOR                         shift and go to state 390
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 352

    (166) seen_factor_op -> empty .

    OPEN_PARENTHESIS reduce using rule 166 (seen_factor_op -> empty .)
    NOT             reduce using rule 166 (seen_factor_op -> empty .)
    MINUS           reduce using rule 166 (seen_factor_op -> empty .)
    STOI_KWD        reduce using rule 166 (seen_factor_op -> empty .)
    STOF_KWD        reduce using rule 166 (seen_factor_op -> empty .)
    STOB_KWD        reduce using rule 166 (seen_factor_op -> empty .)
    SUBSTR_KWD      reduce using rule 166 (seen_factor_op -> empty .)
    STRLEN_KWD      reduce using rule 166 (seen_factor_op -> empty .)
    RANDINT_KWD     reduce using rule 166 (seen_factor_op -> empty .)
    ID              reduce using rule 166 (seen_factor_op -> empty .)
    NEW_KWD         reduce using rule 166 (seen_factor_op -> empty .)
    CTE_I           reduce using rule 166 (seen_factor_op -> empty .)
    CTE_F           reduce using rule 166 (seen_factor_op -> empty .)
    CTE_S           reduce using rule 166 (seen_factor_op -> empty .)
    THIS_KWD        reduce using rule 166 (seen_factor_op -> empty .)
    CTE_TRUE        reduce using rule 166 (seen_factor_op -> empty .)
    CTE_FALSE       reduce using rule 166 (seen_factor_op -> empty .)


state 353

    (163) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    MINUS           shift and go to state 304
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    FACTOR                         shift and go to state 391
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 354

    (96) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER_EQ       reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER_EQ      reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    NOT_EQUALS      reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_BRACKET   reduce using rule 96 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 355

    (119) pop_not -> empty .

    STAR            reduce using rule 119 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 119 (pop_not -> empty .)
    PLUS            reduce using rule 119 (pop_not -> empty .)
    MINUS           reduce using rule 119 (pop_not -> empty .)
    BIGGER          reduce using rule 119 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 119 (pop_not -> empty .)
    SMALLER         reduce using rule 119 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 119 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 119 (pop_not -> empty .)
    NOT_EQUALS      reduce using rule 119 (pop_not -> empty .)
    AND             reduce using rule 119 (pop_not -> empty .)
    OR              reduce using rule 119 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 119 (pop_not -> empty .)
    COMMA           reduce using rule 119 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 119 (pop_not -> empty .)
    CLOSE_BRACKET   reduce using rule 119 (pop_not -> empty .)


state 356

    (97) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    MINUS           shift and go to state 304
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    FACTOR                         shift and go to state 392
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 357

    (98) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 393
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 358

    (99) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 394
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 359

    (100) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 395
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 360

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (111) seen_substr_str -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_substr_str                shift and go to state 396
    empty                          shift and go to state 397

state 361

    (102) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (110) seen_strlen -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_strlen                    shift and go to state 398
    empty                          shift and go to state 399

state 362

    (103) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (109) seen_randint_arg -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_randint_arg               shift and go to state 400
    empty                          shift and go to state 401

state 363

    (146) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 402


state 364

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 403


state 365

    (195) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 195 (seen_if_kwd -> empty .)


state 366

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (201) seen_while_exp -> . empty
    (214) empty -> .

    OPEN_CURLY      reduce using rule 214 (empty -> .)

    seen_while_exp                 shift and go to state 404
    empty                          shift and go to state 405

state 367

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 163
    EXPRESSION                     shift and go to state 406
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 368

    (28) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 407


state 369

    (37) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 37 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 370

    (157) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DECLARATION_P
    (157) ARRAY_DECLARATION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (158) ARRAY_DECLARATION_P -> . empty
    (214) empty -> .

    OPEN_BRACKET    shift and go to state 120
    COMMA           reduce using rule 214 (empty -> .)
    COLON           reduce using rule 214 (empty -> .)

    ARRAY_DECLARATION_P            shift and go to state 408
    empty                          shift and go to state 122

state 371

    (170) ARG_LIST -> VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 409
    empty                          shift and go to state 374

state 372

    (171) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 171 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 373

    (174) ARG_LIST_P -> COMMA . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (176) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    ID              shift and go to state 257
    THIS_KWD        shift and go to state 106
    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 410
    EXPRESSION                     shift and go to state 411
    FUNC_CALL                      shift and go to state 412
    ARRAY                          shift and go to state 105
    CLASS_REFERENCE                shift and go to state 263
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CTE_B                          shift and go to state 169

state 374

    (177) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 177 (ARG_LIST_P -> empty .)


state 375

    (172) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 172 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 376

    (150) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 413


state 377

    (155) seen_array_access -> empty .

    CLOSE_BRACKET   reduce using rule 155 (seen_array_access -> empty .)


state 378

    (21) READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 21 (READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 379

    (22) READABLE_LIST_P -> COMMA . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 199
    THIS_KWD        shift and go to state 106

    VAR                            shift and go to state 414
    ARRAY                          shift and go to state 105
    CLASS_REFERENCE                shift and go to state 200

state 380

    (23) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 23 (READABLE_LIST_P -> empty .)


state 381

    (186) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (188) seen_printable -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_printable                 shift and go to state 415
    empty                          shift and go to state 285

state 382

    (49) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 163
    EXPRESSION                     shift and go to state 416
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 383

    (51) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 163
    EXPRESSION                     shift and go to state 417
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 384

    (84) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    SEMI_COLON      reduce using rule 84 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    COMMA           reduce using rule 84 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 84 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_BRACKET   reduce using rule 84 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 385

    (85) seen_comp -> empty .

    SEMI_COLON      reduce using rule 85 (seen_comp -> empty .)
    COMMA           reduce using rule 85 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 85 (seen_comp -> empty .)
    CLOSE_BRACKET   reduce using rule 85 (seen_comp -> empty .)


state 386

    (95) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    NOT_EQUALS      reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 95 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 387

    (124) seen_close_parenthesis -> empty .

    STAR            reduce using rule 124 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 124 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 124 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 124 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 124 (seen_close_parenthesis -> empty .)
    BIGGER_EQ       reduce using rule 124 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 124 (seen_close_parenthesis -> empty .)
    SMALLER_EQ      reduce using rule 124 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 124 (seen_close_parenthesis -> empty .)
    NOT_EQUALS      reduce using rule 124 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 124 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 124 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 124 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 124 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 124 (seen_close_parenthesis -> empty .)
    CLOSE_BRACKET   reduce using rule 124 (seen_close_parenthesis -> empty .)


state 388

    (79) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (78) seen_term -> .

    PLUS            reduce using rule 78 (seen_term -> .)
    MINUS           reduce using rule 78 (seen_term -> .)
    BIGGER          reduce using rule 78 (seen_term -> .)
    BIGGER_EQ       reduce using rule 78 (seen_term -> .)
    SMALLER         reduce using rule 78 (seen_term -> .)
    SMALLER_EQ      reduce using rule 78 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 78 (seen_term -> .)
    NOT_EQUALS      reduce using rule 78 (seen_term -> .)
    AND             reduce using rule 78 (seen_term -> .)
    OR              reduce using rule 78 (seen_term -> .)
    SEMI_COLON      reduce using rule 78 (seen_term -> .)
    COMMA           reduce using rule 78 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 78 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 78 (seen_term -> .)

    seen_term                      shift and go to state 418

state 389

    (80) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (78) seen_term -> .

    PLUS            reduce using rule 78 (seen_term -> .)
    MINUS           reduce using rule 78 (seen_term -> .)
    BIGGER          reduce using rule 78 (seen_term -> .)
    BIGGER_EQ       reduce using rule 78 (seen_term -> .)
    SMALLER         reduce using rule 78 (seen_term -> .)
    SMALLER_EQ      reduce using rule 78 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 78 (seen_term -> .)
    NOT_EQUALS      reduce using rule 78 (seen_term -> .)
    AND             reduce using rule 78 (seen_term -> .)
    OR              reduce using rule 78 (seen_term -> .)
    SEMI_COLON      reduce using rule 78 (seen_term -> .)
    COMMA           reduce using rule 78 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 78 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 78 (seen_term -> .)

    seen_term                      shift and go to state 419

state 390

    (162) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (165) seen_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_factor                    shift and go to state 420
    empty                          shift and go to state 224

state 391

    (163) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (165) seen_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_factor                    shift and go to state 421
    empty                          shift and go to state 224

state 392

    (97) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (121) pop_unary_minus -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    pop_unary_minus                shift and go to state 349
    empty                          shift and go to state 348

state 393

    (98) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 422


state 394

    (99) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 423


state 395

    (100) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 424


state 396

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str . COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    COMMA           shift and go to state 425


state 397

    (111) seen_substr_str -> empty .

    COMMA           reduce using rule 111 (seen_substr_str -> empty .)


state 398

    (102) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 426


state 399

    (110) seen_strlen -> empty .

    CLOSE_PARENTHESIS reduce using rule 110 (seen_strlen -> empty .)


state 400

    (103) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg . COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis

    COMMA           shift and go to state 427


state 401

    (109) seen_randint_arg -> empty .

    COMMA           reduce using rule 109 (seen_randint_arg -> empty .)
    CLOSE_PARENTHESIS reduce using rule 109 (seen_randint_arg -> empty .)


state 402

    (146) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    STAR            reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    AND             reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OR              reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMI_COLON      reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 146 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 403

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
    (189) entered_condition -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    READ_KWD        reduce using rule 214 (empty -> .)
    PRINT_KWD       reduce using rule 214 (empty -> .)
    PRINTLN_KWD     reduce using rule 214 (empty -> .)
    OPEN_KWD        reduce using rule 214 (empty -> .)
    WRITE_KWD       reduce using rule 214 (empty -> .)
    RETURN_KWD      reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    IF_KWD          reduce using rule 214 (empty -> .)
    WHILE_KWD       reduce using rule 214 (empty -> .)
    FOR_KWD         reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    entered_condition              shift and go to state 428
    empty                          shift and go to state 429

state 404

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    OPEN_CURLY      shift and go to state 430


state 405

    (201) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 201 (seen_while_exp -> empty .)


state 406

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (205) seen_for_start_exp -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)

    seen_for_start_exp             shift and go to state 431
    empty                          shift and go to state 432

state 407

    (28) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 28 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_I          reduce using rule 28 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 28 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 28 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 28 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    ID              reduce using rule 28 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 28 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 28 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 28 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 408

    (157) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .

    COMMA           reduce using rule 157 (ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)
    COLON           reduce using rule 157 (ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)


state 409

    (170) ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 170 (ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 410

    (174) ARG_LIST_P -> COMMA VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (106) FACTOR -> VAR . seen_var_as_factor
    (126) seen_var_as_factor -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)

    seen_var_as_factor             shift and go to state 433
    empty                          shift and go to state 237

state 411

    (175) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (178) seen_arg -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_arg                       shift and go to state 434
    empty                          shift and go to state 326

state 412

    (176) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (104) FACTOR -> FUNC_CALL .
    (178) seen_arg -> . empty
    (214) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 104 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 104 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 104 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 104 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 104 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 104 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 104 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 104 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 104 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 104 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 104 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 104 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 104 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 104 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 104 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 104 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 214 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 214 (empty -> .) ]

    seen_arg                       shift and go to state 435
    empty                          shift and go to state 326

state 413

    (150) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (151) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (152) ARRAY_P -> . empty
    (214) empty -> .

    OPEN_BRACKET    shift and go to state 436
    DOT             reduce using rule 214 (empty -> .)
    EQUALS          reduce using rule 214 (empty -> .)
    PLUS_EQUALS     reduce using rule 214 (empty -> .)
    MINUS_EQUALS    reduce using rule 214 (empty -> .)
    TIMES_EQUALS    reduce using rule 214 (empty -> .)
    OVER_EQUALS     reduce using rule 214 (empty -> .)
    PLUS_PLUS       reduce using rule 214 (empty -> .)
    MINUS_MINUS     reduce using rule 214 (empty -> .)
    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    ARRAY_P                        shift and go to state 437
    empty                          shift and go to state 438

state 414

    (22) READABLE_LIST_P -> COMMA VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (125) seen_var_in_assign -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_var_in_assign             shift and go to state 439
    empty                          shift and go to state 137

state 415

    (186) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (186) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (187) PRINTABLE_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 337
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    PRINTABLE_P                    shift and go to state 440
    empty                          shift and go to state 338

state 416

    (49) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) seen_file_path -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_file_path                 shift and go to state 441
    empty                          shift and go to state 442

state 417

    (51) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) seen_file_path -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_file_path                 shift and go to state 443
    empty                          shift and go to state 442

state 418

    (79) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (79) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (80) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (81) EXP_P -> . empty
    (214) empty -> .

    PLUS            shift and go to state 294
    MINUS           shift and go to state 295
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    EXP_P                          shift and go to state 444
    empty                          shift and go to state 296

state 419

    (80) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (79) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (80) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (81) EXP_P -> . empty
    (214) empty -> .

    PLUS            shift and go to state 294
    MINUS           shift and go to state 295
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    EXP_P                          shift and go to state 445
    empty                          shift and go to state 296

state 420

    (162) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (162) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (163) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (164) TERM_P -> . empty
    (214) empty -> .

    STAR            shift and go to state 300
    FWD_SLASH       shift and go to state 301
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    TERM_P                         shift and go to state 446
    empty                          shift and go to state 302

state 421

    (163) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (162) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (163) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (164) TERM_P -> . empty
    (214) empty -> .

    STAR            shift and go to state 300
    FWD_SLASH       shift and go to state 301
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    TERM_P                         shift and go to state 447
    empty                          shift and go to state 302

state 422

    (98) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (124) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 448
    empty                          shift and go to state 387

state 423

    (99) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (124) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 449
    empty                          shift and go to state 387

state 424

    (100) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (124) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 450
    empty                          shift and go to state 387

state 425

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA . EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 451
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 426

    (102) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS . seen_close_parenthesis
    (124) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 452
    empty                          shift and go to state 387

state 427

    (103) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA . EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 453
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 428

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition . STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . PRINT SEMI_COLON
    (44) STATEMENT -> . PRINTLN SEMI_COLON
    (45) STATEMENT -> . OPEN SEMI_COLON
    (46) STATEMENT -> . WRITE SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (62) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (63) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (64) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (182) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (183) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (184) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (51) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) FLOW_CONTROL -> . DECISION
    (56) FLOW_CONTROL -> . REPETITION
    (179) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (180) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (181) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 82
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    WRITE_KWD       shift and go to state 101
    RETURN_KWD      shift and go to state 104
    THIS_KWD        shift and go to state 106
    IF_KWD          shift and go to state 107
    WHILE_KWD       shift and go to state 110
    FOR_KWD         shift and go to state 111

    STATEMENT_STAR                 shift and go to state 454
    STATEMENT                      shift and go to state 84
    empty                          shift and go to state 85
    ASSIGN                         shift and go to state 86
    FUNC_CALL                      shift and go to state 87
    READ                           shift and go to state 88
    PRINT                          shift and go to state 89
    PRINTLN                        shift and go to state 90
    OPEN                           shift and go to state 91
    WRITE                          shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 102
    REPETITION                     shift and go to state 103
    ARRAY                          shift and go to state 105
    CONDITIONAL_REP                shift and go to state 108
    UNCONDITIONAL_REP              shift and go to state 109

state 429

    (189) entered_condition -> empty .

    ID              reduce using rule 189 (entered_condition -> empty .)
    READ_KWD        reduce using rule 189 (entered_condition -> empty .)
    PRINT_KWD       reduce using rule 189 (entered_condition -> empty .)
    PRINTLN_KWD     reduce using rule 189 (entered_condition -> empty .)
    OPEN_KWD        reduce using rule 189 (entered_condition -> empty .)
    WRITE_KWD       reduce using rule 189 (entered_condition -> empty .)
    RETURN_KWD      reduce using rule 189 (entered_condition -> empty .)
    THIS_KWD        reduce using rule 189 (entered_condition -> empty .)
    IF_KWD          reduce using rule 189 (entered_condition -> empty .)
    WHILE_KWD       reduce using rule 189 (entered_condition -> empty .)
    FOR_KWD         reduce using rule 189 (entered_condition -> empty .)
    CLOSE_CURLY     reduce using rule 189 (entered_condition -> empty .)


state 430

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (189) entered_condition -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    READ_KWD        reduce using rule 214 (empty -> .)
    PRINT_KWD       reduce using rule 214 (empty -> .)
    PRINTLN_KWD     reduce using rule 214 (empty -> .)
    OPEN_KWD        reduce using rule 214 (empty -> .)
    WRITE_KWD       reduce using rule 214 (empty -> .)
    RETURN_KWD      reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    IF_KWD          reduce using rule 214 (empty -> .)
    WHILE_KWD       reduce using rule 214 (empty -> .)
    FOR_KWD         reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    entered_condition              shift and go to state 455
    empty                          shift and go to state 429

state 431

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    SEMI_COLON      shift and go to state 456


state 432

    (205) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 205 (seen_for_start_exp -> empty .)


state 433

    (174) ARG_LIST_P -> COMMA VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (106) FACTOR -> VAR seen_var_as_factor .
    (178) seen_arg -> . empty
    (214) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 106 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 106 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 214 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 214 (empty -> .) ]

    seen_arg                       shift and go to state 457
    empty                          shift and go to state 326

state 434

    (175) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 458
    empty                          shift and go to state 374

state 435

    (176) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 459
    empty                          shift and go to state 374

state 436

    (151) ARRAY_P -> OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (154) seen_open_bracket -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_bracket              shift and go to state 460
    empty                          shift and go to state 265

state 437

    (150) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    DOT             reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    EQUALS          reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_EQUALS     reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_EQUALS    reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    TIMES_EQUALS    reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OVER_EQUALS     reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_PLUS       reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_MINUS     reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 150 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 438

    (152) ARRAY_P -> empty .

    DOT             reduce using rule 152 (ARRAY_P -> empty .)
    EQUALS          reduce using rule 152 (ARRAY_P -> empty .)
    PLUS_EQUALS     reduce using rule 152 (ARRAY_P -> empty .)
    MINUS_EQUALS    reduce using rule 152 (ARRAY_P -> empty .)
    TIMES_EQUALS    reduce using rule 152 (ARRAY_P -> empty .)
    OVER_EQUALS     reduce using rule 152 (ARRAY_P -> empty .)
    PLUS_PLUS       reduce using rule 152 (ARRAY_P -> empty .)
    MINUS_MINUS     reduce using rule 152 (ARRAY_P -> empty .)
    STAR            reduce using rule 152 (ARRAY_P -> empty .)
    FWD_SLASH       reduce using rule 152 (ARRAY_P -> empty .)
    PLUS            reduce using rule 152 (ARRAY_P -> empty .)
    MINUS           reduce using rule 152 (ARRAY_P -> empty .)
    BIGGER          reduce using rule 152 (ARRAY_P -> empty .)
    BIGGER_EQ       reduce using rule 152 (ARRAY_P -> empty .)
    SMALLER         reduce using rule 152 (ARRAY_P -> empty .)
    SMALLER_EQ      reduce using rule 152 (ARRAY_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 152 (ARRAY_P -> empty .)
    NOT_EQUALS      reduce using rule 152 (ARRAY_P -> empty .)
    AND             reduce using rule 152 (ARRAY_P -> empty .)
    OR              reduce using rule 152 (ARRAY_P -> empty .)
    SEMI_COLON      reduce using rule 152 (ARRAY_P -> empty .)
    COMMA           reduce using rule 152 (ARRAY_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 152 (ARRAY_P -> empty .)
    CLOSE_BRACKET   reduce using rule 152 (ARRAY_P -> empty .)


state 439

    (22) READABLE_LIST_P -> COMMA VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (24) seen_readable -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_readable                  shift and go to state 461
    empty                          shift and go to state 335

state 440

    (186) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 186 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 441

    (49) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 462


state 442

    (53) seen_file_path -> empty .

    COMMA           reduce using rule 53 (seen_file_path -> empty .)


state 443

    (51) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 463


state 444

    (79) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 79 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 445

    (80) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 80 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 446

    (162) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 162 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 447

    (163) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 163 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 448

    (98) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (115) seen_stox_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_stox_factor               shift and go to state 464
    empty                          shift and go to state 465

state 449

    (99) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (115) seen_stox_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_stox_factor               shift and go to state 466
    empty                          shift and go to state 465

state 450

    (100) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (115) seen_stox_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_stox_factor               shift and go to state 467
    empty                          shift and go to state 465

state 451

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION . seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (112) seen_substr_idx -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_substr_idx                shift and go to state 468
    empty                          shift and go to state 469

state 452

    (102) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    NOT_EQUALS      reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 102 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)


state 453

    (103) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION . seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (109) seen_randint_arg -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_randint_arg               shift and go to state 470
    empty                          shift and go to state 401

state 454

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR . left_condition CLOSE_CURLY DECISION_P
    (190) left_condition -> . empty
    (214) empty -> .

    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    left_condition                 shift and go to state 471
    empty                          shift and go to state 472

state 455

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition . STATEMENT_STAR CLOSE_CURLY left_condition
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . PRINT SEMI_COLON
    (44) STATEMENT -> . PRINTLN SEMI_COLON
    (45) STATEMENT -> . OPEN SEMI_COLON
    (46) STATEMENT -> . WRITE SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (62) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (63) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (64) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (182) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (183) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (184) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (51) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) FLOW_CONTROL -> . DECISION
    (56) FLOW_CONTROL -> . REPETITION
    (179) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (180) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (181) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 82
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    WRITE_KWD       shift and go to state 101
    RETURN_KWD      shift and go to state 104
    THIS_KWD        shift and go to state 106
    IF_KWD          shift and go to state 107
    WHILE_KWD       shift and go to state 110
    FOR_KWD         shift and go to state 111

    STATEMENT_STAR                 shift and go to state 473
    STATEMENT                      shift and go to state 84
    empty                          shift and go to state 85
    ASSIGN                         shift and go to state 86
    FUNC_CALL                      shift and go to state 87
    READ                           shift and go to state 88
    PRINT                          shift and go to state 89
    PRINTLN                        shift and go to state 90
    OPEN                           shift and go to state 91
    WRITE                          shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 102
    REPETITION                     shift and go to state 103
    ARRAY                          shift and go to state 105
    CONDITIONAL_REP                shift and go to state 108
    UNCONDITIONAL_REP              shift and go to state 109

state 456

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 163
    EXPRESSION                     shift and go to state 474
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 457

    (174) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 475
    empty                          shift and go to state 374

state 458

    (175) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 175 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 459

    (176) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 176 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 460

    (151) ARRAY_P -> OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 476
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 461

    (22) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (22) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (23) READABLE_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 379
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    READABLE_LIST_P                shift and go to state 477
    empty                          shift and go to state 380

state 462

    (49) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 163
    EXPRESSION                     shift and go to state 478
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 463

    (51) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    VAR                            shift and go to state 163
    EXPRESSION                     shift and go to state 479
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 464

    (98) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 98 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 465

    (115) seen_stox_factor -> empty .

    STAR            reduce using rule 115 (seen_stox_factor -> empty .)
    FWD_SLASH       reduce using rule 115 (seen_stox_factor -> empty .)
    PLUS            reduce using rule 115 (seen_stox_factor -> empty .)
    MINUS           reduce using rule 115 (seen_stox_factor -> empty .)
    BIGGER          reduce using rule 115 (seen_stox_factor -> empty .)
    BIGGER_EQ       reduce using rule 115 (seen_stox_factor -> empty .)
    SMALLER         reduce using rule 115 (seen_stox_factor -> empty .)
    SMALLER_EQ      reduce using rule 115 (seen_stox_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 115 (seen_stox_factor -> empty .)
    NOT_EQUALS      reduce using rule 115 (seen_stox_factor -> empty .)
    AND             reduce using rule 115 (seen_stox_factor -> empty .)
    OR              reduce using rule 115 (seen_stox_factor -> empty .)
    SEMI_COLON      reduce using rule 115 (seen_stox_factor -> empty .)
    COMMA           reduce using rule 115 (seen_stox_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 115 (seen_stox_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 115 (seen_stox_factor -> empty .)


state 466

    (99) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 99 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 467

    (100) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 100 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 468

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx . COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    COMMA           shift and go to state 480


state 469

    (112) seen_substr_idx -> empty .

    COMMA           reduce using rule 112 (seen_substr_idx -> empty .)


state 470

    (103) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg . seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (108) seen_randint -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_randint                   shift and go to state 481
    empty                          shift and go to state 482

state 471

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 483


state 472

    (190) left_condition -> empty .

    CLOSE_CURLY     reduce using rule 190 (left_condition -> empty .)
    ID              reduce using rule 190 (left_condition -> empty .)
    READ_KWD        reduce using rule 190 (left_condition -> empty .)
    PRINT_KWD       reduce using rule 190 (left_condition -> empty .)
    PRINTLN_KWD     reduce using rule 190 (left_condition -> empty .)
    OPEN_KWD        reduce using rule 190 (left_condition -> empty .)
    WRITE_KWD       reduce using rule 190 (left_condition -> empty .)
    RETURN_KWD      reduce using rule 190 (left_condition -> empty .)
    THIS_KWD        reduce using rule 190 (left_condition -> empty .)
    IF_KWD          reduce using rule 190 (left_condition -> empty .)
    WHILE_KWD       reduce using rule 190 (left_condition -> empty .)
    FOR_KWD         reduce using rule 190 (left_condition -> empty .)


state 473

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR . CLOSE_CURLY left_condition

    CLOSE_CURLY     shift and go to state 484


state 474

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (206) seen_for_end_exp -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)

    seen_for_end_exp               shift and go to state 485
    empty                          shift and go to state 486

state 475

    (174) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 174 (ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 476

    (151) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (155) seen_array_access -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_array_access              shift and go to state 487
    empty                          shift and go to state 377

state 477

    (22) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 22 (READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 478

    (49) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (54) seen_separator -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_separator                 shift and go to state 488
    empty                          shift and go to state 489

state 479

    (51) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (54) seen_separator -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_separator                 shift and go to state 490
    empty                          shift and go to state 489

state 480

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA . EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (83) EXPRESSION -> . EXP
    (84) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (76) EXP -> . TERM seen_term EXP_P
    (77) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (161) TERM -> . FACTOR seen_factor TERM_P
    (95) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (96) FACTOR -> . NOT seen_not FACTOR pop_not
    (97) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (98) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (99) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (100) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (102) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (103) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . FUNC_CALL
    (105) FACTOR -> . CLASS_INSTANCE
    (106) FACTOR -> . VAR seen_var_as_factor
    (107) FACTOR -> . CONSTANT
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (146) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (133) CONSTANT -> . CTE_I seen_cte_i
    (134) CONSTANT -> . CTE_F seen_cte_f
    (135) CONSTANT -> . CTE_S seen_cte_s
    (136) CONSTANT -> . CTE_B
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) CTE_B -> . CTE_TRUE seen_cte_true
    (138) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 152
    OPEN_PARENTHESIS shift and go to state 150
    NOT             shift and go to state 155
    STOI_KWD        shift and go to state 156
    STOF_KWD        shift and go to state 157
    STOB_KWD        shift and go to state 158
    SUBSTR_KWD      shift and go to state 159
    STRLEN_KWD      shift and go to state 160
    RANDINT_KWD     shift and go to state 161
    ID              shift and go to state 82
    NEW_KWD         shift and go to state 165
    CTE_I           shift and go to state 166
    CTE_F           shift and go to state 167
    CTE_S           shift and go to state 168
    THIS_KWD        shift and go to state 106
    CTE_TRUE        shift and go to state 170
    CTE_FALSE       shift and go to state 171

    EXPRESSION                     shift and go to state 491
    EXP                            shift and go to state 148
    TERM                           shift and go to state 151
    FACTOR                         shift and go to state 154
    FUNC_CALL                      shift and go to state 203
    CLASS_INSTANCE                 shift and go to state 162
    VAR                            shift and go to state 163
    CONSTANT                       shift and go to state 164
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105
    CTE_B                          shift and go to state 169

state 481

    (103) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 492


state 482

    (108) seen_randint -> empty .

    CLOSE_PARENTHESIS reduce using rule 108 (seen_randint -> empty .)


state 483

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY . DECISION_P
    (192) DECISION_P -> . ELSE_KWD seen_else_kwd DECISION
    (193) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (194) DECISION_P -> . empty
    (214) empty -> .

    ELSE_KWD        shift and go to state 494
    ID              reduce using rule 214 (empty -> .)
    READ_KWD        reduce using rule 214 (empty -> .)
    PRINT_KWD       reduce using rule 214 (empty -> .)
    PRINTLN_KWD     reduce using rule 214 (empty -> .)
    OPEN_KWD        reduce using rule 214 (empty -> .)
    WRITE_KWD       reduce using rule 214 (empty -> .)
    RETURN_KWD      reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    IF_KWD          reduce using rule 214 (empty -> .)
    WHILE_KWD       reduce using rule 214 (empty -> .)
    FOR_KWD         reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    DECISION_P                     shift and go to state 493
    empty                          shift and go to state 495

state 484

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY . left_condition
    (190) left_condition -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    READ_KWD        reduce using rule 214 (empty -> .)
    PRINT_KWD       reduce using rule 214 (empty -> .)
    PRINTLN_KWD     reduce using rule 214 (empty -> .)
    OPEN_KWD        reduce using rule 214 (empty -> .)
    WRITE_KWD       reduce using rule 214 (empty -> .)
    RETURN_KWD      reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    IF_KWD          reduce using rule 214 (empty -> .)
    WHILE_KWD       reduce using rule 214 (empty -> .)
    FOR_KWD         reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    left_condition                 shift and go to state 496
    empty                          shift and go to state 472

state 485

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    SEMI_COLON      shift and go to state 497


state 486

    (206) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 206 (seen_for_end_exp -> empty .)


state 487

    (151) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 498


state 488

    (49) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 499


state 489

    (54) seen_separator -> empty .

    CLOSE_PARENTHESIS reduce using rule 54 (seen_separator -> empty .)


state 490

    (51) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 500


state 491

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION . seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (113) seen_substr_size -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_substr_size               shift and go to state 501
    empty                          shift and go to state 502

state 492

    (103) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS . seen_close_parenthesis
    (124) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 503
    empty                          shift and go to state 387

state 493

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .

    ID              reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)
    PRINT_KWD       reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)
    PRINTLN_KWD     reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)
    OPEN_KWD        reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)
    RETURN_KWD      reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)
    THIS_KWD        reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P .)


state 494

    (192) DECISION_P -> ELSE_KWD . seen_else_kwd DECISION
    (193) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (196) seen_else_kwd -> . empty
    (214) empty -> .

    OPEN_CURLY      reduce using rule 214 (empty -> .)
    IF_KWD          reduce using rule 214 (empty -> .)

    seen_else_kwd                  shift and go to state 504
    empty                          shift and go to state 505

state 495

    (194) DECISION_P -> empty .

    ID              reduce using rule 194 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 194 (DECISION_P -> empty .)
    PRINT_KWD       reduce using rule 194 (DECISION_P -> empty .)
    PRINTLN_KWD     reduce using rule 194 (DECISION_P -> empty .)
    OPEN_KWD        reduce using rule 194 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 194 (DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 194 (DECISION_P -> empty .)
    THIS_KWD        reduce using rule 194 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 194 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 194 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 194 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 194 (DECISION_P -> empty .)


state 496

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .

    ID              reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    READ_KWD        reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    PRINT_KWD       reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    PRINTLN_KWD     reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    OPEN_KWD        reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    WRITE_KWD       reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    RETURN_KWD      reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    THIS_KWD        reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    IF_KWD          reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    WHILE_KWD       reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    FOR_KWD         reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    CLOSE_CURLY     reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)


state 497

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (57) FOR_INCR_STATEMENT -> . ASSIGN
    (58) FOR_INCR_STATEMENT -> . FUNC_CALL
    (59) FOR_INCR_STATEMENT -> . READ
    (60) FOR_INCR_STATEMENT -> . PRINT
    (61) FOR_INCR_STATEMENT -> . PRINTLN
    (62) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (63) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (64) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (182) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (183) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (184) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 82
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    THIS_KWD        shift and go to state 106

    VAR                            shift and go to state 95
    FOR_INCR_STATEMENT             shift and go to state 506
    ASSIGN                         shift and go to state 507
    FUNC_CALL                      shift and go to state 508
    READ                           shift and go to state 509
    PRINT                          shift and go to state 510
    PRINTLN                        shift and go to state 511
    CLASS_REFERENCE                shift and go to state 96
    ARRAY                          shift and go to state 105

state 498

    (151) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (151) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (152) ARRAY_P -> . empty
    (214) empty -> .

    OPEN_BRACKET    shift and go to state 436
    DOT             reduce using rule 214 (empty -> .)
    EQUALS          reduce using rule 214 (empty -> .)
    PLUS_EQUALS     reduce using rule 214 (empty -> .)
    MINUS_EQUALS    reduce using rule 214 (empty -> .)
    TIMES_EQUALS    reduce using rule 214 (empty -> .)
    OVER_EQUALS     reduce using rule 214 (empty -> .)
    PLUS_PLUS       reduce using rule 214 (empty -> .)
    MINUS_MINUS     reduce using rule 214 (empty -> .)
    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    ARRAY_P                        shift and go to state 512
    empty                          shift and go to state 438

state 499

    (49) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 49 (OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 500

    (51) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 51 (WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 501

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size . CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    CLOSE_PARENTHESIS shift and go to state 513


state 502

    (113) seen_substr_size -> empty .

    CLOSE_PARENTHESIS reduce using rule 113 (seen_substr_size -> empty .)


state 503

    (103) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    NOT_EQUALS      reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 103 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)


state 504

    (192) DECISION_P -> ELSE_KWD seen_else_kwd . DECISION
    (193) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 515
    IF_KWD          shift and go to state 107

    DECISION                       shift and go to state 514

state 505

    (196) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 196 (seen_else_kwd -> empty .)
    IF_KWD          reduce using rule 196 (seen_else_kwd -> empty .)


state 506

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (204) seen_for_incr_exp -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_for_incr_exp              shift and go to state 516
    empty                          shift and go to state 517

state 507

    (57) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 57 (FOR_INCR_STATEMENT -> ASSIGN .)


state 508

    (58) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 58 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 509

    (59) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 59 (FOR_INCR_STATEMENT -> READ .)


state 510

    (60) FOR_INCR_STATEMENT -> PRINT .

    CLOSE_PARENTHESIS reduce using rule 60 (FOR_INCR_STATEMENT -> PRINT .)


state 511

    (61) FOR_INCR_STATEMENT -> PRINTLN .

    CLOSE_PARENTHESIS reduce using rule 61 (FOR_INCR_STATEMENT -> PRINTLN .)


state 512

    (151) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    DOT             reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    EQUALS          reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_EQUALS     reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_EQUALS    reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    TIMES_EQUALS    reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OVER_EQUALS     reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_PLUS       reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_MINUS     reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 151 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 513

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS . seen_close_parenthesis seen_substr
    (124) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 518
    empty                          shift and go to state 387

state 514

    (192) DECISION_P -> ELSE_KWD seen_else_kwd DECISION .

    ID              reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    READ_KWD        reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    PRINT_KWD       reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    PRINTLN_KWD     reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    OPEN_KWD        reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    WRITE_KWD       reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    RETURN_KWD      reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    THIS_KWD        reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    IF_KWD          reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    WHILE_KWD       reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    FOR_KWD         reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    CLOSE_CURLY     reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)


state 515

    (193) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . PRINT SEMI_COLON
    (44) STATEMENT -> . PRINTLN SEMI_COLON
    (45) STATEMENT -> . OPEN SEMI_COLON
    (46) STATEMENT -> . WRITE SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (62) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (63) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (64) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (182) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (183) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (184) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (51) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) FLOW_CONTROL -> . DECISION
    (56) FLOW_CONTROL -> . REPETITION
    (179) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (180) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (181) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 82
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    WRITE_KWD       shift and go to state 101
    RETURN_KWD      shift and go to state 104
    THIS_KWD        shift and go to state 106
    IF_KWD          shift and go to state 107
    WHILE_KWD       shift and go to state 110
    FOR_KWD         shift and go to state 111

    STATEMENT_STAR                 shift and go to state 519
    STATEMENT                      shift and go to state 84
    empty                          shift and go to state 85
    ASSIGN                         shift and go to state 86
    FUNC_CALL                      shift and go to state 87
    READ                           shift and go to state 88
    PRINT                          shift and go to state 89
    PRINTLN                        shift and go to state 90
    OPEN                           shift and go to state 91
    WRITE                          shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    VAR                            shift and go to state 95
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 102
    REPETITION                     shift and go to state 103
    ARRAY                          shift and go to state 105
    CONDITIONAL_REP                shift and go to state 108
    UNCONDITIONAL_REP              shift and go to state 109

state 516

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    CLOSE_PARENTHESIS shift and go to state 520


state 517

    (204) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 204 (seen_for_incr_exp -> empty .)


state 518

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis . seen_substr
    (114) seen_substr -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_substr                    shift and go to state 521
    empty                          shift and go to state 522

state 519

    (193) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 523


state 520

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    OPEN_CURLY      shift and go to state 524


state 521

    (101) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .

    STAR            reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    FWD_SLASH       reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    PLUS            reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    MINUS           reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    BIGGER          reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    BIGGER_EQ       reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SMALLER         reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SMALLER_EQ      reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    DOUBLE_EQUALS   reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    NOT_EQUALS      reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    AND             reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    OR              reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SEMI_COLON      reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    COMMA           reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    CLOSE_PARENTHESIS reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    CLOSE_BRACKET   reduce using rule 101 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)


state 522

    (114) seen_substr -> empty .

    STAR            reduce using rule 114 (seen_substr -> empty .)
    FWD_SLASH       reduce using rule 114 (seen_substr -> empty .)
    PLUS            reduce using rule 114 (seen_substr -> empty .)
    MINUS           reduce using rule 114 (seen_substr -> empty .)
    BIGGER          reduce using rule 114 (seen_substr -> empty .)
    BIGGER_EQ       reduce using rule 114 (seen_substr -> empty .)
    SMALLER         reduce using rule 114 (seen_substr -> empty .)
    SMALLER_EQ      reduce using rule 114 (seen_substr -> empty .)
    DOUBLE_EQUALS   reduce using rule 114 (seen_substr -> empty .)
    NOT_EQUALS      reduce using rule 114 (seen_substr -> empty .)
    AND             reduce using rule 114 (seen_substr -> empty .)
    OR              reduce using rule 114 (seen_substr -> empty .)
    SEMI_COLON      reduce using rule 114 (seen_substr -> empty .)
    COMMA           reduce using rule 114 (seen_substr -> empty .)
    CLOSE_PARENTHESIS reduce using rule 114 (seen_substr -> empty .)
    CLOSE_BRACKET   reduce using rule 114 (seen_substr -> empty .)


state 523

    (193) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 524

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (189) entered_condition -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    READ_KWD        reduce using rule 214 (empty -> .)
    PRINT_KWD       reduce using rule 214 (empty -> .)
    PRINTLN_KWD     reduce using rule 214 (empty -> .)
    OPEN_KWD        reduce using rule 214 (empty -> .)
    WRITE_KWD       reduce using rule 214 (empty -> .)
    RETURN_KWD      reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    IF_KWD          reduce using rule 214 (empty -> .)
    WHILE_KWD       reduce using rule 214 (empty -> .)
    FOR_KWD         reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    entered_condition              shift and go to state 525
    empty                          shift and go to state 429

state 525

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition . STATEMENT_STAR CLOSE_CURLY left_condition
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . PRINT SEMI_COLON
    (44) STATEMENT -> . PRINTLN SEMI_COLON
    (45) STATEMENT -> . OPEN SEMI_COLON
    (46) STATEMENT -> . WRITE SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (62) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (63) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (64) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (167) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (168) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (182) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (183) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (184) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (51) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) FLOW_CONTROL -> . DECISION
    (56) FLOW_CONTROL -> . REPETITION
    (179) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (180) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (181) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) VAR -> . ID
    (144) VAR -> . ARRAY
    (145) VAR -> . CLASS_REFERENCE VAR
    (139) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (140) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (141) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY entered_condition STATEMENT_STAR left_condition CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (150) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 82
    READ_KWD        shift and go to state 97
    PRINT_KWD       shift and go to state 98
    PRINTLN_KWD     shift and go to state 99
    OPEN_KWD        shift and go to state 100
    WRITE_KWD       shift and go to state 101
    RETURN_KWD      shift and go to state 104
    THIS_KWD        shift and go to state 106
    IF_KWD          shift and go to state 107
    WHILE_KWD       shift and go to state 110
    FOR_KWD         shift and go to state 111

    VAR                            shift and go to state 95
    STATEMENT_STAR                 shift and go to state 526
    STATEMENT                      shift and go to state 84
    empty                          shift and go to state 85
    ASSIGN                         shift and go to state 86
    FUNC_CALL                      shift and go to state 87
    READ                           shift and go to state 88
    PRINT                          shift and go to state 89
    PRINTLN                        shift and go to state 90
    OPEN                           shift and go to state 91
    WRITE                          shift and go to state 92
    FLOW_CONTROL                   shift and go to state 93
    FUNC_RETURN                    shift and go to state 94
    CLASS_REFERENCE                shift and go to state 96
    DECISION                       shift and go to state 102
    REPETITION                     shift and go to state 103
    ARRAY                          shift and go to state 105
    CONDITIONAL_REP                shift and go to state 108
    UNCONDITIONAL_REP              shift and go to state 109

state 526

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR . CLOSE_CURLY left_condition

    CLOSE_CURLY     shift and go to state 527


state 527

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY . left_condition
    (190) left_condition -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    READ_KWD        reduce using rule 214 (empty -> .)
    PRINT_KWD       reduce using rule 214 (empty -> .)
    PRINTLN_KWD     reduce using rule 214 (empty -> .)
    OPEN_KWD        reduce using rule 214 (empty -> .)
    WRITE_KWD       reduce using rule 214 (empty -> .)
    RETURN_KWD      reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    IF_KWD          reduce using rule 214 (empty -> .)
    WHILE_KWD       reduce using rule 214 (empty -> .)
    FOR_KWD         reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    left_condition                 shift and go to state 528
    empty                          shift and go to state 472

state 528

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .

    ID              reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    READ_KWD        reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    PRINT_KWD       reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    PRINTLN_KWD     reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    OPEN_KWD        reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    WRITE_KWD       reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    RETURN_KWD      reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    THIS_KWD        reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    IF_KWD          reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    WHILE_KWD       reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    FOR_KWD         reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)
    CLOSE_CURLY     reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY entered_condition STATEMENT_STAR CLOSE_CURLY left_condition .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLASS_KWD in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 6 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 9 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 10 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SEMI_COLON in state 147 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 261 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 261
WARNING: reduce/reduce conflict in state 324 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 324
WARNING: reduce/reduce conflict in state 350 resolved using rule (pop_unary_minus -> empty)
WARNING: rejected rule (seen_factor -> empty) in state 350
WARNING: reduce/reduce conflict in state 412 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 412
WARNING: reduce/reduce conflict in state 433 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 433
