Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     seen_program_id -> empty
Rule 3     seen_main_kwd -> empty
Rule 4     CLASS_STAR -> CLASS CLASS_STAR
Rule 5     CLASS_STAR -> empty
Rule 6     CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
Rule 7     CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 8     VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 9     VAR_LIST_STAR -> empty
Rule 10    VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON
Rule 11    ID_LIST -> ID ID_LIST_P
Rule 12    ID_LIST_P -> COMMA ID ID_LIST_P
Rule 13    ID_LIST_P -> empty
Rule 14    READABLE_LIST -> ID seen_readable READABLE_LIST_P
Rule 15    READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P
Rule 16    READABLE_LIST_P -> empty
Rule 17    seen_readable -> empty
Rule 18    GLOBAL_VAR -> VAR_LIST_STAR
Rule 19    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 20    FUNC_DEF_STAR -> empty
Rule 21    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 22    seen_func_id -> empty
Rule 23    seen_func_params -> empty
Rule 24    seen_func_vars -> empty
Rule 25    FUNC_PARAM -> VAR FUNC_PARAM_P
Rule 26    FUNC_PARAM -> empty
Rule 27    FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P
Rule 28    FUNC_PARAM_P -> empty
Rule 29    VAR -> ID COLON TYPE
Rule 30    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 31    FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
Rule 32    FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
Rule 33    FUNC_STATEMENT_STAR -> READ SEMI_COLON FUNC_STATEMENT_STAR
Rule 34    FUNC_STATEMENT_STAR -> WRITE SEMI_COLON FUNC_STATEMENT_STAR
Rule 35    FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
Rule 36    FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR
Rule 37    FUNC_STATEMENT_STAR -> empty
Rule 38    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 39    STATEMENT_STAR -> empty
Rule 40    STATEMENT -> ASSIGN SEMI_COLON
Rule 41    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 42    STATEMENT -> READ SEMI_COLON
Rule 43    STATEMENT -> WRITE SEMI_COLON
Rule 44    STATEMENT -> FLOW_CONTROL
Rule 45    FLOW_CONTROL -> DECISION
Rule 46    FLOW_CONTROL -> REPETITION
Rule 47    FUNC_FLOW_CONTROL -> FUNC_DECISION
Rule 48    FUNC_FLOW_CONTROL -> FUNC_REPETITION
Rule 49    FOR_INCR_STATEMENT -> ASSIGN
Rule 50    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 51    FOR_INCR_STATEMENT -> READ
Rule 52    FOR_INCR_STATEMENT -> WRITE
Rule 53    ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION
Rule 54    seen_equals -> empty
Rule 55    EXP -> TERM seen_term EXP_P
Rule 56    EXP -> NOT seen_not EXP pop_not
Rule 57    seen_term -> <empty>
Rule 58    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 59    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 60    EXP_P -> empty
Rule 61    seen_term_op -> <empty>
Rule 62    EXPRESSION -> EXP
Rule 63    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 64    seen_comp -> empty
Rule 65    seen_comp_op -> empty
Rule 66    COMP -> BIGGER
Rule 67    COMP -> SMALLER
Rule 68    COMP -> DOUBLE_EQUALS
Rule 69    COMP -> DIFFERENT
Rule 70    COMP -> AND
Rule 71    COMP -> OR
Rule 72    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 73    FACTOR -> NOT seen_not FACTOR pop_not
Rule 74    FACTOR -> FUNC_CALL
Rule 75    FACTOR -> ID seen_id
Rule 76    FACTOR -> CNST
Rule 77    pop_not -> empty
Rule 78    seen_not -> empty
Rule 79    seen_open_parenthesis -> empty
Rule 80    seen_close_parenthesis -> empty
Rule 81    seen_id -> <empty>
Rule 82    seen_cte_i -> <empty>
Rule 83    seen_cte_f -> <empty>
Rule 84    seen_cte_s -> <empty>
Rule 85    CNST -> CTE_S seen_cte_s
Rule 86    CNST -> CTE_F seen_cte_f
Rule 87    CNST -> CTE_I seen_cte_i
Rule 88    TERM -> FACTOR seen_factor TERM_P
Rule 89    TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 90    TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 91    TERM_P -> empty
Rule 92    seen_factor -> <empty>
Rule 93    seen_factor_op -> <empty>
Rule 94    FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 95    seen_func_call_id -> empty
Rule 96    ARG_LIST -> ID seen_arg ARG_LIST_P
Rule 97    ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 98    ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 99    ARG_LIST -> empty
Rule 100   ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P
Rule 101   ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 102   ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 103   ARG_LIST_P -> empty
Rule 104   seen_arg -> <empty>
Rule 105   FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 106   FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 107   FUNC_RETURN -> RETURN_KWD SEMI_COLON
Rule 108   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 109   WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 110   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 111   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 112   PRINTABLE_P -> empty
Rule 113   seen_printable -> empty
Rule 114   FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
Rule 115   FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 116   FUNC_DECISION_P -> empty
Rule 117   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 118   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 119   DECISION_P -> empty
Rule 120   seen_if_kwd -> empty
Rule 121   seen_else_kwd -> empty
Rule 122   FUNC_REPETITION -> FUNC_CONDITIONAL_REP
Rule 123   FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP
Rule 124   FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 125   FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 126   REPETITION -> CONDITIONAL_REP
Rule 127   REPETITION -> UNCONDITIONAL_REP
Rule 128   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 129   seen_while_kwd -> empty
Rule 130   seen_while_exp -> empty
Rule 131   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 132   seen_for_kwd -> empty
Rule 133   seen_for_incr_exp -> empty
Rule 134   seen_for_start_exp -> empty
Rule 135   seen_for_end_exp -> empty
Rule 136   empty -> <empty>

Terminals, with rules where they appear

AND                  : 70
ATTR_KWD             : 7
BIGGER               : 6 66
CLASS_KWD            : 6
CLOSE_CURLY          : 1 6 7 21 30 114 115 117 118 124 125 128 131
CLOSE_PARENTHESIS    : 1 21 72 94 108 109 114 117 124 125 128 131
COLON                : 10 29
COMMA                : 12 15 27 100 101 102 111
CTE_F                : 86
CTE_I                : 87
CTE_S                : 85
DERIVES_KWD          : 6
DIFFERENT            : 69
DOUBLE_EQUALS        : 68
ELSE_KWD             : 115 118
EQUALS               : 53 125 131
FOR_KWD              : 125 131
FWD_SLASH            : 90
ID                   : 1 6 11 12 14 15 21 29 53 75 94 96 100 125 131
IF_KWD               : 114 117
MAIN_KWD             : 1
MINUS                : 59
NOT                  : 56 73
OPEN_CURLY           : 1 6 7 21 30 114 115 117 118 124 125 128 131
OPEN_PARENTHESIS     : 1 21 72 94 108 109 114 117 124 125 128 131
OR                   : 71
PLUS                 : 58
PROGRAM_KWD          : 1
READ_KWD             : 108
RETURN_KWD           : 105 106 107
SEMI_COLON           : 1 10 31 32 33 34 40 41 42 43 105 106 107 125 125 131 131
SMALLER              : 6 67
STAR                 : 89
TYPE                 : 6 10 21 29
VARS_KWD             : 30
WHILE_KWD            : 124 128
WRITE_KWD            : 109
error                : 

Nonterminals, with rules where they appear

ARG_LIST             : 94
ARG_LIST_P           : 96 97 98 100 101 102
ASSIGN               : 31 40 49
CLASS                : 4
CLASS_ATTR           : 6
CLASS_STAR           : 1 4
CNST                 : 76
COMP                 : 63
CONDITIONAL_REP      : 126
DECISION             : 45
DECISION_P           : 117
EXP                  : 56 62 63
EXPRESSION           : 53 63 72 97 101 105 110 111 114 117 124 125 125 128 131 131
EXP_P                : 55 58 59
FACTOR               : 73 88 89 90
FLOW_CONTROL         : 44
FOR_INCR_STATEMENT   : 125 131
FUNC_CALL            : 32 41 50 74 98 102 106
FUNC_CONDITIONAL_REP : 122
FUNC_DECISION        : 47
FUNC_DECISION_P      : 114
FUNC_DEF             : 19
FUNC_DEF_STAR        : 1 6 19
FUNC_FLOW_CONTROL    : 35
FUNC_PARAM           : 21
FUNC_PARAM_P         : 25 27
FUNC_REPETITION      : 48
FUNC_RETURN          : 36
FUNC_STATEMENT_STAR  : 21 31 32 33 34 35 36 114 115 124 125
FUNC_UNCONDITIONAL_REP : 123
GLOBAL_VAR           : 1
ID_LIST              : 10
ID_LIST_P            : 11 12
PRINTABLE            : 109
PRINTABLE_P          : 110 111
PROGRAM              : 0
READ                 : 33 42 51
READABLE_LIST        : 108
READABLE_LIST_P      : 14 15
REPETITION           : 46
STATEMENT            : 38
STATEMENT_STAR       : 1 38 117 118 128 131
TERM                 : 55 58 59
TERM_P               : 88 89 90
UNCONDITIONAL_REP    : 127
VAR                  : 25 27
VARS                 : 21
VAR_LIST             : 8
VAR_LIST_STAR        : 7 8 18 30
WRITE                : 34 43 52
empty                : 2 3 5 9 13 16 17 20 22 23 24 26 28 37 39 54 60 64 65 77 78 79 80 91 95 99 103 112 113 116 119 120 121 129 130 132 133 134 135
pop_not              : 56 73
seen_arg             : 96 97 98 100 101 102
seen_close_parenthesis : 72
seen_comp            : 63
seen_comp_op         : 63
seen_cte_f           : 86
seen_cte_i           : 87
seen_cte_s           : 85
seen_else_kwd        : 115 118
seen_equals          : 53
seen_factor          : 88 89 90
seen_factor_op       : 89 90
seen_for_end_exp     : 125 131
seen_for_incr_exp    : 125 131
seen_for_kwd         : 125 131
seen_for_start_exp   : 125 131
seen_func_call_id    : 94
seen_func_id         : 21
seen_func_params     : 21
seen_func_vars       : 21
seen_id              : 53 75
seen_if_kwd          : 114 117
seen_main_kwd        : 1
seen_not             : 56 73
seen_open_parenthesis : 72
seen_printable       : 110 111
seen_program_id      : 1
seen_readable        : 14 15
seen_term            : 55 58 59
seen_term_op         : 58 59
seen_while_exp       : 124 128
seen_while_kwd       : 124 128

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) seen_program_id -> . empty
    (136) empty -> .

    SEMI_COLON      reduce using rule 136 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (2) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 2 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (4) CLASS_STAR -> . CLASS CLASS_STAR
    (5) CLASS_STAR -> . empty
    (6) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (136) empty -> .

    CLASS_KWD       shift and go to state 10
    ID              reduce using rule 136 (empty -> .)
    TYPE            reduce using rule 136 (empty -> .)
    MAIN_KWD        reduce using rule 136 (empty -> .)

    CLASS_STAR                     shift and go to state 7
    CLASS                          shift and go to state 8
    empty                          shift and go to state 9

state 7

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR . GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (18) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (136) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    TYPE            reduce using rule 136 (empty -> .)
    MAIN_KWD        reduce using rule 136 (empty -> .)
    ID              shift and go to state 11

    GLOBAL_VAR                     shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 8

    (4) CLASS_STAR -> CLASS . CLASS_STAR
    (4) CLASS_STAR -> . CLASS CLASS_STAR
    (5) CLASS_STAR -> . empty
    (6) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (136) empty -> .

    CLASS_KWD       shift and go to state 10
    ID              reduce using rule 136 (empty -> .)
    TYPE            reduce using rule 136 (empty -> .)
    MAIN_KWD        reduce using rule 136 (empty -> .)

    CLASS                          shift and go to state 8
    CLASS_STAR                     shift and go to state 17
    empty                          shift and go to state 9

state 9

    (5) CLASS_STAR -> empty .

    ID              reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE            reduce using rule 5 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 5 (CLASS_STAR -> empty .)


state 10

    (6) CLASS -> CLASS_KWD . ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 18


state 11

    (11) ID_LIST -> ID . ID_LIST_P
    (12) ID_LIST_P -> . COMMA ID ID_LIST_P
    (13) ID_LIST_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 20
    COLON           reduce using rule 136 (empty -> .)

    ID_LIST_P                      shift and go to state 19
    empty                          shift and go to state 21

state 12

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR . FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (136) empty -> .

    TYPE            shift and go to state 25
    MAIN_KWD        reduce using rule 136 (empty -> .)

    FUNC_DEF_STAR                  shift and go to state 22
    FUNC_DEF                       shift and go to state 23
    empty                          shift and go to state 24

state 13

    (18) GLOBAL_VAR -> VAR_LIST_STAR .

    TYPE            reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (136) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    TYPE            reduce using rule 136 (empty -> .)
    MAIN_KWD        reduce using rule 136 (empty -> .)
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST                       shift and go to state 14
    VAR_LIST_STAR                  shift and go to state 26
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 15

    (9) VAR_LIST_STAR -> empty .

    TYPE            reduce using rule 9 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 9 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 9 (VAR_LIST_STAR -> empty .)


state 16

    (10) VAR_LIST -> ID_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 27


state 17

    (4) CLASS_STAR -> CLASS CLASS_STAR .

    ID              reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE            reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)


state 18

    (6) CLASS -> CLASS_KWD ID . SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    SMALLER         shift and go to state 28


state 19

    (11) ID_LIST -> ID ID_LIST_P .

    COLON           reduce using rule 11 (ID_LIST -> ID ID_LIST_P .)


state 20

    (12) ID_LIST_P -> COMMA . ID ID_LIST_P

    ID              shift and go to state 29


state 21

    (13) ID_LIST_P -> empty .

    COLON           reduce using rule 13 (ID_LIST_P -> empty .)


state 22

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 30


state 23

    (19) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (136) empty -> .

    TYPE            shift and go to state 25
    MAIN_KWD        reduce using rule 136 (empty -> .)
    CLOSE_CURLY     reduce using rule 136 (empty -> .)

    FUNC_DEF                       shift and go to state 23
    FUNC_DEF_STAR                  shift and go to state 31
    empty                          shift and go to state 24

state 24

    (20) FUNC_DEF_STAR -> empty .

    MAIN_KWD        reduce using rule 20 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 20 (FUNC_DEF_STAR -> empty .)


state 25

    (21) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 32


state 26

    (8) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    TYPE            reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 27

    (10) VAR_LIST -> ID_LIST COLON . TYPE SEMI_COLON

    TYPE            shift and go to state 33


state 28

    (6) CLASS -> CLASS_KWD ID SMALLER . DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    DERIVES_KWD     shift and go to state 34


state 29

    (12) ID_LIST_P -> COMMA ID . ID_LIST_P
    (12) ID_LIST_P -> . COMMA ID ID_LIST_P
    (13) ID_LIST_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 20
    COLON           reduce using rule 136 (empty -> .)

    ID_LIST_P                      shift and go to state 35
    empty                          shift and go to state 21

state 30

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 36


state 31

    (19) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    MAIN_KWD        reduce using rule 19 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 19 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 32

    (21) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (22) seen_func_id -> . empty
    (136) empty -> .

    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_func_id                   shift and go to state 37
    empty                          shift and go to state 38

state 33

    (10) VAR_LIST -> ID_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 39


state 34

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD . TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    TYPE            shift and go to state 40


state 35

    (12) ID_LIST_P -> COMMA ID ID_LIST_P .

    COLON           reduce using rule 12 (ID_LIST_P -> COMMA ID ID_LIST_P .)


state 36

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 41


state 37

    (21) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 42


state 38

    (22) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 22 (seen_func_id -> empty .)


state 39

    (10) VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE            reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)


state 40

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE . BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    BIGGER          shift and go to state 43


state 41

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 44


state 42

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (25) FUNC_PARAM -> . VAR FUNC_PARAM_P
    (26) FUNC_PARAM -> . empty
    (29) VAR -> . ID COLON TYPE
    (136) empty -> .

    ID              shift and go to state 45
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    FUNC_PARAM                     shift and go to state 46
    VAR                            shift and go to state 47
    empty                          shift and go to state 48

state 43

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER . OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 49


state 44

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (3) seen_main_kwd -> . empty
    (136) empty -> .

    ID              reduce using rule 136 (empty -> .)
    READ_KWD        reduce using rule 136 (empty -> .)
    WRITE_KWD       reduce using rule 136 (empty -> .)
    IF_KWD          reduce using rule 136 (empty -> .)
    WHILE_KWD       reduce using rule 136 (empty -> .)
    FOR_KWD         reduce using rule 136 (empty -> .)
    CLOSE_CURLY     reduce using rule 136 (empty -> .)

    seen_main_kwd                  shift and go to state 50
    empty                          shift and go to state 51

state 45

    (29) VAR -> ID . COLON TYPE

    COLON           shift and go to state 52


state 46

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 53


state 47

    (25) FUNC_PARAM -> VAR . FUNC_PARAM_P
    (27) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (28) FUNC_PARAM_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 55
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 54
    empty                          shift and go to state 56

state 48

    (26) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 26 (FUNC_PARAM -> empty .)


state 49

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY . CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (7) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 58

    CLASS_ATTR                     shift and go to state 57

state 50

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (136) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    IF_KWD          shift and go to state 72
    WHILE_KWD       shift and go to state 75
    FOR_KWD         shift and go to state 76

    STATEMENT_STAR                 shift and go to state 60
    STATEMENT                      shift and go to state 61
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    FLOW_CONTROL                   shift and go to state 67
    DECISION                       shift and go to state 70
    REPETITION                     shift and go to state 71
    CONDITIONAL_REP                shift and go to state 73
    UNCONDITIONAL_REP              shift and go to state 74

state 51

    (3) seen_main_kwd -> empty .

    ID              reduce using rule 3 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 3 (seen_main_kwd -> empty .)
    WRITE_KWD       reduce using rule 3 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 3 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 3 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 3 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 3 (seen_main_kwd -> empty .)


state 52

    (29) VAR -> ID COLON . TYPE

    TYPE            shift and go to state 77


state 53

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (23) seen_func_params -> . empty
    (136) empty -> .

    VARS_KWD        reduce using rule 136 (empty -> .)

    seen_func_params               shift and go to state 78
    empty                          shift and go to state 79

state 54

    (25) FUNC_PARAM -> VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 25 (FUNC_PARAM -> VAR FUNC_PARAM_P .)


state 55

    (27) FUNC_PARAM_P -> COMMA . VAR FUNC_PARAM_P
    (29) VAR -> . ID COLON TYPE

    ID              shift and go to state 45

    VAR                            shift and go to state 80

state 56

    (28) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 28 (FUNC_PARAM_P -> empty .)


state 57

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR . FUNC_DEF_STAR CLOSE_CURLY
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (136) empty -> .

    TYPE            shift and go to state 25
    CLOSE_CURLY     reduce using rule 136 (empty -> .)

    FUNC_DEF_STAR                  shift and go to state 81
    FUNC_DEF                       shift and go to state 23
    empty                          shift and go to state 24

state 58

    (7) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 82


state 59

    (53) ASSIGN -> ID . seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (81) seen_id -> .
    (95) seen_func_call_id -> . empty
    (136) empty -> .

    EQUALS          reduce using rule 81 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_id                        shift and go to state 83
    seen_func_call_id              shift and go to state 84
    empty                          shift and go to state 85

state 60

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 86


state 61

    (38) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (136) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    IF_KWD          shift and go to state 72
    WHILE_KWD       shift and go to state 75
    FOR_KWD         shift and go to state 76

    STATEMENT                      shift and go to state 61
    STATEMENT_STAR                 shift and go to state 87
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    FLOW_CONTROL                   shift and go to state 67
    DECISION                       shift and go to state 70
    REPETITION                     shift and go to state 71
    CONDITIONAL_REP                shift and go to state 73
    UNCONDITIONAL_REP              shift and go to state 74

state 62

    (39) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 39 (STATEMENT_STAR -> empty .)


state 63

    (40) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 88


state 64

    (41) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 89


state 65

    (42) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 90


state 66

    (43) STATEMENT -> WRITE . SEMI_COLON

    SEMI_COLON      shift and go to state 91


state 67

    (44) STATEMENT -> FLOW_CONTROL .

    ID              reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    READ_KWD        reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    WRITE_KWD       reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    IF_KWD          reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    WHILE_KWD       reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    FOR_KWD         reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    CLOSE_CURLY     reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)


state 68

    (108) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 92


state 69

    (109) WRITE -> WRITE_KWD . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 93


state 70

    (45) FLOW_CONTROL -> DECISION .

    ID              reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    READ_KWD        reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    WRITE_KWD       reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    IF_KWD          reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    WHILE_KWD       reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    FOR_KWD         reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    CLOSE_CURLY     reduce using rule 45 (FLOW_CONTROL -> DECISION .)


state 71

    (46) FLOW_CONTROL -> REPETITION .

    ID              reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    READ_KWD        reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    WRITE_KWD       reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    IF_KWD          reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    WHILE_KWD       reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    FOR_KWD         reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    CLOSE_CURLY     reduce using rule 46 (FLOW_CONTROL -> REPETITION .)


state 72

    (117) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 94


state 73

    (126) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)


state 74

    (127) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)


state 75

    (128) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (129) seen_while_kwd -> . empty
    (136) empty -> .

    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_while_kwd                 shift and go to state 95
    empty                          shift and go to state 96

state 76

    (131) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 97


state 77

    (29) VAR -> ID COLON TYPE .

    COMMA           reduce using rule 29 (VAR -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 29 (VAR -> ID COLON TYPE .)


state 78

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (30) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 99

    VARS                           shift and go to state 98

state 79

    (23) seen_func_params -> empty .

    VARS_KWD        reduce using rule 23 (seen_func_params -> empty .)


state 80

    (27) FUNC_PARAM_P -> COMMA VAR . FUNC_PARAM_P
    (27) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (28) FUNC_PARAM_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 55
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 100
    empty                          shift and go to state 56

state 81

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 101


state 82

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (136) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST_STAR                  shift and go to state 102
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 83

    (53) ASSIGN -> ID seen_id . EQUALS seen_equals EXPRESSION

    EQUALS          shift and go to state 103


state 84

    (94) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 104


state 85

    (95) seen_func_call_id -> empty .

    OPEN_PARENTHESIS reduce using rule 95 (seen_func_call_id -> empty .)


state 86

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 87

    (38) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 38 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 88

    (40) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    WRITE_KWD       reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)


state 89

    (41) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 90

    (42) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    WRITE_KWD       reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)


state 91

    (43) STATEMENT -> WRITE SEMI_COLON .

    ID              reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    READ_KWD        reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    WRITE_KWD       reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    IF_KWD          reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    WHILE_KWD       reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    FOR_KWD         reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)


state 92

    (108) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (14) READABLE_LIST -> . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 106

    READABLE_LIST                  shift and go to state 105

state 93

    (109) WRITE -> WRITE_KWD OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (110) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    PRINTABLE                      shift and go to state 108
    EXPRESSION                     shift and go to state 109
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 94

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 120
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 95

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 121


state 96

    (129) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 129 (seen_while_kwd -> empty .)


state 97

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 122


state 98

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (24) seen_func_vars -> . empty
    (136) empty -> .

    OPEN_CURLY      reduce using rule 136 (empty -> .)

    seen_func_vars                 shift and go to state 123
    empty                          shift and go to state 124

state 99

    (30) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 125


state 100

    (27) FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 27 (FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .)


state 101

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE            reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)


state 102

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 126


state 103

    (53) ASSIGN -> ID seen_id EQUALS . seen_equals EXPRESSION
    (54) seen_equals -> . empty
    (136) empty -> .

    NOT             reduce using rule 136 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    CTE_S           reduce using rule 136 (empty -> .)
    CTE_F           reduce using rule 136 (empty -> .)
    CTE_I           reduce using rule 136 (empty -> .)

    seen_equals                    shift and go to state 127
    empty                          shift and go to state 128

state 104

    (94) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (96) ARG_LIST -> . ID seen_arg ARG_LIST_P
    (97) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (98) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (99) ARG_LIST -> . empty
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) empty -> .
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 129
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)
    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    ARG_LIST                       shift and go to state 130
    EXPRESSION                     shift and go to state 131
    FUNC_CALL                      shift and go to state 132
    empty                          shift and go to state 133
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    CNST                           shift and go to state 116

state 105

    (108) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 134


state 106

    (14) READABLE_LIST -> ID . seen_readable READABLE_LIST_P
    (17) seen_readable -> . empty
    (136) empty -> .

    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_readable                  shift and go to state 135
    empty                          shift and go to state 136

state 107

    (72) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) seen_open_parenthesis -> . empty
    (136) empty -> .

    NOT             reduce using rule 136 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    CTE_S           reduce using rule 136 (empty -> .)
    CTE_F           reduce using rule 136 (empty -> .)
    CTE_I           reduce using rule 136 (empty -> .)

    seen_open_parenthesis          shift and go to state 137
    empty                          shift and go to state 138

state 108

    (109) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 139


state 109

    (110) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (113) seen_printable -> . empty
    (136) empty -> .

    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_printable                 shift and go to state 140
    empty                          shift and go to state 141

state 110

    (62) EXPRESSION -> EXP .
    (63) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (66) COMP -> . BIGGER
    (67) COMP -> . SMALLER
    (68) COMP -> . DOUBLE_EQUALS
    (69) COMP -> . DIFFERENT
    (70) COMP -> . AND
    (71) COMP -> . OR

    COMMA           reduce using rule 62 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 62 (EXPRESSION -> EXP .)
    SEMI_COLON      reduce using rule 62 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 143
    SMALLER         shift and go to state 144
    DOUBLE_EQUALS   shift and go to state 145
    DIFFERENT       shift and go to state 146
    AND             shift and go to state 147
    OR              shift and go to state 148

    COMP                           shift and go to state 142

state 111

    (55) EXP -> TERM . seen_term EXP_P
    (57) seen_term -> .

    PLUS            reduce using rule 57 (seen_term -> .)
    MINUS           reduce using rule 57 (seen_term -> .)
    BIGGER          reduce using rule 57 (seen_term -> .)
    SMALLER         reduce using rule 57 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 57 (seen_term -> .)
    DIFFERENT       reduce using rule 57 (seen_term -> .)
    AND             reduce using rule 57 (seen_term -> .)
    OR              reduce using rule 57 (seen_term -> .)
    COMMA           reduce using rule 57 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 57 (seen_term -> .)
    SEMI_COLON      reduce using rule 57 (seen_term -> .)

    seen_term                      shift and go to state 149

state 112

    (56) EXP -> NOT . seen_not EXP pop_not
    (73) FACTOR -> NOT . seen_not FACTOR pop_not
    (78) seen_not -> . empty
    (136) empty -> .

    NOT             reduce using rule 136 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    CTE_S           reduce using rule 136 (empty -> .)
    CTE_F           reduce using rule 136 (empty -> .)
    CTE_I           reduce using rule 136 (empty -> .)

    seen_not                       shift and go to state 150
    empty                          shift and go to state 151

state 113

    (88) TERM -> FACTOR . seen_factor TERM_P
    (92) seen_factor -> .

    STAR            reduce using rule 92 (seen_factor -> .)
    FWD_SLASH       reduce using rule 92 (seen_factor -> .)
    PLUS            reduce using rule 92 (seen_factor -> .)
    MINUS           reduce using rule 92 (seen_factor -> .)
    BIGGER          reduce using rule 92 (seen_factor -> .)
    SMALLER         reduce using rule 92 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 92 (seen_factor -> .)
    DIFFERENT       reduce using rule 92 (seen_factor -> .)
    AND             reduce using rule 92 (seen_factor -> .)
    OR              reduce using rule 92 (seen_factor -> .)
    COMMA           reduce using rule 92 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 92 (seen_factor -> .)
    SEMI_COLON      reduce using rule 92 (seen_factor -> .)

    seen_factor                    shift and go to state 152

state 114

    (74) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 74 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 74 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 74 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 74 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 74 (FACTOR -> FUNC_CALL .)


state 115

    (75) FACTOR -> ID . seen_id
    (94) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (81) seen_id -> .
    (95) seen_func_call_id -> . empty
    (136) empty -> .

    STAR            reduce using rule 81 (seen_id -> .)
    FWD_SLASH       reduce using rule 81 (seen_id -> .)
    PLUS            reduce using rule 81 (seen_id -> .)
    MINUS           reduce using rule 81 (seen_id -> .)
    BIGGER          reduce using rule 81 (seen_id -> .)
    SMALLER         reduce using rule 81 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 81 (seen_id -> .)
    DIFFERENT       reduce using rule 81 (seen_id -> .)
    AND             reduce using rule 81 (seen_id -> .)
    OR              reduce using rule 81 (seen_id -> .)
    COMMA           reduce using rule 81 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 81 (seen_id -> .)
    SEMI_COLON      reduce using rule 81 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_id                        shift and go to state 153
    seen_func_call_id              shift and go to state 84
    empty                          shift and go to state 85

state 116

    (76) FACTOR -> CNST .

    STAR            reduce using rule 76 (FACTOR -> CNST .)
    FWD_SLASH       reduce using rule 76 (FACTOR -> CNST .)
    PLUS            reduce using rule 76 (FACTOR -> CNST .)
    MINUS           reduce using rule 76 (FACTOR -> CNST .)
    BIGGER          reduce using rule 76 (FACTOR -> CNST .)
    SMALLER         reduce using rule 76 (FACTOR -> CNST .)
    DOUBLE_EQUALS   reduce using rule 76 (FACTOR -> CNST .)
    DIFFERENT       reduce using rule 76 (FACTOR -> CNST .)
    AND             reduce using rule 76 (FACTOR -> CNST .)
    OR              reduce using rule 76 (FACTOR -> CNST .)
    COMMA           reduce using rule 76 (FACTOR -> CNST .)
    CLOSE_PARENTHESIS reduce using rule 76 (FACTOR -> CNST .)
    SEMI_COLON      reduce using rule 76 (FACTOR -> CNST .)


state 117

    (85) CNST -> CTE_S . seen_cte_s
    (84) seen_cte_s -> .

    STAR            reduce using rule 84 (seen_cte_s -> .)
    FWD_SLASH       reduce using rule 84 (seen_cte_s -> .)
    PLUS            reduce using rule 84 (seen_cte_s -> .)
    MINUS           reduce using rule 84 (seen_cte_s -> .)
    BIGGER          reduce using rule 84 (seen_cte_s -> .)
    SMALLER         reduce using rule 84 (seen_cte_s -> .)
    DOUBLE_EQUALS   reduce using rule 84 (seen_cte_s -> .)
    DIFFERENT       reduce using rule 84 (seen_cte_s -> .)
    AND             reduce using rule 84 (seen_cte_s -> .)
    OR              reduce using rule 84 (seen_cte_s -> .)
    COMMA           reduce using rule 84 (seen_cte_s -> .)
    CLOSE_PARENTHESIS reduce using rule 84 (seen_cte_s -> .)
    SEMI_COLON      reduce using rule 84 (seen_cte_s -> .)

    seen_cte_s                     shift and go to state 154

state 118

    (86) CNST -> CTE_F . seen_cte_f
    (83) seen_cte_f -> .

    STAR            reduce using rule 83 (seen_cte_f -> .)
    FWD_SLASH       reduce using rule 83 (seen_cte_f -> .)
    PLUS            reduce using rule 83 (seen_cte_f -> .)
    MINUS           reduce using rule 83 (seen_cte_f -> .)
    BIGGER          reduce using rule 83 (seen_cte_f -> .)
    SMALLER         reduce using rule 83 (seen_cte_f -> .)
    DOUBLE_EQUALS   reduce using rule 83 (seen_cte_f -> .)
    DIFFERENT       reduce using rule 83 (seen_cte_f -> .)
    AND             reduce using rule 83 (seen_cte_f -> .)
    OR              reduce using rule 83 (seen_cte_f -> .)
    COMMA           reduce using rule 83 (seen_cte_f -> .)
    CLOSE_PARENTHESIS reduce using rule 83 (seen_cte_f -> .)
    SEMI_COLON      reduce using rule 83 (seen_cte_f -> .)

    seen_cte_f                     shift and go to state 155

state 119

    (87) CNST -> CTE_I . seen_cte_i
    (82) seen_cte_i -> .

    STAR            reduce using rule 82 (seen_cte_i -> .)
    FWD_SLASH       reduce using rule 82 (seen_cte_i -> .)
    PLUS            reduce using rule 82 (seen_cte_i -> .)
    MINUS           reduce using rule 82 (seen_cte_i -> .)
    BIGGER          reduce using rule 82 (seen_cte_i -> .)
    SMALLER         reduce using rule 82 (seen_cte_i -> .)
    DOUBLE_EQUALS   reduce using rule 82 (seen_cte_i -> .)
    DIFFERENT       reduce using rule 82 (seen_cte_i -> .)
    AND             reduce using rule 82 (seen_cte_i -> .)
    OR              reduce using rule 82 (seen_cte_i -> .)
    COMMA           reduce using rule 82 (seen_cte_i -> .)
    CLOSE_PARENTHESIS reduce using rule 82 (seen_cte_i -> .)
    SEMI_COLON      reduce using rule 82 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 156

state 120

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 157


state 121

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 158
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 122

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (132) seen_for_kwd -> . empty
    (136) empty -> .

    EQUALS          reduce using rule 136 (empty -> .)

    seen_for_kwd                   shift and go to state 159
    empty                          shift and go to state 160

state 123

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 161


state 124

    (24) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 24 (seen_func_vars -> empty .)


state 125

    (30) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (136) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST_STAR                  shift and go to state 162
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 126

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE            reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 127

    (53) ASSIGN -> ID seen_id EQUALS seen_equals . EXPRESSION
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 163
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 128

    (54) seen_equals -> empty .

    NOT             reduce using rule 54 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 54 (seen_equals -> empty .)
    ID              reduce using rule 54 (seen_equals -> empty .)
    CTE_S           reduce using rule 54 (seen_equals -> empty .)
    CTE_F           reduce using rule 54 (seen_equals -> empty .)
    CTE_I           reduce using rule 54 (seen_equals -> empty .)


state 129

    (96) ARG_LIST -> ID . seen_arg ARG_LIST_P
    (94) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (75) FACTOR -> ID . seen_id
    (104) seen_arg -> .
    (95) seen_func_call_id -> . empty
    (81) seen_id -> .
    (136) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 81 (seen_id -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 81 (seen_id -> .)
    STAR            reduce using rule 81 (seen_id -> .)
    FWD_SLASH       reduce using rule 81 (seen_id -> .)
    PLUS            reduce using rule 81 (seen_id -> .)
    MINUS           reduce using rule 81 (seen_id -> .)
    BIGGER          reduce using rule 81 (seen_id -> .)
    SMALLER         reduce using rule 81 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 81 (seen_id -> .)
    DIFFERENT       reduce using rule 81 (seen_id -> .)
    AND             reduce using rule 81 (seen_id -> .)
    OR              reduce using rule 81 (seen_id -> .)
    COMMA           reduce using rule 81 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 81 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)

  ! COMMA           [ reduce using rule 104 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 104 (seen_arg -> .) ]

    seen_arg                       shift and go to state 164
    seen_func_call_id              shift and go to state 84
    seen_id                        shift and go to state 153
    empty                          shift and go to state 85

state 130

    (94) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 165


state 131

    (97) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (104) seen_arg -> .

    COMMA           reduce using rule 104 (seen_arg -> .)
    CLOSE_PARENTHESIS reduce using rule 104 (seen_arg -> .)

    seen_arg                       shift and go to state 166

state 132

    (98) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (74) FACTOR -> FUNC_CALL .
    (104) seen_arg -> .

  ! reduce/reduce conflict for COMMA resolved using rule 74 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 74 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 74 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 74 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 74 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 74 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 104 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 104 (seen_arg -> .) ]

    seen_arg                       shift and go to state 167

state 133

    (99) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 99 (ARG_LIST -> empty .)


state 134

    (108) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 108 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 108 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 135

    (14) READABLE_LIST -> ID seen_readable . READABLE_LIST_P
    (15) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (16) READABLE_LIST_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 169
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    READABLE_LIST_P                shift and go to state 168
    empty                          shift and go to state 170

state 136

    (17) seen_readable -> empty .

    COMMA           reduce using rule 17 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 17 (seen_readable -> empty .)


state 137

    (72) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 171
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 138

    (79) seen_open_parenthesis -> empty .

    NOT             reduce using rule 79 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 79 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 79 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 79 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 79 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 79 (seen_open_parenthesis -> empty .)


state 139

    (109) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 109 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 109 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 140

    (110) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (111) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (112) PRINTABLE_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 173
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    PRINTABLE_P                    shift and go to state 172
    empty                          shift and go to state 174

state 141

    (113) seen_printable -> empty .

    COMMA           reduce using rule 113 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 113 (seen_printable -> empty .)


state 142

    (63) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (65) seen_comp_op -> . empty
    (136) empty -> .

    NOT             reduce using rule 136 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    CTE_S           reduce using rule 136 (empty -> .)
    CTE_F           reduce using rule 136 (empty -> .)
    CTE_I           reduce using rule 136 (empty -> .)

    seen_comp_op                   shift and go to state 175
    empty                          shift and go to state 176

state 143

    (66) COMP -> BIGGER .

    NOT             reduce using rule 66 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 66 (COMP -> BIGGER .)
    ID              reduce using rule 66 (COMP -> BIGGER .)
    CTE_S           reduce using rule 66 (COMP -> BIGGER .)
    CTE_F           reduce using rule 66 (COMP -> BIGGER .)
    CTE_I           reduce using rule 66 (COMP -> BIGGER .)


state 144

    (67) COMP -> SMALLER .

    NOT             reduce using rule 67 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 67 (COMP -> SMALLER .)
    ID              reduce using rule 67 (COMP -> SMALLER .)
    CTE_S           reduce using rule 67 (COMP -> SMALLER .)
    CTE_F           reduce using rule 67 (COMP -> SMALLER .)
    CTE_I           reduce using rule 67 (COMP -> SMALLER .)


state 145

    (68) COMP -> DOUBLE_EQUALS .

    NOT             reduce using rule 68 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 68 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 68 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 68 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 68 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 68 (COMP -> DOUBLE_EQUALS .)


state 146

    (69) COMP -> DIFFERENT .

    NOT             reduce using rule 69 (COMP -> DIFFERENT .)
    OPEN_PARENTHESIS reduce using rule 69 (COMP -> DIFFERENT .)
    ID              reduce using rule 69 (COMP -> DIFFERENT .)
    CTE_S           reduce using rule 69 (COMP -> DIFFERENT .)
    CTE_F           reduce using rule 69 (COMP -> DIFFERENT .)
    CTE_I           reduce using rule 69 (COMP -> DIFFERENT .)


state 147

    (70) COMP -> AND .

    NOT             reduce using rule 70 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 70 (COMP -> AND .)
    ID              reduce using rule 70 (COMP -> AND .)
    CTE_S           reduce using rule 70 (COMP -> AND .)
    CTE_F           reduce using rule 70 (COMP -> AND .)
    CTE_I           reduce using rule 70 (COMP -> AND .)


state 148

    (71) COMP -> OR .

    NOT             reduce using rule 71 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 71 (COMP -> OR .)
    ID              reduce using rule 71 (COMP -> OR .)
    CTE_S           reduce using rule 71 (COMP -> OR .)
    CTE_F           reduce using rule 71 (COMP -> OR .)
    CTE_I           reduce using rule 71 (COMP -> OR .)


state 149

    (55) EXP -> TERM seen_term . EXP_P
    (58) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (59) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (60) EXP_P -> . empty
    (136) empty -> .

    PLUS            shift and go to state 178
    MINUS           shift and go to state 179
    BIGGER          reduce using rule 136 (empty -> .)
    SMALLER         reduce using rule 136 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 136 (empty -> .)
    DIFFERENT       reduce using rule 136 (empty -> .)
    AND             reduce using rule 136 (empty -> .)
    OR              reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)
    SEMI_COLON      reduce using rule 136 (empty -> .)

    EXP_P                          shift and go to state 177
    empty                          shift and go to state 180

state 150

    (56) EXP -> NOT seen_not . EXP pop_not
    (73) FACTOR -> NOT seen_not . FACTOR pop_not
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (88) TERM -> . FACTOR seen_factor TERM_P
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXP                            shift and go to state 181
    FACTOR                         shift and go to state 182
    TERM                           shift and go to state 111
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 151

    (78) seen_not -> empty .

    NOT             reduce using rule 78 (seen_not -> empty .)
    OPEN_PARENTHESIS reduce using rule 78 (seen_not -> empty .)
    ID              reduce using rule 78 (seen_not -> empty .)
    CTE_S           reduce using rule 78 (seen_not -> empty .)
    CTE_F           reduce using rule 78 (seen_not -> empty .)
    CTE_I           reduce using rule 78 (seen_not -> empty .)


state 152

    (88) TERM -> FACTOR seen_factor . TERM_P
    (89) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (90) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (91) TERM_P -> . empty
    (136) empty -> .

    STAR            shift and go to state 184
    FWD_SLASH       shift and go to state 185
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    BIGGER          reduce using rule 136 (empty -> .)
    SMALLER         reduce using rule 136 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 136 (empty -> .)
    DIFFERENT       reduce using rule 136 (empty -> .)
    AND             reduce using rule 136 (empty -> .)
    OR              reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)
    SEMI_COLON      reduce using rule 136 (empty -> .)

    TERM_P                         shift and go to state 183
    empty                          shift and go to state 186

state 153

    (75) FACTOR -> ID seen_id .

    STAR            reduce using rule 75 (FACTOR -> ID seen_id .)
    FWD_SLASH       reduce using rule 75 (FACTOR -> ID seen_id .)
    PLUS            reduce using rule 75 (FACTOR -> ID seen_id .)
    MINUS           reduce using rule 75 (FACTOR -> ID seen_id .)
    BIGGER          reduce using rule 75 (FACTOR -> ID seen_id .)
    SMALLER         reduce using rule 75 (FACTOR -> ID seen_id .)
    DOUBLE_EQUALS   reduce using rule 75 (FACTOR -> ID seen_id .)
    DIFFERENT       reduce using rule 75 (FACTOR -> ID seen_id .)
    AND             reduce using rule 75 (FACTOR -> ID seen_id .)
    OR              reduce using rule 75 (FACTOR -> ID seen_id .)
    COMMA           reduce using rule 75 (FACTOR -> ID seen_id .)
    CLOSE_PARENTHESIS reduce using rule 75 (FACTOR -> ID seen_id .)
    SEMI_COLON      reduce using rule 75 (FACTOR -> ID seen_id .)


state 154

    (85) CNST -> CTE_S seen_cte_s .

    STAR            reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    DIFFERENT       reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    AND             reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    OR              reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 85 (CNST -> CTE_S seen_cte_s .)


state 155

    (86) CNST -> CTE_F seen_cte_f .

    STAR            reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    DIFFERENT       reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    AND             reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    OR              reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 86 (CNST -> CTE_F seen_cte_f .)


state 156

    (87) CNST -> CTE_I seen_cte_i .

    STAR            reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    DIFFERENT       reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    AND             reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    OR              reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 87 (CNST -> CTE_I seen_cte_i .)


state 157

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (120) seen_if_kwd -> . empty
    (136) empty -> .

    OPEN_CURLY      reduce using rule 136 (empty -> .)

    seen_if_kwd                    shift and go to state 187
    empty                          shift and go to state 188

state 158

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 189


state 159

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 190


state 160

    (132) seen_for_kwd -> empty .

    EQUALS          reduce using rule 132 (seen_for_kwd -> empty .)


state 161

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (136) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    RETURN_KWD      shift and go to state 201
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    IF_KWD          shift and go to state 202
    WHILE_KWD       shift and go to state 205
    FOR_KWD         shift and go to state 206

    FUNC_STATEMENT_STAR            shift and go to state 191
    ASSIGN                         shift and go to state 192
    FUNC_CALL                      shift and go to state 193
    READ                           shift and go to state 194
    WRITE                          shift and go to state 195
    FUNC_FLOW_CONTROL              shift and go to state 196
    FUNC_RETURN                    shift and go to state 197
    empty                          shift and go to state 198
    FUNC_DECISION                  shift and go to state 199
    FUNC_REPETITION                shift and go to state 200
    FUNC_CONDITIONAL_REP           shift and go to state 203
    FUNC_UNCONDITIONAL_REP         shift and go to state 204

state 162

    (30) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 207


state 163

    (53) ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 53 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 53 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .)


state 164

    (96) ARG_LIST -> ID seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 209
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    ARG_LIST_P                     shift and go to state 208
    empty                          shift and go to state 210

state 165

    (94) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DIFFERENT       reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 166

    (97) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 209
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    ARG_LIST_P                     shift and go to state 211
    empty                          shift and go to state 210

state 167

    (98) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 209
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    ARG_LIST_P                     shift and go to state 212
    empty                          shift and go to state 210

state 168

    (14) READABLE_LIST -> ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 14 (READABLE_LIST -> ID seen_readable READABLE_LIST_P .)


state 169

    (15) READABLE_LIST_P -> COMMA . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 213


state 170

    (16) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 16 (READABLE_LIST_P -> empty .)


state 171

    (72) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 214


state 172

    (110) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 110 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 173

    (111) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 215
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 174

    (112) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 112 (PRINTABLE_P -> empty .)


state 175

    (63) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXP                            shift and go to state 110
    EXPRESSION                     shift and go to state 216
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 176

    (65) seen_comp_op -> empty .

    NOT             reduce using rule 65 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 65 (seen_comp_op -> empty .)
    ID              reduce using rule 65 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 65 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 65 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 65 (seen_comp_op -> empty .)


state 177

    (55) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 55 (EXP -> TERM seen_term EXP_P .)


state 178

    (58) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (61) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 61 (seen_term_op -> .)
    NOT             reduce using rule 61 (seen_term_op -> .)
    ID              reduce using rule 61 (seen_term_op -> .)
    CTE_S           reduce using rule 61 (seen_term_op -> .)
    CTE_F           reduce using rule 61 (seen_term_op -> .)
    CTE_I           reduce using rule 61 (seen_term_op -> .)

    seen_term_op                   shift and go to state 217

state 179

    (59) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (61) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 61 (seen_term_op -> .)
    NOT             reduce using rule 61 (seen_term_op -> .)
    ID              reduce using rule 61 (seen_term_op -> .)
    CTE_S           reduce using rule 61 (seen_term_op -> .)
    CTE_F           reduce using rule 61 (seen_term_op -> .)
    CTE_I           reduce using rule 61 (seen_term_op -> .)

    seen_term_op                   shift and go to state 218

state 180

    (60) EXP_P -> empty .

    BIGGER          reduce using rule 60 (EXP_P -> empty .)
    SMALLER         reduce using rule 60 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 60 (EXP_P -> empty .)
    DIFFERENT       reduce using rule 60 (EXP_P -> empty .)
    AND             reduce using rule 60 (EXP_P -> empty .)
    OR              reduce using rule 60 (EXP_P -> empty .)
    COMMA           reduce using rule 60 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 60 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 60 (EXP_P -> empty .)


state 181

    (56) EXP -> NOT seen_not EXP . pop_not
    (77) pop_not -> . empty
    (136) empty -> .

    BIGGER          reduce using rule 136 (empty -> .)
    SMALLER         reduce using rule 136 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 136 (empty -> .)
    DIFFERENT       reduce using rule 136 (empty -> .)
    AND             reduce using rule 136 (empty -> .)
    OR              reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)
    SEMI_COLON      reduce using rule 136 (empty -> .)

    pop_not                        shift and go to state 219
    empty                          shift and go to state 220

state 182

    (73) FACTOR -> NOT seen_not FACTOR . pop_not
    (88) TERM -> FACTOR . seen_factor TERM_P
    (77) pop_not -> . empty
    (92) seen_factor -> .
    (136) empty -> .

  ! reduce/reduce conflict for STAR resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for BIGGER resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for SMALLER resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for AND resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for OR resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 92 (seen_factor -> .)
    STAR            reduce using rule 92 (seen_factor -> .)
    FWD_SLASH       reduce using rule 92 (seen_factor -> .)
    PLUS            reduce using rule 92 (seen_factor -> .)
    MINUS           reduce using rule 92 (seen_factor -> .)
    BIGGER          reduce using rule 92 (seen_factor -> .)
    SMALLER         reduce using rule 92 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 92 (seen_factor -> .)
    DIFFERENT       reduce using rule 92 (seen_factor -> .)
    AND             reduce using rule 92 (seen_factor -> .)
    OR              reduce using rule 92 (seen_factor -> .)
    COMMA           reduce using rule 92 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 92 (seen_factor -> .)
    SEMI_COLON      reduce using rule 92 (seen_factor -> .)

  ! STAR            [ reduce using rule 136 (empty -> .) ]
  ! FWD_SLASH       [ reduce using rule 136 (empty -> .) ]
  ! PLUS            [ reduce using rule 136 (empty -> .) ]
  ! MINUS           [ reduce using rule 136 (empty -> .) ]
  ! BIGGER          [ reduce using rule 136 (empty -> .) ]
  ! SMALLER         [ reduce using rule 136 (empty -> .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 136 (empty -> .) ]
  ! DIFFERENT       [ reduce using rule 136 (empty -> .) ]
  ! AND             [ reduce using rule 136 (empty -> .) ]
  ! OR              [ reduce using rule 136 (empty -> .) ]
  ! COMMA           [ reduce using rule 136 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 136 (empty -> .) ]
  ! SEMI_COLON      [ reduce using rule 136 (empty -> .) ]

    pop_not                        shift and go to state 221
    seen_factor                    shift and go to state 152
    empty                          shift and go to state 220

state 183

    (88) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)


state 184

    (89) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (93) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 93 (seen_factor_op -> .)
    NOT             reduce using rule 93 (seen_factor_op -> .)
    ID              reduce using rule 93 (seen_factor_op -> .)
    CTE_S           reduce using rule 93 (seen_factor_op -> .)
    CTE_F           reduce using rule 93 (seen_factor_op -> .)
    CTE_I           reduce using rule 93 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 222

state 185

    (90) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (93) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 93 (seen_factor_op -> .)
    NOT             reduce using rule 93 (seen_factor_op -> .)
    ID              reduce using rule 93 (seen_factor_op -> .)
    CTE_S           reduce using rule 93 (seen_factor_op -> .)
    CTE_F           reduce using rule 93 (seen_factor_op -> .)
    CTE_I           reduce using rule 93 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 223

state 186

    (91) TERM_P -> empty .

    PLUS            reduce using rule 91 (TERM_P -> empty .)
    MINUS           reduce using rule 91 (TERM_P -> empty .)
    BIGGER          reduce using rule 91 (TERM_P -> empty .)
    SMALLER         reduce using rule 91 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 91 (TERM_P -> empty .)
    DIFFERENT       reduce using rule 91 (TERM_P -> empty .)
    AND             reduce using rule 91 (TERM_P -> empty .)
    OR              reduce using rule 91 (TERM_P -> empty .)
    COMMA           reduce using rule 91 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 91 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 91 (TERM_P -> empty .)


state 187

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 224


state 188

    (120) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 120 (seen_if_kwd -> empty .)


state 189

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (130) seen_while_exp -> . empty
    (136) empty -> .

    OPEN_CURLY      reduce using rule 136 (empty -> .)

    seen_while_exp                 shift and go to state 225
    empty                          shift and go to state 226

state 190

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 227
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 191

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 228


state 192

    (31) FUNC_STATEMENT_STAR -> ASSIGN . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 229


state 193

    (32) FUNC_STATEMENT_STAR -> FUNC_CALL . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 230


state 194

    (33) FUNC_STATEMENT_STAR -> READ . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 231


state 195

    (34) FUNC_STATEMENT_STAR -> WRITE . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 232


state 196

    (35) FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (136) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    RETURN_KWD      shift and go to state 201
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    IF_KWD          shift and go to state 202
    WHILE_KWD       shift and go to state 205
    FOR_KWD         shift and go to state 206

    FUNC_FLOW_CONTROL              shift and go to state 196
    FUNC_STATEMENT_STAR            shift and go to state 233
    ASSIGN                         shift and go to state 192
    FUNC_CALL                      shift and go to state 193
    READ                           shift and go to state 194
    WRITE                          shift and go to state 195
    FUNC_RETURN                    shift and go to state 197
    empty                          shift and go to state 198
    FUNC_DECISION                  shift and go to state 199
    FUNC_REPETITION                shift and go to state 200
    FUNC_CONDITIONAL_REP           shift and go to state 203
    FUNC_UNCONDITIONAL_REP         shift and go to state 204

state 197

    (36) FUNC_STATEMENT_STAR -> FUNC_RETURN . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (136) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    RETURN_KWD      shift and go to state 201
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    IF_KWD          shift and go to state 202
    WHILE_KWD       shift and go to state 205
    FOR_KWD         shift and go to state 206

    FUNC_RETURN                    shift and go to state 197
    FUNC_STATEMENT_STAR            shift and go to state 234
    ASSIGN                         shift and go to state 192
    FUNC_CALL                      shift and go to state 193
    READ                           shift and go to state 194
    WRITE                          shift and go to state 195
    FUNC_FLOW_CONTROL              shift and go to state 196
    empty                          shift and go to state 198
    FUNC_DECISION                  shift and go to state 199
    FUNC_REPETITION                shift and go to state 200
    FUNC_CONDITIONAL_REP           shift and go to state 203
    FUNC_UNCONDITIONAL_REP         shift and go to state 204

state 198

    (37) FUNC_STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 37 (FUNC_STATEMENT_STAR -> empty .)


state 199

    (47) FUNC_FLOW_CONTROL -> FUNC_DECISION .

    ID              reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    READ_KWD        reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    WRITE_KWD       reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    RETURN_KWD      reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    IF_KWD          reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    WHILE_KWD       reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    FOR_KWD         reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    CLOSE_CURLY     reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)


state 200

    (48) FUNC_FLOW_CONTROL -> FUNC_REPETITION .

    ID              reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    READ_KWD        reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    WRITE_KWD       reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    RETURN_KWD      reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    IF_KWD          reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    WHILE_KWD       reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    FOR_KWD         reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    CLOSE_CURLY     reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)


state 201

    (105) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> RETURN_KWD . SEMI_COLON
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    SEMI_COLON      shift and go to state 236
    ID              shift and go to state 238
    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 235
    FUNC_CALL                      shift and go to state 237
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    CNST                           shift and go to state 116

state 202

    (114) FUNC_DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P

    OPEN_PARENTHESIS shift and go to state 239


state 203

    (122) FUNC_REPETITION -> FUNC_CONDITIONAL_REP .

    ID              reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    READ_KWD        reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    IF_KWD          reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)


state 204

    (123) FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .

    ID              reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)


state 205

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (129) seen_while_kwd -> . empty
    (136) empty -> .

    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_while_kwd                 shift and go to state 240
    empty                          shift and go to state 96

state 206

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 241


state 207

    (30) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 30 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 208

    (96) ARG_LIST -> ID seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 96 (ARG_LIST -> ID seen_arg ARG_LIST_P .)


state 209

    (100) ARG_LIST_P -> COMMA . ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 242
    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 243
    FUNC_CALL                      shift and go to state 244
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    CNST                           shift and go to state 116

state 210

    (103) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 103 (ARG_LIST_P -> empty .)


state 211

    (97) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 97 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 212

    (98) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 98 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 213

    (15) READABLE_LIST_P -> COMMA ID . seen_readable READABLE_LIST_P
    (17) seen_readable -> . empty
    (136) empty -> .

    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_readable                  shift and go to state 245
    empty                          shift and go to state 136

state 214

    (72) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (80) seen_close_parenthesis -> . empty
    (136) empty -> .

    STAR            reduce using rule 136 (empty -> .)
    FWD_SLASH       reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    BIGGER          reduce using rule 136 (empty -> .)
    SMALLER         reduce using rule 136 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 136 (empty -> .)
    DIFFERENT       reduce using rule 136 (empty -> .)
    AND             reduce using rule 136 (empty -> .)
    OR              reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)
    SEMI_COLON      reduce using rule 136 (empty -> .)

    seen_close_parenthesis         shift and go to state 246
    empty                          shift and go to state 247

state 215

    (111) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (113) seen_printable -> . empty
    (136) empty -> .

    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_printable                 shift and go to state 248
    empty                          shift and go to state 141

state 216

    (63) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (64) seen_comp -> . empty
    (136) empty -> .

    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)
    SEMI_COLON      reduce using rule 136 (empty -> .)

    seen_comp                      shift and go to state 249
    empty                          shift and go to state 250

state 217

    (58) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 107
    NOT             shift and go to state 252
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    TERM                           shift and go to state 251
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 218

    (59) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 107
    NOT             shift and go to state 252
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    TERM                           shift and go to state 253
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 219

    (56) EXP -> NOT seen_not EXP pop_not .

    BIGGER          reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER         reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    DOUBLE_EQUALS   reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    DIFFERENT       reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    AND             reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    OR              reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    COMMA           reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    CLOSE_PARENTHESIS reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    SEMI_COLON      reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)


state 220

    (77) pop_not -> empty .

    BIGGER          reduce using rule 77 (pop_not -> empty .)
    SMALLER         reduce using rule 77 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 77 (pop_not -> empty .)
    DIFFERENT       reduce using rule 77 (pop_not -> empty .)
    AND             reduce using rule 77 (pop_not -> empty .)
    OR              reduce using rule 77 (pop_not -> empty .)
    COMMA           reduce using rule 77 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 77 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 77 (pop_not -> empty .)
    STAR            reduce using rule 77 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 77 (pop_not -> empty .)
    PLUS            reduce using rule 77 (pop_not -> empty .)
    MINUS           reduce using rule 77 (pop_not -> empty .)


state 221

    (73) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DIFFERENT       reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 222

    (89) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 107
    NOT             shift and go to state 252
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    FACTOR                         shift and go to state 254
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 223

    (90) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 107
    NOT             shift and go to state 252
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    FACTOR                         shift and go to state 255
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 224

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (136) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    IF_KWD          shift and go to state 72
    WHILE_KWD       shift and go to state 75
    FOR_KWD         shift and go to state 76

    STATEMENT_STAR                 shift and go to state 256
    STATEMENT                      shift and go to state 61
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    FLOW_CONTROL                   shift and go to state 67
    DECISION                       shift and go to state 70
    REPETITION                     shift and go to state 71
    CONDITIONAL_REP                shift and go to state 73
    UNCONDITIONAL_REP              shift and go to state 74

state 225

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 257


state 226

    (130) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 130 (seen_while_exp -> empty .)


state 227

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (134) seen_for_start_exp -> . empty
    (136) empty -> .

    SEMI_COLON      reduce using rule 136 (empty -> .)

    seen_for_start_exp             shift and go to state 258
    empty                          shift and go to state 259

state 228

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    TYPE            reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)


state 229

    (31) FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (136) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    RETURN_KWD      shift and go to state 201
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    IF_KWD          shift and go to state 202
    WHILE_KWD       shift and go to state 205
    FOR_KWD         shift and go to state 206

    ASSIGN                         shift and go to state 192
    FUNC_STATEMENT_STAR            shift and go to state 260
    FUNC_CALL                      shift and go to state 193
    READ                           shift and go to state 194
    WRITE                          shift and go to state 195
    FUNC_FLOW_CONTROL              shift and go to state 196
    FUNC_RETURN                    shift and go to state 197
    empty                          shift and go to state 198
    FUNC_DECISION                  shift and go to state 199
    FUNC_REPETITION                shift and go to state 200
    FUNC_CONDITIONAL_REP           shift and go to state 203
    FUNC_UNCONDITIONAL_REP         shift and go to state 204

state 230

    (32) FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (136) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    RETURN_KWD      shift and go to state 201
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    IF_KWD          shift and go to state 202
    WHILE_KWD       shift and go to state 205
    FOR_KWD         shift and go to state 206

    FUNC_CALL                      shift and go to state 193
    FUNC_STATEMENT_STAR            shift and go to state 261
    ASSIGN                         shift and go to state 192
    READ                           shift and go to state 194
    WRITE                          shift and go to state 195
    FUNC_FLOW_CONTROL              shift and go to state 196
    FUNC_RETURN                    shift and go to state 197
    empty                          shift and go to state 198
    FUNC_DECISION                  shift and go to state 199
    FUNC_REPETITION                shift and go to state 200
    FUNC_CONDITIONAL_REP           shift and go to state 203
    FUNC_UNCONDITIONAL_REP         shift and go to state 204

state 231

    (33) FUNC_STATEMENT_STAR -> READ SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (136) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    RETURN_KWD      shift and go to state 201
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    IF_KWD          shift and go to state 202
    WHILE_KWD       shift and go to state 205
    FOR_KWD         shift and go to state 206

    READ                           shift and go to state 194
    FUNC_STATEMENT_STAR            shift and go to state 262
    ASSIGN                         shift and go to state 192
    FUNC_CALL                      shift and go to state 193
    WRITE                          shift and go to state 195
    FUNC_FLOW_CONTROL              shift and go to state 196
    FUNC_RETURN                    shift and go to state 197
    empty                          shift and go to state 198
    FUNC_DECISION                  shift and go to state 199
    FUNC_REPETITION                shift and go to state 200
    FUNC_CONDITIONAL_REP           shift and go to state 203
    FUNC_UNCONDITIONAL_REP         shift and go to state 204

state 232

    (34) FUNC_STATEMENT_STAR -> WRITE SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (136) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    RETURN_KWD      shift and go to state 201
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    IF_KWD          shift and go to state 202
    WHILE_KWD       shift and go to state 205
    FOR_KWD         shift and go to state 206

    WRITE                          shift and go to state 195
    FUNC_STATEMENT_STAR            shift and go to state 263
    ASSIGN                         shift and go to state 192
    FUNC_CALL                      shift and go to state 193
    READ                           shift and go to state 194
    FUNC_FLOW_CONTROL              shift and go to state 196
    FUNC_RETURN                    shift and go to state 197
    empty                          shift and go to state 198
    FUNC_DECISION                  shift and go to state 199
    FUNC_REPETITION                shift and go to state 200
    FUNC_CONDITIONAL_REP           shift and go to state 203
    FUNC_UNCONDITIONAL_REP         shift and go to state 204

state 233

    (35) FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 35 (FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR .)


state 234

    (36) FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 36 (FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR .)


state 235

    (105) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 264


state 236

    (107) FUNC_RETURN -> RETURN_KWD SEMI_COLON .

    ID              reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    READ_KWD        reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WRITE_KWD       reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    RETURN_KWD      reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    IF_KWD          reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WHILE_KWD       reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    FOR_KWD         reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)


state 237

    (106) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (74) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 265
    STAR            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 74 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 74 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 74 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 74 (FACTOR -> FUNC_CALL .) ]


state 238

    (94) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (75) FACTOR -> ID . seen_id
    (95) seen_func_call_id -> . empty
    (81) seen_id -> .
    (136) empty -> .

    STAR            reduce using rule 81 (seen_id -> .)
    FWD_SLASH       reduce using rule 81 (seen_id -> .)
    PLUS            reduce using rule 81 (seen_id -> .)
    MINUS           reduce using rule 81 (seen_id -> .)
    BIGGER          reduce using rule 81 (seen_id -> .)
    SMALLER         reduce using rule 81 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 81 (seen_id -> .)
    DIFFERENT       reduce using rule 81 (seen_id -> .)
    AND             reduce using rule 81 (seen_id -> .)
    OR              reduce using rule 81 (seen_id -> .)
    SEMI_COLON      reduce using rule 81 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_func_call_id              shift and go to state 84
    seen_id                        shift and go to state 153
    empty                          shift and go to state 85

state 239

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 266
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 240

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 267


state 241

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 268


state 242

    (100) ARG_LIST_P -> COMMA ID . seen_arg ARG_LIST_P
    (94) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (75) FACTOR -> ID . seen_id
    (104) seen_arg -> .
    (95) seen_func_call_id -> . empty
    (81) seen_id -> .
    (136) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 81 (seen_id -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 81 (seen_id -> .)
    STAR            reduce using rule 81 (seen_id -> .)
    FWD_SLASH       reduce using rule 81 (seen_id -> .)
    PLUS            reduce using rule 81 (seen_id -> .)
    MINUS           reduce using rule 81 (seen_id -> .)
    BIGGER          reduce using rule 81 (seen_id -> .)
    SMALLER         reduce using rule 81 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 81 (seen_id -> .)
    DIFFERENT       reduce using rule 81 (seen_id -> .)
    AND             reduce using rule 81 (seen_id -> .)
    OR              reduce using rule 81 (seen_id -> .)
    COMMA           reduce using rule 81 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 81 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)

  ! COMMA           [ reduce using rule 104 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 104 (seen_arg -> .) ]

    seen_arg                       shift and go to state 269
    seen_func_call_id              shift and go to state 84
    seen_id                        shift and go to state 153
    empty                          shift and go to state 85

state 243

    (101) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (104) seen_arg -> .

    COMMA           reduce using rule 104 (seen_arg -> .)
    CLOSE_PARENTHESIS reduce using rule 104 (seen_arg -> .)

    seen_arg                       shift and go to state 270

state 244

    (102) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (74) FACTOR -> FUNC_CALL .
    (104) seen_arg -> .

  ! reduce/reduce conflict for COMMA resolved using rule 74 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 74 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 74 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 74 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 74 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 74 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 104 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 104 (seen_arg -> .) ]

    seen_arg                       shift and go to state 271

state 245

    (15) READABLE_LIST_P -> COMMA ID seen_readable . READABLE_LIST_P
    (15) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (16) READABLE_LIST_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 169
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    READABLE_LIST_P                shift and go to state 272
    empty                          shift and go to state 170

state 246

    (72) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DIFFERENT       reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 247

    (80) seen_close_parenthesis -> empty .

    STAR            reduce using rule 80 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 80 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 80 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 80 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 80 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 80 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 80 (seen_close_parenthesis -> empty .)
    DIFFERENT       reduce using rule 80 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 80 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 80 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 80 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 80 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 80 (seen_close_parenthesis -> empty .)


state 248

    (111) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (111) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (112) PRINTABLE_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 173
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    PRINTABLE_P                    shift and go to state 273
    empty                          shift and go to state 174

state 249

    (63) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    COMMA           reduce using rule 63 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 63 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    SEMI_COLON      reduce using rule 63 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 250

    (64) seen_comp -> empty .

    COMMA           reduce using rule 64 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 64 (seen_comp -> empty .)
    SEMI_COLON      reduce using rule 64 (seen_comp -> empty .)


state 251

    (58) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (57) seen_term -> .

    PLUS            reduce using rule 57 (seen_term -> .)
    MINUS           reduce using rule 57 (seen_term -> .)
    BIGGER          reduce using rule 57 (seen_term -> .)
    SMALLER         reduce using rule 57 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 57 (seen_term -> .)
    DIFFERENT       reduce using rule 57 (seen_term -> .)
    AND             reduce using rule 57 (seen_term -> .)
    OR              reduce using rule 57 (seen_term -> .)
    COMMA           reduce using rule 57 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 57 (seen_term -> .)
    SEMI_COLON      reduce using rule 57 (seen_term -> .)

    seen_term                      shift and go to state 274

state 252

    (73) FACTOR -> NOT . seen_not FACTOR pop_not
    (78) seen_not -> . empty
    (136) empty -> .

    OPEN_PARENTHESIS reduce using rule 136 (empty -> .)
    NOT             reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    CTE_S           reduce using rule 136 (empty -> .)
    CTE_F           reduce using rule 136 (empty -> .)
    CTE_I           reduce using rule 136 (empty -> .)

    seen_not                       shift and go to state 275
    empty                          shift and go to state 151

state 253

    (59) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (57) seen_term -> .

    PLUS            reduce using rule 57 (seen_term -> .)
    MINUS           reduce using rule 57 (seen_term -> .)
    BIGGER          reduce using rule 57 (seen_term -> .)
    SMALLER         reduce using rule 57 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 57 (seen_term -> .)
    DIFFERENT       reduce using rule 57 (seen_term -> .)
    AND             reduce using rule 57 (seen_term -> .)
    OR              reduce using rule 57 (seen_term -> .)
    COMMA           reduce using rule 57 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 57 (seen_term -> .)
    SEMI_COLON      reduce using rule 57 (seen_term -> .)

    seen_term                      shift and go to state 276

state 254

    (89) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (92) seen_factor -> .

    STAR            reduce using rule 92 (seen_factor -> .)
    FWD_SLASH       reduce using rule 92 (seen_factor -> .)
    PLUS            reduce using rule 92 (seen_factor -> .)
    MINUS           reduce using rule 92 (seen_factor -> .)
    BIGGER          reduce using rule 92 (seen_factor -> .)
    SMALLER         reduce using rule 92 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 92 (seen_factor -> .)
    DIFFERENT       reduce using rule 92 (seen_factor -> .)
    AND             reduce using rule 92 (seen_factor -> .)
    OR              reduce using rule 92 (seen_factor -> .)
    COMMA           reduce using rule 92 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 92 (seen_factor -> .)
    SEMI_COLON      reduce using rule 92 (seen_factor -> .)

    seen_factor                    shift and go to state 277

state 255

    (90) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (92) seen_factor -> .

    STAR            reduce using rule 92 (seen_factor -> .)
    FWD_SLASH       reduce using rule 92 (seen_factor -> .)
    PLUS            reduce using rule 92 (seen_factor -> .)
    MINUS           reduce using rule 92 (seen_factor -> .)
    BIGGER          reduce using rule 92 (seen_factor -> .)
    SMALLER         reduce using rule 92 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 92 (seen_factor -> .)
    DIFFERENT       reduce using rule 92 (seen_factor -> .)
    AND             reduce using rule 92 (seen_factor -> .)
    OR              reduce using rule 92 (seen_factor -> .)
    COMMA           reduce using rule 92 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 92 (seen_factor -> .)
    SEMI_COLON      reduce using rule 92 (seen_factor -> .)

    seen_factor                    shift and go to state 278

state 256

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 279


state 257

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (136) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    IF_KWD          shift and go to state 72
    WHILE_KWD       shift and go to state 75
    FOR_KWD         shift and go to state 76

    STATEMENT_STAR                 shift and go to state 280
    STATEMENT                      shift and go to state 61
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    FLOW_CONTROL                   shift and go to state 67
    DECISION                       shift and go to state 70
    REPETITION                     shift and go to state 71
    CONDITIONAL_REP                shift and go to state 73
    UNCONDITIONAL_REP              shift and go to state 74

state 258

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 281


state 259

    (134) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 134 (seen_for_start_exp -> empty .)


state 260

    (31) FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 31 (FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON FUNC_STATEMENT_STAR .)


state 261

    (32) FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 32 (FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR .)


state 262

    (33) FUNC_STATEMENT_STAR -> READ SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 33 (FUNC_STATEMENT_STAR -> READ SEMI_COLON FUNC_STATEMENT_STAR .)


state 263

    (34) FUNC_STATEMENT_STAR -> WRITE SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 34 (FUNC_STATEMENT_STAR -> WRITE SEMI_COLON FUNC_STATEMENT_STAR .)


state 264

    (105) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 265

    (106) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    ID              reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 266

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P

    CLOSE_PARENTHESIS shift and go to state 282


state 267

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 283
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 268

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (132) seen_for_kwd -> . empty
    (136) empty -> .

    EQUALS          reduce using rule 136 (empty -> .)

    seen_for_kwd                   shift and go to state 284
    empty                          shift and go to state 160

state 269

    (100) ARG_LIST_P -> COMMA ID seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 209
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    ARG_LIST_P                     shift and go to state 285
    empty                          shift and go to state 210

state 270

    (101) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 209
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    ARG_LIST_P                     shift and go to state 286
    empty                          shift and go to state 210

state 271

    (102) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (136) empty -> .

    COMMA           shift and go to state 209
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    ARG_LIST_P                     shift and go to state 287
    empty                          shift and go to state 210

state 272

    (15) READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 15 (READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .)


state 273

    (111) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 111 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 274

    (58) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (58) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (59) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (60) EXP_P -> . empty
    (136) empty -> .

    PLUS            shift and go to state 178
    MINUS           shift and go to state 179
    BIGGER          reduce using rule 136 (empty -> .)
    SMALLER         reduce using rule 136 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 136 (empty -> .)
    DIFFERENT       reduce using rule 136 (empty -> .)
    AND             reduce using rule 136 (empty -> .)
    OR              reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)
    SEMI_COLON      reduce using rule 136 (empty -> .)

    EXP_P                          shift and go to state 288
    empty                          shift and go to state 180

state 275

    (73) FACTOR -> NOT seen_not . FACTOR pop_not
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 107
    NOT             shift and go to state 252
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    FACTOR                         shift and go to state 289
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 276

    (59) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (58) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (59) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (60) EXP_P -> . empty
    (136) empty -> .

    PLUS            shift and go to state 178
    MINUS           shift and go to state 179
    BIGGER          reduce using rule 136 (empty -> .)
    SMALLER         reduce using rule 136 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 136 (empty -> .)
    DIFFERENT       reduce using rule 136 (empty -> .)
    AND             reduce using rule 136 (empty -> .)
    OR              reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)
    SEMI_COLON      reduce using rule 136 (empty -> .)

    EXP_P                          shift and go to state 290
    empty                          shift and go to state 180

state 277

    (89) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (89) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (90) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (91) TERM_P -> . empty
    (136) empty -> .

    STAR            shift and go to state 184
    FWD_SLASH       shift and go to state 185
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    BIGGER          reduce using rule 136 (empty -> .)
    SMALLER         reduce using rule 136 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 136 (empty -> .)
    DIFFERENT       reduce using rule 136 (empty -> .)
    AND             reduce using rule 136 (empty -> .)
    OR              reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)
    SEMI_COLON      reduce using rule 136 (empty -> .)

    TERM_P                         shift and go to state 291
    empty                          shift and go to state 186

state 278

    (90) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (89) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (90) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (91) TERM_P -> . empty
    (136) empty -> .

    STAR            shift and go to state 184
    FWD_SLASH       shift and go to state 185
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    BIGGER          reduce using rule 136 (empty -> .)
    SMALLER         reduce using rule 136 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 136 (empty -> .)
    DIFFERENT       reduce using rule 136 (empty -> .)
    AND             reduce using rule 136 (empty -> .)
    OR              reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)
    SEMI_COLON      reduce using rule 136 (empty -> .)

    TERM_P                         shift and go to state 292
    empty                          shift and go to state 186

state 279

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (118) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (119) DECISION_P -> . empty
    (136) empty -> .

    ELSE_KWD        shift and go to state 294
    ID              reduce using rule 136 (empty -> .)
    READ_KWD        reduce using rule 136 (empty -> .)
    WRITE_KWD       reduce using rule 136 (empty -> .)
    IF_KWD          reduce using rule 136 (empty -> .)
    WHILE_KWD       reduce using rule 136 (empty -> .)
    FOR_KWD         reduce using rule 136 (empty -> .)
    CLOSE_CURLY     reduce using rule 136 (empty -> .)

    DECISION_P                     shift and go to state 293
    empty                          shift and go to state 295

state 280

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 296


state 281

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 297
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 282

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (120) seen_if_kwd -> . empty
    (136) empty -> .

    OPEN_CURLY      reduce using rule 136 (empty -> .)

    seen_if_kwd                    shift and go to state 298
    empty                          shift and go to state 188

state 283

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 299


state 284

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 300


state 285

    (100) ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 100 (ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P .)


state 286

    (101) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 101 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 287

    (102) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 102 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 288

    (58) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 289

    (73) FACTOR -> NOT seen_not FACTOR . pop_not
    (77) pop_not -> . empty
    (136) empty -> .

    STAR            reduce using rule 136 (empty -> .)
    FWD_SLASH       reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    BIGGER          reduce using rule 136 (empty -> .)
    SMALLER         reduce using rule 136 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 136 (empty -> .)
    DIFFERENT       reduce using rule 136 (empty -> .)
    AND             reduce using rule 136 (empty -> .)
    OR              reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)
    SEMI_COLON      reduce using rule 136 (empty -> .)

    pop_not                        shift and go to state 221
    empty                          shift and go to state 220

state 290

    (59) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 291

    (89) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 292

    (90) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 293

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 294

    (118) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (121) seen_else_kwd -> . empty
    (136) empty -> .

    OPEN_CURLY      reduce using rule 136 (empty -> .)

    seen_else_kwd                  shift and go to state 301
    empty                          shift and go to state 302

state 295

    (119) DECISION_P -> empty .

    ID              reduce using rule 119 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 119 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 119 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 119 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 119 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 119 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 119 (DECISION_P -> empty .)


state 296

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 297

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (135) seen_for_end_exp -> . empty
    (136) empty -> .

    SEMI_COLON      reduce using rule 136 (empty -> .)

    seen_for_end_exp               shift and go to state 303
    empty                          shift and go to state 304

state 298

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P

    OPEN_CURLY      shift and go to state 305


state 299

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (130) seen_while_exp -> . empty
    (136) empty -> .

    OPEN_CURLY      reduce using rule 136 (empty -> .)

    seen_while_exp                 shift and go to state 306
    empty                          shift and go to state 226

state 300

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 307
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 301

    (118) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 308


state 302

    (121) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 121 (seen_else_kwd -> empty .)


state 303

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 309


state 304

    (135) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 135 (seen_for_end_exp -> empty .)


state 305

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (136) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    RETURN_KWD      shift and go to state 201
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    IF_KWD          shift and go to state 202
    WHILE_KWD       shift and go to state 205
    FOR_KWD         shift and go to state 206

    FUNC_STATEMENT_STAR            shift and go to state 310
    ASSIGN                         shift and go to state 192
    FUNC_CALL                      shift and go to state 193
    READ                           shift and go to state 194
    WRITE                          shift and go to state 195
    FUNC_FLOW_CONTROL              shift and go to state 196
    FUNC_RETURN                    shift and go to state 197
    empty                          shift and go to state 198
    FUNC_DECISION                  shift and go to state 199
    FUNC_REPETITION                shift and go to state 200
    FUNC_CONDITIONAL_REP           shift and go to state 203
    FUNC_UNCONDITIONAL_REP         shift and go to state 204

state 306

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 311


state 307

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (134) seen_for_start_exp -> . empty
    (136) empty -> .

    SEMI_COLON      reduce using rule 136 (empty -> .)

    seen_for_start_exp             shift and go to state 312
    empty                          shift and go to state 259

state 308

    (118) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (136) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    IF_KWD          shift and go to state 72
    WHILE_KWD       shift and go to state 75
    FOR_KWD         shift and go to state 76

    STATEMENT_STAR                 shift and go to state 313
    STATEMENT                      shift and go to state 61
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    FLOW_CONTROL                   shift and go to state 67
    DECISION                       shift and go to state 70
    REPETITION                     shift and go to state 71
    CONDITIONAL_REP                shift and go to state 73
    UNCONDITIONAL_REP              shift and go to state 74

state 309

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (49) FOR_INCR_STATEMENT -> . ASSIGN
    (50) FOR_INCR_STATEMENT -> . FUNC_CALL
    (51) FOR_INCR_STATEMENT -> . READ
    (52) FOR_INCR_STATEMENT -> . WRITE
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69

    FOR_INCR_STATEMENT             shift and go to state 314
    ASSIGN                         shift and go to state 315
    FUNC_CALL                      shift and go to state 316
    READ                           shift and go to state 317
    WRITE                          shift and go to state 318

state 310

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY FUNC_DECISION_P

    CLOSE_CURLY     shift and go to state 319


state 311

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (136) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    RETURN_KWD      shift and go to state 201
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    IF_KWD          shift and go to state 202
    WHILE_KWD       shift and go to state 205
    FOR_KWD         shift and go to state 206

    FUNC_STATEMENT_STAR            shift and go to state 320
    ASSIGN                         shift and go to state 192
    FUNC_CALL                      shift and go to state 193
    READ                           shift and go to state 194
    WRITE                          shift and go to state 195
    FUNC_FLOW_CONTROL              shift and go to state 196
    FUNC_RETURN                    shift and go to state 197
    empty                          shift and go to state 198
    FUNC_DECISION                  shift and go to state 199
    FUNC_REPETITION                shift and go to state 200
    FUNC_CONDITIONAL_REP           shift and go to state 203
    FUNC_UNCONDITIONAL_REP         shift and go to state 204

state 312

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 321


state 313

    (118) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 322


state 314

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (133) seen_for_incr_exp -> . empty
    (136) empty -> .

    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_for_incr_exp              shift and go to state 323
    empty                          shift and go to state 324

state 315

    (49) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 49 (FOR_INCR_STATEMENT -> ASSIGN .)


state 316

    (50) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 50 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 317

    (51) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 51 (FOR_INCR_STATEMENT -> READ .)


state 318

    (52) FOR_INCR_STATEMENT -> WRITE .

    CLOSE_PARENTHESIS reduce using rule 52 (FOR_INCR_STATEMENT -> WRITE .)


state 319

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY . FUNC_DECISION_P
    (115) FUNC_DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (116) FUNC_DECISION_P -> . empty
    (136) empty -> .

    ELSE_KWD        shift and go to state 326
    ID              reduce using rule 136 (empty -> .)
    READ_KWD        reduce using rule 136 (empty -> .)
    WRITE_KWD       reduce using rule 136 (empty -> .)
    RETURN_KWD      reduce using rule 136 (empty -> .)
    IF_KWD          reduce using rule 136 (empty -> .)
    WHILE_KWD       reduce using rule 136 (empty -> .)
    FOR_KWD         reduce using rule 136 (empty -> .)
    CLOSE_CURLY     reduce using rule 136 (empty -> .)

    FUNC_DECISION_P                shift and go to state 325
    empty                          shift and go to state 327

state 320

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 328


state 321

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 107
    ID              shift and go to state 115
    CTE_S           shift and go to state 117
    CTE_F           shift and go to state 118
    CTE_I           shift and go to state 119

    EXPRESSION                     shift and go to state 329
    EXP                            shift and go to state 110
    TERM                           shift and go to state 111
    FACTOR                         shift and go to state 113
    FUNC_CALL                      shift and go to state 114
    CNST                           shift and go to state 116

state 322

    (118) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 323

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 330


state 324

    (133) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 133 (seen_for_incr_exp -> empty .)


state 325

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .

    ID              reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    READ_KWD        reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    WRITE_KWD       reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    RETURN_KWD      reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    IF_KWD          reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    WHILE_KWD       reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    FOR_KWD         reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    CLOSE_CURLY     reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)


state 326

    (115) FUNC_DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (121) seen_else_kwd -> . empty
    (136) empty -> .

    OPEN_CURLY      reduce using rule 136 (empty -> .)

    seen_else_kwd                  shift and go to state 331
    empty                          shift and go to state 302

state 327

    (116) FUNC_DECISION_P -> empty .

    ID              reduce using rule 116 (FUNC_DECISION_P -> empty .)
    READ_KWD        reduce using rule 116 (FUNC_DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 116 (FUNC_DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 116 (FUNC_DECISION_P -> empty .)
    IF_KWD          reduce using rule 116 (FUNC_DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 116 (FUNC_DECISION_P -> empty .)
    FOR_KWD         reduce using rule 116 (FUNC_DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 116 (FUNC_DECISION_P -> empty .)


state 328

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)


state 329

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (135) seen_for_end_exp -> . empty
    (136) empty -> .

    SEMI_COLON      reduce using rule 136 (empty -> .)

    seen_for_end_exp               shift and go to state 332
    empty                          shift and go to state 304

state 330

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 333


state 331

    (115) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 334


state 332

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 335


state 333

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (136) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    IF_KWD          shift and go to state 72
    WHILE_KWD       shift and go to state 75
    FOR_KWD         shift and go to state 76

    STATEMENT_STAR                 shift and go to state 336
    STATEMENT                      shift and go to state 61
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    FLOW_CONTROL                   shift and go to state 67
    DECISION                       shift and go to state 70
    REPETITION                     shift and go to state 71
    CONDITIONAL_REP                shift and go to state 73
    UNCONDITIONAL_REP              shift and go to state 74

state 334

    (115) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (136) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    RETURN_KWD      shift and go to state 201
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    IF_KWD          shift and go to state 202
    WHILE_KWD       shift and go to state 205
    FOR_KWD         shift and go to state 206

    FUNC_STATEMENT_STAR            shift and go to state 337
    ASSIGN                         shift and go to state 192
    FUNC_CALL                      shift and go to state 193
    READ                           shift and go to state 194
    WRITE                          shift and go to state 195
    FUNC_FLOW_CONTROL              shift and go to state 196
    FUNC_RETURN                    shift and go to state 197
    empty                          shift and go to state 198
    FUNC_DECISION                  shift and go to state 199
    FUNC_REPETITION                shift and go to state 200
    FUNC_CONDITIONAL_REP           shift and go to state 203
    FUNC_UNCONDITIONAL_REP         shift and go to state 204

state 335

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (49) FOR_INCR_STATEMENT -> . ASSIGN
    (50) FOR_INCR_STATEMENT -> . FUNC_CALL
    (51) FOR_INCR_STATEMENT -> . READ
    (52) FOR_INCR_STATEMENT -> . WRITE
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69

    FOR_INCR_STATEMENT             shift and go to state 338
    ASSIGN                         shift and go to state 315
    FUNC_CALL                      shift and go to state 316
    READ                           shift and go to state 317
    WRITE                          shift and go to state 318

state 336

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 339


state 337

    (115) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 340


state 338

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (133) seen_for_incr_exp -> . empty
    (136) empty -> .

    CLOSE_PARENTHESIS reduce using rule 136 (empty -> .)

    seen_for_incr_exp              shift and go to state 341
    empty                          shift and go to state 324

state 339

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 340

    (115) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)


state 341

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 342


state 342

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 343


state 343

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (136) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 59
    READ_KWD        shift and go to state 68
    WRITE_KWD       shift and go to state 69
    RETURN_KWD      shift and go to state 201
    CLOSE_CURLY     reduce using rule 136 (empty -> .)
    IF_KWD          shift and go to state 202
    WHILE_KWD       shift and go to state 205
    FOR_KWD         shift and go to state 206

    FUNC_STATEMENT_STAR            shift and go to state 344
    ASSIGN                         shift and go to state 192
    FUNC_CALL                      shift and go to state 193
    READ                           shift and go to state 194
    WRITE                          shift and go to state 195
    FUNC_FLOW_CONTROL              shift and go to state 196
    FUNC_RETURN                    shift and go to state 197
    empty                          shift and go to state 198
    FUNC_DECISION                  shift and go to state 199
    FUNC_REPETITION                shift and go to state 200
    FUNC_CONDITIONAL_REP           shift and go to state 203
    FUNC_UNCONDITIONAL_REP         shift and go to state 204

state 344

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 345


state 345

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMI_COLON in state 237 resolved as shift
WARNING: reduce/reduce conflict in state 129 resolved using rule (seen_id -> <empty>)
WARNING: rejected rule (seen_arg -> <empty>) in state 129
WARNING: reduce/reduce conflict in state 132 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (seen_arg -> <empty>) in state 132
WARNING: reduce/reduce conflict in state 182 resolved using rule (seen_factor -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 182
WARNING: reduce/reduce conflict in state 242 resolved using rule (seen_id -> <empty>)
WARNING: rejected rule (seen_arg -> <empty>) in state 242
WARNING: reduce/reduce conflict in state 244 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (seen_arg -> <empty>) in state 244
