Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     seen_program_id -> empty
Rule 3     seen_main_kwd -> empty
Rule 4     CLASS_STAR -> CLASS CLASS_STAR
Rule 5     CLASS_STAR -> empty
Rule 6     CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
Rule 7     CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 8     VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 9     VAR_LIST_STAR -> empty
Rule 10    VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON
Rule 11    ID_LIST -> ID ID_LIST_P
Rule 12    ID_LIST_P -> COMMA ID ID_LIST_P
Rule 13    ID_LIST_P -> empty
Rule 14    READABLE_LIST -> ID seen_readable READABLE_LIST_P
Rule 15    READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P
Rule 16    READABLE_LIST_P -> empty
Rule 17    seen_readable -> empty
Rule 18    GLOBAL_VAR -> VAR_LIST_STAR
Rule 19    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 20    FUNC_DEF_STAR -> empty
Rule 21    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 22    seen_func_id -> empty
Rule 23    seen_func_params -> empty
Rule 24    seen_func_vars -> empty
Rule 25    FUNC_PARAM -> VAR FUNC_PARAM_P
Rule 26    FUNC_PARAM -> empty
Rule 27    FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P
Rule 28    FUNC_PARAM_P -> empty
Rule 29    VAR -> ID COLON TYPE
Rule 30    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 31    FUNC_STATEMENT_STAR -> STATEMENT FUNC_STATEMENT_STAR
Rule 32    FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR
Rule 33    FUNC_STATEMENT_STAR -> empty
Rule 34    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 35    STATEMENT_STAR -> empty
Rule 36    STATEMENT -> ASSIGN SEMI_COLON
Rule 37    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 38    STATEMENT -> READ SEMI_COLON
Rule 39    STATEMENT -> WRITE SEMI_COLON
Rule 40    STATEMENT -> DECISION
Rule 41    STATEMENT -> REPETITION
Rule 42    FOR_INCR_STATEMENT -> ASSIGN
Rule 43    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 44    FOR_INCR_STATEMENT -> READ
Rule 45    FOR_INCR_STATEMENT -> WRITE
Rule 46    ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION
Rule 47    seen_equals -> empty
Rule 48    EXP -> TERM seen_term EXP_P
Rule 49    EXP -> NOT seen_not EXP pop_not
Rule 50    seen_term -> <empty>
Rule 51    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 52    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 53    EXP_P -> empty
Rule 54    seen_term_op -> <empty>
Rule 55    EXPRESSION -> EXP
Rule 56    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 57    seen_comp -> empty
Rule 58    seen_comp_op -> empty
Rule 59    COMP -> BIGGER
Rule 60    COMP -> SMALLER
Rule 61    COMP -> DOUBLE_EQUALS
Rule 62    COMP -> DIFFERENT
Rule 63    COMP -> AND
Rule 64    COMP -> OR
Rule 65    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 66    FACTOR -> NOT seen_not FACTOR pop_not
Rule 67    FACTOR -> FUNC_CALL
Rule 68    FACTOR -> ID seen_id
Rule 69    FACTOR -> CNST
Rule 70    pop_not -> empty
Rule 71    seen_not -> empty
Rule 72    seen_open_parenthesis -> empty
Rule 73    seen_close_parenthesis -> empty
Rule 74    seen_id -> <empty>
Rule 75    seen_cte_i -> <empty>
Rule 76    seen_cte_f -> <empty>
Rule 77    seen_cte_s -> <empty>
Rule 78    CNST -> CTE_S seen_cte_s
Rule 79    CNST -> CTE_F seen_cte_f
Rule 80    CNST -> CTE_I seen_cte_i
Rule 81    TERM -> FACTOR seen_factor TERM_P
Rule 82    TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 83    TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 84    TERM_P -> empty
Rule 85    seen_factor -> <empty>
Rule 86    seen_factor_op -> <empty>
Rule 87    FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 88    seen_func_call_id -> empty
Rule 89    ARG_LIST -> ID seen_arg ARG_LIST_P
Rule 90    ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 91    ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 92    ARG_LIST -> empty
Rule 93    ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P
Rule 94    ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 95    ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 96    ARG_LIST_P -> empty
Rule 97    seen_arg -> <empty>
Rule 98    FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 99    FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 100   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 101   WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 102   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 103   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 104   PRINTABLE_P -> empty
Rule 105   seen_printable -> empty
Rule 106   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 107   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 108   DECISION_P -> empty
Rule 109   seen_if_kwd -> empty
Rule 110   seen_else_kwd -> empty
Rule 111   REPETITION -> CONDITIONAL_REP
Rule 112   REPETITION -> UNCONDITIONAL_REP
Rule 113   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 114   seen_while_kwd -> empty
Rule 115   seen_while_exp -> empty
Rule 116   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 117   seen_for_kwd -> empty
Rule 118   seen_for_incr_exp -> empty
Rule 119   seen_for_start_exp -> empty
Rule 120   seen_for_end_exp -> empty
Rule 121   empty -> <empty>

Terminals, with rules where they appear

AND                  : 63
ATTR_KWD             : 7
BIGGER               : 6 59
CLASS_KWD            : 6
CLOSE_CURLY          : 1 6 7 21 30 106 107 113 116
CLOSE_PARENTHESIS    : 1 21 65 87 100 101 106 113 116
COLON                : 10 29
COMMA                : 12 15 27 93 94 95 103
CTE_F                : 79
CTE_I                : 80
CTE_S                : 78
DERIVES_KWD          : 6
DIFFERENT            : 62
DOUBLE_EQUALS        : 61
ELSE_KWD             : 107
EQUALS               : 46 116
FOR_KWD              : 116
FWD_SLASH            : 83
ID                   : 1 6 11 12 14 15 21 29 46 68 87 89 93 116
IF_KWD               : 106
MAIN_KWD             : 1
MINUS                : 52
NOT                  : 49 66
OPEN_CURLY           : 1 6 7 21 30 106 107 113 116
OPEN_PARENTHESIS     : 1 21 65 87 100 101 106 113 116
OR                   : 64
PLUS                 : 51
PROGRAM_KWD          : 1
READ_KWD             : 100
RETURN_KWD           : 98 99
SEMI_COLON           : 1 10 36 37 38 39 98 99 116 116
SMALLER              : 6 60
STAR                 : 82
TYPE                 : 6 10 21 29
VARS_KWD             : 30
WHILE_KWD            : 113
WRITE_KWD            : 101
error                : 

Nonterminals, with rules where they appear

ARG_LIST             : 87
ARG_LIST_P           : 89 90 91 93 94 95
ASSIGN               : 36 42
CLASS                : 4
CLASS_ATTR           : 6
CLASS_STAR           : 1 4
CNST                 : 69
COMP                 : 56
CONDITIONAL_REP      : 111
DECISION             : 40
DECISION_P           : 106
EXP                  : 49 55 56
EXPRESSION           : 46 56 65 90 94 98 102 103 106 113 116 116
EXP_P                : 48 51 52
FACTOR               : 66 81 82 83
FOR_INCR_STATEMENT   : 116
FUNC_CALL            : 37 43 67 91 95 99
FUNC_DEF             : 19
FUNC_DEF_STAR        : 1 6 19
FUNC_PARAM           : 21
FUNC_PARAM_P         : 25 27
FUNC_RETURN          : 32
FUNC_STATEMENT_STAR  : 21 31 32
GLOBAL_VAR           : 1
ID_LIST              : 10
ID_LIST_P            : 11 12
PRINTABLE            : 101
PRINTABLE_P          : 102 103
PROGRAM              : 0
READ                 : 38 44
READABLE_LIST        : 100
READABLE_LIST_P      : 14 15
REPETITION           : 41
STATEMENT            : 31 34
STATEMENT_STAR       : 1 34 106 107 113 116
TERM                 : 48 51 52
TERM_P               : 81 82 83
UNCONDITIONAL_REP    : 112
VAR                  : 25 27
VARS                 : 21
VAR_LIST             : 8
VAR_LIST_STAR        : 7 8 18 30
WRITE                : 39 45
empty                : 2 3 5 9 13 16 17 20 22 23 24 26 28 33 35 47 53 57 58 70 71 72 73 84 88 92 96 104 105 108 109 110 114 115 117 118 119 120
pop_not              : 49 66
seen_arg             : 89 90 91 93 94 95
seen_close_parenthesis : 65
seen_comp            : 56
seen_comp_op         : 56
seen_cte_f           : 79
seen_cte_i           : 80
seen_cte_s           : 78
seen_else_kwd        : 107
seen_equals          : 46
seen_factor          : 81 82 83
seen_factor_op       : 82 83
seen_for_end_exp     : 116
seen_for_incr_exp    : 116
seen_for_kwd         : 116
seen_for_start_exp   : 116
seen_func_call_id    : 87
seen_func_id         : 21
seen_func_params     : 21
seen_func_vars       : 21
seen_id              : 46 68
seen_if_kwd          : 106
seen_main_kwd        : 1
seen_not             : 49 66
seen_open_parenthesis : 65
seen_printable       : 102 103
seen_program_id      : 1
seen_readable        : 14 15
seen_term            : 48 51 52
seen_term_op         : 51 52
seen_while_exp       : 113
seen_while_kwd       : 113

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) seen_program_id -> . empty
    (121) empty -> .

    SEMI_COLON      reduce using rule 121 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (2) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 2 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (4) CLASS_STAR -> . CLASS CLASS_STAR
    (5) CLASS_STAR -> . empty
    (6) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (121) empty -> .

    CLASS_KWD       shift and go to state 10
    ID              reduce using rule 121 (empty -> .)
    TYPE            reduce using rule 121 (empty -> .)
    MAIN_KWD        reduce using rule 121 (empty -> .)

    CLASS_STAR                     shift and go to state 7
    CLASS                          shift and go to state 8
    empty                          shift and go to state 9

state 7

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR . GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (18) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (121) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    TYPE            reduce using rule 121 (empty -> .)
    MAIN_KWD        reduce using rule 121 (empty -> .)
    ID              shift and go to state 11

    GLOBAL_VAR                     shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 8

    (4) CLASS_STAR -> CLASS . CLASS_STAR
    (4) CLASS_STAR -> . CLASS CLASS_STAR
    (5) CLASS_STAR -> . empty
    (6) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (121) empty -> .

    CLASS_KWD       shift and go to state 10
    ID              reduce using rule 121 (empty -> .)
    TYPE            reduce using rule 121 (empty -> .)
    MAIN_KWD        reduce using rule 121 (empty -> .)

    CLASS                          shift and go to state 8
    CLASS_STAR                     shift and go to state 17
    empty                          shift and go to state 9

state 9

    (5) CLASS_STAR -> empty .

    ID              reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE            reduce using rule 5 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 5 (CLASS_STAR -> empty .)


state 10

    (6) CLASS -> CLASS_KWD . ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 18


state 11

    (11) ID_LIST -> ID . ID_LIST_P
    (12) ID_LIST_P -> . COMMA ID ID_LIST_P
    (13) ID_LIST_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 20
    COLON           reduce using rule 121 (empty -> .)

    ID_LIST_P                      shift and go to state 19
    empty                          shift and go to state 21

state 12

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR . FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (121) empty -> .

    TYPE            shift and go to state 25
    MAIN_KWD        reduce using rule 121 (empty -> .)

    FUNC_DEF_STAR                  shift and go to state 22
    FUNC_DEF                       shift and go to state 23
    empty                          shift and go to state 24

state 13

    (18) GLOBAL_VAR -> VAR_LIST_STAR .

    TYPE            reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (121) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    TYPE            reduce using rule 121 (empty -> .)
    MAIN_KWD        reduce using rule 121 (empty -> .)
    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST                       shift and go to state 14
    VAR_LIST_STAR                  shift and go to state 26
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 15

    (9) VAR_LIST_STAR -> empty .

    TYPE            reduce using rule 9 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 9 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 9 (VAR_LIST_STAR -> empty .)


state 16

    (10) VAR_LIST -> ID_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 27


state 17

    (4) CLASS_STAR -> CLASS CLASS_STAR .

    ID              reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE            reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)


state 18

    (6) CLASS -> CLASS_KWD ID . SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    SMALLER         shift and go to state 28


state 19

    (11) ID_LIST -> ID ID_LIST_P .

    COLON           reduce using rule 11 (ID_LIST -> ID ID_LIST_P .)


state 20

    (12) ID_LIST_P -> COMMA . ID ID_LIST_P

    ID              shift and go to state 29


state 21

    (13) ID_LIST_P -> empty .

    COLON           reduce using rule 13 (ID_LIST_P -> empty .)


state 22

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 30


state 23

    (19) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (121) empty -> .

    TYPE            shift and go to state 25
    MAIN_KWD        reduce using rule 121 (empty -> .)
    CLOSE_CURLY     reduce using rule 121 (empty -> .)

    FUNC_DEF                       shift and go to state 23
    FUNC_DEF_STAR                  shift and go to state 31
    empty                          shift and go to state 24

state 24

    (20) FUNC_DEF_STAR -> empty .

    MAIN_KWD        reduce using rule 20 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 20 (FUNC_DEF_STAR -> empty .)


state 25

    (21) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 32


state 26

    (8) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    TYPE            reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 27

    (10) VAR_LIST -> ID_LIST COLON . TYPE SEMI_COLON

    TYPE            shift and go to state 33


state 28

    (6) CLASS -> CLASS_KWD ID SMALLER . DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    DERIVES_KWD     shift and go to state 34


state 29

    (12) ID_LIST_P -> COMMA ID . ID_LIST_P
    (12) ID_LIST_P -> . COMMA ID ID_LIST_P
    (13) ID_LIST_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 20
    COLON           reduce using rule 121 (empty -> .)

    ID_LIST_P                      shift and go to state 35
    empty                          shift and go to state 21

state 30

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 36


state 31

    (19) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    MAIN_KWD        reduce using rule 19 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 19 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 32

    (21) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (22) seen_func_id -> . empty
    (121) empty -> .

    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)

    seen_func_id                   shift and go to state 37
    empty                          shift and go to state 38

state 33

    (10) VAR_LIST -> ID_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 39


state 34

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD . TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    TYPE            shift and go to state 40


state 35

    (12) ID_LIST_P -> COMMA ID ID_LIST_P .

    COLON           reduce using rule 12 (ID_LIST_P -> COMMA ID ID_LIST_P .)


state 36

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 41


state 37

    (21) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 42


state 38

    (22) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 22 (seen_func_id -> empty .)


state 39

    (10) VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE            reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)


state 40

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE . BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    BIGGER          shift and go to state 43


state 41

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 44


state 42

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (25) FUNC_PARAM -> . VAR FUNC_PARAM_P
    (26) FUNC_PARAM -> . empty
    (29) VAR -> . ID COLON TYPE
    (121) empty -> .

    ID              shift and go to state 45
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    FUNC_PARAM                     shift and go to state 46
    VAR                            shift and go to state 47
    empty                          shift and go to state 48

state 43

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER . OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 49


state 44

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (3) seen_main_kwd -> . empty
    (121) empty -> .

    ID              reduce using rule 121 (empty -> .)
    READ_KWD        reduce using rule 121 (empty -> .)
    WRITE_KWD       reduce using rule 121 (empty -> .)
    IF_KWD          reduce using rule 121 (empty -> .)
    WHILE_KWD       reduce using rule 121 (empty -> .)
    FOR_KWD         reduce using rule 121 (empty -> .)
    CLOSE_CURLY     reduce using rule 121 (empty -> .)

    seen_main_kwd                  shift and go to state 50
    empty                          shift and go to state 51

state 45

    (29) VAR -> ID . COLON TYPE

    COLON           shift and go to state 52


state 46

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 53


state 47

    (25) FUNC_PARAM -> VAR . FUNC_PARAM_P
    (27) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (28) FUNC_PARAM_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 55
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 54
    empty                          shift and go to state 56

state 48

    (26) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 26 (FUNC_PARAM -> empty .)


state 49

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY . CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (7) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 58

    CLASS_ATTR                     shift and go to state 57

state 50

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (34) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (35) STATEMENT_STAR -> . empty
    (36) STATEMENT -> . ASSIGN SEMI_COLON
    (37) STATEMENT -> . FUNC_CALL SEMI_COLON
    (38) STATEMENT -> . READ SEMI_COLON
    (39) STATEMENT -> . WRITE SEMI_COLON
    (40) STATEMENT -> . DECISION
    (41) STATEMENT -> . REPETITION
    (121) empty -> .
    (46) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (100) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (101) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (106) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (111) REPETITION -> . CONDITIONAL_REP
    (112) REPETITION -> . UNCONDITIONAL_REP
    (113) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (116) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 69
    WRITE_KWD       shift and go to state 70
    IF_KWD          shift and go to state 71
    WHILE_KWD       shift and go to state 74
    FOR_KWD         shift and go to state 75

    STATEMENT_STAR                 shift and go to state 60
    STATEMENT                      shift and go to state 61
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    DECISION                       shift and go to state 67
    REPETITION                     shift and go to state 68
    CONDITIONAL_REP                shift and go to state 72
    UNCONDITIONAL_REP              shift and go to state 73

state 51

    (3) seen_main_kwd -> empty .

    ID              reduce using rule 3 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 3 (seen_main_kwd -> empty .)
    WRITE_KWD       reduce using rule 3 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 3 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 3 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 3 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 3 (seen_main_kwd -> empty .)


state 52

    (29) VAR -> ID COLON . TYPE

    TYPE            shift and go to state 76


state 53

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (23) seen_func_params -> . empty
    (121) empty -> .

    VARS_KWD        reduce using rule 121 (empty -> .)

    seen_func_params               shift and go to state 77
    empty                          shift and go to state 78

state 54

    (25) FUNC_PARAM -> VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 25 (FUNC_PARAM -> VAR FUNC_PARAM_P .)


state 55

    (27) FUNC_PARAM_P -> COMMA . VAR FUNC_PARAM_P
    (29) VAR -> . ID COLON TYPE

    ID              shift and go to state 45

    VAR                            shift and go to state 79

state 56

    (28) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 28 (FUNC_PARAM_P -> empty .)


state 57

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR . FUNC_DEF_STAR CLOSE_CURLY
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (121) empty -> .

    TYPE            shift and go to state 25
    CLOSE_CURLY     reduce using rule 121 (empty -> .)

    FUNC_DEF_STAR                  shift and go to state 80
    FUNC_DEF                       shift and go to state 23
    empty                          shift and go to state 24

state 58

    (7) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 81


state 59

    (46) ASSIGN -> ID . seen_id EQUALS seen_equals EXPRESSION
    (87) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (74) seen_id -> .
    (88) seen_func_call_id -> . empty
    (121) empty -> .

    EQUALS          reduce using rule 74 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)

    seen_id                        shift and go to state 82
    seen_func_call_id              shift and go to state 83
    empty                          shift and go to state 84

state 60

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 85


state 61

    (34) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (34) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (35) STATEMENT_STAR -> . empty
    (36) STATEMENT -> . ASSIGN SEMI_COLON
    (37) STATEMENT -> . FUNC_CALL SEMI_COLON
    (38) STATEMENT -> . READ SEMI_COLON
    (39) STATEMENT -> . WRITE SEMI_COLON
    (40) STATEMENT -> . DECISION
    (41) STATEMENT -> . REPETITION
    (121) empty -> .
    (46) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (100) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (101) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (106) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (111) REPETITION -> . CONDITIONAL_REP
    (112) REPETITION -> . UNCONDITIONAL_REP
    (113) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (116) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 69
    WRITE_KWD       shift and go to state 70
    IF_KWD          shift and go to state 71
    WHILE_KWD       shift and go to state 74
    FOR_KWD         shift and go to state 75

    STATEMENT                      shift and go to state 61
    STATEMENT_STAR                 shift and go to state 86
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    DECISION                       shift and go to state 67
    REPETITION                     shift and go to state 68
    CONDITIONAL_REP                shift and go to state 72
    UNCONDITIONAL_REP              shift and go to state 73

state 62

    (35) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 35 (STATEMENT_STAR -> empty .)


state 63

    (36) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 87


state 64

    (37) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 88


state 65

    (38) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 89


state 66

    (39) STATEMENT -> WRITE . SEMI_COLON

    SEMI_COLON      shift and go to state 90


state 67

    (40) STATEMENT -> DECISION .

    ID              reduce using rule 40 (STATEMENT -> DECISION .)
    READ_KWD        reduce using rule 40 (STATEMENT -> DECISION .)
    WRITE_KWD       reduce using rule 40 (STATEMENT -> DECISION .)
    IF_KWD          reduce using rule 40 (STATEMENT -> DECISION .)
    WHILE_KWD       reduce using rule 40 (STATEMENT -> DECISION .)
    FOR_KWD         reduce using rule 40 (STATEMENT -> DECISION .)
    CLOSE_CURLY     reduce using rule 40 (STATEMENT -> DECISION .)
    RETURN_KWD      reduce using rule 40 (STATEMENT -> DECISION .)


state 68

    (41) STATEMENT -> REPETITION .

    ID              reduce using rule 41 (STATEMENT -> REPETITION .)
    READ_KWD        reduce using rule 41 (STATEMENT -> REPETITION .)
    WRITE_KWD       reduce using rule 41 (STATEMENT -> REPETITION .)
    IF_KWD          reduce using rule 41 (STATEMENT -> REPETITION .)
    WHILE_KWD       reduce using rule 41 (STATEMENT -> REPETITION .)
    FOR_KWD         reduce using rule 41 (STATEMENT -> REPETITION .)
    CLOSE_CURLY     reduce using rule 41 (STATEMENT -> REPETITION .)
    RETURN_KWD      reduce using rule 41 (STATEMENT -> REPETITION .)


state 69

    (100) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 91


state 70

    (101) WRITE -> WRITE_KWD . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 92


state 71

    (106) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 93


state 72

    (111) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 111 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 111 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 111 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 111 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 111 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 111 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 111 (REPETITION -> CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 111 (REPETITION -> CONDITIONAL_REP .)


state 73

    (112) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 112 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 112 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 112 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 112 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 112 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 112 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 112 (REPETITION -> UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 112 (REPETITION -> UNCONDITIONAL_REP .)


state 74

    (113) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (114) seen_while_kwd -> . empty
    (121) empty -> .

    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)

    seen_while_kwd                 shift and go to state 94
    empty                          shift and go to state 95

state 75

    (116) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 96


state 76

    (29) VAR -> ID COLON TYPE .

    COMMA           reduce using rule 29 (VAR -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 29 (VAR -> ID COLON TYPE .)


state 77

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (30) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 98

    VARS                           shift and go to state 97

state 78

    (23) seen_func_params -> empty .

    VARS_KWD        reduce using rule 23 (seen_func_params -> empty .)


state 79

    (27) FUNC_PARAM_P -> COMMA VAR . FUNC_PARAM_P
    (27) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (28) FUNC_PARAM_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 55
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 99
    empty                          shift and go to state 56

state 80

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 100


state 81

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (121) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST_STAR                  shift and go to state 101
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 82

    (46) ASSIGN -> ID seen_id . EQUALS seen_equals EXPRESSION

    EQUALS          shift and go to state 102


state 83

    (87) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 103


state 84

    (88) seen_func_call_id -> empty .

    OPEN_PARENTHESIS reduce using rule 88 (seen_func_call_id -> empty .)


state 85

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 86

    (34) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 34 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 87

    (36) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 36 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 36 (STATEMENT -> ASSIGN SEMI_COLON .)
    WRITE_KWD       reduce using rule 36 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 36 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 36 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 36 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 36 (STATEMENT -> ASSIGN SEMI_COLON .)
    RETURN_KWD      reduce using rule 36 (STATEMENT -> ASSIGN SEMI_COLON .)


state 88

    (37) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 37 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 37 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 37 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 37 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 37 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 37 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 37 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 37 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 89

    (38) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 38 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 38 (STATEMENT -> READ SEMI_COLON .)
    WRITE_KWD       reduce using rule 38 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 38 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 38 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 38 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 38 (STATEMENT -> READ SEMI_COLON .)
    RETURN_KWD      reduce using rule 38 (STATEMENT -> READ SEMI_COLON .)


state 90

    (39) STATEMENT -> WRITE SEMI_COLON .

    ID              reduce using rule 39 (STATEMENT -> WRITE SEMI_COLON .)
    READ_KWD        reduce using rule 39 (STATEMENT -> WRITE SEMI_COLON .)
    WRITE_KWD       reduce using rule 39 (STATEMENT -> WRITE SEMI_COLON .)
    IF_KWD          reduce using rule 39 (STATEMENT -> WRITE SEMI_COLON .)
    WHILE_KWD       reduce using rule 39 (STATEMENT -> WRITE SEMI_COLON .)
    FOR_KWD         reduce using rule 39 (STATEMENT -> WRITE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 39 (STATEMENT -> WRITE SEMI_COLON .)
    RETURN_KWD      reduce using rule 39 (STATEMENT -> WRITE SEMI_COLON .)


state 91

    (100) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (14) READABLE_LIST -> . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 105

    READABLE_LIST                  shift and go to state 104

state 92

    (101) WRITE -> WRITE_KWD OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (102) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    PRINTABLE                      shift and go to state 107
    EXPRESSION                     shift and go to state 108
    EXP                            shift and go to state 109
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 93

    (106) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    EXPRESSION                     shift and go to state 119
    EXP                            shift and go to state 109
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 94

    (113) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 120


state 95

    (114) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 114 (seen_while_kwd -> empty .)


state 96

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 121


state 97

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (24) seen_func_vars -> . empty
    (121) empty -> .

    OPEN_CURLY      reduce using rule 121 (empty -> .)

    seen_func_vars                 shift and go to state 122
    empty                          shift and go to state 123

state 98

    (30) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 124


state 99

    (27) FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 27 (FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .)


state 100

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE            reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)


state 101

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 125


state 102

    (46) ASSIGN -> ID seen_id EQUALS . seen_equals EXPRESSION
    (47) seen_equals -> . empty
    (121) empty -> .

    NOT             reduce using rule 121 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    CTE_S           reduce using rule 121 (empty -> .)
    CTE_F           reduce using rule 121 (empty -> .)
    CTE_I           reduce using rule 121 (empty -> .)

    seen_equals                    shift and go to state 126
    empty                          shift and go to state 127

state 103

    (87) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (89) ARG_LIST -> . ID seen_arg ARG_LIST_P
    (90) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (91) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (92) ARG_LIST -> . empty
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (121) empty -> .
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 128
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)
    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    ARG_LIST                       shift and go to state 129
    EXPRESSION                     shift and go to state 130
    FUNC_CALL                      shift and go to state 131
    empty                          shift and go to state 132
    EXP                            shift and go to state 109
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    CNST                           shift and go to state 115

state 104

    (100) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 133


state 105

    (14) READABLE_LIST -> ID . seen_readable READABLE_LIST_P
    (17) seen_readable -> . empty
    (121) empty -> .

    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    seen_readable                  shift and go to state 134
    empty                          shift and go to state 135

state 106

    (65) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (72) seen_open_parenthesis -> . empty
    (121) empty -> .

    NOT             reduce using rule 121 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    CTE_S           reduce using rule 121 (empty -> .)
    CTE_F           reduce using rule 121 (empty -> .)
    CTE_I           reduce using rule 121 (empty -> .)

    seen_open_parenthesis          shift and go to state 136
    empty                          shift and go to state 137

state 107

    (101) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 138


state 108

    (102) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (105) seen_printable -> . empty
    (121) empty -> .

    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    seen_printable                 shift and go to state 139
    empty                          shift and go to state 140

state 109

    (55) EXPRESSION -> EXP .
    (56) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (59) COMP -> . BIGGER
    (60) COMP -> . SMALLER
    (61) COMP -> . DOUBLE_EQUALS
    (62) COMP -> . DIFFERENT
    (63) COMP -> . AND
    (64) COMP -> . OR

    COMMA           reduce using rule 55 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 55 (EXPRESSION -> EXP .)
    SEMI_COLON      reduce using rule 55 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 142
    SMALLER         shift and go to state 143
    DOUBLE_EQUALS   shift and go to state 144
    DIFFERENT       shift and go to state 145
    AND             shift and go to state 146
    OR              shift and go to state 147

    COMP                           shift and go to state 141

state 110

    (48) EXP -> TERM . seen_term EXP_P
    (50) seen_term -> .

    PLUS            reduce using rule 50 (seen_term -> .)
    MINUS           reduce using rule 50 (seen_term -> .)
    BIGGER          reduce using rule 50 (seen_term -> .)
    SMALLER         reduce using rule 50 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 50 (seen_term -> .)
    DIFFERENT       reduce using rule 50 (seen_term -> .)
    AND             reduce using rule 50 (seen_term -> .)
    OR              reduce using rule 50 (seen_term -> .)
    COMMA           reduce using rule 50 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 50 (seen_term -> .)
    SEMI_COLON      reduce using rule 50 (seen_term -> .)

    seen_term                      shift and go to state 148

state 111

    (49) EXP -> NOT . seen_not EXP pop_not
    (66) FACTOR -> NOT . seen_not FACTOR pop_not
    (71) seen_not -> . empty
    (121) empty -> .

    NOT             reduce using rule 121 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    CTE_S           reduce using rule 121 (empty -> .)
    CTE_F           reduce using rule 121 (empty -> .)
    CTE_I           reduce using rule 121 (empty -> .)

    seen_not                       shift and go to state 149
    empty                          shift and go to state 150

state 112

    (81) TERM -> FACTOR . seen_factor TERM_P
    (85) seen_factor -> .

    STAR            reduce using rule 85 (seen_factor -> .)
    FWD_SLASH       reduce using rule 85 (seen_factor -> .)
    PLUS            reduce using rule 85 (seen_factor -> .)
    MINUS           reduce using rule 85 (seen_factor -> .)
    BIGGER          reduce using rule 85 (seen_factor -> .)
    SMALLER         reduce using rule 85 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 85 (seen_factor -> .)
    DIFFERENT       reduce using rule 85 (seen_factor -> .)
    AND             reduce using rule 85 (seen_factor -> .)
    OR              reduce using rule 85 (seen_factor -> .)
    COMMA           reduce using rule 85 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 85 (seen_factor -> .)
    SEMI_COLON      reduce using rule 85 (seen_factor -> .)

    seen_factor                    shift and go to state 151

state 113

    (67) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 67 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 67 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 67 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 67 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 67 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 67 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 67 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 67 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 67 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 67 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 67 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 67 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 67 (FACTOR -> FUNC_CALL .)


state 114

    (68) FACTOR -> ID . seen_id
    (87) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (74) seen_id -> .
    (88) seen_func_call_id -> . empty
    (121) empty -> .

    STAR            reduce using rule 74 (seen_id -> .)
    FWD_SLASH       reduce using rule 74 (seen_id -> .)
    PLUS            reduce using rule 74 (seen_id -> .)
    MINUS           reduce using rule 74 (seen_id -> .)
    BIGGER          reduce using rule 74 (seen_id -> .)
    SMALLER         reduce using rule 74 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 74 (seen_id -> .)
    DIFFERENT       reduce using rule 74 (seen_id -> .)
    AND             reduce using rule 74 (seen_id -> .)
    OR              reduce using rule 74 (seen_id -> .)
    COMMA           reduce using rule 74 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 74 (seen_id -> .)
    SEMI_COLON      reduce using rule 74 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)

    seen_id                        shift and go to state 152
    seen_func_call_id              shift and go to state 83
    empty                          shift and go to state 84

state 115

    (69) FACTOR -> CNST .

    STAR            reduce using rule 69 (FACTOR -> CNST .)
    FWD_SLASH       reduce using rule 69 (FACTOR -> CNST .)
    PLUS            reduce using rule 69 (FACTOR -> CNST .)
    MINUS           reduce using rule 69 (FACTOR -> CNST .)
    BIGGER          reduce using rule 69 (FACTOR -> CNST .)
    SMALLER         reduce using rule 69 (FACTOR -> CNST .)
    DOUBLE_EQUALS   reduce using rule 69 (FACTOR -> CNST .)
    DIFFERENT       reduce using rule 69 (FACTOR -> CNST .)
    AND             reduce using rule 69 (FACTOR -> CNST .)
    OR              reduce using rule 69 (FACTOR -> CNST .)
    COMMA           reduce using rule 69 (FACTOR -> CNST .)
    CLOSE_PARENTHESIS reduce using rule 69 (FACTOR -> CNST .)
    SEMI_COLON      reduce using rule 69 (FACTOR -> CNST .)


state 116

    (78) CNST -> CTE_S . seen_cte_s
    (77) seen_cte_s -> .

    STAR            reduce using rule 77 (seen_cte_s -> .)
    FWD_SLASH       reduce using rule 77 (seen_cte_s -> .)
    PLUS            reduce using rule 77 (seen_cte_s -> .)
    MINUS           reduce using rule 77 (seen_cte_s -> .)
    BIGGER          reduce using rule 77 (seen_cte_s -> .)
    SMALLER         reduce using rule 77 (seen_cte_s -> .)
    DOUBLE_EQUALS   reduce using rule 77 (seen_cte_s -> .)
    DIFFERENT       reduce using rule 77 (seen_cte_s -> .)
    AND             reduce using rule 77 (seen_cte_s -> .)
    OR              reduce using rule 77 (seen_cte_s -> .)
    COMMA           reduce using rule 77 (seen_cte_s -> .)
    CLOSE_PARENTHESIS reduce using rule 77 (seen_cte_s -> .)
    SEMI_COLON      reduce using rule 77 (seen_cte_s -> .)

    seen_cte_s                     shift and go to state 153

state 117

    (79) CNST -> CTE_F . seen_cte_f
    (76) seen_cte_f -> .

    STAR            reduce using rule 76 (seen_cte_f -> .)
    FWD_SLASH       reduce using rule 76 (seen_cte_f -> .)
    PLUS            reduce using rule 76 (seen_cte_f -> .)
    MINUS           reduce using rule 76 (seen_cte_f -> .)
    BIGGER          reduce using rule 76 (seen_cte_f -> .)
    SMALLER         reduce using rule 76 (seen_cte_f -> .)
    DOUBLE_EQUALS   reduce using rule 76 (seen_cte_f -> .)
    DIFFERENT       reduce using rule 76 (seen_cte_f -> .)
    AND             reduce using rule 76 (seen_cte_f -> .)
    OR              reduce using rule 76 (seen_cte_f -> .)
    COMMA           reduce using rule 76 (seen_cte_f -> .)
    CLOSE_PARENTHESIS reduce using rule 76 (seen_cte_f -> .)
    SEMI_COLON      reduce using rule 76 (seen_cte_f -> .)

    seen_cte_f                     shift and go to state 154

state 118

    (80) CNST -> CTE_I . seen_cte_i
    (75) seen_cte_i -> .

    STAR            reduce using rule 75 (seen_cte_i -> .)
    FWD_SLASH       reduce using rule 75 (seen_cte_i -> .)
    PLUS            reduce using rule 75 (seen_cte_i -> .)
    MINUS           reduce using rule 75 (seen_cte_i -> .)
    BIGGER          reduce using rule 75 (seen_cte_i -> .)
    SMALLER         reduce using rule 75 (seen_cte_i -> .)
    DOUBLE_EQUALS   reduce using rule 75 (seen_cte_i -> .)
    DIFFERENT       reduce using rule 75 (seen_cte_i -> .)
    AND             reduce using rule 75 (seen_cte_i -> .)
    OR              reduce using rule 75 (seen_cte_i -> .)
    COMMA           reduce using rule 75 (seen_cte_i -> .)
    CLOSE_PARENTHESIS reduce using rule 75 (seen_cte_i -> .)
    SEMI_COLON      reduce using rule 75 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 155

state 119

    (106) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 156


state 120

    (113) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    EXPRESSION                     shift and go to state 157
    EXP                            shift and go to state 109
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 121

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (117) seen_for_kwd -> . empty
    (121) empty -> .

    EQUALS          reduce using rule 121 (empty -> .)

    seen_for_kwd                   shift and go to state 158
    empty                          shift and go to state 159

state 122

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 160


state 123

    (24) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 24 (seen_func_vars -> empty .)


state 124

    (30) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (121) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST_STAR                  shift and go to state 161
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 125

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE            reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 126

    (46) ASSIGN -> ID seen_id EQUALS seen_equals . EXPRESSION
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    EXPRESSION                     shift and go to state 162
    EXP                            shift and go to state 109
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 127

    (47) seen_equals -> empty .

    NOT             reduce using rule 47 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 47 (seen_equals -> empty .)
    ID              reduce using rule 47 (seen_equals -> empty .)
    CTE_S           reduce using rule 47 (seen_equals -> empty .)
    CTE_F           reduce using rule 47 (seen_equals -> empty .)
    CTE_I           reduce using rule 47 (seen_equals -> empty .)


state 128

    (89) ARG_LIST -> ID . seen_arg ARG_LIST_P
    (87) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (68) FACTOR -> ID . seen_id
    (97) seen_arg -> .
    (88) seen_func_call_id -> . empty
    (74) seen_id -> .
    (121) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 74 (seen_id -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 74 (seen_id -> .)
    STAR            reduce using rule 74 (seen_id -> .)
    FWD_SLASH       reduce using rule 74 (seen_id -> .)
    PLUS            reduce using rule 74 (seen_id -> .)
    MINUS           reduce using rule 74 (seen_id -> .)
    BIGGER          reduce using rule 74 (seen_id -> .)
    SMALLER         reduce using rule 74 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 74 (seen_id -> .)
    DIFFERENT       reduce using rule 74 (seen_id -> .)
    AND             reduce using rule 74 (seen_id -> .)
    OR              reduce using rule 74 (seen_id -> .)
    COMMA           reduce using rule 74 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 74 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)

  ! COMMA           [ reduce using rule 97 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 97 (seen_arg -> .) ]

    seen_arg                       shift and go to state 163
    seen_func_call_id              shift and go to state 83
    seen_id                        shift and go to state 152
    empty                          shift and go to state 84

state 129

    (87) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 164


state 130

    (90) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (97) seen_arg -> .

    COMMA           reduce using rule 97 (seen_arg -> .)
    CLOSE_PARENTHESIS reduce using rule 97 (seen_arg -> .)

    seen_arg                       shift and go to state 165

state 131

    (91) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (67) FACTOR -> FUNC_CALL .
    (97) seen_arg -> .

  ! reduce/reduce conflict for COMMA resolved using rule 67 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 67 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 67 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 67 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 67 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 67 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 67 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 67 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 67 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 67 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 67 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 67 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 67 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 67 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 97 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 97 (seen_arg -> .) ]

    seen_arg                       shift and go to state 166

state 132

    (92) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 92 (ARG_LIST -> empty .)


state 133

    (100) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 100 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 100 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 134

    (14) READABLE_LIST -> ID seen_readable . READABLE_LIST_P
    (15) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (16) READABLE_LIST_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 168
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    READABLE_LIST_P                shift and go to state 167
    empty                          shift and go to state 169

state 135

    (17) seen_readable -> empty .

    COMMA           reduce using rule 17 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 17 (seen_readable -> empty .)


state 136

    (65) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    EXPRESSION                     shift and go to state 170
    EXP                            shift and go to state 109
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 137

    (72) seen_open_parenthesis -> empty .

    NOT             reduce using rule 72 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 72 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 72 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 72 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 72 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 72 (seen_open_parenthesis -> empty .)


state 138

    (101) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 101 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 101 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 139

    (102) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (103) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (104) PRINTABLE_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 172
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    PRINTABLE_P                    shift and go to state 171
    empty                          shift and go to state 173

state 140

    (105) seen_printable -> empty .

    COMMA           reduce using rule 105 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 105 (seen_printable -> empty .)


state 141

    (56) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (58) seen_comp_op -> . empty
    (121) empty -> .

    NOT             reduce using rule 121 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    CTE_S           reduce using rule 121 (empty -> .)
    CTE_F           reduce using rule 121 (empty -> .)
    CTE_I           reduce using rule 121 (empty -> .)

    seen_comp_op                   shift and go to state 174
    empty                          shift and go to state 175

state 142

    (59) COMP -> BIGGER .

    NOT             reduce using rule 59 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 59 (COMP -> BIGGER .)
    ID              reduce using rule 59 (COMP -> BIGGER .)
    CTE_S           reduce using rule 59 (COMP -> BIGGER .)
    CTE_F           reduce using rule 59 (COMP -> BIGGER .)
    CTE_I           reduce using rule 59 (COMP -> BIGGER .)


state 143

    (60) COMP -> SMALLER .

    NOT             reduce using rule 60 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 60 (COMP -> SMALLER .)
    ID              reduce using rule 60 (COMP -> SMALLER .)
    CTE_S           reduce using rule 60 (COMP -> SMALLER .)
    CTE_F           reduce using rule 60 (COMP -> SMALLER .)
    CTE_I           reduce using rule 60 (COMP -> SMALLER .)


state 144

    (61) COMP -> DOUBLE_EQUALS .

    NOT             reduce using rule 61 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 61 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 61 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 61 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 61 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 61 (COMP -> DOUBLE_EQUALS .)


state 145

    (62) COMP -> DIFFERENT .

    NOT             reduce using rule 62 (COMP -> DIFFERENT .)
    OPEN_PARENTHESIS reduce using rule 62 (COMP -> DIFFERENT .)
    ID              reduce using rule 62 (COMP -> DIFFERENT .)
    CTE_S           reduce using rule 62 (COMP -> DIFFERENT .)
    CTE_F           reduce using rule 62 (COMP -> DIFFERENT .)
    CTE_I           reduce using rule 62 (COMP -> DIFFERENT .)


state 146

    (63) COMP -> AND .

    NOT             reduce using rule 63 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 63 (COMP -> AND .)
    ID              reduce using rule 63 (COMP -> AND .)
    CTE_S           reduce using rule 63 (COMP -> AND .)
    CTE_F           reduce using rule 63 (COMP -> AND .)
    CTE_I           reduce using rule 63 (COMP -> AND .)


state 147

    (64) COMP -> OR .

    NOT             reduce using rule 64 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 64 (COMP -> OR .)
    ID              reduce using rule 64 (COMP -> OR .)
    CTE_S           reduce using rule 64 (COMP -> OR .)
    CTE_F           reduce using rule 64 (COMP -> OR .)
    CTE_I           reduce using rule 64 (COMP -> OR .)


state 148

    (48) EXP -> TERM seen_term . EXP_P
    (51) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (52) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (53) EXP_P -> . empty
    (121) empty -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    BIGGER          reduce using rule 121 (empty -> .)
    SMALLER         reduce using rule 121 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)
    SEMI_COLON      reduce using rule 121 (empty -> .)

    EXP_P                          shift and go to state 176
    empty                          shift and go to state 179

state 149

    (49) EXP -> NOT seen_not . EXP pop_not
    (66) FACTOR -> NOT seen_not . FACTOR pop_not
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (81) TERM -> . FACTOR seen_factor TERM_P
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    EXP                            shift and go to state 180
    FACTOR                         shift and go to state 181
    TERM                           shift and go to state 110
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 150

    (71) seen_not -> empty .

    NOT             reduce using rule 71 (seen_not -> empty .)
    OPEN_PARENTHESIS reduce using rule 71 (seen_not -> empty .)
    ID              reduce using rule 71 (seen_not -> empty .)
    CTE_S           reduce using rule 71 (seen_not -> empty .)
    CTE_F           reduce using rule 71 (seen_not -> empty .)
    CTE_I           reduce using rule 71 (seen_not -> empty .)


state 151

    (81) TERM -> FACTOR seen_factor . TERM_P
    (82) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (83) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (84) TERM_P -> . empty
    (121) empty -> .

    STAR            shift and go to state 183
    FWD_SLASH       shift and go to state 184
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    BIGGER          reduce using rule 121 (empty -> .)
    SMALLER         reduce using rule 121 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)
    SEMI_COLON      reduce using rule 121 (empty -> .)

    TERM_P                         shift and go to state 182
    empty                          shift and go to state 185

state 152

    (68) FACTOR -> ID seen_id .

    STAR            reduce using rule 68 (FACTOR -> ID seen_id .)
    FWD_SLASH       reduce using rule 68 (FACTOR -> ID seen_id .)
    PLUS            reduce using rule 68 (FACTOR -> ID seen_id .)
    MINUS           reduce using rule 68 (FACTOR -> ID seen_id .)
    BIGGER          reduce using rule 68 (FACTOR -> ID seen_id .)
    SMALLER         reduce using rule 68 (FACTOR -> ID seen_id .)
    DOUBLE_EQUALS   reduce using rule 68 (FACTOR -> ID seen_id .)
    DIFFERENT       reduce using rule 68 (FACTOR -> ID seen_id .)
    AND             reduce using rule 68 (FACTOR -> ID seen_id .)
    OR              reduce using rule 68 (FACTOR -> ID seen_id .)
    COMMA           reduce using rule 68 (FACTOR -> ID seen_id .)
    CLOSE_PARENTHESIS reduce using rule 68 (FACTOR -> ID seen_id .)
    SEMI_COLON      reduce using rule 68 (FACTOR -> ID seen_id .)


state 153

    (78) CNST -> CTE_S seen_cte_s .

    STAR            reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    DIFFERENT       reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    AND             reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    OR              reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 78 (CNST -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 78 (CNST -> CTE_S seen_cte_s .)


state 154

    (79) CNST -> CTE_F seen_cte_f .

    STAR            reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    DIFFERENT       reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    AND             reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    OR              reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 79 (CNST -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 79 (CNST -> CTE_F seen_cte_f .)


state 155

    (80) CNST -> CTE_I seen_cte_i .

    STAR            reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    DIFFERENT       reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    AND             reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    OR              reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 80 (CNST -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 80 (CNST -> CTE_I seen_cte_i .)


state 156

    (106) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (109) seen_if_kwd -> . empty
    (121) empty -> .

    OPEN_CURLY      reduce using rule 121 (empty -> .)

    seen_if_kwd                    shift and go to state 186
    empty                          shift and go to state 187

state 157

    (113) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 188


state 158

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 189


state 159

    (117) seen_for_kwd -> empty .

    EQUALS          reduce using rule 117 (seen_for_kwd -> empty .)


state 160

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . STATEMENT FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . empty
    (36) STATEMENT -> . ASSIGN SEMI_COLON
    (37) STATEMENT -> . FUNC_CALL SEMI_COLON
    (38) STATEMENT -> . READ SEMI_COLON
    (39) STATEMENT -> . WRITE SEMI_COLON
    (40) STATEMENT -> . DECISION
    (41) STATEMENT -> . REPETITION
    (98) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (99) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (121) empty -> .
    (46) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (100) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (101) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (106) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (111) REPETITION -> . CONDITIONAL_REP
    (112) REPETITION -> . UNCONDITIONAL_REP
    (113) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (116) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    RETURN_KWD      shift and go to state 194
    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 69
    WRITE_KWD       shift and go to state 70
    IF_KWD          shift and go to state 71
    WHILE_KWD       shift and go to state 74
    FOR_KWD         shift and go to state 75

    FUNC_STATEMENT_STAR            shift and go to state 190
    STATEMENT                      shift and go to state 191
    FUNC_RETURN                    shift and go to state 192
    empty                          shift and go to state 193
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    DECISION                       shift and go to state 67
    REPETITION                     shift and go to state 68
    CONDITIONAL_REP                shift and go to state 72
    UNCONDITIONAL_REP              shift and go to state 73

state 161

    (30) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 195


state 162

    (46) ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 46 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 46 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .)


state 163

    (89) ARG_LIST -> ID seen_arg . ARG_LIST_P
    (93) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (94) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (95) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (96) ARG_LIST_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 197
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    ARG_LIST_P                     shift and go to state 196
    empty                          shift and go to state 198

state 164

    (87) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DIFFERENT       reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 87 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 165

    (90) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (93) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (94) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (95) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (96) ARG_LIST_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 197
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    ARG_LIST_P                     shift and go to state 199
    empty                          shift and go to state 198

state 166

    (91) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (93) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (94) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (95) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (96) ARG_LIST_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 197
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    ARG_LIST_P                     shift and go to state 200
    empty                          shift and go to state 198

state 167

    (14) READABLE_LIST -> ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 14 (READABLE_LIST -> ID seen_readable READABLE_LIST_P .)


state 168

    (15) READABLE_LIST_P -> COMMA . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 201


state 169

    (16) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 16 (READABLE_LIST_P -> empty .)


state 170

    (65) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 202


state 171

    (102) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 102 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 172

    (103) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    EXPRESSION                     shift and go to state 203
    EXP                            shift and go to state 109
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 173

    (104) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 104 (PRINTABLE_P -> empty .)


state 174

    (56) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    EXP                            shift and go to state 109
    EXPRESSION                     shift and go to state 204
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 175

    (58) seen_comp_op -> empty .

    NOT             reduce using rule 58 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 58 (seen_comp_op -> empty .)
    ID              reduce using rule 58 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 58 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 58 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 58 (seen_comp_op -> empty .)


state 176

    (48) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 48 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 48 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 48 (EXP -> TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 48 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 48 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 48 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 48 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 48 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 48 (EXP -> TERM seen_term EXP_P .)


state 177

    (51) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (54) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 54 (seen_term_op -> .)
    NOT             reduce using rule 54 (seen_term_op -> .)
    ID              reduce using rule 54 (seen_term_op -> .)
    CTE_S           reduce using rule 54 (seen_term_op -> .)
    CTE_F           reduce using rule 54 (seen_term_op -> .)
    CTE_I           reduce using rule 54 (seen_term_op -> .)

    seen_term_op                   shift and go to state 205

state 178

    (52) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (54) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 54 (seen_term_op -> .)
    NOT             reduce using rule 54 (seen_term_op -> .)
    ID              reduce using rule 54 (seen_term_op -> .)
    CTE_S           reduce using rule 54 (seen_term_op -> .)
    CTE_F           reduce using rule 54 (seen_term_op -> .)
    CTE_I           reduce using rule 54 (seen_term_op -> .)

    seen_term_op                   shift and go to state 206

state 179

    (53) EXP_P -> empty .

    BIGGER          reduce using rule 53 (EXP_P -> empty .)
    SMALLER         reduce using rule 53 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 53 (EXP_P -> empty .)
    DIFFERENT       reduce using rule 53 (EXP_P -> empty .)
    AND             reduce using rule 53 (EXP_P -> empty .)
    OR              reduce using rule 53 (EXP_P -> empty .)
    COMMA           reduce using rule 53 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 53 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 53 (EXP_P -> empty .)


state 180

    (49) EXP -> NOT seen_not EXP . pop_not
    (70) pop_not -> . empty
    (121) empty -> .

    BIGGER          reduce using rule 121 (empty -> .)
    SMALLER         reduce using rule 121 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)
    SEMI_COLON      reduce using rule 121 (empty -> .)

    pop_not                        shift and go to state 207
    empty                          shift and go to state 208

state 181

    (66) FACTOR -> NOT seen_not FACTOR . pop_not
    (81) TERM -> FACTOR . seen_factor TERM_P
    (70) pop_not -> . empty
    (85) seen_factor -> .
    (121) empty -> .

  ! reduce/reduce conflict for STAR resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for BIGGER resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for SMALLER resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for AND resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for OR resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 85 (seen_factor -> .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 85 (seen_factor -> .)
    STAR            reduce using rule 85 (seen_factor -> .)
    FWD_SLASH       reduce using rule 85 (seen_factor -> .)
    PLUS            reduce using rule 85 (seen_factor -> .)
    MINUS           reduce using rule 85 (seen_factor -> .)
    BIGGER          reduce using rule 85 (seen_factor -> .)
    SMALLER         reduce using rule 85 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 85 (seen_factor -> .)
    DIFFERENT       reduce using rule 85 (seen_factor -> .)
    AND             reduce using rule 85 (seen_factor -> .)
    OR              reduce using rule 85 (seen_factor -> .)
    COMMA           reduce using rule 85 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 85 (seen_factor -> .)
    SEMI_COLON      reduce using rule 85 (seen_factor -> .)

  ! STAR            [ reduce using rule 121 (empty -> .) ]
  ! FWD_SLASH       [ reduce using rule 121 (empty -> .) ]
  ! PLUS            [ reduce using rule 121 (empty -> .) ]
  ! MINUS           [ reduce using rule 121 (empty -> .) ]
  ! BIGGER          [ reduce using rule 121 (empty -> .) ]
  ! SMALLER         [ reduce using rule 121 (empty -> .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 121 (empty -> .) ]
  ! DIFFERENT       [ reduce using rule 121 (empty -> .) ]
  ! AND             [ reduce using rule 121 (empty -> .) ]
  ! OR              [ reduce using rule 121 (empty -> .) ]
  ! COMMA           [ reduce using rule 121 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 121 (empty -> .) ]
  ! SEMI_COLON      [ reduce using rule 121 (empty -> .) ]

    pop_not                        shift and go to state 209
    seen_factor                    shift and go to state 151
    empty                          shift and go to state 208

state 182

    (81) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 81 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 81 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 81 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 81 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 81 (TERM -> FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 81 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 81 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 81 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 81 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 81 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 81 (TERM -> FACTOR seen_factor TERM_P .)


state 183

    (82) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (86) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 86 (seen_factor_op -> .)
    NOT             reduce using rule 86 (seen_factor_op -> .)
    ID              reduce using rule 86 (seen_factor_op -> .)
    CTE_S           reduce using rule 86 (seen_factor_op -> .)
    CTE_F           reduce using rule 86 (seen_factor_op -> .)
    CTE_I           reduce using rule 86 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 210

state 184

    (83) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (86) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 86 (seen_factor_op -> .)
    NOT             reduce using rule 86 (seen_factor_op -> .)
    ID              reduce using rule 86 (seen_factor_op -> .)
    CTE_S           reduce using rule 86 (seen_factor_op -> .)
    CTE_F           reduce using rule 86 (seen_factor_op -> .)
    CTE_I           reduce using rule 86 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 211

state 185

    (84) TERM_P -> empty .

    PLUS            reduce using rule 84 (TERM_P -> empty .)
    MINUS           reduce using rule 84 (TERM_P -> empty .)
    BIGGER          reduce using rule 84 (TERM_P -> empty .)
    SMALLER         reduce using rule 84 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 84 (TERM_P -> empty .)
    DIFFERENT       reduce using rule 84 (TERM_P -> empty .)
    AND             reduce using rule 84 (TERM_P -> empty .)
    OR              reduce using rule 84 (TERM_P -> empty .)
    COMMA           reduce using rule 84 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 84 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 84 (TERM_P -> empty .)


state 186

    (106) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 212


state 187

    (109) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 109 (seen_if_kwd -> empty .)


state 188

    (113) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (115) seen_while_exp -> . empty
    (121) empty -> .

    OPEN_CURLY      reduce using rule 121 (empty -> .)

    seen_while_exp                 shift and go to state 213
    empty                          shift and go to state 214

state 189

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    EXPRESSION                     shift and go to state 215
    EXP                            shift and go to state 109
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 190

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 216


state 191

    (31) FUNC_STATEMENT_STAR -> STATEMENT . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . STATEMENT FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . empty
    (36) STATEMENT -> . ASSIGN SEMI_COLON
    (37) STATEMENT -> . FUNC_CALL SEMI_COLON
    (38) STATEMENT -> . READ SEMI_COLON
    (39) STATEMENT -> . WRITE SEMI_COLON
    (40) STATEMENT -> . DECISION
    (41) STATEMENT -> . REPETITION
    (98) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (99) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (121) empty -> .
    (46) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (100) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (101) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (106) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (111) REPETITION -> . CONDITIONAL_REP
    (112) REPETITION -> . UNCONDITIONAL_REP
    (113) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (116) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    RETURN_KWD      shift and go to state 194
    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 69
    WRITE_KWD       shift and go to state 70
    IF_KWD          shift and go to state 71
    WHILE_KWD       shift and go to state 74
    FOR_KWD         shift and go to state 75

    STATEMENT                      shift and go to state 191
    FUNC_STATEMENT_STAR            shift and go to state 217
    FUNC_RETURN                    shift and go to state 192
    empty                          shift and go to state 193
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    DECISION                       shift and go to state 67
    REPETITION                     shift and go to state 68
    CONDITIONAL_REP                shift and go to state 72
    UNCONDITIONAL_REP              shift and go to state 73

state 192

    (32) FUNC_STATEMENT_STAR -> FUNC_RETURN . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . STATEMENT FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . empty
    (36) STATEMENT -> . ASSIGN SEMI_COLON
    (37) STATEMENT -> . FUNC_CALL SEMI_COLON
    (38) STATEMENT -> . READ SEMI_COLON
    (39) STATEMENT -> . WRITE SEMI_COLON
    (40) STATEMENT -> . DECISION
    (41) STATEMENT -> . REPETITION
    (98) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (99) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (121) empty -> .
    (46) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (100) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (101) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (106) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (111) REPETITION -> . CONDITIONAL_REP
    (112) REPETITION -> . UNCONDITIONAL_REP
    (113) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (116) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    RETURN_KWD      shift and go to state 194
    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 69
    WRITE_KWD       shift and go to state 70
    IF_KWD          shift and go to state 71
    WHILE_KWD       shift and go to state 74
    FOR_KWD         shift and go to state 75

    FUNC_RETURN                    shift and go to state 192
    FUNC_STATEMENT_STAR            shift and go to state 218
    STATEMENT                      shift and go to state 191
    empty                          shift and go to state 193
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    DECISION                       shift and go to state 67
    REPETITION                     shift and go to state 68
    CONDITIONAL_REP                shift and go to state 72
    UNCONDITIONAL_REP              shift and go to state 73

state 193

    (33) FUNC_STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 33 (FUNC_STATEMENT_STAR -> empty .)


state 194

    (98) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (99) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 221
    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    EXPRESSION                     shift and go to state 219
    FUNC_CALL                      shift and go to state 220
    EXP                            shift and go to state 109
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    CNST                           shift and go to state 115

state 195

    (30) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 30 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 196

    (89) ARG_LIST -> ID seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 89 (ARG_LIST -> ID seen_arg ARG_LIST_P .)


state 197

    (93) ARG_LIST_P -> COMMA . ID seen_arg ARG_LIST_P
    (94) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (95) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 222
    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    EXPRESSION                     shift and go to state 223
    FUNC_CALL                      shift and go to state 224
    EXP                            shift and go to state 109
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    CNST                           shift and go to state 115

state 198

    (96) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 96 (ARG_LIST_P -> empty .)


state 199

    (90) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 90 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 200

    (91) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 91 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 201

    (15) READABLE_LIST_P -> COMMA ID . seen_readable READABLE_LIST_P
    (17) seen_readable -> . empty
    (121) empty -> .

    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    seen_readable                  shift and go to state 225
    empty                          shift and go to state 135

state 202

    (65) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (73) seen_close_parenthesis -> . empty
    (121) empty -> .

    STAR            reduce using rule 121 (empty -> .)
    FWD_SLASH       reduce using rule 121 (empty -> .)
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    BIGGER          reduce using rule 121 (empty -> .)
    SMALLER         reduce using rule 121 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)
    SEMI_COLON      reduce using rule 121 (empty -> .)

    seen_close_parenthesis         shift and go to state 226
    empty                          shift and go to state 227

state 203

    (103) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (105) seen_printable -> . empty
    (121) empty -> .

    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    seen_printable                 shift and go to state 228
    empty                          shift and go to state 140

state 204

    (56) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (57) seen_comp -> . empty
    (121) empty -> .

    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)
    SEMI_COLON      reduce using rule 121 (empty -> .)

    seen_comp                      shift and go to state 229
    empty                          shift and go to state 230

state 205

    (51) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 106
    NOT             shift and go to state 232
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    TERM                           shift and go to state 231
    FACTOR                         shift and go to state 112
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 206

    (52) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 106
    NOT             shift and go to state 232
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    TERM                           shift and go to state 233
    FACTOR                         shift and go to state 112
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 207

    (49) EXP -> NOT seen_not EXP pop_not .

    BIGGER          reduce using rule 49 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER         reduce using rule 49 (EXP -> NOT seen_not EXP pop_not .)
    DOUBLE_EQUALS   reduce using rule 49 (EXP -> NOT seen_not EXP pop_not .)
    DIFFERENT       reduce using rule 49 (EXP -> NOT seen_not EXP pop_not .)
    AND             reduce using rule 49 (EXP -> NOT seen_not EXP pop_not .)
    OR              reduce using rule 49 (EXP -> NOT seen_not EXP pop_not .)
    COMMA           reduce using rule 49 (EXP -> NOT seen_not EXP pop_not .)
    CLOSE_PARENTHESIS reduce using rule 49 (EXP -> NOT seen_not EXP pop_not .)
    SEMI_COLON      reduce using rule 49 (EXP -> NOT seen_not EXP pop_not .)


state 208

    (70) pop_not -> empty .

    BIGGER          reduce using rule 70 (pop_not -> empty .)
    SMALLER         reduce using rule 70 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 70 (pop_not -> empty .)
    DIFFERENT       reduce using rule 70 (pop_not -> empty .)
    AND             reduce using rule 70 (pop_not -> empty .)
    OR              reduce using rule 70 (pop_not -> empty .)
    COMMA           reduce using rule 70 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 70 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 70 (pop_not -> empty .)
    STAR            reduce using rule 70 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 70 (pop_not -> empty .)
    PLUS            reduce using rule 70 (pop_not -> empty .)
    MINUS           reduce using rule 70 (pop_not -> empty .)


state 209

    (66) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DIFFERENT       reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 66 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 210

    (82) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 106
    NOT             shift and go to state 232
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    FACTOR                         shift and go to state 234
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 211

    (83) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 106
    NOT             shift and go to state 232
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    FACTOR                         shift and go to state 235
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 212

    (106) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (34) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (35) STATEMENT_STAR -> . empty
    (36) STATEMENT -> . ASSIGN SEMI_COLON
    (37) STATEMENT -> . FUNC_CALL SEMI_COLON
    (38) STATEMENT -> . READ SEMI_COLON
    (39) STATEMENT -> . WRITE SEMI_COLON
    (40) STATEMENT -> . DECISION
    (41) STATEMENT -> . REPETITION
    (121) empty -> .
    (46) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (100) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (101) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (106) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (111) REPETITION -> . CONDITIONAL_REP
    (112) REPETITION -> . UNCONDITIONAL_REP
    (113) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (116) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 69
    WRITE_KWD       shift and go to state 70
    IF_KWD          shift and go to state 71
    WHILE_KWD       shift and go to state 74
    FOR_KWD         shift and go to state 75

    STATEMENT_STAR                 shift and go to state 236
    STATEMENT                      shift and go to state 61
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    DECISION                       shift and go to state 67
    REPETITION                     shift and go to state 68
    CONDITIONAL_REP                shift and go to state 72
    UNCONDITIONAL_REP              shift and go to state 73

state 213

    (113) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 237


state 214

    (115) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 115 (seen_while_exp -> empty .)


state 215

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (119) seen_for_start_exp -> . empty
    (121) empty -> .

    SEMI_COLON      reduce using rule 121 (empty -> .)

    seen_for_start_exp             shift and go to state 238
    empty                          shift and go to state 239

state 216

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    TYPE            reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)


state 217

    (31) FUNC_STATEMENT_STAR -> STATEMENT FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 31 (FUNC_STATEMENT_STAR -> STATEMENT FUNC_STATEMENT_STAR .)


state 218

    (32) FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 32 (FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR .)


state 219

    (98) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 240


state 220

    (99) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (67) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 241
    STAR            reduce using rule 67 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 67 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 67 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 67 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 67 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 67 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 67 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 67 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 67 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 67 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 67 (FACTOR -> FUNC_CALL .) ]


state 221

    (87) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (68) FACTOR -> ID . seen_id
    (88) seen_func_call_id -> . empty
    (74) seen_id -> .
    (121) empty -> .

    STAR            reduce using rule 74 (seen_id -> .)
    FWD_SLASH       reduce using rule 74 (seen_id -> .)
    PLUS            reduce using rule 74 (seen_id -> .)
    MINUS           reduce using rule 74 (seen_id -> .)
    BIGGER          reduce using rule 74 (seen_id -> .)
    SMALLER         reduce using rule 74 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 74 (seen_id -> .)
    DIFFERENT       reduce using rule 74 (seen_id -> .)
    AND             reduce using rule 74 (seen_id -> .)
    OR              reduce using rule 74 (seen_id -> .)
    SEMI_COLON      reduce using rule 74 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)

    seen_func_call_id              shift and go to state 83
    seen_id                        shift and go to state 152
    empty                          shift and go to state 84

state 222

    (93) ARG_LIST_P -> COMMA ID . seen_arg ARG_LIST_P
    (87) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (68) FACTOR -> ID . seen_id
    (97) seen_arg -> .
    (88) seen_func_call_id -> . empty
    (74) seen_id -> .
    (121) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 74 (seen_id -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 74 (seen_id -> .)
    STAR            reduce using rule 74 (seen_id -> .)
    FWD_SLASH       reduce using rule 74 (seen_id -> .)
    PLUS            reduce using rule 74 (seen_id -> .)
    MINUS           reduce using rule 74 (seen_id -> .)
    BIGGER          reduce using rule 74 (seen_id -> .)
    SMALLER         reduce using rule 74 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 74 (seen_id -> .)
    DIFFERENT       reduce using rule 74 (seen_id -> .)
    AND             reduce using rule 74 (seen_id -> .)
    OR              reduce using rule 74 (seen_id -> .)
    COMMA           reduce using rule 74 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 74 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)

  ! COMMA           [ reduce using rule 97 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 97 (seen_arg -> .) ]

    seen_arg                       shift and go to state 242
    seen_func_call_id              shift and go to state 83
    seen_id                        shift and go to state 152
    empty                          shift and go to state 84

state 223

    (94) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (97) seen_arg -> .

    COMMA           reduce using rule 97 (seen_arg -> .)
    CLOSE_PARENTHESIS reduce using rule 97 (seen_arg -> .)

    seen_arg                       shift and go to state 243

state 224

    (95) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (67) FACTOR -> FUNC_CALL .
    (97) seen_arg -> .

  ! reduce/reduce conflict for COMMA resolved using rule 67 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 67 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 67 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 67 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 67 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 67 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 67 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 67 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 67 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 67 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 67 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 67 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 67 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 67 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 97 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 97 (seen_arg -> .) ]

    seen_arg                       shift and go to state 244

state 225

    (15) READABLE_LIST_P -> COMMA ID seen_readable . READABLE_LIST_P
    (15) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (16) READABLE_LIST_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 168
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    READABLE_LIST_P                shift and go to state 245
    empty                          shift and go to state 169

state 226

    (65) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DIFFERENT       reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 65 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 227

    (73) seen_close_parenthesis -> empty .

    STAR            reduce using rule 73 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 73 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 73 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 73 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 73 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 73 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 73 (seen_close_parenthesis -> empty .)
    DIFFERENT       reduce using rule 73 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 73 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 73 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 73 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 73 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 73 (seen_close_parenthesis -> empty .)


state 228

    (103) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (103) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (104) PRINTABLE_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 172
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    PRINTABLE_P                    shift and go to state 246
    empty                          shift and go to state 173

state 229

    (56) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    COMMA           reduce using rule 56 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 56 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    SEMI_COLON      reduce using rule 56 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 230

    (57) seen_comp -> empty .

    COMMA           reduce using rule 57 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 57 (seen_comp -> empty .)
    SEMI_COLON      reduce using rule 57 (seen_comp -> empty .)


state 231

    (51) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (50) seen_term -> .

    PLUS            reduce using rule 50 (seen_term -> .)
    MINUS           reduce using rule 50 (seen_term -> .)
    BIGGER          reduce using rule 50 (seen_term -> .)
    SMALLER         reduce using rule 50 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 50 (seen_term -> .)
    DIFFERENT       reduce using rule 50 (seen_term -> .)
    AND             reduce using rule 50 (seen_term -> .)
    OR              reduce using rule 50 (seen_term -> .)
    COMMA           reduce using rule 50 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 50 (seen_term -> .)
    SEMI_COLON      reduce using rule 50 (seen_term -> .)

    seen_term                      shift and go to state 247

state 232

    (66) FACTOR -> NOT . seen_not FACTOR pop_not
    (71) seen_not -> . empty
    (121) empty -> .

    OPEN_PARENTHESIS reduce using rule 121 (empty -> .)
    NOT             reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    CTE_S           reduce using rule 121 (empty -> .)
    CTE_F           reduce using rule 121 (empty -> .)
    CTE_I           reduce using rule 121 (empty -> .)

    seen_not                       shift and go to state 248
    empty                          shift and go to state 150

state 233

    (52) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (50) seen_term -> .

    PLUS            reduce using rule 50 (seen_term -> .)
    MINUS           reduce using rule 50 (seen_term -> .)
    BIGGER          reduce using rule 50 (seen_term -> .)
    SMALLER         reduce using rule 50 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 50 (seen_term -> .)
    DIFFERENT       reduce using rule 50 (seen_term -> .)
    AND             reduce using rule 50 (seen_term -> .)
    OR              reduce using rule 50 (seen_term -> .)
    COMMA           reduce using rule 50 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 50 (seen_term -> .)
    SEMI_COLON      reduce using rule 50 (seen_term -> .)

    seen_term                      shift and go to state 249

state 234

    (82) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (85) seen_factor -> .

    STAR            reduce using rule 85 (seen_factor -> .)
    FWD_SLASH       reduce using rule 85 (seen_factor -> .)
    PLUS            reduce using rule 85 (seen_factor -> .)
    MINUS           reduce using rule 85 (seen_factor -> .)
    BIGGER          reduce using rule 85 (seen_factor -> .)
    SMALLER         reduce using rule 85 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 85 (seen_factor -> .)
    DIFFERENT       reduce using rule 85 (seen_factor -> .)
    AND             reduce using rule 85 (seen_factor -> .)
    OR              reduce using rule 85 (seen_factor -> .)
    COMMA           reduce using rule 85 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 85 (seen_factor -> .)
    SEMI_COLON      reduce using rule 85 (seen_factor -> .)

    seen_factor                    shift and go to state 250

state 235

    (83) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (85) seen_factor -> .

    STAR            reduce using rule 85 (seen_factor -> .)
    FWD_SLASH       reduce using rule 85 (seen_factor -> .)
    PLUS            reduce using rule 85 (seen_factor -> .)
    MINUS           reduce using rule 85 (seen_factor -> .)
    BIGGER          reduce using rule 85 (seen_factor -> .)
    SMALLER         reduce using rule 85 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 85 (seen_factor -> .)
    DIFFERENT       reduce using rule 85 (seen_factor -> .)
    AND             reduce using rule 85 (seen_factor -> .)
    OR              reduce using rule 85 (seen_factor -> .)
    COMMA           reduce using rule 85 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 85 (seen_factor -> .)
    SEMI_COLON      reduce using rule 85 (seen_factor -> .)

    seen_factor                    shift and go to state 251

state 236

    (106) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 252


state 237

    (113) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (34) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (35) STATEMENT_STAR -> . empty
    (36) STATEMENT -> . ASSIGN SEMI_COLON
    (37) STATEMENT -> . FUNC_CALL SEMI_COLON
    (38) STATEMENT -> . READ SEMI_COLON
    (39) STATEMENT -> . WRITE SEMI_COLON
    (40) STATEMENT -> . DECISION
    (41) STATEMENT -> . REPETITION
    (121) empty -> .
    (46) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (100) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (101) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (106) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (111) REPETITION -> . CONDITIONAL_REP
    (112) REPETITION -> . UNCONDITIONAL_REP
    (113) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (116) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 69
    WRITE_KWD       shift and go to state 70
    IF_KWD          shift and go to state 71
    WHILE_KWD       shift and go to state 74
    FOR_KWD         shift and go to state 75

    STATEMENT_STAR                 shift and go to state 253
    STATEMENT                      shift and go to state 61
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    DECISION                       shift and go to state 67
    REPETITION                     shift and go to state 68
    CONDITIONAL_REP                shift and go to state 72
    UNCONDITIONAL_REP              shift and go to state 73

state 238

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 254


state 239

    (119) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 119 (seen_for_start_exp -> empty .)


state 240

    (98) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    RETURN_KWD      reduce using rule 98 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    ID              reduce using rule 98 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 98 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 98 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 98 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 98 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 98 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 98 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 241

    (99) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    RETURN_KWD      reduce using rule 99 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    ID              reduce using rule 99 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 99 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 99 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 99 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 99 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 99 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 99 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 242

    (93) ARG_LIST_P -> COMMA ID seen_arg . ARG_LIST_P
    (93) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (94) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (95) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (96) ARG_LIST_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 197
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    ARG_LIST_P                     shift and go to state 255
    empty                          shift and go to state 198

state 243

    (94) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (93) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (94) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (95) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (96) ARG_LIST_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 197
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    ARG_LIST_P                     shift and go to state 256
    empty                          shift and go to state 198

state 244

    (95) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (93) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (94) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (95) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (96) ARG_LIST_P -> . empty
    (121) empty -> .

    COMMA           shift and go to state 197
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    ARG_LIST_P                     shift and go to state 257
    empty                          shift and go to state 198

state 245

    (15) READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 15 (READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .)


state 246

    (103) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 103 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 247

    (51) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (51) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (52) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (53) EXP_P -> . empty
    (121) empty -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    BIGGER          reduce using rule 121 (empty -> .)
    SMALLER         reduce using rule 121 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)
    SEMI_COLON      reduce using rule 121 (empty -> .)

    EXP_P                          shift and go to state 258
    empty                          shift and go to state 179

state 248

    (66) FACTOR -> NOT seen_not . FACTOR pop_not
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 106
    NOT             shift and go to state 232
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    FACTOR                         shift and go to state 259
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 249

    (52) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (51) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (52) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (53) EXP_P -> . empty
    (121) empty -> .

    PLUS            shift and go to state 177
    MINUS           shift and go to state 178
    BIGGER          reduce using rule 121 (empty -> .)
    SMALLER         reduce using rule 121 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)
    SEMI_COLON      reduce using rule 121 (empty -> .)

    EXP_P                          shift and go to state 260
    empty                          shift and go to state 179

state 250

    (82) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (82) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (83) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (84) TERM_P -> . empty
    (121) empty -> .

    STAR            shift and go to state 183
    FWD_SLASH       shift and go to state 184
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    BIGGER          reduce using rule 121 (empty -> .)
    SMALLER         reduce using rule 121 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)
    SEMI_COLON      reduce using rule 121 (empty -> .)

    TERM_P                         shift and go to state 261
    empty                          shift and go to state 185

state 251

    (83) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (82) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (83) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (84) TERM_P -> . empty
    (121) empty -> .

    STAR            shift and go to state 183
    FWD_SLASH       shift and go to state 184
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    BIGGER          reduce using rule 121 (empty -> .)
    SMALLER         reduce using rule 121 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)
    SEMI_COLON      reduce using rule 121 (empty -> .)

    TERM_P                         shift and go to state 262
    empty                          shift and go to state 185

state 252

    (106) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (107) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (108) DECISION_P -> . empty
    (121) empty -> .

    ELSE_KWD        shift and go to state 264
    ID              reduce using rule 121 (empty -> .)
    READ_KWD        reduce using rule 121 (empty -> .)
    WRITE_KWD       reduce using rule 121 (empty -> .)
    IF_KWD          reduce using rule 121 (empty -> .)
    WHILE_KWD       reduce using rule 121 (empty -> .)
    FOR_KWD         reduce using rule 121 (empty -> .)
    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    RETURN_KWD      reduce using rule 121 (empty -> .)

    DECISION_P                     shift and go to state 263
    empty                          shift and go to state 265

state 253

    (113) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 266


state 254

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (55) EXPRESSION -> . EXP
    (56) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (48) EXP -> . TERM seen_term EXP_P
    (49) EXP -> . NOT seen_not EXP pop_not
    (81) TERM -> . FACTOR seen_factor TERM_P
    (65) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) FACTOR -> . NOT seen_not FACTOR pop_not
    (67) FACTOR -> . FUNC_CALL
    (68) FACTOR -> . ID seen_id
    (69) FACTOR -> . CNST
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (78) CNST -> . CTE_S seen_cte_s
    (79) CNST -> . CTE_F seen_cte_f
    (80) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 111
    OPEN_PARENTHESIS shift and go to state 106
    ID              shift and go to state 114
    CTE_S           shift and go to state 116
    CTE_F           shift and go to state 117
    CTE_I           shift and go to state 118

    EXPRESSION                     shift and go to state 267
    EXP                            shift and go to state 109
    TERM                           shift and go to state 110
    FACTOR                         shift and go to state 112
    FUNC_CALL                      shift and go to state 113
    CNST                           shift and go to state 115

state 255

    (93) ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 93 (ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P .)


state 256

    (94) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 94 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 257

    (95) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 95 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 258

    (51) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 51 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 51 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 51 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 51 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 51 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 51 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 51 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 51 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 51 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 259

    (66) FACTOR -> NOT seen_not FACTOR . pop_not
    (70) pop_not -> . empty
    (121) empty -> .

    STAR            reduce using rule 121 (empty -> .)
    FWD_SLASH       reduce using rule 121 (empty -> .)
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    BIGGER          reduce using rule 121 (empty -> .)
    SMALLER         reduce using rule 121 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 121 (empty -> .)
    DIFFERENT       reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)
    SEMI_COLON      reduce using rule 121 (empty -> .)

    pop_not                        shift and go to state 209
    empty                          shift and go to state 208

state 260

    (52) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 52 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 52 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 52 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 52 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 52 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 52 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 52 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 52 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 52 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 261

    (82) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 82 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 82 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 82 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 82 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 82 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 82 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 82 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 82 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 82 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 82 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 82 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 262

    (83) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 83 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 83 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 83 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 83 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 83 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 83 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 83 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 83 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 83 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 83 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 83 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 263

    (106) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 106 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 106 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 106 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 106 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 106 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 106 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 106 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    RETURN_KWD      reduce using rule 106 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 264

    (107) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (110) seen_else_kwd -> . empty
    (121) empty -> .

    OPEN_CURLY      reduce using rule 121 (empty -> .)

    seen_else_kwd                  shift and go to state 268
    empty                          shift and go to state 269

state 265

    (108) DECISION_P -> empty .

    ID              reduce using rule 108 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 108 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 108 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 108 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 108 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 108 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 108 (DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 108 (DECISION_P -> empty .)


state 266

    (113) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 113 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 113 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 113 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 113 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 113 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 113 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 113 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 113 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 267

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (120) seen_for_end_exp -> . empty
    (121) empty -> .

    SEMI_COLON      reduce using rule 121 (empty -> .)

    seen_for_end_exp               shift and go to state 270
    empty                          shift and go to state 271

state 268

    (107) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 272


state 269

    (110) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 110 (seen_else_kwd -> empty .)


state 270

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 273


state 271

    (120) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 120 (seen_for_end_exp -> empty .)


state 272

    (107) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (34) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (35) STATEMENT_STAR -> . empty
    (36) STATEMENT -> . ASSIGN SEMI_COLON
    (37) STATEMENT -> . FUNC_CALL SEMI_COLON
    (38) STATEMENT -> . READ SEMI_COLON
    (39) STATEMENT -> . WRITE SEMI_COLON
    (40) STATEMENT -> . DECISION
    (41) STATEMENT -> . REPETITION
    (121) empty -> .
    (46) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (100) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (101) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (106) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (111) REPETITION -> . CONDITIONAL_REP
    (112) REPETITION -> . UNCONDITIONAL_REP
    (113) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (116) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 69
    WRITE_KWD       shift and go to state 70
    IF_KWD          shift and go to state 71
    WHILE_KWD       shift and go to state 74
    FOR_KWD         shift and go to state 75

    STATEMENT_STAR                 shift and go to state 274
    STATEMENT                      shift and go to state 61
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    DECISION                       shift and go to state 67
    REPETITION                     shift and go to state 68
    CONDITIONAL_REP                shift and go to state 72
    UNCONDITIONAL_REP              shift and go to state 73

state 273

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (42) FOR_INCR_STATEMENT -> . ASSIGN
    (43) FOR_INCR_STATEMENT -> . FUNC_CALL
    (44) FOR_INCR_STATEMENT -> . READ
    (45) FOR_INCR_STATEMENT -> . WRITE
    (46) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (100) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (101) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    ID              shift and go to state 59
    READ_KWD        shift and go to state 69
    WRITE_KWD       shift and go to state 70

    FOR_INCR_STATEMENT             shift and go to state 275
    ASSIGN                         shift and go to state 276
    FUNC_CALL                      shift and go to state 277
    READ                           shift and go to state 278
    WRITE                          shift and go to state 279

state 274

    (107) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 280


state 275

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (118) seen_for_incr_exp -> . empty
    (121) empty -> .

    CLOSE_PARENTHESIS reduce using rule 121 (empty -> .)

    seen_for_incr_exp              shift and go to state 281
    empty                          shift and go to state 282

state 276

    (42) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 42 (FOR_INCR_STATEMENT -> ASSIGN .)


state 277

    (43) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 43 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 278

    (44) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 44 (FOR_INCR_STATEMENT -> READ .)


state 279

    (45) FOR_INCR_STATEMENT -> WRITE .

    CLOSE_PARENTHESIS reduce using rule 45 (FOR_INCR_STATEMENT -> WRITE .)


state 280

    (107) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 107 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 107 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 107 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 107 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 107 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 107 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 107 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 107 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 281

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 283


state 282

    (118) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 118 (seen_for_incr_exp -> empty .)


state 283

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 284


state 284

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (34) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (35) STATEMENT_STAR -> . empty
    (36) STATEMENT -> . ASSIGN SEMI_COLON
    (37) STATEMENT -> . FUNC_CALL SEMI_COLON
    (38) STATEMENT -> . READ SEMI_COLON
    (39) STATEMENT -> . WRITE SEMI_COLON
    (40) STATEMENT -> . DECISION
    (41) STATEMENT -> . REPETITION
    (121) empty -> .
    (46) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (87) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (100) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (101) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (106) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (111) REPETITION -> . CONDITIONAL_REP
    (112) REPETITION -> . UNCONDITIONAL_REP
    (113) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (116) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 121 (empty -> .)
    ID              shift and go to state 59
    READ_KWD        shift and go to state 69
    WRITE_KWD       shift and go to state 70
    IF_KWD          shift and go to state 71
    WHILE_KWD       shift and go to state 74
    FOR_KWD         shift and go to state 75

    STATEMENT_STAR                 shift and go to state 285
    STATEMENT                      shift and go to state 61
    empty                          shift and go to state 62
    ASSIGN                         shift and go to state 63
    FUNC_CALL                      shift and go to state 64
    READ                           shift and go to state 65
    WRITE                          shift and go to state 66
    DECISION                       shift and go to state 67
    REPETITION                     shift and go to state 68
    CONDITIONAL_REP                shift and go to state 72
    UNCONDITIONAL_REP              shift and go to state 73

state 285

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 286


state 286

    (116) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 116 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 116 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 116 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 116 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 116 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 116 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 116 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 116 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMI_COLON in state 220 resolved as shift
WARNING: reduce/reduce conflict in state 128 resolved using rule (seen_id -> <empty>)
WARNING: rejected rule (seen_arg -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 131 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (seen_arg -> <empty>) in state 131
WARNING: reduce/reduce conflict in state 181 resolved using rule (seen_factor -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 181
WARNING: reduce/reduce conflict in state 222 resolved using rule (seen_id -> <empty>)
WARNING: rejected rule (seen_arg -> <empty>) in state 222
WARNING: reduce/reduce conflict in state 224 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (seen_arg -> <empty>) in state 224
