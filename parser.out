Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION
Rule 3     STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION
Rule 4     STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION
Rule 5     STRUCTURE_DEFINITION -> empty
Rule 6     seen_program_id -> empty
Rule 7     seen_main_kwd -> empty
Rule 8     CLASS_STAR -> CLASS CLASS_STAR
Rule 9     CLASS_STAR -> empty
Rule 10    CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
Rule 11    seen_class_id_declaration -> empty
Rule 12    seen_class_attr -> empty
Rule 13    CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 14    VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 15    VAR_LIST_STAR -> empty
Rule 16    VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON
Rule 17    SYMBOL_LIST -> ID SYMBOL_LIST_P
Rule 18    SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P
Rule 19    SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P
Rule 20    SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P
Rule 21    SYMBOL_LIST_P -> COMMA
Rule 22    SYMBOL_LIST_P -> empty
Rule 23    READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 24    READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 25    READABLE_LIST_P -> empty
Rule 26    seen_readable -> empty
Rule 27    GLOBAL_VAR -> VAR_LIST_STAR
Rule 28    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 29    FUNC_DEF_STAR -> empty
Rule 30    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 31    seen_func_id -> empty
Rule 32    seen_func_params -> empty
Rule 33    seen_func_vars -> empty
Rule 34    FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P
Rule 35    FUNC_PARAM -> empty
Rule 36    FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P
Rule 37    FUNC_PARAM_P -> empty
Rule 38    ARG_DECLARATION -> ID COLON TYPE
Rule 39    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 40    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 41    STATEMENT_STAR -> empty
Rule 42    STATEMENT -> ASSIGN SEMI_COLON
Rule 43    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 44    STATEMENT -> READ SEMI_COLON
Rule 45    STATEMENT -> PRINT SEMI_COLON
Rule 46    STATEMENT -> PRINTLN SEMI_COLON
Rule 47    STATEMENT -> OPEN SEMI_COLON
Rule 48    STATEMENT -> WRITE SEMI_COLON
Rule 49    STATEMENT -> USING SEMI_COLON
Rule 50    STATEMENT -> FLOW_CONTROL
Rule 51    STATEMENT -> FUNC_RETURN
Rule 52    ID_LIST -> ID ID_LIST_P
Rule 53    ID_LIST_P -> COMMA ID ID_LIST_P
Rule 54    ID_LIST_P -> COMMA
Rule 55    ID_LIST_P -> empty
Rule 56    USING -> USING_KWD ID_LIST AS_KWD ID
Rule 57    OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 58    seen_open_buffer -> empty
Rule 59    WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 60    seen_write_buffer -> empty
Rule 61    seen_file_path -> empty
Rule 62    seen_separator -> empty
Rule 63    FLOW_CONTROL -> DECISION
Rule 64    FLOW_CONTROL -> REPETITION
Rule 65    FOR_INCR_STATEMENT -> ASSIGN
Rule 66    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 67    FOR_INCR_STATEMENT -> READ
Rule 68    FOR_INCR_STATEMENT -> PRINT
Rule 69    FOR_INCR_STATEMENT -> PRINTLN
Rule 70    ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
Rule 71    ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
Rule 72    ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
Rule 73    ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
Rule 74    ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
Rule 75    ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
Rule 76    ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
Rule 77    seen_equals -> empty
Rule 78    seen_plus_equals -> empty
Rule 79    seen_minus_equals -> empty
Rule 80    seen_times_equals -> empty
Rule 81    seen_over_equals -> empty
Rule 82    seen_plus_plus -> empty
Rule 83    seen_minus_minus -> empty
Rule 84    EXP -> TERM seen_term EXP_P
Rule 85    EXP -> MINUS seen_unary_minus EXP pop_unary_minus
Rule 86    seen_term -> <empty>
Rule 87    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 88    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 89    EXP_P -> empty
Rule 90    seen_term_op -> <empty>
Rule 91    EXPRESSION -> EXP
Rule 92    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 93    seen_comp -> empty
Rule 94    seen_comp_op -> empty
Rule 95    COMP -> BIGGER
Rule 96    COMP -> BIGGER_EQ
Rule 97    COMP -> SMALLER
Rule 98    COMP -> SMALLER_EQ
Rule 99    COMP -> DOUBLE_EQUALS
Rule 100   COMP -> NOT_EQUALS
Rule 101   COMP -> AND
Rule 102   COMP -> OR
Rule 103   FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 104   FACTOR -> NOT seen_not FACTOR pop_not
Rule 105   FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus
Rule 106   FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 107   FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 108   FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 109   FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
Rule 110   FACTOR -> FUNC_CALL
Rule 111   FACTOR -> CLASS_INSTANCE
Rule 112   FACTOR -> VAR seen_var_as_factor
Rule 113   FACTOR -> CONSTANT
Rule 114   seen_substr_str -> empty
Rule 115   seen_substr_idx -> empty
Rule 116   seen_substr_size -> empty
Rule 117   seen_substr -> empty
Rule 118   seen_stox_factor -> empty
Rule 119   seen_stoi_kwd -> empty
Rule 120   seen_stof_kwd -> empty
Rule 121   seen_stob_kwd -> empty
Rule 122   pop_not -> empty
Rule 123   seen_not -> empty
Rule 124   pop_unary_minus -> empty
Rule 125   seen_unary_minus -> empty
Rule 126   seen_open_parenthesis -> empty
Rule 127   seen_close_parenthesis -> empty
Rule 128   seen_var_in_assign -> empty
Rule 129   seen_var_as_factor -> empty
Rule 130   seen_var_in_io -> empty
Rule 131   seen_cte_i -> empty
Rule 132   seen_cte_f -> empty
Rule 133   seen_cte_s -> empty
Rule 134   seen_cte_false -> empty
Rule 135   seen_cte_true -> empty
Rule 136   CONSTANT -> CTE_I seen_cte_i
Rule 137   CONSTANT -> CTE_F seen_cte_f
Rule 138   CONSTANT -> CTE_S seen_cte_s
Rule 139   CONSTANT -> CTE_B
Rule 140   CTE_B -> CTE_TRUE seen_cte_true
Rule 141   CTE_B -> CTE_FALSE seen_cte_false
Rule 142   CLASS_REFERENCE -> ID DOT seen_dot_operator
Rule 143   CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator
Rule 144   seen_this_kwd -> empty
Rule 145   VAR -> ID
Rule 146   VAR -> ARRAY
Rule 147   VAR -> CLASS_REFERENCE VAR
Rule 148   CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 149   seen_class_id_instance -> empty
Rule 150   seen_dot_operator -> empty
Rule 151   seen_this_dot_operator -> empty
Rule 152   ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 153   ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 154   ARRAY_P -> empty
Rule 155   seen_array_id -> empty
Rule 156   seen_open_bracket -> empty
Rule 157   seen_array_access -> empty
Rule 158   ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
Rule 159   ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
Rule 160   ARRAY_DECLARATION_P -> empty
Rule 161   seen_array_def_id -> empty
Rule 162   seen_array_def_dim -> empty
Rule 163   TERM -> FACTOR seen_factor TERM_P
Rule 164   TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 165   TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 166   TERM_P -> empty
Rule 167   seen_factor -> empty
Rule 168   seen_factor_op -> empty
Rule 169   FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 170   FUNC_CALL -> CLASS_REFERENCE FUNC_CALL
Rule 171   seen_func_call_id -> empty
Rule 172   ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 173   ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 174   ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 175   ARG_LIST -> empty
Rule 176   ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 177   ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 178   ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 179   ARG_LIST_P -> empty
Rule 180   seen_arg -> empty
Rule 181   FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 182   FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 183   FUNC_RETURN -> RETURN_KWD SEMI_COLON
Rule 184   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 185   PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 186   seen_print_kwd -> empty
Rule 187   PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 188   seen_println_kwd -> empty
Rule 189   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 190   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 191   PRINTABLE_P -> empty
Rule 192   seen_printable -> empty
Rule 193   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 194   DECISION_P -> ELSE_KWD seen_else_kwd DECISION
Rule 195   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 196   DECISION_P -> empty
Rule 197   seen_if_kwd -> empty
Rule 198   seen_else_kwd -> empty
Rule 199   REPETITION -> CONDITIONAL_REP
Rule 200   REPETITION -> UNCONDITIONAL_REP
Rule 201   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 202   seen_while_kwd -> empty
Rule 203   seen_while_exp -> empty
Rule 204   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 205   seen_for_kwd -> empty
Rule 206   seen_for_incr_exp -> empty
Rule 207   seen_for_start_exp -> empty
Rule 208   seen_for_end_exp -> empty
Rule 209   TYPE -> TYPE_I
Rule 210   TYPE -> TYPE_F
Rule 211   TYPE -> TYPE_S
Rule 212   TYPE -> TYPE_B
Rule 213   TYPE -> TYPE_O
Rule 214   TYPE -> TYPE_V
Rule 215   empty -> <empty>

Terminals, with rules where they appear

AND                  : 101
AS_KWD               : 56
ATTR_KWD             : 13
BIGGER               : 95
BIGGER_EQ            : 96
CLASS_KWD            : 10
CLOSE_BRACKET        : 152 153 158 159
CLOSE_CURLY          : 1 10 13 30 39 193 195 201 204
CLOSE_PARENTHESIS    : 1 30 57 59 103 106 107 108 109 148 169 184 185 187 193 201 204
COLON                : 16 38
COMMA                : 19 20 21 24 36 53 54 57 57 59 59 109 109 176 177 178 190
CTE_F                : 137
CTE_FALSE            : 141
CTE_I                : 136 158 159
CTE_S                : 138
CTE_TRUE             : 140
DOT                  : 142 143
DOUBLE_EQUALS        : 99
ELSE_KWD             : 194 195
EQUALS               : 70 204
FOR_KWD              : 204
FWD_SLASH            : 165
ID                   : 1 10 17 19 30 38 52 53 56 142 145 148 152 158 169
IF_KWD               : 193
MAIN_KWD             : 1
MINUS                : 85 88 105
MINUS_EQUALS         : 72
MINUS_MINUS          : 76
NEW_KWD              : 148
NOT                  : 104
NOT_EQUALS           : 100
OPEN_BRACKET         : 152 153 158 159
OPEN_CURLY           : 1 10 13 30 39 193 195 201 204
OPEN_KWD             : 57
OPEN_PARENTHESIS     : 1 30 57 59 103 106 107 108 109 148 169 184 185 187 193 201 204
OR                   : 102
OVER_EQUALS          : 74
PLUS                 : 87
PLUS_EQUALS          : 71
PLUS_PLUS            : 75
PRINTLN_KWD          : 187
PRINT_KWD            : 185
PROGRAM_KWD          : 1
READ_KWD             : 184
RETURN_KWD           : 181 182 183
SEMI_COLON           : 1 16 42 43 44 45 46 47 48 49 181 182 183 204 204
SMALLER              : 97
SMALLER_EQ           : 98
STAR                 : 164
STOB_KWD             : 108
STOF_KWD             : 107
STOI_KWD             : 106
SUBSTR_KWD           : 109
THIS_KWD             : 143
TIMES_EQUALS         : 73
TYPE_B               : 212
TYPE_F               : 210
TYPE_I               : 209
TYPE_O               : 213
TYPE_S               : 211
TYPE_V               : 214
USING_KWD            : 56
VARS_KWD             : 39
WHILE_KWD            : 201
WRITE_KWD            : 59
error                : 

Nonterminals, with rules where they appear

ARG_DECLARATION      : 34 36
ARG_LIST             : 169
ARG_LIST_P           : 172 173 174 176 177 178
ARRAY                : 146
ARRAY_DECLARATION    : 18 20
ARRAY_DECLARATION_P  : 158 159
ARRAY_P              : 152 153
ASSIGN               : 42 65
CLASS                : 8
CLASS_ATTR           : 10
CLASS_INSTANCE       : 111
CLASS_REFERENCE      : 147 170
CLASS_STAR           : 3 8
COMP                 : 92
CONDITIONAL_REP      : 199
CONSTANT             : 113
CTE_B                : 139
DECISION             : 63 194
DECISION_P           : 193
EXP                  : 85 91 92
EXPRESSION           : 57 57 59 59 70 71 72 73 74 92 103 106 107 108 109 109 109 152 153 173 177 181 189 190 193 201 204 204
EXP_P                : 84 87 88
FACTOR               : 104 105 163 164 165
FLOW_CONTROL         : 50
FOR_INCR_STATEMENT   : 204
FUNC_CALL            : 43 66 110 170 174 178 182
FUNC_DEF             : 28
FUNC_DEF_STAR        : 4 10 28
FUNC_PARAM           : 30
FUNC_PARAM_P         : 34 36
FUNC_RETURN          : 51
GLOBAL_VAR           : 2
ID_LIST              : 56
ID_LIST_P            : 52 53
OPEN                 : 47
PRINT                : 45 68
PRINTABLE            : 185 187
PRINTABLE_P          : 189 190
PRINTLN              : 46 69
PROGRAM              : 0
READ                 : 44 67
READABLE_LIST        : 184
READABLE_LIST_P      : 23 24
REPETITION           : 64
STATEMENT            : 40
STATEMENT_STAR       : 1 30 40 193 195 201 204
STRUCTURE_DEFINITION : 1 2 3 4
SYMBOL_LIST          : 16
SYMBOL_LIST_P        : 17 18 19 20
TERM                 : 84 87 88
TERM_P               : 163 164 165
TYPE                 : 16 30 38
UNCONDITIONAL_REP    : 200
USING                : 49
VAR                  : 23 24 57 59 70 71 72 73 74 75 76 112 147 172 176 204
VARS                 : 30
VAR_LIST             : 14
VAR_LIST_STAR        : 13 14 27 39
WRITE                : 48
empty                : 5 6 7 9 11 12 15 22 25 26 29 31 32 33 35 37 41 55 58 60 61 62 77 78 79 80 81 82 83 89 93 94 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 144 149 150 151 154 155 156 157 160 161 162 166 167 168 171 175 179 180 186 188 191 192 196 197 198 202 203 205 206 207 208
pop_not              : 104
pop_unary_minus      : 85 105
seen_arg             : 172 173 174 176 177 178
seen_array_access    : 152 153
seen_array_def_dim   : 158 159
seen_array_def_id    : 158
seen_array_id        : 152
seen_class_attr      : 10
seen_class_id_declaration : 10
seen_class_id_instance : 148
seen_close_parenthesis : 103 106 107 108 109
seen_comp            : 92
seen_comp_op         : 92
seen_cte_f           : 137
seen_cte_false       : 141
seen_cte_i           : 136 158 159
seen_cte_s           : 138
seen_cte_true        : 140
seen_dot_operator    : 142
seen_else_kwd        : 194 195
seen_equals          : 70
seen_factor          : 163 164 165
seen_factor_op       : 164 165
seen_file_path       : 57 59
seen_for_end_exp     : 204
seen_for_incr_exp    : 204
seen_for_kwd         : 204
seen_for_start_exp   : 204
seen_func_call_id    : 169
seen_func_id         : 30
seen_func_params     : 30
seen_func_vars       : 30
seen_if_kwd          : 193
seen_main_kwd        : 1
seen_minus_equals    : 72
seen_minus_minus     : 76
seen_not             : 104
seen_open_bracket    : 152 153
seen_open_buffer     : 57
seen_open_parenthesis : 103 106 107 108 109
seen_over_equals     : 74
seen_plus_equals     : 71
seen_plus_plus       : 75
seen_print_kwd       : 185
seen_printable       : 189 190
seen_println_kwd     : 187
seen_program_id      : 1
seen_readable        : 23 24
seen_separator       : 57 59
seen_stob_kwd        : 108
seen_stof_kwd        : 107
seen_stoi_kwd        : 106
seen_stox_factor     : 106 107 108
seen_substr          : 109
seen_substr_idx      : 109
seen_substr_size     : 109
seen_substr_str      : 109
seen_term            : 84 87 88
seen_term_op         : 87 88
seen_this_dot_operator : 143
seen_this_kwd        : 143
seen_times_equals    : 73
seen_unary_minus     : 85 105
seen_var_as_factor   : 112 172 176
seen_var_in_assign   : 23 24 70 71 72 73 74 75 76
seen_var_in_io       : 57 59
seen_while_exp       : 201
seen_while_kwd       : 201
seen_write_buffer    : 59

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (6) seen_program_id -> . empty
    (215) empty -> .

    SEMI_COLON      reduce using rule 215 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (6) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 6 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (215) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (209) TYPE -> . TYPE_I
    (210) TYPE -> . TYPE_F
    (211) TYPE -> . TYPE_S
    (212) TYPE -> . TYPE_B
    (213) TYPE -> . TYPE_O
    (214) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 215 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 215 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]

    STRUCTURE_DEFINITION           shift and go to state 8
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 7

    (17) SYMBOL_LIST -> ID . SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (161) seen_array_def_id -> . empty
    (215) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 215 (empty -> .)
    OPEN_BRACKET    reduce using rule 215 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 27
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 8

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 31


state 9

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (215) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (209) TYPE -> . TYPE_I
    (210) TYPE -> . TYPE_F
    (211) TYPE -> . TYPE_S
    (212) TYPE -> . TYPE_B
    (213) TYPE -> . TYPE_O
    (214) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 215 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 215 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]

    GLOBAL_VAR                     shift and go to state 9
    STRUCTURE_DEFINITION           shift and go to state 32
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 10

    (3) STRUCTURE_DEFINITION -> CLASS_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (215) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (209) TYPE -> . TYPE_I
    (210) TYPE -> . TYPE_F
    (211) TYPE -> . TYPE_S
    (212) TYPE -> . TYPE_B
    (213) TYPE -> . TYPE_O
    (214) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 215 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 215 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]

    CLASS_STAR                     shift and go to state 10
    STRUCTURE_DEFINITION           shift and go to state 33
    GLOBAL_VAR                     shift and go to state 9
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 11

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (215) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (209) TYPE -> . TYPE_I
    (210) TYPE -> . TYPE_F
    (211) TYPE -> . TYPE_S
    (212) TYPE -> . TYPE_B
    (213) TYPE -> . TYPE_O
    (214) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 215 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 215 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]

    FUNC_DEF_STAR                  shift and go to state 11
    STRUCTURE_DEFINITION           shift and go to state 34
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 12

    (5) STRUCTURE_DEFINITION -> empty .
    (9) CLASS_STAR -> empty .
    (29) FUNC_DEF_STAR -> empty .
    (15) VAR_LIST_STAR -> empty .

  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
    MAIN_KWD        reduce using rule 5 (STRUCTURE_DEFINITION -> empty .)
    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)

  ! MAIN_KWD        [ reduce using rule 9 (CLASS_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! ID              [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! ID              [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]


state 13

    (27) GLOBAL_VAR -> VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_I          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_F          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_S          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_B          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_O          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_V          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    ID              reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) CLASS_STAR -> CLASS . CLASS_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (215) empty -> .

  ! shift/reduce conflict for CLASS_KWD resolved as shift
    CLASS_KWD       shift and go to state 17
    TYPE_I          reduce using rule 215 (empty -> .)
    TYPE_F          reduce using rule 215 (empty -> .)
    TYPE_S          reduce using rule 215 (empty -> .)
    TYPE_B          reduce using rule 215 (empty -> .)
    TYPE_O          reduce using rule 215 (empty -> .)
    TYPE_V          reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    MAIN_KWD        reduce using rule 215 (empty -> .)

  ! CLASS_KWD       [ reduce using rule 215 (empty -> .) ]

    CLASS                          shift and go to state 14
    CLASS_STAR                     shift and go to state 35
    empty                          shift and go to state 36

state 15

    (28) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (215) empty -> .
    (209) TYPE -> . TYPE_I
    (210) TYPE -> . TYPE_F
    (211) TYPE -> . TYPE_S
    (212) TYPE -> . TYPE_B
    (213) TYPE -> . TYPE_O
    (214) TYPE -> . TYPE_V

  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    CLASS_KWD       reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    MAIN_KWD        reduce using rule 215 (empty -> .)
    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

  ! TYPE_I          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 215 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 215 (empty -> .) ]

    FUNC_DEF                       shift and go to state 15
    FUNC_DEF_STAR                  shift and go to state 37
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 16

    (14) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (215) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for ID resolved as shift
    CLASS_KWD       reduce using rule 215 (empty -> .)
    TYPE_I          reduce using rule 215 (empty -> .)
    TYPE_F          reduce using rule 215 (empty -> .)
    TYPE_S          reduce using rule 215 (empty -> .)
    TYPE_B          reduce using rule 215 (empty -> .)
    TYPE_O          reduce using rule 215 (empty -> .)
    TYPE_V          reduce using rule 215 (empty -> .)
    MAIN_KWD        reduce using rule 215 (empty -> .)
    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    ID              shift and go to state 7

  ! ID              [ reduce using rule 215 (empty -> .) ]

    VAR_LIST                       shift and go to state 16
    VAR_LIST_STAR                  shift and go to state 39
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 17

    (10) CLASS -> CLASS_KWD . ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 41


state 18

    (30) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 42


state 19

    (16) VAR_LIST -> SYMBOL_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 43


state 20

    (209) TYPE -> TYPE_I .

    ID              reduce using rule 209 (TYPE -> TYPE_I .)
    SEMI_COLON      reduce using rule 209 (TYPE -> TYPE_I .)
    COMMA           reduce using rule 209 (TYPE -> TYPE_I .)
    CLOSE_PARENTHESIS reduce using rule 209 (TYPE -> TYPE_I .)


state 21

    (210) TYPE -> TYPE_F .

    ID              reduce using rule 210 (TYPE -> TYPE_F .)
    SEMI_COLON      reduce using rule 210 (TYPE -> TYPE_F .)
    COMMA           reduce using rule 210 (TYPE -> TYPE_F .)
    CLOSE_PARENTHESIS reduce using rule 210 (TYPE -> TYPE_F .)


state 22

    (211) TYPE -> TYPE_S .

    ID              reduce using rule 211 (TYPE -> TYPE_S .)
    SEMI_COLON      reduce using rule 211 (TYPE -> TYPE_S .)
    COMMA           reduce using rule 211 (TYPE -> TYPE_S .)
    CLOSE_PARENTHESIS reduce using rule 211 (TYPE -> TYPE_S .)


state 23

    (212) TYPE -> TYPE_B .

    ID              reduce using rule 212 (TYPE -> TYPE_B .)
    SEMI_COLON      reduce using rule 212 (TYPE -> TYPE_B .)
    COMMA           reduce using rule 212 (TYPE -> TYPE_B .)
    CLOSE_PARENTHESIS reduce using rule 212 (TYPE -> TYPE_B .)


state 24

    (213) TYPE -> TYPE_O .

    ID              reduce using rule 213 (TYPE -> TYPE_O .)
    SEMI_COLON      reduce using rule 213 (TYPE -> TYPE_O .)
    COMMA           reduce using rule 213 (TYPE -> TYPE_O .)
    CLOSE_PARENTHESIS reduce using rule 213 (TYPE -> TYPE_O .)


state 25

    (214) TYPE -> TYPE_V .

    ID              reduce using rule 214 (TYPE -> TYPE_V .)
    SEMI_COLON      reduce using rule 214 (TYPE -> TYPE_V .)
    COMMA           reduce using rule 214 (TYPE -> TYPE_V .)
    CLOSE_PARENTHESIS reduce using rule 214 (TYPE -> TYPE_V .)


state 26

    (18) SYMBOL_LIST -> ARRAY_DECLARATION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 215 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 44
    empty                          shift and go to state 45

state 27

    (17) SYMBOL_LIST -> ID SYMBOL_LIST_P .

    COLON           reduce using rule 17 (SYMBOL_LIST -> ID SYMBOL_LIST_P .)


state 28

    (158) ARRAY_DECLARATION -> ID seen_array_def_id . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    OPEN_BRACKET    shift and go to state 46


state 29

    (19) SYMBOL_LIST_P -> COMMA . ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> COMMA . ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> COMMA .
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    ID              shift and go to state 47
    COLON           reduce using rule 21 (SYMBOL_LIST_P -> COMMA .)

    ARRAY_DECLARATION              shift and go to state 48

state 30

    (22) SYMBOL_LIST_P -> empty .
    (161) seen_array_def_id -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)
    OPEN_BRACKET    reduce using rule 161 (seen_array_def_id -> empty .)


state 31

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 49


state 32

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 2 (STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .)


state 33

    (3) STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 3 (STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .)


state 34

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 4 (STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .)


state 35

    (8) CLASS_STAR -> CLASS CLASS_STAR .

    CLASS_KWD       reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_I          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_F          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_S          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_B          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_O          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_V          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    ID              reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)


state 36

    (9) CLASS_STAR -> empty .

    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 9 (CLASS_STAR -> empty .)


state 37

    (28) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    CLASS_KWD       reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_I          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_F          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_S          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_B          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_O          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_V          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    ID              reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    MAIN_KWD        reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 38

    (29) FUNC_DEF_STAR -> empty .

    CLASS_KWD       reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_I          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_F          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_S          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_B          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_O          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_V          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    ID              reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    MAIN_KWD        reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 29 (FUNC_DEF_STAR -> empty .)


state 39

    (14) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_I          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_F          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_S          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_B          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_O          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_V          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    ID              reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 40

    (15) VAR_LIST_STAR -> empty .

    CLASS_KWD       reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_I          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_F          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_S          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_B          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_O          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_V          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    ID              reduce using rule 15 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 15 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 15 (VAR_LIST_STAR -> empty .)


state 41

    (10) CLASS -> CLASS_KWD ID . seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (11) seen_class_id_declaration -> . empty
    (215) empty -> .

    OPEN_CURLY      reduce using rule 215 (empty -> .)

    seen_class_id_declaration      shift and go to state 50
    empty                          shift and go to state 51

state 42

    (30) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (31) seen_func_id -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_func_id                   shift and go to state 52
    empty                          shift and go to state 53

state 43

    (16) VAR_LIST -> SYMBOL_LIST COLON . TYPE SEMI_COLON
    (209) TYPE -> . TYPE_I
    (210) TYPE -> . TYPE_F
    (211) TYPE -> . TYPE_S
    (212) TYPE -> . TYPE_B
    (213) TYPE -> . TYPE_O
    (214) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 54

state 44

    (18) SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P .

    COLON           reduce using rule 18 (SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P .)


state 45

    (22) SYMBOL_LIST_P -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)


state 46

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CTE_I           shift and go to state 55


state 47

    (19) SYMBOL_LIST_P -> COMMA ID . SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (161) seen_array_def_id -> . empty
    (215) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 215 (empty -> .)
    OPEN_BRACKET    reduce using rule 215 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 56
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 48

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 215 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 57
    empty                          shift and go to state 45

state 49

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 58


state 50

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration . OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 59


state 51

    (11) seen_class_id_declaration -> empty .

    OPEN_CURLY      reduce using rule 11 (seen_class_id_declaration -> empty .)


state 52

    (30) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 60


state 53

    (31) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 31 (seen_func_id -> empty .)


state 54

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 61


state 55

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (131) seen_cte_i -> . empty
    (215) empty -> .

    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_cte_i                     shift and go to state 62
    empty                          shift and go to state 63

state 56

    (19) SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .

    COLON           reduce using rule 19 (SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .)


state 57

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P .

    COLON           reduce using rule 20 (SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P .)


state 58

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 64


state 59

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY . CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (13) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 66

    CLASS_ATTR                     shift and go to state 65

state 60

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (34) FUNC_PARAM -> . ARG_DECLARATION FUNC_PARAM_P
    (35) FUNC_PARAM -> . empty
    (38) ARG_DECLARATION -> . ID COLON TYPE
    (215) empty -> .

    ID              shift and go to state 67
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    FUNC_PARAM                     shift and go to state 68
    ARG_DECLARATION                shift and go to state 69
    empty                          shift and go to state 70

state 61

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLASS_KWD       reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_I          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_F          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_S          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_B          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_O          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_V          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)


state 62

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (162) seen_array_def_dim -> . empty
    (215) empty -> .

    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_array_def_dim             shift and go to state 71
    empty                          shift and go to state 72

state 63

    (131) seen_cte_i -> empty .

    CLOSE_BRACKET   reduce using rule 131 (seen_cte_i -> empty .)
    STAR            reduce using rule 131 (seen_cte_i -> empty .)
    FWD_SLASH       reduce using rule 131 (seen_cte_i -> empty .)
    PLUS            reduce using rule 131 (seen_cte_i -> empty .)
    MINUS           reduce using rule 131 (seen_cte_i -> empty .)
    BIGGER          reduce using rule 131 (seen_cte_i -> empty .)
    BIGGER_EQ       reduce using rule 131 (seen_cte_i -> empty .)
    SMALLER         reduce using rule 131 (seen_cte_i -> empty .)
    SMALLER_EQ      reduce using rule 131 (seen_cte_i -> empty .)
    DOUBLE_EQUALS   reduce using rule 131 (seen_cte_i -> empty .)
    NOT_EQUALS      reduce using rule 131 (seen_cte_i -> empty .)
    AND             reduce using rule 131 (seen_cte_i -> empty .)
    OR              reduce using rule 131 (seen_cte_i -> empty .)
    SEMI_COLON      reduce using rule 131 (seen_cte_i -> empty .)
    CLOSE_PARENTHESIS reduce using rule 131 (seen_cte_i -> empty .)
    COMMA           reduce using rule 131 (seen_cte_i -> empty .)


state 64

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (7) seen_main_kwd -> . empty
    (215) empty -> .

    ID              reduce using rule 215 (empty -> .)
    READ_KWD        reduce using rule 215 (empty -> .)
    PRINT_KWD       reduce using rule 215 (empty -> .)
    PRINTLN_KWD     reduce using rule 215 (empty -> .)
    OPEN_KWD        reduce using rule 215 (empty -> .)
    WRITE_KWD       reduce using rule 215 (empty -> .)
    USING_KWD       reduce using rule 215 (empty -> .)
    RETURN_KWD      reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    IF_KWD          reduce using rule 215 (empty -> .)
    WHILE_KWD       reduce using rule 215 (empty -> .)
    FOR_KWD         reduce using rule 215 (empty -> .)
    CLOSE_CURLY     reduce using rule 215 (empty -> .)

    seen_main_kwd                  shift and go to state 73
    empty                          shift and go to state 74

state 65

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR . seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (12) seen_class_attr -> . empty
    (215) empty -> .

    TYPE_I          reduce using rule 215 (empty -> .)
    TYPE_F          reduce using rule 215 (empty -> .)
    TYPE_S          reduce using rule 215 (empty -> .)
    TYPE_B          reduce using rule 215 (empty -> .)
    TYPE_O          reduce using rule 215 (empty -> .)
    TYPE_V          reduce using rule 215 (empty -> .)
    CLOSE_CURLY     reduce using rule 215 (empty -> .)

    seen_class_attr                shift and go to state 75
    empty                          shift and go to state 76

state 66

    (13) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 77


state 67

    (38) ARG_DECLARATION -> ID . COLON TYPE

    COLON           shift and go to state 78


state 68

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 79


state 69

    (34) FUNC_PARAM -> ARG_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA ARG_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 81
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 80
    empty                          shift and go to state 82

state 70

    (35) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 35 (FUNC_PARAM -> empty .)


state 71

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_BRACKET   shift and go to state 83


state 72

    (162) seen_array_def_dim -> empty .

    CLOSE_BRACKET   reduce using rule 162 (seen_array_def_dim -> empty .)


state 73

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (215) empty -> .
    (70) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (73) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (74) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (75) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (76) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (187) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (57) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (59) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (56) USING -> . USING_KWD ID_LIST AS_KWD ID
    (63) FLOW_CONTROL -> . DECISION
    (64) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (193) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (199) REPETITION -> . CONDITIONAL_REP
    (200) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (201) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (204) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT_STAR                 shift and go to state 85
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 74

    (7) seen_main_kwd -> empty .

    ID              reduce using rule 7 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    PRINT_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    PRINTLN_KWD     reduce using rule 7 (seen_main_kwd -> empty .)
    OPEN_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    WRITE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    USING_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    RETURN_KWD      reduce using rule 7 (seen_main_kwd -> empty .)
    THIS_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 7 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 7 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 7 (seen_main_kwd -> empty .)


state 75

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr . FUNC_DEF_STAR CLOSE_CURLY
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (215) empty -> .
    (209) TYPE -> . TYPE_I
    (210) TYPE -> . TYPE_F
    (211) TYPE -> . TYPE_S
    (212) TYPE -> . TYPE_B
    (213) TYPE -> . TYPE_O
    (214) TYPE -> . TYPE_V

    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    FUNC_DEF_STAR                  shift and go to state 116
    FUNC_DEF                       shift and go to state 15
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 76

    (12) seen_class_attr -> empty .

    TYPE_I          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_F          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_S          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_B          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_O          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_V          reduce using rule 12 (seen_class_attr -> empty .)
    CLOSE_CURLY     reduce using rule 12 (seen_class_attr -> empty .)


state 77

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (215) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 117
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 78

    (38) ARG_DECLARATION -> ID COLON . TYPE
    (209) TYPE -> . TYPE_I
    (210) TYPE -> . TYPE_F
    (211) TYPE -> . TYPE_S
    (212) TYPE -> . TYPE_B
    (213) TYPE -> . TYPE_O
    (214) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 118

state 79

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (32) seen_func_params -> . empty
    (215) empty -> .

    VARS_KWD        reduce using rule 215 (empty -> .)

    seen_func_params               shift and go to state 119
    empty                          shift and go to state 120

state 80

    (34) FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 34 (FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P .)


state 81

    (36) FUNC_PARAM_P -> COMMA . ARG_DECLARATION FUNC_PARAM_P
    (38) ARG_DECLARATION -> . ID COLON TYPE

    ID              shift and go to state 67

    ARG_DECLARATION                shift and go to state 121

state 82

    (37) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 37 (FUNC_PARAM_P -> empty .)


state 83

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DECLARATION_P
    (159) ARRAY_DECLARATION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (160) ARRAY_DECLARATION_P -> . empty
    (215) empty -> .

    OPEN_BRACKET    shift and go to state 122
    COMMA           reduce using rule 215 (empty -> .)
    COLON           reduce using rule 215 (empty -> .)

    ARRAY_DECLARATION_P            shift and go to state 123
    empty                          shift and go to state 124

state 84

    (169) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (145) VAR -> ID .
    (142) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (152) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (171) seen_func_call_id -> . empty
    (155) seen_array_id -> . empty
    (215) empty -> .

    EQUALS          reduce using rule 145 (VAR -> ID .)
    PLUS_EQUALS     reduce using rule 145 (VAR -> ID .)
    MINUS_EQUALS    reduce using rule 145 (VAR -> ID .)
    TIMES_EQUALS    reduce using rule 145 (VAR -> ID .)
    OVER_EQUALS     reduce using rule 145 (VAR -> ID .)
    PLUS_PLUS       reduce using rule 145 (VAR -> ID .)
    MINUS_MINUS     reduce using rule 145 (VAR -> ID .)
    STAR            reduce using rule 145 (VAR -> ID .)
    FWD_SLASH       reduce using rule 145 (VAR -> ID .)
    PLUS            reduce using rule 145 (VAR -> ID .)
    MINUS           reduce using rule 145 (VAR -> ID .)
    BIGGER          reduce using rule 145 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 145 (VAR -> ID .)
    SMALLER         reduce using rule 145 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 145 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 145 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 145 (VAR -> ID .)
    AND             reduce using rule 145 (VAR -> ID .)
    OR              reduce using rule 145 (VAR -> ID .)
    SEMI_COLON      reduce using rule 145 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 145 (VAR -> ID .)
    COMMA           reduce using rule 145 (VAR -> ID .)
    CLOSE_BRACKET   reduce using rule 145 (VAR -> ID .)
    DOT             shift and go to state 126
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    OPEN_BRACKET    reduce using rule 215 (empty -> .)

    seen_func_call_id              shift and go to state 125
    seen_array_id                  shift and go to state 127
    empty                          shift and go to state 128

state 85

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 129


state 86

    (40) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (215) empty -> .
    (70) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (73) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (74) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (75) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (76) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (187) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (57) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (59) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (56) USING -> . USING_KWD ID_LIST AS_KWD ID
    (63) FLOW_CONTROL -> . DECISION
    (64) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (193) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (199) REPETITION -> . CONDITIONAL_REP
    (200) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (201) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (204) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT                      shift and go to state 86
    STATEMENT_STAR                 shift and go to state 130
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 87

    (41) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 41 (STATEMENT_STAR -> empty .)


state 88

    (42) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 131


state 89

    (43) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 132


state 90

    (44) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 133


state 91

    (45) STATEMENT -> PRINT . SEMI_COLON

    SEMI_COLON      shift and go to state 134


state 92

    (46) STATEMENT -> PRINTLN . SEMI_COLON

    SEMI_COLON      shift and go to state 135


state 93

    (47) STATEMENT -> OPEN . SEMI_COLON

    SEMI_COLON      shift and go to state 136


state 94

    (48) STATEMENT -> WRITE . SEMI_COLON

    SEMI_COLON      shift and go to state 137


state 95

    (49) STATEMENT -> USING . SEMI_COLON

    SEMI_COLON      shift and go to state 138


state 96

    (50) STATEMENT -> FLOW_CONTROL .

    ID              reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    READ_KWD        reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    PRINT_KWD       reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    PRINTLN_KWD     reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    OPEN_KWD        reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    WRITE_KWD       reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    USING_KWD       reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    RETURN_KWD      reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    THIS_KWD        reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    IF_KWD          reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    WHILE_KWD       reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    FOR_KWD         reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    CLOSE_CURLY     reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)


state 97

    (51) STATEMENT -> FUNC_RETURN .

    ID              reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    READ_KWD        reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    PRINT_KWD       reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    PRINTLN_KWD     reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    OPEN_KWD        reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    WRITE_KWD       reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    USING_KWD       reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    RETURN_KWD      reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    THIS_KWD        reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    IF_KWD          reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    WHILE_KWD       reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    FOR_KWD         reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    CLOSE_CURLY     reduce using rule 51 (STATEMENT -> FUNC_RETURN .)


state 98

    (70) ASSIGN -> VAR . seen_var_in_assign EQUALS seen_equals EXPRESSION
    (71) ASSIGN -> VAR . seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (72) ASSIGN -> VAR . seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (73) ASSIGN -> VAR . seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (74) ASSIGN -> VAR . seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (75) ASSIGN -> VAR . seen_var_in_assign PLUS_PLUS seen_plus_plus
    (76) ASSIGN -> VAR . seen_var_in_assign MINUS_MINUS seen_minus_minus
    (128) seen_var_in_assign -> . empty
    (215) empty -> .

    EQUALS          reduce using rule 215 (empty -> .)
    PLUS_EQUALS     reduce using rule 215 (empty -> .)
    MINUS_EQUALS    reduce using rule 215 (empty -> .)
    TIMES_EQUALS    reduce using rule 215 (empty -> .)
    OVER_EQUALS     reduce using rule 215 (empty -> .)
    PLUS_PLUS       reduce using rule 215 (empty -> .)
    MINUS_MINUS     reduce using rule 215 (empty -> .)

    seen_var_in_assign             shift and go to state 139
    empty                          shift and go to state 140

state 99

    (170) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (147) VAR -> CLASS_REFERENCE . VAR
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 84
    THIS_KWD        shift and go to state 110

    CLASS_REFERENCE                shift and go to state 99
    FUNC_CALL                      shift and go to state 141
    VAR                            shift and go to state 142
    ARRAY                          shift and go to state 109

state 100

    (184) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 143


state 101

    (185) PRINT -> PRINT_KWD . seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (186) seen_print_kwd -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_print_kwd                 shift and go to state 144
    empty                          shift and go to state 145

state 102

    (187) PRINTLN -> PRINTLN_KWD . seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (188) seen_println_kwd -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_println_kwd               shift and go to state 146
    empty                          shift and go to state 147

state 103

    (57) OPEN -> OPEN_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 148


state 104

    (59) WRITE -> WRITE_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 149


state 105

    (56) USING -> USING_KWD . ID_LIST AS_KWD ID
    (52) ID_LIST -> . ID ID_LIST_P

    ID              shift and go to state 151

    ID_LIST                        shift and go to state 150

state 106

    (63) FLOW_CONTROL -> DECISION .

    ID              reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    READ_KWD        reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    PRINT_KWD       reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    PRINTLN_KWD     reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    OPEN_KWD        reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    WRITE_KWD       reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    USING_KWD       reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    RETURN_KWD      reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    THIS_KWD        reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    IF_KWD          reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    WHILE_KWD       reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    FOR_KWD         reduce using rule 63 (FLOW_CONTROL -> DECISION .)
    CLOSE_CURLY     reduce using rule 63 (FLOW_CONTROL -> DECISION .)


state 107

    (64) FLOW_CONTROL -> REPETITION .

    ID              reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    READ_KWD        reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    PRINT_KWD       reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    PRINTLN_KWD     reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    OPEN_KWD        reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    WRITE_KWD       reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    USING_KWD       reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    RETURN_KWD      reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    THIS_KWD        reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    IF_KWD          reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    WHILE_KWD       reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    FOR_KWD         reduce using rule 64 (FLOW_CONTROL -> REPETITION .)
    CLOSE_CURLY     reduce using rule 64 (FLOW_CONTROL -> REPETITION .)


state 108

    (181) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> RETURN_KWD . SEMI_COLON
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    SEMI_COLON      shift and go to state 153
    ID              shift and go to state 156
    MINUS           shift and go to state 159
    THIS_KWD        shift and go to state 110
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 152
    FUNC_CALL                      shift and go to state 154
    EXP                            shift and go to state 155
    CLASS_REFERENCE                shift and go to state 99
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 109

    (146) VAR -> ARRAY .

    EQUALS          reduce using rule 146 (VAR -> ARRAY .)
    PLUS_EQUALS     reduce using rule 146 (VAR -> ARRAY .)
    MINUS_EQUALS    reduce using rule 146 (VAR -> ARRAY .)
    TIMES_EQUALS    reduce using rule 146 (VAR -> ARRAY .)
    OVER_EQUALS     reduce using rule 146 (VAR -> ARRAY .)
    PLUS_PLUS       reduce using rule 146 (VAR -> ARRAY .)
    MINUS_MINUS     reduce using rule 146 (VAR -> ARRAY .)
    STAR            reduce using rule 146 (VAR -> ARRAY .)
    FWD_SLASH       reduce using rule 146 (VAR -> ARRAY .)
    PLUS            reduce using rule 146 (VAR -> ARRAY .)
    MINUS           reduce using rule 146 (VAR -> ARRAY .)
    BIGGER          reduce using rule 146 (VAR -> ARRAY .)
    BIGGER_EQ       reduce using rule 146 (VAR -> ARRAY .)
    SMALLER         reduce using rule 146 (VAR -> ARRAY .)
    SMALLER_EQ      reduce using rule 146 (VAR -> ARRAY .)
    DOUBLE_EQUALS   reduce using rule 146 (VAR -> ARRAY .)
    NOT_EQUALS      reduce using rule 146 (VAR -> ARRAY .)
    AND             reduce using rule 146 (VAR -> ARRAY .)
    OR              reduce using rule 146 (VAR -> ARRAY .)
    SEMI_COLON      reduce using rule 146 (VAR -> ARRAY .)
    CLOSE_PARENTHESIS reduce using rule 146 (VAR -> ARRAY .)
    COMMA           reduce using rule 146 (VAR -> ARRAY .)
    CLOSE_BRACKET   reduce using rule 146 (VAR -> ARRAY .)


state 110

    (143) CLASS_REFERENCE -> THIS_KWD . seen_this_kwd DOT seen_this_dot_operator
    (144) seen_this_kwd -> . empty
    (215) empty -> .

    DOT             reduce using rule 215 (empty -> .)

    seen_this_kwd                  shift and go to state 176
    empty                          shift and go to state 177

state 111

    (193) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 178


state 112

    (199) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    USING_KWD       reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    THIS_KWD        reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 199 (REPETITION -> CONDITIONAL_REP .)


state 113

    (200) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    USING_KWD       reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    THIS_KWD        reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 200 (REPETITION -> UNCONDITIONAL_REP .)


state 114

    (201) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (202) seen_while_kwd -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_while_kwd                 shift and go to state 179
    empty                          shift and go to state 180

state 115

    (204) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 181


state 116

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 182


state 117

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 183


state 118

    (38) ARG_DECLARATION -> ID COLON TYPE .

    COMMA           reduce using rule 38 (ARG_DECLARATION -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 38 (ARG_DECLARATION -> ID COLON TYPE .)


state 119

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (39) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 185

    VARS                           shift and go to state 184

state 120

    (32) seen_func_params -> empty .

    VARS_KWD        reduce using rule 32 (seen_func_params -> empty .)


state 121

    (36) FUNC_PARAM_P -> COMMA ARG_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA ARG_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 81
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 186
    empty                          shift and go to state 82

state 122

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CTE_I           shift and go to state 187


state 123

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .

    COMMA           reduce using rule 158 (ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)
    COLON           reduce using rule 158 (ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)


state 124

    (160) ARRAY_DECLARATION_P -> empty .

    COMMA           reduce using rule 160 (ARRAY_DECLARATION_P -> empty .)
    COLON           reduce using rule 160 (ARRAY_DECLARATION_P -> empty .)


state 125

    (169) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 188


state 126

    (142) CLASS_REFERENCE -> ID DOT . seen_dot_operator
    (150) seen_dot_operator -> . empty
    (215) empty -> .

    ID              reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)

    seen_dot_operator              shift and go to state 189
    empty                          shift and go to state 190

state 127

    (152) ARRAY -> ID seen_array_id . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_BRACKET    shift and go to state 191


state 128

    (171) seen_func_call_id -> empty .
    (155) seen_array_id -> empty .

    OPEN_PARENTHESIS reduce using rule 171 (seen_func_call_id -> empty .)
    OPEN_BRACKET    reduce using rule 155 (seen_array_id -> empty .)


state 129

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 130

    (40) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 40 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 131

    (42) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINT_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    OPEN_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WRITE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    USING_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    RETURN_KWD      reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    THIS_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)


state 132

    (43) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    USING_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 133

    (44) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINT_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    OPEN_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WRITE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    USING_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    RETURN_KWD      reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    THIS_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)


state 134

    (45) STATEMENT -> PRINT SEMI_COLON .

    ID              reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    READ_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINT_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    OPEN_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WRITE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    USING_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    RETURN_KWD      reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    THIS_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    IF_KWD          reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WHILE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    FOR_KWD         reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)


state 135

    (46) STATEMENT -> PRINTLN SEMI_COLON .

    ID              reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    READ_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINT_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    OPEN_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WRITE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    USING_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    RETURN_KWD      reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    THIS_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    IF_KWD          reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WHILE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    FOR_KWD         reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)


state 136

    (47) STATEMENT -> OPEN SEMI_COLON .

    ID              reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    READ_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINT_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    OPEN_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    WRITE_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    USING_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    RETURN_KWD      reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    THIS_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    IF_KWD          reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    WHILE_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    FOR_KWD         reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)


state 137

    (48) STATEMENT -> WRITE SEMI_COLON .

    ID              reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    READ_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    PRINT_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    OPEN_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    WRITE_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    USING_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    RETURN_KWD      reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    THIS_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    IF_KWD          reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    WHILE_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    FOR_KWD         reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)


state 138

    (49) STATEMENT -> USING SEMI_COLON .

    ID              reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    READ_KWD        reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    PRINT_KWD       reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    OPEN_KWD        reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    WRITE_KWD       reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    USING_KWD       reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    RETURN_KWD      reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    THIS_KWD        reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    IF_KWD          reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    WHILE_KWD       reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    FOR_KWD         reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)


state 139

    (70) ASSIGN -> VAR seen_var_in_assign . EQUALS seen_equals EXPRESSION
    (71) ASSIGN -> VAR seen_var_in_assign . PLUS_EQUALS seen_plus_equals EXPRESSION
    (72) ASSIGN -> VAR seen_var_in_assign . MINUS_EQUALS seen_minus_equals EXPRESSION
    (73) ASSIGN -> VAR seen_var_in_assign . TIMES_EQUALS seen_times_equals EXPRESSION
    (74) ASSIGN -> VAR seen_var_in_assign . OVER_EQUALS seen_over_equals EXPRESSION
    (75) ASSIGN -> VAR seen_var_in_assign . PLUS_PLUS seen_plus_plus
    (76) ASSIGN -> VAR seen_var_in_assign . MINUS_MINUS seen_minus_minus

    EQUALS          shift and go to state 192
    PLUS_EQUALS     shift and go to state 193
    MINUS_EQUALS    shift and go to state 194
    TIMES_EQUALS    shift and go to state 195
    OVER_EQUALS     shift and go to state 196
    PLUS_PLUS       shift and go to state 197
    MINUS_MINUS     shift and go to state 198


state 140

    (128) seen_var_in_assign -> empty .

    EQUALS          reduce using rule 128 (seen_var_in_assign -> empty .)
    PLUS_EQUALS     reduce using rule 128 (seen_var_in_assign -> empty .)
    MINUS_EQUALS    reduce using rule 128 (seen_var_in_assign -> empty .)
    TIMES_EQUALS    reduce using rule 128 (seen_var_in_assign -> empty .)
    OVER_EQUALS     reduce using rule 128 (seen_var_in_assign -> empty .)
    PLUS_PLUS       reduce using rule 128 (seen_var_in_assign -> empty .)
    MINUS_MINUS     reduce using rule 128 (seen_var_in_assign -> empty .)
    COMMA           reduce using rule 128 (seen_var_in_assign -> empty .)
    CLOSE_PARENTHESIS reduce using rule 128 (seen_var_in_assign -> empty .)


state 141

    (170) FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .

    SEMI_COLON      reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    STAR            reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    FWD_SLASH       reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    PLUS            reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    MINUS           reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER          reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER_EQ       reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER         reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER_EQ      reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    NOT_EQUALS      reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    AND             reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    OR              reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    COMMA           reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)


state 142

    (147) VAR -> CLASS_REFERENCE VAR .

    EQUALS          reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    PLUS_EQUALS     reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    MINUS_EQUALS    reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    TIMES_EQUALS    reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    OVER_EQUALS     reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    PLUS_PLUS       reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    MINUS_MINUS     reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    STAR            reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    FWD_SLASH       reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    PLUS            reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    MINUS           reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER          reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER_EQ       reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER         reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER_EQ      reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    DOUBLE_EQUALS   reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    NOT_EQUALS      reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    AND             reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    OR              reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    SEMI_COLON      reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_PARENTHESIS reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    COMMA           reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_BRACKET   reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)


state 143

    (184) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (23) READABLE_LIST -> . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 201
    THIS_KWD        shift and go to state 110

    READABLE_LIST                  shift and go to state 199
    VAR                            shift and go to state 200
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 202

state 144

    (185) PRINT -> PRINT_KWD seen_print_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 203


state 145

    (186) seen_print_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 186 (seen_print_kwd -> empty .)


state 146

    (187) PRINTLN -> PRINTLN_KWD seen_println_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 204


state 147

    (188) seen_println_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 188 (seen_println_kwd -> empty .)


state 148

    (57) OPEN -> OPEN_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 201
    THIS_KWD        shift and go to state 110

    VAR                            shift and go to state 205
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 202

state 149

    (59) WRITE -> WRITE_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 201
    THIS_KWD        shift and go to state 110

    VAR                            shift and go to state 206
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 202

state 150

    (56) USING -> USING_KWD ID_LIST . AS_KWD ID

    AS_KWD          shift and go to state 207


state 151

    (52) ID_LIST -> ID . ID_LIST_P
    (53) ID_LIST_P -> . COMMA ID ID_LIST_P
    (54) ID_LIST_P -> . COMMA
    (55) ID_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 209
    AS_KWD          reduce using rule 215 (empty -> .)

    ID_LIST_P                      shift and go to state 208
    empty                          shift and go to state 210

state 152

    (181) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 211


state 153

    (183) FUNC_RETURN -> RETURN_KWD SEMI_COLON .

    ID              reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    READ_KWD        reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINT_KWD       reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    OPEN_KWD        reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WRITE_KWD       reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    USING_KWD       reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    RETURN_KWD      reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    THIS_KWD        reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    IF_KWD          reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WHILE_KWD       reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    FOR_KWD         reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)


state 154

    (182) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (110) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 212
    STAR            reduce using rule 110 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 110 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 110 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 110 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 110 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 110 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 110 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 110 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 110 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 110 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 110 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 110 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 110 (FACTOR -> FUNC_CALL .) ]


state 155

    (91) EXPRESSION -> EXP .
    (92) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (95) COMP -> . BIGGER
    (96) COMP -> . BIGGER_EQ
    (97) COMP -> . SMALLER
    (98) COMP -> . SMALLER_EQ
    (99) COMP -> . DOUBLE_EQUALS
    (100) COMP -> . NOT_EQUALS
    (101) COMP -> . AND
    (102) COMP -> . OR

    SEMI_COLON      reduce using rule 91 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 91 (EXPRESSION -> EXP .)
    COMMA           reduce using rule 91 (EXPRESSION -> EXP .)
    CLOSE_BRACKET   reduce using rule 91 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 214
    BIGGER_EQ       shift and go to state 215
    SMALLER         shift and go to state 216
    SMALLER_EQ      shift and go to state 217
    DOUBLE_EQUALS   shift and go to state 218
    NOT_EQUALS      shift and go to state 219
    AND             shift and go to state 220
    OR              shift and go to state 221

    COMP                           shift and go to state 213

state 156

    (169) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (142) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (145) VAR -> ID .
    (152) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (171) seen_func_call_id -> . empty
    (155) seen_array_id -> . empty
    (215) empty -> .

    DOT             shift and go to state 126
    STAR            reduce using rule 145 (VAR -> ID .)
    FWD_SLASH       reduce using rule 145 (VAR -> ID .)
    PLUS            reduce using rule 145 (VAR -> ID .)
    MINUS           reduce using rule 145 (VAR -> ID .)
    BIGGER          reduce using rule 145 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 145 (VAR -> ID .)
    SMALLER         reduce using rule 145 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 145 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 145 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 145 (VAR -> ID .)
    AND             reduce using rule 145 (VAR -> ID .)
    OR              reduce using rule 145 (VAR -> ID .)
    SEMI_COLON      reduce using rule 145 (VAR -> ID .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    OPEN_BRACKET    reduce using rule 215 (empty -> .)

    seen_func_call_id              shift and go to state 125
    seen_array_id                  shift and go to state 127
    empty                          shift and go to state 128

state 157

    (103) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (126) seen_open_parenthesis -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_open_parenthesis          shift and go to state 222
    empty                          shift and go to state 223

state 158

    (84) EXP -> TERM . seen_term EXP_P
    (86) seen_term -> .

    PLUS            reduce using rule 86 (seen_term -> .)
    MINUS           reduce using rule 86 (seen_term -> .)
    BIGGER          reduce using rule 86 (seen_term -> .)
    BIGGER_EQ       reduce using rule 86 (seen_term -> .)
    SMALLER         reduce using rule 86 (seen_term -> .)
    SMALLER_EQ      reduce using rule 86 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 86 (seen_term -> .)
    NOT_EQUALS      reduce using rule 86 (seen_term -> .)
    AND             reduce using rule 86 (seen_term -> .)
    OR              reduce using rule 86 (seen_term -> .)
    SEMI_COLON      reduce using rule 86 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 86 (seen_term -> .)
    COMMA           reduce using rule 86 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 86 (seen_term -> .)

    seen_term                      shift and go to state 224

state 159

    (85) EXP -> MINUS . seen_unary_minus EXP pop_unary_minus
    (105) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (125) seen_unary_minus -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_unary_minus               shift and go to state 225
    empty                          shift and go to state 226

state 160

    (163) TERM -> FACTOR . seen_factor TERM_P
    (167) seen_factor -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_factor                    shift and go to state 227
    empty                          shift and go to state 228

state 161

    (104) FACTOR -> NOT . seen_not FACTOR pop_not
    (123) seen_not -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_not                       shift and go to state 229
    empty                          shift and go to state 230

state 162

    (106) FACTOR -> STOI_KWD . seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (119) seen_stoi_kwd -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_stoi_kwd                  shift and go to state 231
    empty                          shift and go to state 232

state 163

    (107) FACTOR -> STOF_KWD . seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (120) seen_stof_kwd -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_stof_kwd                  shift and go to state 233
    empty                          shift and go to state 234

state 164

    (108) FACTOR -> STOB_KWD . seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (121) seen_stob_kwd -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_stob_kwd                  shift and go to state 235
    empty                          shift and go to state 236

state 165

    (109) FACTOR -> SUBSTR_KWD . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    OPEN_PARENTHESIS shift and go to state 237


state 166

    (111) FACTOR -> CLASS_INSTANCE .

    STAR            reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    FWD_SLASH       reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    PLUS            reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    MINUS           reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    BIGGER          reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    BIGGER_EQ       reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    SMALLER         reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    SMALLER_EQ      reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    DOUBLE_EQUALS   reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    NOT_EQUALS      reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    AND             reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    OR              reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    SEMI_COLON      reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_PARENTHESIS reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    COMMA           reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_BRACKET   reduce using rule 111 (FACTOR -> CLASS_INSTANCE .)


state 167

    (112) FACTOR -> VAR . seen_var_as_factor
    (129) seen_var_as_factor -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_var_as_factor             shift and go to state 238
    empty                          shift and go to state 239

state 168

    (113) FACTOR -> CONSTANT .

    STAR            reduce using rule 113 (FACTOR -> CONSTANT .)
    FWD_SLASH       reduce using rule 113 (FACTOR -> CONSTANT .)
    PLUS            reduce using rule 113 (FACTOR -> CONSTANT .)
    MINUS           reduce using rule 113 (FACTOR -> CONSTANT .)
    BIGGER          reduce using rule 113 (FACTOR -> CONSTANT .)
    BIGGER_EQ       reduce using rule 113 (FACTOR -> CONSTANT .)
    SMALLER         reduce using rule 113 (FACTOR -> CONSTANT .)
    SMALLER_EQ      reduce using rule 113 (FACTOR -> CONSTANT .)
    DOUBLE_EQUALS   reduce using rule 113 (FACTOR -> CONSTANT .)
    NOT_EQUALS      reduce using rule 113 (FACTOR -> CONSTANT .)
    AND             reduce using rule 113 (FACTOR -> CONSTANT .)
    OR              reduce using rule 113 (FACTOR -> CONSTANT .)
    SEMI_COLON      reduce using rule 113 (FACTOR -> CONSTANT .)
    CLOSE_PARENTHESIS reduce using rule 113 (FACTOR -> CONSTANT .)
    COMMA           reduce using rule 113 (FACTOR -> CONSTANT .)
    CLOSE_BRACKET   reduce using rule 113 (FACTOR -> CONSTANT .)


state 169

    (148) CLASS_INSTANCE -> NEW_KWD . ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS

    ID              shift and go to state 240


state 170

    (136) CONSTANT -> CTE_I . seen_cte_i
    (131) seen_cte_i -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_cte_i                     shift and go to state 241
    empty                          shift and go to state 63

state 171

    (137) CONSTANT -> CTE_F . seen_cte_f
    (132) seen_cte_f -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_cte_f                     shift and go to state 242
    empty                          shift and go to state 243

state 172

    (138) CONSTANT -> CTE_S . seen_cte_s
    (133) seen_cte_s -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_cte_s                     shift and go to state 244
    empty                          shift and go to state 245

state 173

    (139) CONSTANT -> CTE_B .

    STAR            reduce using rule 139 (CONSTANT -> CTE_B .)
    FWD_SLASH       reduce using rule 139 (CONSTANT -> CTE_B .)
    PLUS            reduce using rule 139 (CONSTANT -> CTE_B .)
    MINUS           reduce using rule 139 (CONSTANT -> CTE_B .)
    BIGGER          reduce using rule 139 (CONSTANT -> CTE_B .)
    BIGGER_EQ       reduce using rule 139 (CONSTANT -> CTE_B .)
    SMALLER         reduce using rule 139 (CONSTANT -> CTE_B .)
    SMALLER_EQ      reduce using rule 139 (CONSTANT -> CTE_B .)
    DOUBLE_EQUALS   reduce using rule 139 (CONSTANT -> CTE_B .)
    NOT_EQUALS      reduce using rule 139 (CONSTANT -> CTE_B .)
    AND             reduce using rule 139 (CONSTANT -> CTE_B .)
    OR              reduce using rule 139 (CONSTANT -> CTE_B .)
    SEMI_COLON      reduce using rule 139 (CONSTANT -> CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 139 (CONSTANT -> CTE_B .)
    COMMA           reduce using rule 139 (CONSTANT -> CTE_B .)
    CLOSE_BRACKET   reduce using rule 139 (CONSTANT -> CTE_B .)


state 174

    (140) CTE_B -> CTE_TRUE . seen_cte_true
    (135) seen_cte_true -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_cte_true                  shift and go to state 246
    empty                          shift and go to state 247

state 175

    (141) CTE_B -> CTE_FALSE . seen_cte_false
    (134) seen_cte_false -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_cte_false                 shift and go to state 248
    empty                          shift and go to state 249

state 176

    (143) CLASS_REFERENCE -> THIS_KWD seen_this_kwd . DOT seen_this_dot_operator

    DOT             shift and go to state 250


state 177

    (144) seen_this_kwd -> empty .

    DOT             reduce using rule 144 (seen_this_kwd -> empty .)


state 178

    (193) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 251
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 179

    (201) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 253


state 180

    (202) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 202 (seen_while_kwd -> empty .)


state 181

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 201
    THIS_KWD        shift and go to state 110

    VAR                            shift and go to state 254
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 202

state 182

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_I          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)


state 183

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 184

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (33) seen_func_vars -> . empty
    (215) empty -> .

    OPEN_CURLY      reduce using rule 215 (empty -> .)

    seen_func_vars                 shift and go to state 255
    empty                          shift and go to state 256

state 185

    (39) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 257


state 186

    (36) FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 36 (FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P .)


state 187

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (131) seen_cte_i -> . empty
    (215) empty -> .

    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_cte_i                     shift and go to state 258
    empty                          shift and go to state 63

state 188

    (169) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (172) ARG_LIST -> . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (173) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (174) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (175) ARG_LIST -> . empty
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (215) empty -> .
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    ID              shift and go to state 259
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    THIS_KWD        shift and go to state 110
    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    ARG_LIST                       shift and go to state 260
    VAR                            shift and go to state 261
    EXPRESSION                     shift and go to state 262
    FUNC_CALL                      shift and go to state 263
    empty                          shift and go to state 264
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 265
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CTE_B                          shift and go to state 173

state 189

    (142) CLASS_REFERENCE -> ID DOT seen_dot_operator .

    ID              reduce using rule 142 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)
    THIS_KWD        reduce using rule 142 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)


state 190

    (150) seen_dot_operator -> empty .

    ID              reduce using rule 150 (seen_dot_operator -> empty .)
    THIS_KWD        reduce using rule 150 (seen_dot_operator -> empty .)


state 191

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (156) seen_open_bracket -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_open_bracket              shift and go to state 266
    empty                          shift and go to state 267

state 192

    (70) ASSIGN -> VAR seen_var_in_assign EQUALS . seen_equals EXPRESSION
    (77) seen_equals -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_equals                    shift and go to state 268
    empty                          shift and go to state 269

state 193

    (71) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS . seen_plus_equals EXPRESSION
    (78) seen_plus_equals -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_plus_equals               shift and go to state 270
    empty                          shift and go to state 271

state 194

    (72) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS . seen_minus_equals EXPRESSION
    (79) seen_minus_equals -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_minus_equals              shift and go to state 272
    empty                          shift and go to state 273

state 195

    (73) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS . seen_times_equals EXPRESSION
    (80) seen_times_equals -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_times_equals              shift and go to state 274
    empty                          shift and go to state 275

state 196

    (74) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS . seen_over_equals EXPRESSION
    (81) seen_over_equals -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_over_equals               shift and go to state 276
    empty                          shift and go to state 277

state 197

    (75) ASSIGN -> VAR seen_var_in_assign PLUS_PLUS . seen_plus_plus
    (82) seen_plus_plus -> . empty
    (215) empty -> .

    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_plus_plus                 shift and go to state 278
    empty                          shift and go to state 279

state 198

    (76) ASSIGN -> VAR seen_var_in_assign MINUS_MINUS . seen_minus_minus
    (83) seen_minus_minus -> . empty
    (215) empty -> .

    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_minus_minus               shift and go to state 280
    empty                          shift and go to state 281

state 199

    (184) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 282


state 200

    (23) READABLE_LIST -> VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (128) seen_var_in_assign -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_var_in_assign             shift and go to state 283
    empty                          shift and go to state 140

state 201

    (145) VAR -> ID .
    (152) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (142) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (155) seen_array_id -> . empty
    (215) empty -> .

    COMMA           reduce using rule 145 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 145 (VAR -> ID .)
    EQUALS          reduce using rule 145 (VAR -> ID .)
    DOT             shift and go to state 126
    OPEN_BRACKET    reduce using rule 215 (empty -> .)

    seen_array_id                  shift and go to state 127
    empty                          shift and go to state 284

state 202

    (147) VAR -> CLASS_REFERENCE . VAR
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 201
    THIS_KWD        shift and go to state 110

    CLASS_REFERENCE                shift and go to state 202
    VAR                            shift and go to state 142
    ARRAY                          shift and go to state 109

state 203

    (185) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (189) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    PRINTABLE                      shift and go to state 285
    EXPRESSION                     shift and go to state 286
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 204

    (187) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (189) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    PRINTABLE                      shift and go to state 287
    EXPRESSION                     shift and go to state 286
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 205

    (57) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (130) seen_var_in_io -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)

    seen_var_in_io                 shift and go to state 288
    empty                          shift and go to state 289

state 206

    (59) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (130) seen_var_in_io -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)

    seen_var_in_io                 shift and go to state 290
    empty                          shift and go to state 289

state 207

    (56) USING -> USING_KWD ID_LIST AS_KWD . ID

    ID              shift and go to state 291


state 208

    (52) ID_LIST -> ID ID_LIST_P .

    AS_KWD          reduce using rule 52 (ID_LIST -> ID ID_LIST_P .)


state 209

    (53) ID_LIST_P -> COMMA . ID ID_LIST_P
    (54) ID_LIST_P -> COMMA .

    ID              shift and go to state 292
    AS_KWD          reduce using rule 54 (ID_LIST_P -> COMMA .)


state 210

    (55) ID_LIST_P -> empty .

    AS_KWD          reduce using rule 55 (ID_LIST_P -> empty .)


state 211

    (181) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINT_KWD       reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    OPEN_KWD        reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    USING_KWD       reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    THIS_KWD        reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 212

    (182) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    ID              reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    USING_KWD       reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 213

    (92) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (94) seen_comp_op -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_comp_op                   shift and go to state 293
    empty                          shift and go to state 294

state 214

    (95) COMP -> BIGGER .

    MINUS           reduce using rule 95 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 95 (COMP -> BIGGER .)
    NOT             reduce using rule 95 (COMP -> BIGGER .)
    STOI_KWD        reduce using rule 95 (COMP -> BIGGER .)
    STOF_KWD        reduce using rule 95 (COMP -> BIGGER .)
    STOB_KWD        reduce using rule 95 (COMP -> BIGGER .)
    SUBSTR_KWD      reduce using rule 95 (COMP -> BIGGER .)
    ID              reduce using rule 95 (COMP -> BIGGER .)
    NEW_KWD         reduce using rule 95 (COMP -> BIGGER .)
    CTE_I           reduce using rule 95 (COMP -> BIGGER .)
    CTE_F           reduce using rule 95 (COMP -> BIGGER .)
    CTE_S           reduce using rule 95 (COMP -> BIGGER .)
    THIS_KWD        reduce using rule 95 (COMP -> BIGGER .)
    CTE_TRUE        reduce using rule 95 (COMP -> BIGGER .)
    CTE_FALSE       reduce using rule 95 (COMP -> BIGGER .)


state 215

    (96) COMP -> BIGGER_EQ .

    MINUS           reduce using rule 96 (COMP -> BIGGER_EQ .)
    OPEN_PARENTHESIS reduce using rule 96 (COMP -> BIGGER_EQ .)
    NOT             reduce using rule 96 (COMP -> BIGGER_EQ .)
    STOI_KWD        reduce using rule 96 (COMP -> BIGGER_EQ .)
    STOF_KWD        reduce using rule 96 (COMP -> BIGGER_EQ .)
    STOB_KWD        reduce using rule 96 (COMP -> BIGGER_EQ .)
    SUBSTR_KWD      reduce using rule 96 (COMP -> BIGGER_EQ .)
    ID              reduce using rule 96 (COMP -> BIGGER_EQ .)
    NEW_KWD         reduce using rule 96 (COMP -> BIGGER_EQ .)
    CTE_I           reduce using rule 96 (COMP -> BIGGER_EQ .)
    CTE_F           reduce using rule 96 (COMP -> BIGGER_EQ .)
    CTE_S           reduce using rule 96 (COMP -> BIGGER_EQ .)
    THIS_KWD        reduce using rule 96 (COMP -> BIGGER_EQ .)
    CTE_TRUE        reduce using rule 96 (COMP -> BIGGER_EQ .)
    CTE_FALSE       reduce using rule 96 (COMP -> BIGGER_EQ .)


state 216

    (97) COMP -> SMALLER .

    MINUS           reduce using rule 97 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 97 (COMP -> SMALLER .)
    NOT             reduce using rule 97 (COMP -> SMALLER .)
    STOI_KWD        reduce using rule 97 (COMP -> SMALLER .)
    STOF_KWD        reduce using rule 97 (COMP -> SMALLER .)
    STOB_KWD        reduce using rule 97 (COMP -> SMALLER .)
    SUBSTR_KWD      reduce using rule 97 (COMP -> SMALLER .)
    ID              reduce using rule 97 (COMP -> SMALLER .)
    NEW_KWD         reduce using rule 97 (COMP -> SMALLER .)
    CTE_I           reduce using rule 97 (COMP -> SMALLER .)
    CTE_F           reduce using rule 97 (COMP -> SMALLER .)
    CTE_S           reduce using rule 97 (COMP -> SMALLER .)
    THIS_KWD        reduce using rule 97 (COMP -> SMALLER .)
    CTE_TRUE        reduce using rule 97 (COMP -> SMALLER .)
    CTE_FALSE       reduce using rule 97 (COMP -> SMALLER .)


state 217

    (98) COMP -> SMALLER_EQ .

    MINUS           reduce using rule 98 (COMP -> SMALLER_EQ .)
    OPEN_PARENTHESIS reduce using rule 98 (COMP -> SMALLER_EQ .)
    NOT             reduce using rule 98 (COMP -> SMALLER_EQ .)
    STOI_KWD        reduce using rule 98 (COMP -> SMALLER_EQ .)
    STOF_KWD        reduce using rule 98 (COMP -> SMALLER_EQ .)
    STOB_KWD        reduce using rule 98 (COMP -> SMALLER_EQ .)
    SUBSTR_KWD      reduce using rule 98 (COMP -> SMALLER_EQ .)
    ID              reduce using rule 98 (COMP -> SMALLER_EQ .)
    NEW_KWD         reduce using rule 98 (COMP -> SMALLER_EQ .)
    CTE_I           reduce using rule 98 (COMP -> SMALLER_EQ .)
    CTE_F           reduce using rule 98 (COMP -> SMALLER_EQ .)
    CTE_S           reduce using rule 98 (COMP -> SMALLER_EQ .)
    THIS_KWD        reduce using rule 98 (COMP -> SMALLER_EQ .)
    CTE_TRUE        reduce using rule 98 (COMP -> SMALLER_EQ .)
    CTE_FALSE       reduce using rule 98 (COMP -> SMALLER_EQ .)


state 218

    (99) COMP -> DOUBLE_EQUALS .

    MINUS           reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    NOT             reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    STOI_KWD        reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    STOF_KWD        reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    STOB_KWD        reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    SUBSTR_KWD      reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    NEW_KWD         reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    THIS_KWD        reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    CTE_TRUE        reduce using rule 99 (COMP -> DOUBLE_EQUALS .)
    CTE_FALSE       reduce using rule 99 (COMP -> DOUBLE_EQUALS .)


state 219

    (100) COMP -> NOT_EQUALS .

    MINUS           reduce using rule 100 (COMP -> NOT_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 100 (COMP -> NOT_EQUALS .)
    NOT             reduce using rule 100 (COMP -> NOT_EQUALS .)
    STOI_KWD        reduce using rule 100 (COMP -> NOT_EQUALS .)
    STOF_KWD        reduce using rule 100 (COMP -> NOT_EQUALS .)
    STOB_KWD        reduce using rule 100 (COMP -> NOT_EQUALS .)
    SUBSTR_KWD      reduce using rule 100 (COMP -> NOT_EQUALS .)
    ID              reduce using rule 100 (COMP -> NOT_EQUALS .)
    NEW_KWD         reduce using rule 100 (COMP -> NOT_EQUALS .)
    CTE_I           reduce using rule 100 (COMP -> NOT_EQUALS .)
    CTE_F           reduce using rule 100 (COMP -> NOT_EQUALS .)
    CTE_S           reduce using rule 100 (COMP -> NOT_EQUALS .)
    THIS_KWD        reduce using rule 100 (COMP -> NOT_EQUALS .)
    CTE_TRUE        reduce using rule 100 (COMP -> NOT_EQUALS .)
    CTE_FALSE       reduce using rule 100 (COMP -> NOT_EQUALS .)


state 220

    (101) COMP -> AND .

    MINUS           reduce using rule 101 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 101 (COMP -> AND .)
    NOT             reduce using rule 101 (COMP -> AND .)
    STOI_KWD        reduce using rule 101 (COMP -> AND .)
    STOF_KWD        reduce using rule 101 (COMP -> AND .)
    STOB_KWD        reduce using rule 101 (COMP -> AND .)
    SUBSTR_KWD      reduce using rule 101 (COMP -> AND .)
    ID              reduce using rule 101 (COMP -> AND .)
    NEW_KWD         reduce using rule 101 (COMP -> AND .)
    CTE_I           reduce using rule 101 (COMP -> AND .)
    CTE_F           reduce using rule 101 (COMP -> AND .)
    CTE_S           reduce using rule 101 (COMP -> AND .)
    THIS_KWD        reduce using rule 101 (COMP -> AND .)
    CTE_TRUE        reduce using rule 101 (COMP -> AND .)
    CTE_FALSE       reduce using rule 101 (COMP -> AND .)


state 221

    (102) COMP -> OR .

    MINUS           reduce using rule 102 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 102 (COMP -> OR .)
    NOT             reduce using rule 102 (COMP -> OR .)
    STOI_KWD        reduce using rule 102 (COMP -> OR .)
    STOF_KWD        reduce using rule 102 (COMP -> OR .)
    STOB_KWD        reduce using rule 102 (COMP -> OR .)
    SUBSTR_KWD      reduce using rule 102 (COMP -> OR .)
    ID              reduce using rule 102 (COMP -> OR .)
    NEW_KWD         reduce using rule 102 (COMP -> OR .)
    CTE_I           reduce using rule 102 (COMP -> OR .)
    CTE_F           reduce using rule 102 (COMP -> OR .)
    CTE_S           reduce using rule 102 (COMP -> OR .)
    THIS_KWD        reduce using rule 102 (COMP -> OR .)
    CTE_TRUE        reduce using rule 102 (COMP -> OR .)
    CTE_FALSE       reduce using rule 102 (COMP -> OR .)


state 222

    (103) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 295
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 223

    (126) seen_open_parenthesis -> empty .

    MINUS           reduce using rule 126 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 126 (seen_open_parenthesis -> empty .)
    NOT             reduce using rule 126 (seen_open_parenthesis -> empty .)
    STOI_KWD        reduce using rule 126 (seen_open_parenthesis -> empty .)
    STOF_KWD        reduce using rule 126 (seen_open_parenthesis -> empty .)
    STOB_KWD        reduce using rule 126 (seen_open_parenthesis -> empty .)
    SUBSTR_KWD      reduce using rule 126 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 126 (seen_open_parenthesis -> empty .)
    NEW_KWD         reduce using rule 126 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 126 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 126 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 126 (seen_open_parenthesis -> empty .)
    THIS_KWD        reduce using rule 126 (seen_open_parenthesis -> empty .)
    CTE_TRUE        reduce using rule 126 (seen_open_parenthesis -> empty .)
    CTE_FALSE       reduce using rule 126 (seen_open_parenthesis -> empty .)


state 224

    (84) EXP -> TERM seen_term . EXP_P
    (87) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (88) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (89) EXP_P -> . empty
    (215) empty -> .

    PLUS            shift and go to state 297
    MINUS           shift and go to state 298
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    EXP_P                          shift and go to state 296
    empty                          shift and go to state 299

state 225

    (85) EXP -> MINUS seen_unary_minus . EXP pop_unary_minus
    (105) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (163) TERM -> . FACTOR seen_factor TERM_P
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXP                            shift and go to state 300
    FACTOR                         shift and go to state 301
    TERM                           shift and go to state 158
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 226

    (125) seen_unary_minus -> empty .

    MINUS           reduce using rule 125 (seen_unary_minus -> empty .)
    OPEN_PARENTHESIS reduce using rule 125 (seen_unary_minus -> empty .)
    NOT             reduce using rule 125 (seen_unary_minus -> empty .)
    STOI_KWD        reduce using rule 125 (seen_unary_minus -> empty .)
    STOF_KWD        reduce using rule 125 (seen_unary_minus -> empty .)
    STOB_KWD        reduce using rule 125 (seen_unary_minus -> empty .)
    SUBSTR_KWD      reduce using rule 125 (seen_unary_minus -> empty .)
    ID              reduce using rule 125 (seen_unary_minus -> empty .)
    NEW_KWD         reduce using rule 125 (seen_unary_minus -> empty .)
    CTE_I           reduce using rule 125 (seen_unary_minus -> empty .)
    CTE_F           reduce using rule 125 (seen_unary_minus -> empty .)
    CTE_S           reduce using rule 125 (seen_unary_minus -> empty .)
    THIS_KWD        reduce using rule 125 (seen_unary_minus -> empty .)
    CTE_TRUE        reduce using rule 125 (seen_unary_minus -> empty .)
    CTE_FALSE       reduce using rule 125 (seen_unary_minus -> empty .)


state 227

    (163) TERM -> FACTOR seen_factor . TERM_P
    (164) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (165) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (166) TERM_P -> . empty
    (215) empty -> .

    STAR            shift and go to state 303
    FWD_SLASH       shift and go to state 304
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    TERM_P                         shift and go to state 302
    empty                          shift and go to state 305

state 228

    (167) seen_factor -> empty .

    STAR            reduce using rule 167 (seen_factor -> empty .)
    FWD_SLASH       reduce using rule 167 (seen_factor -> empty .)
    PLUS            reduce using rule 167 (seen_factor -> empty .)
    MINUS           reduce using rule 167 (seen_factor -> empty .)
    BIGGER          reduce using rule 167 (seen_factor -> empty .)
    BIGGER_EQ       reduce using rule 167 (seen_factor -> empty .)
    SMALLER         reduce using rule 167 (seen_factor -> empty .)
    SMALLER_EQ      reduce using rule 167 (seen_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 167 (seen_factor -> empty .)
    NOT_EQUALS      reduce using rule 167 (seen_factor -> empty .)
    AND             reduce using rule 167 (seen_factor -> empty .)
    OR              reduce using rule 167 (seen_factor -> empty .)
    SEMI_COLON      reduce using rule 167 (seen_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 167 (seen_factor -> empty .)
    COMMA           reduce using rule 167 (seen_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 167 (seen_factor -> empty .)


state 229

    (104) FACTOR -> NOT seen_not . FACTOR pop_not
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    FACTOR                         shift and go to state 306
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 230

    (123) seen_not -> empty .

    OPEN_PARENTHESIS reduce using rule 123 (seen_not -> empty .)
    NOT             reduce using rule 123 (seen_not -> empty .)
    MINUS           reduce using rule 123 (seen_not -> empty .)
    STOI_KWD        reduce using rule 123 (seen_not -> empty .)
    STOF_KWD        reduce using rule 123 (seen_not -> empty .)
    STOB_KWD        reduce using rule 123 (seen_not -> empty .)
    SUBSTR_KWD      reduce using rule 123 (seen_not -> empty .)
    ID              reduce using rule 123 (seen_not -> empty .)
    NEW_KWD         reduce using rule 123 (seen_not -> empty .)
    CTE_I           reduce using rule 123 (seen_not -> empty .)
    CTE_F           reduce using rule 123 (seen_not -> empty .)
    CTE_S           reduce using rule 123 (seen_not -> empty .)
    THIS_KWD        reduce using rule 123 (seen_not -> empty .)
    CTE_TRUE        reduce using rule 123 (seen_not -> empty .)
    CTE_FALSE       reduce using rule 123 (seen_not -> empty .)


state 231

    (106) FACTOR -> STOI_KWD seen_stoi_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 308


state 232

    (119) seen_stoi_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 119 (seen_stoi_kwd -> empty .)


state 233

    (107) FACTOR -> STOF_KWD seen_stof_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 309


state 234

    (120) seen_stof_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 120 (seen_stof_kwd -> empty .)


state 235

    (108) FACTOR -> STOB_KWD seen_stob_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 310


state 236

    (121) seen_stob_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 121 (seen_stob_kwd -> empty .)


state 237

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (126) seen_open_parenthesis -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_open_parenthesis          shift and go to state 311
    empty                          shift and go to state 223

state 238

    (112) FACTOR -> VAR seen_var_as_factor .

    STAR            reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    SEMI_COLON      reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_BRACKET   reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)


state 239

    (129) seen_var_as_factor -> empty .

    STAR            reduce using rule 129 (seen_var_as_factor -> empty .)
    FWD_SLASH       reduce using rule 129 (seen_var_as_factor -> empty .)
    PLUS            reduce using rule 129 (seen_var_as_factor -> empty .)
    MINUS           reduce using rule 129 (seen_var_as_factor -> empty .)
    BIGGER          reduce using rule 129 (seen_var_as_factor -> empty .)
    BIGGER_EQ       reduce using rule 129 (seen_var_as_factor -> empty .)
    SMALLER         reduce using rule 129 (seen_var_as_factor -> empty .)
    SMALLER_EQ      reduce using rule 129 (seen_var_as_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 129 (seen_var_as_factor -> empty .)
    NOT_EQUALS      reduce using rule 129 (seen_var_as_factor -> empty .)
    AND             reduce using rule 129 (seen_var_as_factor -> empty .)
    OR              reduce using rule 129 (seen_var_as_factor -> empty .)
    SEMI_COLON      reduce using rule 129 (seen_var_as_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 129 (seen_var_as_factor -> empty .)
    COMMA           reduce using rule 129 (seen_var_as_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 129 (seen_var_as_factor -> empty .)


state 240

    (148) CLASS_INSTANCE -> NEW_KWD ID . seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (149) seen_class_id_instance -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_class_id_instance         shift and go to state 312
    empty                          shift and go to state 313

state 241

    (136) CONSTANT -> CTE_I seen_cte_i .

    STAR            reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    BIGGER_EQ       reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    SMALLER_EQ      reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    NOT_EQUALS      reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    AND             reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    OR              reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)
    CLOSE_BRACKET   reduce using rule 136 (CONSTANT -> CTE_I seen_cte_i .)


state 242

    (137) CONSTANT -> CTE_F seen_cte_f .

    STAR            reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    BIGGER_EQ       reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    SMALLER_EQ      reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    NOT_EQUALS      reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    AND             reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    OR              reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)
    CLOSE_BRACKET   reduce using rule 137 (CONSTANT -> CTE_F seen_cte_f .)


state 243

    (132) seen_cte_f -> empty .

    STAR            reduce using rule 132 (seen_cte_f -> empty .)
    FWD_SLASH       reduce using rule 132 (seen_cte_f -> empty .)
    PLUS            reduce using rule 132 (seen_cte_f -> empty .)
    MINUS           reduce using rule 132 (seen_cte_f -> empty .)
    BIGGER          reduce using rule 132 (seen_cte_f -> empty .)
    BIGGER_EQ       reduce using rule 132 (seen_cte_f -> empty .)
    SMALLER         reduce using rule 132 (seen_cte_f -> empty .)
    SMALLER_EQ      reduce using rule 132 (seen_cte_f -> empty .)
    DOUBLE_EQUALS   reduce using rule 132 (seen_cte_f -> empty .)
    NOT_EQUALS      reduce using rule 132 (seen_cte_f -> empty .)
    AND             reduce using rule 132 (seen_cte_f -> empty .)
    OR              reduce using rule 132 (seen_cte_f -> empty .)
    SEMI_COLON      reduce using rule 132 (seen_cte_f -> empty .)
    CLOSE_PARENTHESIS reduce using rule 132 (seen_cte_f -> empty .)
    COMMA           reduce using rule 132 (seen_cte_f -> empty .)
    CLOSE_BRACKET   reduce using rule 132 (seen_cte_f -> empty .)


state 244

    (138) CONSTANT -> CTE_S seen_cte_s .

    STAR            reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    BIGGER_EQ       reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    SMALLER_EQ      reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    NOT_EQUALS      reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    AND             reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    OR              reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)
    CLOSE_BRACKET   reduce using rule 138 (CONSTANT -> CTE_S seen_cte_s .)


state 245

    (133) seen_cte_s -> empty .

    STAR            reduce using rule 133 (seen_cte_s -> empty .)
    FWD_SLASH       reduce using rule 133 (seen_cte_s -> empty .)
    PLUS            reduce using rule 133 (seen_cte_s -> empty .)
    MINUS           reduce using rule 133 (seen_cte_s -> empty .)
    BIGGER          reduce using rule 133 (seen_cte_s -> empty .)
    BIGGER_EQ       reduce using rule 133 (seen_cte_s -> empty .)
    SMALLER         reduce using rule 133 (seen_cte_s -> empty .)
    SMALLER_EQ      reduce using rule 133 (seen_cte_s -> empty .)
    DOUBLE_EQUALS   reduce using rule 133 (seen_cte_s -> empty .)
    NOT_EQUALS      reduce using rule 133 (seen_cte_s -> empty .)
    AND             reduce using rule 133 (seen_cte_s -> empty .)
    OR              reduce using rule 133 (seen_cte_s -> empty .)
    SEMI_COLON      reduce using rule 133 (seen_cte_s -> empty .)
    CLOSE_PARENTHESIS reduce using rule 133 (seen_cte_s -> empty .)
    COMMA           reduce using rule 133 (seen_cte_s -> empty .)
    CLOSE_BRACKET   reduce using rule 133 (seen_cte_s -> empty .)


state 246

    (140) CTE_B -> CTE_TRUE seen_cte_true .

    STAR            reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    FWD_SLASH       reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    PLUS            reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    MINUS           reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    BIGGER          reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    BIGGER_EQ       reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    SMALLER         reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    SMALLER_EQ      reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    DOUBLE_EQUALS   reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    NOT_EQUALS      reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    AND             reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    OR              reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    SEMI_COLON      reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    CLOSE_PARENTHESIS reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    COMMA           reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)
    CLOSE_BRACKET   reduce using rule 140 (CTE_B -> CTE_TRUE seen_cte_true .)


state 247

    (135) seen_cte_true -> empty .

    STAR            reduce using rule 135 (seen_cte_true -> empty .)
    FWD_SLASH       reduce using rule 135 (seen_cte_true -> empty .)
    PLUS            reduce using rule 135 (seen_cte_true -> empty .)
    MINUS           reduce using rule 135 (seen_cte_true -> empty .)
    BIGGER          reduce using rule 135 (seen_cte_true -> empty .)
    BIGGER_EQ       reduce using rule 135 (seen_cte_true -> empty .)
    SMALLER         reduce using rule 135 (seen_cte_true -> empty .)
    SMALLER_EQ      reduce using rule 135 (seen_cte_true -> empty .)
    DOUBLE_EQUALS   reduce using rule 135 (seen_cte_true -> empty .)
    NOT_EQUALS      reduce using rule 135 (seen_cte_true -> empty .)
    AND             reduce using rule 135 (seen_cte_true -> empty .)
    OR              reduce using rule 135 (seen_cte_true -> empty .)
    SEMI_COLON      reduce using rule 135 (seen_cte_true -> empty .)
    CLOSE_PARENTHESIS reduce using rule 135 (seen_cte_true -> empty .)
    COMMA           reduce using rule 135 (seen_cte_true -> empty .)
    CLOSE_BRACKET   reduce using rule 135 (seen_cte_true -> empty .)


state 248

    (141) CTE_B -> CTE_FALSE seen_cte_false .

    STAR            reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    FWD_SLASH       reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    PLUS            reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    MINUS           reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    BIGGER          reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    BIGGER_EQ       reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    SMALLER         reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    SMALLER_EQ      reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    DOUBLE_EQUALS   reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    NOT_EQUALS      reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    AND             reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    OR              reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    SEMI_COLON      reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    CLOSE_PARENTHESIS reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    COMMA           reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)
    CLOSE_BRACKET   reduce using rule 141 (CTE_B -> CTE_FALSE seen_cte_false .)


state 249

    (134) seen_cte_false -> empty .

    STAR            reduce using rule 134 (seen_cte_false -> empty .)
    FWD_SLASH       reduce using rule 134 (seen_cte_false -> empty .)
    PLUS            reduce using rule 134 (seen_cte_false -> empty .)
    MINUS           reduce using rule 134 (seen_cte_false -> empty .)
    BIGGER          reduce using rule 134 (seen_cte_false -> empty .)
    BIGGER_EQ       reduce using rule 134 (seen_cte_false -> empty .)
    SMALLER         reduce using rule 134 (seen_cte_false -> empty .)
    SMALLER_EQ      reduce using rule 134 (seen_cte_false -> empty .)
    DOUBLE_EQUALS   reduce using rule 134 (seen_cte_false -> empty .)
    NOT_EQUALS      reduce using rule 134 (seen_cte_false -> empty .)
    AND             reduce using rule 134 (seen_cte_false -> empty .)
    OR              reduce using rule 134 (seen_cte_false -> empty .)
    SEMI_COLON      reduce using rule 134 (seen_cte_false -> empty .)
    CLOSE_PARENTHESIS reduce using rule 134 (seen_cte_false -> empty .)
    COMMA           reduce using rule 134 (seen_cte_false -> empty .)
    CLOSE_BRACKET   reduce using rule 134 (seen_cte_false -> empty .)


state 250

    (143) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT . seen_this_dot_operator
    (151) seen_this_dot_operator -> . empty
    (215) empty -> .

    ID              reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)

    seen_this_dot_operator         shift and go to state 314
    empty                          shift and go to state 315

state 251

    (193) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 316


state 252

    (110) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 110 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 110 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 110 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 110 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 110 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 110 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 110 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 110 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 110 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 110 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 110 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 110 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 110 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 110 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 110 (FACTOR -> FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 110 (FACTOR -> FUNC_CALL .)


state 253

    (201) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 317
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 254

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (205) seen_for_kwd -> . empty
    (215) empty -> .

    EQUALS          reduce using rule 215 (empty -> .)

    seen_for_kwd                   shift and go to state 318
    empty                          shift and go to state 319

state 255

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 320


state 256

    (33) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 33 (seen_func_vars -> empty .)


state 257

    (39) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (215) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 321
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 258

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (162) seen_array_def_dim -> . empty
    (215) empty -> .

    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_array_def_dim             shift and go to state 322
    empty                          shift and go to state 72

state 259

    (145) VAR -> ID .
    (169) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (152) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (142) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (171) seen_func_call_id -> . empty
    (155) seen_array_id -> . empty
    (215) empty -> .

    COMMA           reduce using rule 145 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 145 (VAR -> ID .)
    STAR            reduce using rule 145 (VAR -> ID .)
    FWD_SLASH       reduce using rule 145 (VAR -> ID .)
    PLUS            reduce using rule 145 (VAR -> ID .)
    MINUS           reduce using rule 145 (VAR -> ID .)
    BIGGER          reduce using rule 145 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 145 (VAR -> ID .)
    SMALLER         reduce using rule 145 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 145 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 145 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 145 (VAR -> ID .)
    AND             reduce using rule 145 (VAR -> ID .)
    OR              reduce using rule 145 (VAR -> ID .)
    DOT             shift and go to state 126
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    OPEN_BRACKET    reduce using rule 215 (empty -> .)

    seen_func_call_id              shift and go to state 125
    seen_array_id                  shift and go to state 127
    empty                          shift and go to state 128

state 260

    (169) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 323


state 261

    (172) ARG_LIST -> VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (112) FACTOR -> VAR . seen_var_as_factor
    (129) seen_var_as_factor -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)

    seen_var_as_factor             shift and go to state 324
    empty                          shift and go to state 239

state 262

    (173) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (180) seen_arg -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_arg                       shift and go to state 325
    empty                          shift and go to state 326

state 263

    (174) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (110) FACTOR -> FUNC_CALL .
    (180) seen_arg -> . empty
    (215) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 110 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 110 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 110 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 110 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 110 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 110 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 110 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 110 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 110 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 110 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 110 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 110 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 110 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 110 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 110 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 110 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 215 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 215 (empty -> .) ]

    seen_arg                       shift and go to state 327
    empty                          shift and go to state 326

state 264

    (175) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 175 (ARG_LIST -> empty .)


state 265

    (147) VAR -> CLASS_REFERENCE . VAR
    (170) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 259
    THIS_KWD        shift and go to state 110

    CLASS_REFERENCE                shift and go to state 265
    VAR                            shift and go to state 142
    FUNC_CALL                      shift and go to state 141
    ARRAY                          shift and go to state 109

state 266

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 328
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 267

    (156) seen_open_bracket -> empty .

    MINUS           reduce using rule 156 (seen_open_bracket -> empty .)
    OPEN_PARENTHESIS reduce using rule 156 (seen_open_bracket -> empty .)
    NOT             reduce using rule 156 (seen_open_bracket -> empty .)
    STOI_KWD        reduce using rule 156 (seen_open_bracket -> empty .)
    STOF_KWD        reduce using rule 156 (seen_open_bracket -> empty .)
    STOB_KWD        reduce using rule 156 (seen_open_bracket -> empty .)
    SUBSTR_KWD      reduce using rule 156 (seen_open_bracket -> empty .)
    ID              reduce using rule 156 (seen_open_bracket -> empty .)
    NEW_KWD         reduce using rule 156 (seen_open_bracket -> empty .)
    CTE_I           reduce using rule 156 (seen_open_bracket -> empty .)
    CTE_F           reduce using rule 156 (seen_open_bracket -> empty .)
    CTE_S           reduce using rule 156 (seen_open_bracket -> empty .)
    THIS_KWD        reduce using rule 156 (seen_open_bracket -> empty .)
    CTE_TRUE        reduce using rule 156 (seen_open_bracket -> empty .)
    CTE_FALSE       reduce using rule 156 (seen_open_bracket -> empty .)


state 268

    (70) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals . EXPRESSION
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 329
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 269

    (77) seen_equals -> empty .

    MINUS           reduce using rule 77 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 77 (seen_equals -> empty .)
    NOT             reduce using rule 77 (seen_equals -> empty .)
    STOI_KWD        reduce using rule 77 (seen_equals -> empty .)
    STOF_KWD        reduce using rule 77 (seen_equals -> empty .)
    STOB_KWD        reduce using rule 77 (seen_equals -> empty .)
    SUBSTR_KWD      reduce using rule 77 (seen_equals -> empty .)
    ID              reduce using rule 77 (seen_equals -> empty .)
    NEW_KWD         reduce using rule 77 (seen_equals -> empty .)
    CTE_I           reduce using rule 77 (seen_equals -> empty .)
    CTE_F           reduce using rule 77 (seen_equals -> empty .)
    CTE_S           reduce using rule 77 (seen_equals -> empty .)
    THIS_KWD        reduce using rule 77 (seen_equals -> empty .)
    CTE_TRUE        reduce using rule 77 (seen_equals -> empty .)
    CTE_FALSE       reduce using rule 77 (seen_equals -> empty .)


state 270

    (71) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals . EXPRESSION
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 330
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 271

    (78) seen_plus_equals -> empty .

    MINUS           reduce using rule 78 (seen_plus_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 78 (seen_plus_equals -> empty .)
    NOT             reduce using rule 78 (seen_plus_equals -> empty .)
    STOI_KWD        reduce using rule 78 (seen_plus_equals -> empty .)
    STOF_KWD        reduce using rule 78 (seen_plus_equals -> empty .)
    STOB_KWD        reduce using rule 78 (seen_plus_equals -> empty .)
    SUBSTR_KWD      reduce using rule 78 (seen_plus_equals -> empty .)
    ID              reduce using rule 78 (seen_plus_equals -> empty .)
    NEW_KWD         reduce using rule 78 (seen_plus_equals -> empty .)
    CTE_I           reduce using rule 78 (seen_plus_equals -> empty .)
    CTE_F           reduce using rule 78 (seen_plus_equals -> empty .)
    CTE_S           reduce using rule 78 (seen_plus_equals -> empty .)
    THIS_KWD        reduce using rule 78 (seen_plus_equals -> empty .)
    CTE_TRUE        reduce using rule 78 (seen_plus_equals -> empty .)
    CTE_FALSE       reduce using rule 78 (seen_plus_equals -> empty .)


state 272

    (72) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals . EXPRESSION
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 331
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 273

    (79) seen_minus_equals -> empty .

    MINUS           reduce using rule 79 (seen_minus_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 79 (seen_minus_equals -> empty .)
    NOT             reduce using rule 79 (seen_minus_equals -> empty .)
    STOI_KWD        reduce using rule 79 (seen_minus_equals -> empty .)
    STOF_KWD        reduce using rule 79 (seen_minus_equals -> empty .)
    STOB_KWD        reduce using rule 79 (seen_minus_equals -> empty .)
    SUBSTR_KWD      reduce using rule 79 (seen_minus_equals -> empty .)
    ID              reduce using rule 79 (seen_minus_equals -> empty .)
    NEW_KWD         reduce using rule 79 (seen_minus_equals -> empty .)
    CTE_I           reduce using rule 79 (seen_minus_equals -> empty .)
    CTE_F           reduce using rule 79 (seen_minus_equals -> empty .)
    CTE_S           reduce using rule 79 (seen_minus_equals -> empty .)
    THIS_KWD        reduce using rule 79 (seen_minus_equals -> empty .)
    CTE_TRUE        reduce using rule 79 (seen_minus_equals -> empty .)
    CTE_FALSE       reduce using rule 79 (seen_minus_equals -> empty .)


state 274

    (73) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals . EXPRESSION
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 332
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 275

    (80) seen_times_equals -> empty .

    MINUS           reduce using rule 80 (seen_times_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 80 (seen_times_equals -> empty .)
    NOT             reduce using rule 80 (seen_times_equals -> empty .)
    STOI_KWD        reduce using rule 80 (seen_times_equals -> empty .)
    STOF_KWD        reduce using rule 80 (seen_times_equals -> empty .)
    STOB_KWD        reduce using rule 80 (seen_times_equals -> empty .)
    SUBSTR_KWD      reduce using rule 80 (seen_times_equals -> empty .)
    ID              reduce using rule 80 (seen_times_equals -> empty .)
    NEW_KWD         reduce using rule 80 (seen_times_equals -> empty .)
    CTE_I           reduce using rule 80 (seen_times_equals -> empty .)
    CTE_F           reduce using rule 80 (seen_times_equals -> empty .)
    CTE_S           reduce using rule 80 (seen_times_equals -> empty .)
    THIS_KWD        reduce using rule 80 (seen_times_equals -> empty .)
    CTE_TRUE        reduce using rule 80 (seen_times_equals -> empty .)
    CTE_FALSE       reduce using rule 80 (seen_times_equals -> empty .)


state 276

    (74) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals . EXPRESSION
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 333
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 277

    (81) seen_over_equals -> empty .

    MINUS           reduce using rule 81 (seen_over_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 81 (seen_over_equals -> empty .)
    NOT             reduce using rule 81 (seen_over_equals -> empty .)
    STOI_KWD        reduce using rule 81 (seen_over_equals -> empty .)
    STOF_KWD        reduce using rule 81 (seen_over_equals -> empty .)
    STOB_KWD        reduce using rule 81 (seen_over_equals -> empty .)
    SUBSTR_KWD      reduce using rule 81 (seen_over_equals -> empty .)
    ID              reduce using rule 81 (seen_over_equals -> empty .)
    NEW_KWD         reduce using rule 81 (seen_over_equals -> empty .)
    CTE_I           reduce using rule 81 (seen_over_equals -> empty .)
    CTE_F           reduce using rule 81 (seen_over_equals -> empty .)
    CTE_S           reduce using rule 81 (seen_over_equals -> empty .)
    THIS_KWD        reduce using rule 81 (seen_over_equals -> empty .)
    CTE_TRUE        reduce using rule 81 (seen_over_equals -> empty .)
    CTE_FALSE       reduce using rule 81 (seen_over_equals -> empty .)


state 278

    (75) ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .

    SEMI_COLON      reduce using rule 75 (ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .)
    CLOSE_PARENTHESIS reduce using rule 75 (ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .)


state 279

    (82) seen_plus_plus -> empty .

    SEMI_COLON      reduce using rule 82 (seen_plus_plus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 82 (seen_plus_plus -> empty .)


state 280

    (76) ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .

    SEMI_COLON      reduce using rule 76 (ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .)
    CLOSE_PARENTHESIS reduce using rule 76 (ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .)


state 281

    (83) seen_minus_minus -> empty .

    SEMI_COLON      reduce using rule 83 (seen_minus_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 83 (seen_minus_minus -> empty .)


state 282

    (184) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 184 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 184 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 283

    (23) READABLE_LIST -> VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_readable                  shift and go to state 334
    empty                          shift and go to state 335

state 284

    (155) seen_array_id -> empty .

    OPEN_BRACKET    reduce using rule 155 (seen_array_id -> empty .)


state 285

    (185) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 336


state 286

    (189) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (192) seen_printable -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_printable                 shift and go to state 337
    empty                          shift and go to state 338

state 287

    (187) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 339


state 288

    (57) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (58) seen_open_buffer -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)

    seen_open_buffer               shift and go to state 340
    empty                          shift and go to state 341

state 289

    (130) seen_var_in_io -> empty .

    COMMA           reduce using rule 130 (seen_var_in_io -> empty .)


state 290

    (59) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (60) seen_write_buffer -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)

    seen_write_buffer              shift and go to state 342
    empty                          shift and go to state 343

state 291

    (56) USING -> USING_KWD ID_LIST AS_KWD ID .

    SEMI_COLON      reduce using rule 56 (USING -> USING_KWD ID_LIST AS_KWD ID .)


state 292

    (53) ID_LIST_P -> COMMA ID . ID_LIST_P
    (53) ID_LIST_P -> . COMMA ID ID_LIST_P
    (54) ID_LIST_P -> . COMMA
    (55) ID_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 209
    AS_KWD          reduce using rule 215 (empty -> .)

    ID_LIST_P                      shift and go to state 344
    empty                          shift and go to state 210

state 293

    (92) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXP                            shift and go to state 155
    EXPRESSION                     shift and go to state 345
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 294

    (94) seen_comp_op -> empty .

    MINUS           reduce using rule 94 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 94 (seen_comp_op -> empty .)
    NOT             reduce using rule 94 (seen_comp_op -> empty .)
    STOI_KWD        reduce using rule 94 (seen_comp_op -> empty .)
    STOF_KWD        reduce using rule 94 (seen_comp_op -> empty .)
    STOB_KWD        reduce using rule 94 (seen_comp_op -> empty .)
    SUBSTR_KWD      reduce using rule 94 (seen_comp_op -> empty .)
    ID              reduce using rule 94 (seen_comp_op -> empty .)
    NEW_KWD         reduce using rule 94 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 94 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 94 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 94 (seen_comp_op -> empty .)
    THIS_KWD        reduce using rule 94 (seen_comp_op -> empty .)
    CTE_TRUE        reduce using rule 94 (seen_comp_op -> empty .)
    CTE_FALSE       reduce using rule 94 (seen_comp_op -> empty .)


state 295

    (103) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 346


state 296

    (84) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 84 (EXP -> TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 84 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 84 (EXP -> TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 84 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 84 (EXP -> TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 84 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 84 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 84 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 84 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 84 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 84 (EXP -> TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 84 (EXP -> TERM seen_term EXP_P .)


state 297

    (87) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (90) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 90 (seen_term_op -> .)
    NOT             reduce using rule 90 (seen_term_op -> .)
    MINUS           reduce using rule 90 (seen_term_op -> .)
    STOI_KWD        reduce using rule 90 (seen_term_op -> .)
    STOF_KWD        reduce using rule 90 (seen_term_op -> .)
    STOB_KWD        reduce using rule 90 (seen_term_op -> .)
    SUBSTR_KWD      reduce using rule 90 (seen_term_op -> .)
    ID              reduce using rule 90 (seen_term_op -> .)
    NEW_KWD         reduce using rule 90 (seen_term_op -> .)
    CTE_I           reduce using rule 90 (seen_term_op -> .)
    CTE_F           reduce using rule 90 (seen_term_op -> .)
    CTE_S           reduce using rule 90 (seen_term_op -> .)
    THIS_KWD        reduce using rule 90 (seen_term_op -> .)
    CTE_TRUE        reduce using rule 90 (seen_term_op -> .)
    CTE_FALSE       reduce using rule 90 (seen_term_op -> .)

    seen_term_op                   shift and go to state 347

state 298

    (88) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (90) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 90 (seen_term_op -> .)
    NOT             reduce using rule 90 (seen_term_op -> .)
    MINUS           reduce using rule 90 (seen_term_op -> .)
    STOI_KWD        reduce using rule 90 (seen_term_op -> .)
    STOF_KWD        reduce using rule 90 (seen_term_op -> .)
    STOB_KWD        reduce using rule 90 (seen_term_op -> .)
    SUBSTR_KWD      reduce using rule 90 (seen_term_op -> .)
    ID              reduce using rule 90 (seen_term_op -> .)
    NEW_KWD         reduce using rule 90 (seen_term_op -> .)
    CTE_I           reduce using rule 90 (seen_term_op -> .)
    CTE_F           reduce using rule 90 (seen_term_op -> .)
    CTE_S           reduce using rule 90 (seen_term_op -> .)
    THIS_KWD        reduce using rule 90 (seen_term_op -> .)
    CTE_TRUE        reduce using rule 90 (seen_term_op -> .)
    CTE_FALSE       reduce using rule 90 (seen_term_op -> .)

    seen_term_op                   shift and go to state 348

state 299

    (89) EXP_P -> empty .

    BIGGER          reduce using rule 89 (EXP_P -> empty .)
    BIGGER_EQ       reduce using rule 89 (EXP_P -> empty .)
    SMALLER         reduce using rule 89 (EXP_P -> empty .)
    SMALLER_EQ      reduce using rule 89 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 89 (EXP_P -> empty .)
    NOT_EQUALS      reduce using rule 89 (EXP_P -> empty .)
    AND             reduce using rule 89 (EXP_P -> empty .)
    OR              reduce using rule 89 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 89 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 89 (EXP_P -> empty .)
    COMMA           reduce using rule 89 (EXP_P -> empty .)
    CLOSE_BRACKET   reduce using rule 89 (EXP_P -> empty .)


state 300

    (85) EXP -> MINUS seen_unary_minus EXP . pop_unary_minus
    (124) pop_unary_minus -> . empty
    (215) empty -> .

    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    pop_unary_minus                shift and go to state 349
    empty                          shift and go to state 350

state 301

    (105) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (163) TERM -> FACTOR . seen_factor TERM_P
    (124) pop_unary_minus -> . empty
    (167) seen_factor -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    pop_unary_minus                shift and go to state 351
    seen_factor                    shift and go to state 227
    empty                          shift and go to state 352

state 302

    (163) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)


state 303

    (164) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (168) seen_factor_op -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_factor_op                 shift and go to state 353
    empty                          shift and go to state 354

state 304

    (165) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (168) seen_factor_op -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_factor_op                 shift and go to state 355
    empty                          shift and go to state 354

state 305

    (166) TERM_P -> empty .

    PLUS            reduce using rule 166 (TERM_P -> empty .)
    MINUS           reduce using rule 166 (TERM_P -> empty .)
    BIGGER          reduce using rule 166 (TERM_P -> empty .)
    BIGGER_EQ       reduce using rule 166 (TERM_P -> empty .)
    SMALLER         reduce using rule 166 (TERM_P -> empty .)
    SMALLER_EQ      reduce using rule 166 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 166 (TERM_P -> empty .)
    NOT_EQUALS      reduce using rule 166 (TERM_P -> empty .)
    AND             reduce using rule 166 (TERM_P -> empty .)
    OR              reduce using rule 166 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 166 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 166 (TERM_P -> empty .)
    COMMA           reduce using rule 166 (TERM_P -> empty .)
    CLOSE_BRACKET   reduce using rule 166 (TERM_P -> empty .)


state 306

    (104) FACTOR -> NOT seen_not FACTOR . pop_not
    (122) pop_not -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    pop_not                        shift and go to state 356
    empty                          shift and go to state 357

state 307

    (105) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (125) seen_unary_minus -> . empty
    (215) empty -> .

    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_unary_minus               shift and go to state 358
    empty                          shift and go to state 226

state 308

    (106) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (126) seen_open_parenthesis -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_open_parenthesis          shift and go to state 359
    empty                          shift and go to state 223

state 309

    (107) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (126) seen_open_parenthesis -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_open_parenthesis          shift and go to state 360
    empty                          shift and go to state 223

state 310

    (108) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (126) seen_open_parenthesis -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_open_parenthesis          shift and go to state 361
    empty                          shift and go to state 223

state 311

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 362
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 312

    (148) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 363


state 313

    (149) seen_class_id_instance -> empty .

    OPEN_PARENTHESIS reduce using rule 149 (seen_class_id_instance -> empty .)


state 314

    (143) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .

    ID              reduce using rule 143 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)
    THIS_KWD        reduce using rule 143 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)


state 315

    (151) seen_this_dot_operator -> empty .

    ID              reduce using rule 151 (seen_this_dot_operator -> empty .)
    THIS_KWD        reduce using rule 151 (seen_this_dot_operator -> empty .)


state 316

    (193) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (197) seen_if_kwd -> . empty
    (215) empty -> .

    OPEN_CURLY      reduce using rule 215 (empty -> .)

    seen_if_kwd                    shift and go to state 364
    empty                          shift and go to state 365

state 317

    (201) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 366


state 318

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 367


state 319

    (205) seen_for_kwd -> empty .

    EQUALS          reduce using rule 205 (seen_for_kwd -> empty .)


state 320

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (215) empty -> .
    (70) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (73) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (74) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (75) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (76) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (187) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (57) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (59) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (56) USING -> . USING_KWD ID_LIST AS_KWD ID
    (63) FLOW_CONTROL -> . DECISION
    (64) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (193) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (199) REPETITION -> . CONDITIONAL_REP
    (200) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (201) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (204) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT_STAR                 shift and go to state 368
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 321

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 369


state 322

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_BRACKET   shift and go to state 370


state 323

    (169) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 324

    (172) ARG_LIST -> VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (112) FACTOR -> VAR seen_var_as_factor .
    (180) seen_arg -> . empty
    (215) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 112 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 215 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 215 (empty -> .) ]

    seen_arg                       shift and go to state 371
    empty                          shift and go to state 326

state 325

    (173) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    ARG_LIST_P                     shift and go to state 372
    empty                          shift and go to state 374

state 326

    (180) seen_arg -> empty .

    COMMA           reduce using rule 180 (seen_arg -> empty .)
    CLOSE_PARENTHESIS reduce using rule 180 (seen_arg -> empty .)


state 327

    (174) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    ARG_LIST_P                     shift and go to state 375
    empty                          shift and go to state 374

state 328

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (157) seen_array_access -> . empty
    (215) empty -> .

    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_array_access              shift and go to state 376
    empty                          shift and go to state 377

state 329

    (70) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 70 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 70 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)


state 330

    (71) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .

    SEMI_COLON      reduce using rule 71 (ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 71 (ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .)


state 331

    (72) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .

    SEMI_COLON      reduce using rule 72 (ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 72 (ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .)


state 332

    (73) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .

    SEMI_COLON      reduce using rule 73 (ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 73 (ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .)


state 333

    (74) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .

    SEMI_COLON      reduce using rule 74 (ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 74 (ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .)


state 334

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 379
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    READABLE_LIST_P                shift and go to state 378
    empty                          shift and go to state 380

state 335

    (26) seen_readable -> empty .

    COMMA           reduce using rule 26 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 26 (seen_readable -> empty .)


state 336

    (185) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 185 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 185 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 337

    (189) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (190) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (191) PRINTABLE_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 382
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    PRINTABLE_P                    shift and go to state 381
    empty                          shift and go to state 383

state 338

    (192) seen_printable -> empty .

    COMMA           reduce using rule 192 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 192 (seen_printable -> empty .)


state 339

    (187) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 187 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 187 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 340

    (57) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 384


state 341

    (58) seen_open_buffer -> empty .

    COMMA           reduce using rule 58 (seen_open_buffer -> empty .)


state 342

    (59) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 385


state 343

    (60) seen_write_buffer -> empty .

    COMMA           reduce using rule 60 (seen_write_buffer -> empty .)


state 344

    (53) ID_LIST_P -> COMMA ID ID_LIST_P .

    AS_KWD          reduce using rule 53 (ID_LIST_P -> COMMA ID ID_LIST_P .)


state 345

    (92) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (93) seen_comp -> . empty
    (215) empty -> .

    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_comp                      shift and go to state 386
    empty                          shift and go to state 387

state 346

    (103) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (127) seen_close_parenthesis -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_close_parenthesis         shift and go to state 388
    empty                          shift and go to state 389

state 347

    (87) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    TERM                           shift and go to state 390
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 348

    (88) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    TERM                           shift and go to state 391
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 349

    (85) EXP -> MINUS seen_unary_minus EXP pop_unary_minus .

    BIGGER          reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    BIGGER_EQ       reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER         reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER_EQ      reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    NOT_EQUALS      reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    AND             reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    OR              reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SEMI_COLON      reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    COMMA           reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 85 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)


state 350

    (124) pop_unary_minus -> empty .

    BIGGER          reduce using rule 124 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 124 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 124 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 124 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 124 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 124 (pop_unary_minus -> empty .)
    AND             reduce using rule 124 (pop_unary_minus -> empty .)
    OR              reduce using rule 124 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 124 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 124 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 124 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 124 (pop_unary_minus -> empty .)
    STAR            reduce using rule 124 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 124 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 124 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 124 (pop_unary_minus -> empty .)


state 351

    (105) FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .

    STAR            reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    FWD_SLASH       reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    PLUS            reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    MINUS           reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER          reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER_EQ       reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER         reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER_EQ      reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    NOT_EQUALS      reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    AND             reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    OR              reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SEMI_COLON      reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    COMMA           reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 105 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)


state 352

    (124) pop_unary_minus -> empty .
    (167) seen_factor -> empty .

  ! reduce/reduce conflict for STAR resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 124 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 124 (pop_unary_minus -> empty .)
    STAR            reduce using rule 124 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 124 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 124 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 124 (pop_unary_minus -> empty .)
    BIGGER          reduce using rule 124 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 124 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 124 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 124 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 124 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 124 (pop_unary_minus -> empty .)
    AND             reduce using rule 124 (pop_unary_minus -> empty .)
    OR              reduce using rule 124 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 124 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 124 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 124 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 124 (pop_unary_minus -> empty .)

  ! STAR            [ reduce using rule 167 (seen_factor -> empty .) ]
  ! FWD_SLASH       [ reduce using rule 167 (seen_factor -> empty .) ]
  ! PLUS            [ reduce using rule 167 (seen_factor -> empty .) ]
  ! MINUS           [ reduce using rule 167 (seen_factor -> empty .) ]
  ! BIGGER          [ reduce using rule 167 (seen_factor -> empty .) ]
  ! BIGGER_EQ       [ reduce using rule 167 (seen_factor -> empty .) ]
  ! SMALLER         [ reduce using rule 167 (seen_factor -> empty .) ]
  ! SMALLER_EQ      [ reduce using rule 167 (seen_factor -> empty .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 167 (seen_factor -> empty .) ]
  ! NOT_EQUALS      [ reduce using rule 167 (seen_factor -> empty .) ]
  ! AND             [ reduce using rule 167 (seen_factor -> empty .) ]
  ! OR              [ reduce using rule 167 (seen_factor -> empty .) ]
  ! SEMI_COLON      [ reduce using rule 167 (seen_factor -> empty .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 167 (seen_factor -> empty .) ]
  ! COMMA           [ reduce using rule 167 (seen_factor -> empty .) ]
  ! CLOSE_BRACKET   [ reduce using rule 167 (seen_factor -> empty .) ]


state 353

    (164) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    FACTOR                         shift and go to state 392
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 354

    (168) seen_factor_op -> empty .

    OPEN_PARENTHESIS reduce using rule 168 (seen_factor_op -> empty .)
    NOT             reduce using rule 168 (seen_factor_op -> empty .)
    MINUS           reduce using rule 168 (seen_factor_op -> empty .)
    STOI_KWD        reduce using rule 168 (seen_factor_op -> empty .)
    STOF_KWD        reduce using rule 168 (seen_factor_op -> empty .)
    STOB_KWD        reduce using rule 168 (seen_factor_op -> empty .)
    SUBSTR_KWD      reduce using rule 168 (seen_factor_op -> empty .)
    ID              reduce using rule 168 (seen_factor_op -> empty .)
    NEW_KWD         reduce using rule 168 (seen_factor_op -> empty .)
    CTE_I           reduce using rule 168 (seen_factor_op -> empty .)
    CTE_F           reduce using rule 168 (seen_factor_op -> empty .)
    CTE_S           reduce using rule 168 (seen_factor_op -> empty .)
    THIS_KWD        reduce using rule 168 (seen_factor_op -> empty .)
    CTE_TRUE        reduce using rule 168 (seen_factor_op -> empty .)
    CTE_FALSE       reduce using rule 168 (seen_factor_op -> empty .)


state 355

    (165) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    FACTOR                         shift and go to state 393
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 356

    (104) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER_EQ       reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER_EQ      reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    NOT_EQUALS      reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_BRACKET   reduce using rule 104 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 357

    (122) pop_not -> empty .

    STAR            reduce using rule 122 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 122 (pop_not -> empty .)
    PLUS            reduce using rule 122 (pop_not -> empty .)
    MINUS           reduce using rule 122 (pop_not -> empty .)
    BIGGER          reduce using rule 122 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 122 (pop_not -> empty .)
    SMALLER         reduce using rule 122 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 122 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 122 (pop_not -> empty .)
    NOT_EQUALS      reduce using rule 122 (pop_not -> empty .)
    AND             reduce using rule 122 (pop_not -> empty .)
    OR              reduce using rule 122 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 122 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 122 (pop_not -> empty .)
    COMMA           reduce using rule 122 (pop_not -> empty .)
    CLOSE_BRACKET   reduce using rule 122 (pop_not -> empty .)


state 358

    (105) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    FACTOR                         shift and go to state 394
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 359

    (106) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 395
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 360

    (107) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 396
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 361

    (108) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 397
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 362

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (114) seen_substr_str -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)

    seen_substr_str                shift and go to state 398
    empty                          shift and go to state 399

state 363

    (148) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 400


state 364

    (193) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 401


state 365

    (197) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 197 (seen_if_kwd -> empty .)


state 366

    (201) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (203) seen_while_exp -> . empty
    (215) empty -> .

    OPEN_CURLY      reduce using rule 215 (empty -> .)

    seen_while_exp                 shift and go to state 402
    empty                          shift and go to state 403

state 367

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 404
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 368

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 405


state 369

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 39 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 370

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DECLARATION_P
    (159) ARRAY_DECLARATION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (160) ARRAY_DECLARATION_P -> . empty
    (215) empty -> .

    OPEN_BRACKET    shift and go to state 122
    COMMA           reduce using rule 215 (empty -> .)
    COLON           reduce using rule 215 (empty -> .)

    ARRAY_DECLARATION_P            shift and go to state 406
    empty                          shift and go to state 124

state 371

    (172) ARG_LIST -> VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    ARG_LIST_P                     shift and go to state 407
    empty                          shift and go to state 374

state 372

    (173) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 173 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 373

    (176) ARG_LIST_P -> COMMA . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    ID              shift and go to state 259
    THIS_KWD        shift and go to state 110
    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 408
    EXPRESSION                     shift and go to state 409
    FUNC_CALL                      shift and go to state 410
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 265
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CTE_B                          shift and go to state 173

state 374

    (179) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 179 (ARG_LIST_P -> empty .)


state 375

    (174) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 174 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 376

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 411


state 377

    (157) seen_array_access -> empty .

    CLOSE_BRACKET   reduce using rule 157 (seen_array_access -> empty .)


state 378

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 23 (READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 379

    (24) READABLE_LIST_P -> COMMA . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 201
    THIS_KWD        shift and go to state 110

    VAR                            shift and go to state 412
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 202

state 380

    (25) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 25 (READABLE_LIST_P -> empty .)


state 381

    (189) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 189 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 382

    (190) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 413
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 383

    (191) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 191 (PRINTABLE_P -> empty .)


state 384

    (57) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 414
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 385

    (59) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 415
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 386

    (92) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    SEMI_COLON      reduce using rule 92 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 92 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    COMMA           reduce using rule 92 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_BRACKET   reduce using rule 92 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 387

    (93) seen_comp -> empty .

    SEMI_COLON      reduce using rule 93 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 93 (seen_comp -> empty .)
    COMMA           reduce using rule 93 (seen_comp -> empty .)
    CLOSE_BRACKET   reduce using rule 93 (seen_comp -> empty .)


state 388

    (103) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    NOT_EQUALS      reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 103 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 389

    (127) seen_close_parenthesis -> empty .

    STAR            reduce using rule 127 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 127 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 127 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 127 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 127 (seen_close_parenthesis -> empty .)
    BIGGER_EQ       reduce using rule 127 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 127 (seen_close_parenthesis -> empty .)
    SMALLER_EQ      reduce using rule 127 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 127 (seen_close_parenthesis -> empty .)
    NOT_EQUALS      reduce using rule 127 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 127 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 127 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 127 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 127 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 127 (seen_close_parenthesis -> empty .)
    CLOSE_BRACKET   reduce using rule 127 (seen_close_parenthesis -> empty .)


state 390

    (87) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (86) seen_term -> .

    PLUS            reduce using rule 86 (seen_term -> .)
    MINUS           reduce using rule 86 (seen_term -> .)
    BIGGER          reduce using rule 86 (seen_term -> .)
    BIGGER_EQ       reduce using rule 86 (seen_term -> .)
    SMALLER         reduce using rule 86 (seen_term -> .)
    SMALLER_EQ      reduce using rule 86 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 86 (seen_term -> .)
    NOT_EQUALS      reduce using rule 86 (seen_term -> .)
    AND             reduce using rule 86 (seen_term -> .)
    OR              reduce using rule 86 (seen_term -> .)
    SEMI_COLON      reduce using rule 86 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 86 (seen_term -> .)
    COMMA           reduce using rule 86 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 86 (seen_term -> .)

    seen_term                      shift and go to state 416

state 391

    (88) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (86) seen_term -> .

    PLUS            reduce using rule 86 (seen_term -> .)
    MINUS           reduce using rule 86 (seen_term -> .)
    BIGGER          reduce using rule 86 (seen_term -> .)
    BIGGER_EQ       reduce using rule 86 (seen_term -> .)
    SMALLER         reduce using rule 86 (seen_term -> .)
    SMALLER_EQ      reduce using rule 86 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 86 (seen_term -> .)
    NOT_EQUALS      reduce using rule 86 (seen_term -> .)
    AND             reduce using rule 86 (seen_term -> .)
    OR              reduce using rule 86 (seen_term -> .)
    SEMI_COLON      reduce using rule 86 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 86 (seen_term -> .)
    COMMA           reduce using rule 86 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 86 (seen_term -> .)

    seen_term                      shift and go to state 417

state 392

    (164) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (167) seen_factor -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_factor                    shift and go to state 418
    empty                          shift and go to state 228

state 393

    (165) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (167) seen_factor -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_factor                    shift and go to state 419
    empty                          shift and go to state 228

state 394

    (105) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (124) pop_unary_minus -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    pop_unary_minus                shift and go to state 351
    empty                          shift and go to state 350

state 395

    (106) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 420


state 396

    (107) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 421


state 397

    (108) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 422


state 398

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str . COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    COMMA           shift and go to state 423


state 399

    (114) seen_substr_str -> empty .

    COMMA           reduce using rule 114 (seen_substr_str -> empty .)


state 400

    (148) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    STAR            reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    AND             reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OR              reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMI_COLON      reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 401

    (193) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (215) empty -> .
    (70) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (73) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (74) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (75) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (76) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (187) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (57) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (59) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (56) USING -> . USING_KWD ID_LIST AS_KWD ID
    (63) FLOW_CONTROL -> . DECISION
    (64) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (193) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (199) REPETITION -> . CONDITIONAL_REP
    (200) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (201) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (204) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT_STAR                 shift and go to state 424
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 402

    (201) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 425


state 403

    (203) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 203 (seen_while_exp -> empty .)


state 404

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (207) seen_for_start_exp -> . empty
    (215) empty -> .

    SEMI_COLON      reduce using rule 215 (empty -> .)

    seen_for_start_exp             shift and go to state 426
    empty                          shift and go to state 427

state 405

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLASS_KWD       reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    ID              reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 406

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .

    COMMA           reduce using rule 159 (ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)
    COLON           reduce using rule 159 (ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)


state 407

    (172) ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 172 (ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 408

    (176) ARG_LIST_P -> COMMA VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (112) FACTOR -> VAR . seen_var_as_factor
    (129) seen_var_as_factor -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)

    seen_var_as_factor             shift and go to state 428
    empty                          shift and go to state 239

state 409

    (177) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (180) seen_arg -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_arg                       shift and go to state 429
    empty                          shift and go to state 326

state 410

    (178) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (110) FACTOR -> FUNC_CALL .
    (180) seen_arg -> . empty
    (215) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 110 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 110 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 110 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 110 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 110 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 110 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 110 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 110 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 110 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 110 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 110 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 110 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 110 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 110 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 110 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 110 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 215 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 215 (empty -> .) ]

    seen_arg                       shift and go to state 430
    empty                          shift and go to state 326

state 411

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (153) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (154) ARRAY_P -> . empty
    (215) empty -> .

    OPEN_BRACKET    shift and go to state 431
    EQUALS          reduce using rule 215 (empty -> .)
    PLUS_EQUALS     reduce using rule 215 (empty -> .)
    MINUS_EQUALS    reduce using rule 215 (empty -> .)
    TIMES_EQUALS    reduce using rule 215 (empty -> .)
    OVER_EQUALS     reduce using rule 215 (empty -> .)
    PLUS_PLUS       reduce using rule 215 (empty -> .)
    MINUS_MINUS     reduce using rule 215 (empty -> .)
    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    ARRAY_P                        shift and go to state 432
    empty                          shift and go to state 433

state 412

    (24) READABLE_LIST_P -> COMMA VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (128) seen_var_in_assign -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_var_in_assign             shift and go to state 434
    empty                          shift and go to state 140

state 413

    (190) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (192) seen_printable -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_printable                 shift and go to state 435
    empty                          shift and go to state 338

state 414

    (57) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (61) seen_file_path -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)

    seen_file_path                 shift and go to state 436
    empty                          shift and go to state 437

state 415

    (59) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (61) seen_file_path -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)

    seen_file_path                 shift and go to state 438
    empty                          shift and go to state 437

state 416

    (87) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (87) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (88) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (89) EXP_P -> . empty
    (215) empty -> .

    PLUS            shift and go to state 297
    MINUS           shift and go to state 298
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    EXP_P                          shift and go to state 439
    empty                          shift and go to state 299

state 417

    (88) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (87) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (88) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (89) EXP_P -> . empty
    (215) empty -> .

    PLUS            shift and go to state 297
    MINUS           shift and go to state 298
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    EXP_P                          shift and go to state 440
    empty                          shift and go to state 299

state 418

    (164) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (164) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (165) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (166) TERM_P -> . empty
    (215) empty -> .

    STAR            shift and go to state 303
    FWD_SLASH       shift and go to state 304
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    TERM_P                         shift and go to state 441
    empty                          shift and go to state 305

state 419

    (165) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (164) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (165) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (166) TERM_P -> . empty
    (215) empty -> .

    STAR            shift and go to state 303
    FWD_SLASH       shift and go to state 304
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    TERM_P                         shift and go to state 442
    empty                          shift and go to state 305

state 420

    (106) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (127) seen_close_parenthesis -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_close_parenthesis         shift and go to state 443
    empty                          shift and go to state 389

state 421

    (107) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (127) seen_close_parenthesis -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_close_parenthesis         shift and go to state 444
    empty                          shift and go to state 389

state 422

    (108) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (127) seen_close_parenthesis -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_close_parenthesis         shift and go to state 445
    empty                          shift and go to state 389

state 423

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA . EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 446
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 424

    (193) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 447


state 425

    (201) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (215) empty -> .
    (70) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (73) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (74) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (75) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (76) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (187) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (57) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (59) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (56) USING -> . USING_KWD ID_LIST AS_KWD ID
    (63) FLOW_CONTROL -> . DECISION
    (64) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (193) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (199) REPETITION -> . CONDITIONAL_REP
    (200) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (201) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (204) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT_STAR                 shift and go to state 448
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 426

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 449


state 427

    (207) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 207 (seen_for_start_exp -> empty .)


state 428

    (176) ARG_LIST_P -> COMMA VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (112) FACTOR -> VAR seen_var_as_factor .
    (180) seen_arg -> . empty
    (215) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 112 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 112 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 215 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 215 (empty -> .) ]

    seen_arg                       shift and go to state 450
    empty                          shift and go to state 326

state 429

    (177) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    ARG_LIST_P                     shift and go to state 451
    empty                          shift and go to state 374

state 430

    (178) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    ARG_LIST_P                     shift and go to state 452
    empty                          shift and go to state 374

state 431

    (153) ARRAY_P -> OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (156) seen_open_bracket -> . empty
    (215) empty -> .

    MINUS           reduce using rule 215 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 215 (empty -> .)
    NOT             reduce using rule 215 (empty -> .)
    STOI_KWD        reduce using rule 215 (empty -> .)
    STOF_KWD        reduce using rule 215 (empty -> .)
    STOB_KWD        reduce using rule 215 (empty -> .)
    SUBSTR_KWD      reduce using rule 215 (empty -> .)
    ID              reduce using rule 215 (empty -> .)
    NEW_KWD         reduce using rule 215 (empty -> .)
    CTE_I           reduce using rule 215 (empty -> .)
    CTE_F           reduce using rule 215 (empty -> .)
    CTE_S           reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    CTE_TRUE        reduce using rule 215 (empty -> .)
    CTE_FALSE       reduce using rule 215 (empty -> .)

    seen_open_bracket              shift and go to state 453
    empty                          shift and go to state 267

state 432

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_EQUALS     reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_EQUALS    reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    TIMES_EQUALS    reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OVER_EQUALS     reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_PLUS       reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_MINUS     reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 433

    (154) ARRAY_P -> empty .

    EQUALS          reduce using rule 154 (ARRAY_P -> empty .)
    PLUS_EQUALS     reduce using rule 154 (ARRAY_P -> empty .)
    MINUS_EQUALS    reduce using rule 154 (ARRAY_P -> empty .)
    TIMES_EQUALS    reduce using rule 154 (ARRAY_P -> empty .)
    OVER_EQUALS     reduce using rule 154 (ARRAY_P -> empty .)
    PLUS_PLUS       reduce using rule 154 (ARRAY_P -> empty .)
    MINUS_MINUS     reduce using rule 154 (ARRAY_P -> empty .)
    STAR            reduce using rule 154 (ARRAY_P -> empty .)
    FWD_SLASH       reduce using rule 154 (ARRAY_P -> empty .)
    PLUS            reduce using rule 154 (ARRAY_P -> empty .)
    MINUS           reduce using rule 154 (ARRAY_P -> empty .)
    BIGGER          reduce using rule 154 (ARRAY_P -> empty .)
    BIGGER_EQ       reduce using rule 154 (ARRAY_P -> empty .)
    SMALLER         reduce using rule 154 (ARRAY_P -> empty .)
    SMALLER_EQ      reduce using rule 154 (ARRAY_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 154 (ARRAY_P -> empty .)
    NOT_EQUALS      reduce using rule 154 (ARRAY_P -> empty .)
    AND             reduce using rule 154 (ARRAY_P -> empty .)
    OR              reduce using rule 154 (ARRAY_P -> empty .)
    SEMI_COLON      reduce using rule 154 (ARRAY_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 154 (ARRAY_P -> empty .)
    COMMA           reduce using rule 154 (ARRAY_P -> empty .)
    CLOSE_BRACKET   reduce using rule 154 (ARRAY_P -> empty .)


state 434

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_readable                  shift and go to state 454
    empty                          shift and go to state 335

state 435

    (190) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (190) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (191) PRINTABLE_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 382
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    PRINTABLE_P                    shift and go to state 455
    empty                          shift and go to state 383

state 436

    (57) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 456


state 437

    (61) seen_file_path -> empty .

    COMMA           reduce using rule 61 (seen_file_path -> empty .)


state 438

    (59) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 457


state 439

    (87) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 87 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 440

    (88) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 88 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 441

    (164) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 442

    (165) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 443

    (106) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (118) seen_stox_factor -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_stox_factor               shift and go to state 458
    empty                          shift and go to state 459

state 444

    (107) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (118) seen_stox_factor -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_stox_factor               shift and go to state 460
    empty                          shift and go to state 459

state 445

    (108) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (118) seen_stox_factor -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_stox_factor               shift and go to state 461
    empty                          shift and go to state 459

state 446

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION . seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (115) seen_substr_idx -> . empty
    (215) empty -> .

    COMMA           reduce using rule 215 (empty -> .)

    seen_substr_idx                shift and go to state 462
    empty                          shift and go to state 463

state 447

    (193) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (194) DECISION_P -> . ELSE_KWD seen_else_kwd DECISION
    (195) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (196) DECISION_P -> . empty
    (215) empty -> .

    ELSE_KWD        shift and go to state 465
    ID              reduce using rule 215 (empty -> .)
    READ_KWD        reduce using rule 215 (empty -> .)
    PRINT_KWD       reduce using rule 215 (empty -> .)
    PRINTLN_KWD     reduce using rule 215 (empty -> .)
    OPEN_KWD        reduce using rule 215 (empty -> .)
    WRITE_KWD       reduce using rule 215 (empty -> .)
    USING_KWD       reduce using rule 215 (empty -> .)
    RETURN_KWD      reduce using rule 215 (empty -> .)
    THIS_KWD        reduce using rule 215 (empty -> .)
    IF_KWD          reduce using rule 215 (empty -> .)
    WHILE_KWD       reduce using rule 215 (empty -> .)
    FOR_KWD         reduce using rule 215 (empty -> .)
    CLOSE_CURLY     reduce using rule 215 (empty -> .)

    DECISION_P                     shift and go to state 464
    empty                          shift and go to state 466

state 448

    (201) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 467


state 449

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 468
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 450

    (176) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    ARG_LIST_P                     shift and go to state 469
    empty                          shift and go to state 374

state 451

    (177) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 177 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 452

    (178) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 178 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 453

    (153) ARRAY_P -> OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 470
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 454

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (215) empty -> .

    COMMA           shift and go to state 379
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    READABLE_LIST_P                shift and go to state 471
    empty                          shift and go to state 380

state 455

    (190) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 190 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 456

    (57) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 472
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 457

    (59) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 473
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 458

    (106) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 106 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 459

    (118) seen_stox_factor -> empty .

    STAR            reduce using rule 118 (seen_stox_factor -> empty .)
    FWD_SLASH       reduce using rule 118 (seen_stox_factor -> empty .)
    PLUS            reduce using rule 118 (seen_stox_factor -> empty .)
    MINUS           reduce using rule 118 (seen_stox_factor -> empty .)
    BIGGER          reduce using rule 118 (seen_stox_factor -> empty .)
    BIGGER_EQ       reduce using rule 118 (seen_stox_factor -> empty .)
    SMALLER         reduce using rule 118 (seen_stox_factor -> empty .)
    SMALLER_EQ      reduce using rule 118 (seen_stox_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 118 (seen_stox_factor -> empty .)
    NOT_EQUALS      reduce using rule 118 (seen_stox_factor -> empty .)
    AND             reduce using rule 118 (seen_stox_factor -> empty .)
    OR              reduce using rule 118 (seen_stox_factor -> empty .)
    SEMI_COLON      reduce using rule 118 (seen_stox_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 118 (seen_stox_factor -> empty .)
    COMMA           reduce using rule 118 (seen_stox_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 118 (seen_stox_factor -> empty .)


state 460

    (107) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 107 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 461

    (108) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 108 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 462

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx . COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    COMMA           shift and go to state 474


state 463

    (115) seen_substr_idx -> empty .

    COMMA           reduce using rule 115 (seen_substr_idx -> empty .)


state 464

    (193) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINT_KWD       reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINTLN_KWD     reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    OPEN_KWD        reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    USING_KWD       reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    RETURN_KWD      reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    THIS_KWD        reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 193 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 465

    (194) DECISION_P -> ELSE_KWD . seen_else_kwd DECISION
    (195) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (198) seen_else_kwd -> . empty
    (215) empty -> .

    OPEN_CURLY      reduce using rule 215 (empty -> .)
    IF_KWD          reduce using rule 215 (empty -> .)

    seen_else_kwd                  shift and go to state 475
    empty                          shift and go to state 476

state 466

    (196) DECISION_P -> empty .

    ID              reduce using rule 196 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 196 (DECISION_P -> empty .)
    PRINT_KWD       reduce using rule 196 (DECISION_P -> empty .)
    PRINTLN_KWD     reduce using rule 196 (DECISION_P -> empty .)
    OPEN_KWD        reduce using rule 196 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 196 (DECISION_P -> empty .)
    USING_KWD       reduce using rule 196 (DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 196 (DECISION_P -> empty .)
    THIS_KWD        reduce using rule 196 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 196 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 196 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 196 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 196 (DECISION_P -> empty .)


state 467

    (201) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    USING_KWD       reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 201 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 468

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (208) seen_for_end_exp -> . empty
    (215) empty -> .

    SEMI_COLON      reduce using rule 215 (empty -> .)

    seen_for_end_exp               shift and go to state 477
    empty                          shift and go to state 478

state 469

    (176) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 176 (ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 470

    (153) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (157) seen_array_access -> . empty
    (215) empty -> .

    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_array_access              shift and go to state 479
    empty                          shift and go to state 377

state 471

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 24 (READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 472

    (57) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (62) seen_separator -> . empty
    (215) empty -> .

    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_separator                 shift and go to state 480
    empty                          shift and go to state 481

state 473

    (59) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (62) seen_separator -> . empty
    (215) empty -> .

    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_separator                 shift and go to state 482
    empty                          shift and go to state 481

state 474

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA . EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (91) EXPRESSION -> . EXP
    (92) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (84) EXP -> . TERM seen_term EXP_P
    (85) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (103) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (104) FACTOR -> . NOT seen_not FACTOR pop_not
    (105) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (106) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (107) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) FACTOR -> . FUNC_CALL
    (111) FACTOR -> . CLASS_INSTANCE
    (112) FACTOR -> . VAR seen_var_as_factor
    (113) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (136) CONSTANT -> . CTE_I seen_cte_i
    (137) CONSTANT -> . CTE_F seen_cte_f
    (138) CONSTANT -> . CTE_S seen_cte_s
    (139) CONSTANT -> . CTE_B
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (140) CTE_B -> . CTE_TRUE seen_cte_true
    (141) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 159
    OPEN_PARENTHESIS shift and go to state 157
    NOT             shift and go to state 161
    STOI_KWD        shift and go to state 162
    STOF_KWD        shift and go to state 163
    STOB_KWD        shift and go to state 164
    SUBSTR_KWD      shift and go to state 165
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 483
    EXP                            shift and go to state 155
    TERM                           shift and go to state 158
    FACTOR                         shift and go to state 160
    FUNC_CALL                      shift and go to state 252
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 173

state 475

    (194) DECISION_P -> ELSE_KWD seen_else_kwd . DECISION
    (195) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (193) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 485
    IF_KWD          shift and go to state 111

    DECISION                       shift and go to state 484

state 476

    (198) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 198 (seen_else_kwd -> empty .)
    IF_KWD          reduce using rule 198 (seen_else_kwd -> empty .)


state 477

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 486


state 478

    (208) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 208 (seen_for_end_exp -> empty .)


state 479

    (153) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 487


state 480

    (57) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 488


state 481

    (62) seen_separator -> empty .

    CLOSE_PARENTHESIS reduce using rule 62 (seen_separator -> empty .)


state 482

    (59) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 489


state 483

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION . seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (116) seen_substr_size -> . empty
    (215) empty -> .

    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_substr_size               shift and go to state 490
    empty                          shift and go to state 491

state 484

    (194) DECISION_P -> ELSE_KWD seen_else_kwd DECISION .

    ID              reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    READ_KWD        reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    PRINT_KWD       reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    PRINTLN_KWD     reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    OPEN_KWD        reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    WRITE_KWD       reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    USING_KWD       reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    RETURN_KWD      reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    THIS_KWD        reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    IF_KWD          reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    WHILE_KWD       reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    FOR_KWD         reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    CLOSE_CURLY     reduce using rule 194 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)


state 485

    (195) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (215) empty -> .
    (70) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (73) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (74) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (75) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (76) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (187) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (57) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (59) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (56) USING -> . USING_KWD ID_LIST AS_KWD ID
    (63) FLOW_CONTROL -> . DECISION
    (64) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (193) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (199) REPETITION -> . CONDITIONAL_REP
    (200) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (201) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (204) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT_STAR                 shift and go to state 492
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 486

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (65) FOR_INCR_STATEMENT -> . ASSIGN
    (66) FOR_INCR_STATEMENT -> . FUNC_CALL
    (67) FOR_INCR_STATEMENT -> . READ
    (68) FOR_INCR_STATEMENT -> . PRINT
    (69) FOR_INCR_STATEMENT -> . PRINTLN
    (70) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (73) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (74) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (75) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (76) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (187) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    THIS_KWD        shift and go to state 110

    VAR                            shift and go to state 98
    FOR_INCR_STATEMENT             shift and go to state 493
    ASSIGN                         shift and go to state 494
    FUNC_CALL                      shift and go to state 495
    READ                           shift and go to state 496
    PRINT                          shift and go to state 497
    PRINTLN                        shift and go to state 498
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109

state 487

    (153) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (153) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (154) ARRAY_P -> . empty
    (215) empty -> .

    OPEN_BRACKET    shift and go to state 431
    EQUALS          reduce using rule 215 (empty -> .)
    PLUS_EQUALS     reduce using rule 215 (empty -> .)
    MINUS_EQUALS    reduce using rule 215 (empty -> .)
    TIMES_EQUALS    reduce using rule 215 (empty -> .)
    OVER_EQUALS     reduce using rule 215 (empty -> .)
    PLUS_PLUS       reduce using rule 215 (empty -> .)
    MINUS_MINUS     reduce using rule 215 (empty -> .)
    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    ARRAY_P                        shift and go to state 499
    empty                          shift and go to state 433

state 488

    (57) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 57 (OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 489

    (59) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 59 (WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 490

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size . CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    CLOSE_PARENTHESIS shift and go to state 500


state 491

    (116) seen_substr_size -> empty .

    CLOSE_PARENTHESIS reduce using rule 116 (seen_substr_size -> empty .)


state 492

    (195) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 501


state 493

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (206) seen_for_incr_exp -> . empty
    (215) empty -> .

    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)

    seen_for_incr_exp              shift and go to state 502
    empty                          shift and go to state 503

state 494

    (65) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 65 (FOR_INCR_STATEMENT -> ASSIGN .)


state 495

    (66) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 66 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 496

    (67) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 67 (FOR_INCR_STATEMENT -> READ .)


state 497

    (68) FOR_INCR_STATEMENT -> PRINT .

    CLOSE_PARENTHESIS reduce using rule 68 (FOR_INCR_STATEMENT -> PRINT .)


state 498

    (69) FOR_INCR_STATEMENT -> PRINTLN .

    CLOSE_PARENTHESIS reduce using rule 69 (FOR_INCR_STATEMENT -> PRINTLN .)


state 499

    (153) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_EQUALS     reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_EQUALS    reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    TIMES_EQUALS    reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OVER_EQUALS     reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_PLUS       reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_MINUS     reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 500

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS . seen_close_parenthesis seen_substr
    (127) seen_close_parenthesis -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_close_parenthesis         shift and go to state 504
    empty                          shift and go to state 389

state 501

    (195) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    USING_KWD       reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 195 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 502

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 505


state 503

    (206) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 206 (seen_for_incr_exp -> empty .)


state 504

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis . seen_substr
    (117) seen_substr -> . empty
    (215) empty -> .

    STAR            reduce using rule 215 (empty -> .)
    FWD_SLASH       reduce using rule 215 (empty -> .)
    PLUS            reduce using rule 215 (empty -> .)
    MINUS           reduce using rule 215 (empty -> .)
    BIGGER          reduce using rule 215 (empty -> .)
    BIGGER_EQ       reduce using rule 215 (empty -> .)
    SMALLER         reduce using rule 215 (empty -> .)
    SMALLER_EQ      reduce using rule 215 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 215 (empty -> .)
    NOT_EQUALS      reduce using rule 215 (empty -> .)
    AND             reduce using rule 215 (empty -> .)
    OR              reduce using rule 215 (empty -> .)
    SEMI_COLON      reduce using rule 215 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 215 (empty -> .)
    COMMA           reduce using rule 215 (empty -> .)
    CLOSE_BRACKET   reduce using rule 215 (empty -> .)

    seen_substr                    shift and go to state 506
    empty                          shift and go to state 507

state 505

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 508


state 506

    (109) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .

    STAR            reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    FWD_SLASH       reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    PLUS            reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    MINUS           reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    BIGGER          reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    BIGGER_EQ       reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SMALLER         reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SMALLER_EQ      reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    DOUBLE_EQUALS   reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    NOT_EQUALS      reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    AND             reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    OR              reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SEMI_COLON      reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    CLOSE_PARENTHESIS reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    COMMA           reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    CLOSE_BRACKET   reduce using rule 109 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)


state 507

    (117) seen_substr -> empty .

    STAR            reduce using rule 117 (seen_substr -> empty .)
    FWD_SLASH       reduce using rule 117 (seen_substr -> empty .)
    PLUS            reduce using rule 117 (seen_substr -> empty .)
    MINUS           reduce using rule 117 (seen_substr -> empty .)
    BIGGER          reduce using rule 117 (seen_substr -> empty .)
    BIGGER_EQ       reduce using rule 117 (seen_substr -> empty .)
    SMALLER         reduce using rule 117 (seen_substr -> empty .)
    SMALLER_EQ      reduce using rule 117 (seen_substr -> empty .)
    DOUBLE_EQUALS   reduce using rule 117 (seen_substr -> empty .)
    NOT_EQUALS      reduce using rule 117 (seen_substr -> empty .)
    AND             reduce using rule 117 (seen_substr -> empty .)
    OR              reduce using rule 117 (seen_substr -> empty .)
    SEMI_COLON      reduce using rule 117 (seen_substr -> empty .)
    CLOSE_PARENTHESIS reduce using rule 117 (seen_substr -> empty .)
    COMMA           reduce using rule 117 (seen_substr -> empty .)
    CLOSE_BRACKET   reduce using rule 117 (seen_substr -> empty .)


state 508

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (215) empty -> .
    (70) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (73) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (74) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (75) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (76) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (187) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (57) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (59) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (56) USING -> . USING_KWD ID_LIST AS_KWD ID
    (63) FLOW_CONTROL -> . DECISION
    (64) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (142) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (193) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (199) REPETITION -> . CONDITIONAL_REP
    (200) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (201) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (204) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 215 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    VAR                            shift and go to state 98
    STATEMENT_STAR                 shift and go to state 509
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 509

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 510


state 510

    (204) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    USING_KWD       reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 204 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLASS_KWD in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 14 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SEMI_COLON in state 154 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (CLASS_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 263 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 263
WARNING: reduce/reduce conflict in state 324 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 324
WARNING: reduce/reduce conflict in state 352 resolved using rule (pop_unary_minus -> empty)
WARNING: rejected rule (seen_factor -> empty) in state 352
WARNING: reduce/reduce conflict in state 410 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 410
WARNING: reduce/reduce conflict in state 428 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 428
