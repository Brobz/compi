Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION
Rule 3     STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION
Rule 4     STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION
Rule 5     STRUCTURE_DEFINITION -> empty
Rule 6     seen_program_id -> empty
Rule 7     seen_main_kwd -> empty
Rule 8     CLASS_STAR -> CLASS CLASS_STAR
Rule 9     CLASS_STAR -> empty
Rule 10    CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
Rule 11    seen_class_id_declaration -> empty
Rule 12    seen_class_attr -> empty
Rule 13    CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 14    VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 15    VAR_LIST_STAR -> empty
Rule 16    VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON
Rule 17    SYMBOL_LIST -> ID SYMBOL_LIST_P
Rule 18    SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P
Rule 19    SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P
Rule 20    SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P
Rule 21    SYMBOL_LIST_P -> COMMA
Rule 22    SYMBOL_LIST_P -> empty
Rule 23    READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 24    READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 25    READABLE_LIST_P -> empty
Rule 26    seen_readable -> empty
Rule 27    GLOBAL_VAR -> VAR_LIST_STAR
Rule 28    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 29    FUNC_DEF_STAR -> empty
Rule 30    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 31    seen_func_id -> empty
Rule 32    seen_func_params -> empty
Rule 33    seen_func_vars -> empty
Rule 34    FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P
Rule 35    FUNC_PARAM -> empty
Rule 36    FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P
Rule 37    FUNC_PARAM_P -> empty
Rule 38    ARG_DECLARATION -> ID COLON TYPE
Rule 39    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 40    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 41    STATEMENT_STAR -> empty
Rule 42    STATEMENT -> ASSIGN SEMI_COLON
Rule 43    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 44    STATEMENT -> READ SEMI_COLON
Rule 45    STATEMENT -> PRINT SEMI_COLON
Rule 46    STATEMENT -> PRINTLN SEMI_COLON
Rule 47    STATEMENT -> OPEN SEMI_COLON
Rule 48    STATEMENT -> WRITE SEMI_COLON
Rule 49    STATEMENT -> FLOW_CONTROL
Rule 50    STATEMENT -> FUNC_RETURN
Rule 51    OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 52    seen_open_buffer -> empty
Rule 53    WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 54    seen_write_buffer -> empty
Rule 55    seen_file_path -> empty
Rule 56    seen_separator -> empty
Rule 57    FLOW_CONTROL -> DECISION
Rule 58    FLOW_CONTROL -> REPETITION
Rule 59    FOR_INCR_STATEMENT -> ASSIGN
Rule 60    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 61    FOR_INCR_STATEMENT -> READ
Rule 62    FOR_INCR_STATEMENT -> PRINT
Rule 63    FOR_INCR_STATEMENT -> PRINTLN
Rule 64    ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
Rule 65    ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
Rule 66    ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
Rule 67    ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
Rule 68    ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
Rule 69    ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
Rule 70    ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
Rule 71    seen_equals -> empty
Rule 72    seen_plus_equals -> empty
Rule 73    seen_minus_equals -> empty
Rule 74    seen_times_equals -> empty
Rule 75    seen_over_equals -> empty
Rule 76    seen_plus_plus -> empty
Rule 77    seen_minus_minus -> empty
Rule 78    EXP -> TERM seen_term EXP_P
Rule 79    EXP -> MINUS seen_unary_minus EXP pop_unary_minus
Rule 80    seen_term -> <empty>
Rule 81    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 82    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 83    EXP_P -> empty
Rule 84    seen_term_op -> <empty>
Rule 85    EXPRESSION -> EXP
Rule 86    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 87    seen_comp -> empty
Rule 88    seen_comp_op -> empty
Rule 89    COMP -> BIGGER
Rule 90    COMP -> BIGGER_EQ
Rule 91    COMP -> SMALLER
Rule 92    COMP -> SMALLER_EQ
Rule 93    COMP -> DOUBLE_EQUALS
Rule 94    COMP -> NOT_EQUALS
Rule 95    COMP -> AND
Rule 96    COMP -> OR
Rule 97    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 98    FACTOR -> NOT seen_not FACTOR pop_not
Rule 99    FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus
Rule 100   FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 101   FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 102   FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 103   FACTOR -> FUNC_CALL
Rule 104   FACTOR -> CLASS_INSTANCE
Rule 105   FACTOR -> VAR seen_var_as_factor
Rule 106   FACTOR -> CONSTANT
Rule 107   seen_stox_factor -> empty
Rule 108   seen_stoi_kwd -> empty
Rule 109   seen_stof_kwd -> empty
Rule 110   seen_stob_kwd -> empty
Rule 111   pop_not -> empty
Rule 112   seen_not -> empty
Rule 113   pop_unary_minus -> empty
Rule 114   seen_unary_minus -> empty
Rule 115   seen_open_parenthesis -> empty
Rule 116   seen_close_parenthesis -> empty
Rule 117   seen_var_in_assign -> empty
Rule 118   seen_var_as_factor -> empty
Rule 119   seen_var_in_io -> empty
Rule 120   seen_cte_i -> empty
Rule 121   seen_cte_f -> empty
Rule 122   seen_cte_s -> empty
Rule 123   seen_cte_false -> empty
Rule 124   seen_cte_true -> empty
Rule 125   CONSTANT -> CTE_I seen_cte_i
Rule 126   CONSTANT -> CTE_F seen_cte_f
Rule 127   CONSTANT -> CTE_S seen_cte_s
Rule 128   CONSTANT -> CTE_B
Rule 129   CTE_B -> CTE_TRUE seen_cte_true
Rule 130   CTE_B -> CTE_FALSE seen_cte_false
Rule 131   CLASS_REFERENCE -> ID DOT seen_dot_operator
Rule 132   CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator
Rule 133   seen_this_kwd -> empty
Rule 134   VAR -> ID
Rule 135   VAR -> ARRAY
Rule 136   VAR -> CLASS_REFERENCE VAR
Rule 137   CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 138   seen_class_id_instance -> empty
Rule 139   seen_dot_operator -> empty
Rule 140   seen_this_dot_operator -> empty
Rule 141   ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 142   ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 143   ARRAY_P -> empty
Rule 144   seen_array_id -> empty
Rule 145   seen_open_bracket -> empty
Rule 146   seen_array_access -> empty
Rule 147   ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
Rule 148   ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
Rule 149   ARRAY_DECLARATION_P -> empty
Rule 150   seen_array_def_id -> empty
Rule 151   seen_array_def_dim -> empty
Rule 152   TERM -> FACTOR seen_factor TERM_P
Rule 153   TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 154   TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 155   TERM_P -> empty
Rule 156   seen_factor -> empty
Rule 157   seen_factor_op -> empty
Rule 158   FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 159   FUNC_CALL -> CLASS_REFERENCE FUNC_CALL
Rule 160   seen_func_call_id -> empty
Rule 161   ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 162   ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 163   ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 164   ARG_LIST -> empty
Rule 165   ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 166   ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 167   ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 168   ARG_LIST_P -> empty
Rule 169   seen_arg -> empty
Rule 170   FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 171   FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 172   FUNC_RETURN -> RETURN_KWD SEMI_COLON
Rule 173   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 174   PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 175   seen_print_kwd -> empty
Rule 176   PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 177   seen_println_kwd -> empty
Rule 178   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 179   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 180   PRINTABLE_P -> empty
Rule 181   seen_printable -> empty
Rule 182   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 183   DECISION_P -> ELSE_KWD seen_else_kwd DECISION
Rule 184   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 185   DECISION_P -> empty
Rule 186   seen_if_kwd -> empty
Rule 187   seen_else_kwd -> empty
Rule 188   REPETITION -> CONDITIONAL_REP
Rule 189   REPETITION -> UNCONDITIONAL_REP
Rule 190   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 191   seen_while_kwd -> empty
Rule 192   seen_while_exp -> empty
Rule 193   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 194   seen_for_kwd -> empty
Rule 195   seen_for_incr_exp -> empty
Rule 196   seen_for_start_exp -> empty
Rule 197   seen_for_end_exp -> empty
Rule 198   TYPE -> TYPE_I
Rule 199   TYPE -> TYPE_F
Rule 200   TYPE -> TYPE_S
Rule 201   TYPE -> TYPE_B
Rule 202   TYPE -> TYPE_O
Rule 203   TYPE -> TYPE_V
Rule 204   empty -> <empty>

Terminals, with rules where they appear

AND                  : 95
ATTR_KWD             : 13
BIGGER               : 89
BIGGER_EQ            : 90
CLASS_KWD            : 10
CLOSE_BRACKET        : 141 142 147 148
CLOSE_CURLY          : 1 10 13 30 39 182 184 190 193
CLOSE_PARENTHESIS    : 1 30 51 53 97 100 101 102 137 158 173 174 176 182 190 193
COLON                : 16 38
COMMA                : 19 20 21 24 36 51 51 53 53 165 166 167 179
CTE_F                : 126
CTE_FALSE            : 130
CTE_I                : 125 147 148
CTE_S                : 127
CTE_TRUE             : 129
DOT                  : 131 132
DOUBLE_EQUALS        : 93
ELSE_KWD             : 183 184
EQUALS               : 64 193
FOR_KWD              : 193
FWD_SLASH            : 154
ID                   : 1 10 17 19 30 38 131 134 137 141 147 158
IF_KWD               : 182
MAIN_KWD             : 1
MINUS                : 79 82 99
MINUS_EQUALS         : 66
MINUS_MINUS          : 70
NEW_KWD              : 137
NOT                  : 98
NOT_EQUALS           : 94
OPEN_BRACKET         : 141 142 147 148
OPEN_CURLY           : 1 10 13 30 39 182 184 190 193
OPEN_KWD             : 51
OPEN_PARENTHESIS     : 1 30 51 53 97 100 101 102 137 158 173 174 176 182 190 193
OR                   : 96
OVER_EQUALS          : 68
PLUS                 : 81
PLUS_EQUALS          : 65
PLUS_PLUS            : 69
PRINTLN_KWD          : 176
PRINT_KWD            : 174
PROGRAM_KWD          : 1
READ_KWD             : 173
RETURN_KWD           : 170 171 172
SEMI_COLON           : 1 16 42 43 44 45 46 47 48 170 171 172 193 193
SMALLER              : 91
SMALLER_EQ           : 92
STAR                 : 153
STOB_KWD             : 102
STOF_KWD             : 101
STOI_KWD             : 100
THIS_KWD             : 132
TIMES_EQUALS         : 67
TYPE_B               : 201
TYPE_F               : 199
TYPE_I               : 198
TYPE_O               : 202
TYPE_S               : 200
TYPE_V               : 203
VARS_KWD             : 39
WHILE_KWD            : 190
WRITE_KWD            : 53
error                : 

Nonterminals, with rules where they appear

ARG_DECLARATION      : 34 36
ARG_LIST             : 158
ARG_LIST_P           : 161 162 163 165 166 167
ARRAY                : 135
ARRAY_DECLARATION    : 18 20
ARRAY_DECLARATION_P  : 147 148
ARRAY_P              : 141 142
ASSIGN               : 42 59
CLASS                : 8
CLASS_ATTR           : 10
CLASS_INSTANCE       : 104
CLASS_REFERENCE      : 136 159
CLASS_STAR           : 3 8
COMP                 : 86
CONDITIONAL_REP      : 188
CONSTANT             : 106
CTE_B                : 128
DECISION             : 57 183
DECISION_P           : 182
EXP                  : 79 85 86
EXPRESSION           : 51 51 53 53 64 65 66 67 68 86 97 100 101 102 141 142 162 166 170 178 179 182 190 193 193
EXP_P                : 78 81 82
FACTOR               : 98 99 152 153 154
FLOW_CONTROL         : 49
FOR_INCR_STATEMENT   : 193
FUNC_CALL            : 43 60 103 159 163 167 171
FUNC_DEF             : 28
FUNC_DEF_STAR        : 4 10 28
FUNC_PARAM           : 30
FUNC_PARAM_P         : 34 36
FUNC_RETURN          : 50
GLOBAL_VAR           : 2
OPEN                 : 47
PRINT                : 45 62
PRINTABLE            : 174 176
PRINTABLE_P          : 178 179
PRINTLN              : 46 63
PROGRAM              : 0
READ                 : 44 61
READABLE_LIST        : 173
READABLE_LIST_P      : 23 24
REPETITION           : 58
STATEMENT            : 40
STATEMENT_STAR       : 1 30 40 182 184 190 193
STRUCTURE_DEFINITION : 1 2 3 4
SYMBOL_LIST          : 16
SYMBOL_LIST_P        : 17 18 19 20
TERM                 : 78 81 82
TERM_P               : 152 153 154
TYPE                 : 16 30 38
UNCONDITIONAL_REP    : 189
VAR                  : 23 24 51 53 64 65 66 67 68 69 70 105 136 161 165 193
VARS                 : 30
VAR_LIST             : 14
VAR_LIST_STAR        : 13 14 27 39
WRITE                : 48
empty                : 5 6 7 9 11 12 15 22 25 26 29 31 32 33 35 37 41 52 54 55 56 71 72 73 74 75 76 77 83 87 88 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 133 138 139 140 143 144 145 146 149 150 151 155 156 157 160 164 168 169 175 177 180 181 185 186 187 191 192 194 195 196 197
pop_not              : 98
pop_unary_minus      : 79 99
seen_arg             : 161 162 163 165 166 167
seen_array_access    : 141 142
seen_array_def_dim   : 147 148
seen_array_def_id    : 147
seen_array_id        : 141
seen_class_attr      : 10
seen_class_id_declaration : 10
seen_class_id_instance : 137
seen_close_parenthesis : 97 100 101 102
seen_comp            : 86
seen_comp_op         : 86
seen_cte_f           : 126
seen_cte_false       : 130
seen_cte_i           : 125 147 148
seen_cte_s           : 127
seen_cte_true        : 129
seen_dot_operator    : 131
seen_else_kwd        : 183 184
seen_equals          : 64
seen_factor          : 152 153 154
seen_factor_op       : 153 154
seen_file_path       : 51 53
seen_for_end_exp     : 193
seen_for_incr_exp    : 193
seen_for_kwd         : 193
seen_for_start_exp   : 193
seen_func_call_id    : 158
seen_func_id         : 30
seen_func_params     : 30
seen_func_vars       : 30
seen_if_kwd          : 182
seen_main_kwd        : 1
seen_minus_equals    : 66
seen_minus_minus     : 70
seen_not             : 98
seen_open_bracket    : 141 142
seen_open_buffer     : 51
seen_open_parenthesis : 97 100 101 102
seen_over_equals     : 68
seen_plus_equals     : 65
seen_plus_plus       : 69
seen_print_kwd       : 174
seen_printable       : 178 179
seen_println_kwd     : 176
seen_program_id      : 1
seen_readable        : 23 24
seen_separator       : 51 53
seen_stob_kwd        : 102
seen_stof_kwd        : 101
seen_stoi_kwd        : 100
seen_stox_factor     : 100 101 102
seen_term            : 78 81 82
seen_term_op         : 81 82
seen_this_dot_operator : 132
seen_this_kwd        : 132
seen_times_equals    : 67
seen_unary_minus     : 79 99
seen_var_as_factor   : 105 161 165
seen_var_in_assign   : 23 24 64 65 66 67 68 69 70
seen_var_in_io       : 51 53
seen_while_exp       : 190
seen_while_kwd       : 190
seen_write_buffer    : 53

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (6) seen_program_id -> . empty
    (204) empty -> .

    SEMI_COLON      reduce using rule 204 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (6) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 6 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (204) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (198) TYPE -> . TYPE_I
    (199) TYPE -> . TYPE_F
    (200) TYPE -> . TYPE_S
    (201) TYPE -> . TYPE_B
    (202) TYPE -> . TYPE_O
    (203) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (147) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 204 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 204 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 204 (empty -> .) ]
  ! ID              [ reduce using rule 204 (empty -> .) ]

    STRUCTURE_DEFINITION           shift and go to state 8
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 7

    (17) SYMBOL_LIST -> ID . SYMBOL_LIST_P
    (147) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (150) seen_array_def_id -> . empty
    (204) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 204 (empty -> .)
    OPEN_BRACKET    reduce using rule 204 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 27
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 8

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 31


state 9

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (204) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (198) TYPE -> . TYPE_I
    (199) TYPE -> . TYPE_F
    (200) TYPE -> . TYPE_S
    (201) TYPE -> . TYPE_B
    (202) TYPE -> . TYPE_O
    (203) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (147) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 204 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 204 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 204 (empty -> .) ]
  ! ID              [ reduce using rule 204 (empty -> .) ]

    GLOBAL_VAR                     shift and go to state 9
    STRUCTURE_DEFINITION           shift and go to state 32
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 10

    (3) STRUCTURE_DEFINITION -> CLASS_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (204) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (198) TYPE -> . TYPE_I
    (199) TYPE -> . TYPE_F
    (200) TYPE -> . TYPE_S
    (201) TYPE -> . TYPE_B
    (202) TYPE -> . TYPE_O
    (203) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (147) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 204 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 204 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 204 (empty -> .) ]
  ! ID              [ reduce using rule 204 (empty -> .) ]

    CLASS_STAR                     shift and go to state 10
    STRUCTURE_DEFINITION           shift and go to state 33
    GLOBAL_VAR                     shift and go to state 9
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 11

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (204) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (198) TYPE -> . TYPE_I
    (199) TYPE -> . TYPE_F
    (200) TYPE -> . TYPE_S
    (201) TYPE -> . TYPE_B
    (202) TYPE -> . TYPE_O
    (203) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (147) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 204 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 204 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 204 (empty -> .) ]
  ! ID              [ reduce using rule 204 (empty -> .) ]

    FUNC_DEF_STAR                  shift and go to state 11
    STRUCTURE_DEFINITION           shift and go to state 34
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 12

    (5) STRUCTURE_DEFINITION -> empty .
    (9) CLASS_STAR -> empty .
    (29) FUNC_DEF_STAR -> empty .
    (15) VAR_LIST_STAR -> empty .

  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
    MAIN_KWD        reduce using rule 5 (STRUCTURE_DEFINITION -> empty .)
    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)

  ! MAIN_KWD        [ reduce using rule 9 (CLASS_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! ID              [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! ID              [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]


state 13

    (27) GLOBAL_VAR -> VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_I          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_F          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_S          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_B          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_O          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_V          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    ID              reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) CLASS_STAR -> CLASS . CLASS_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (204) empty -> .

  ! shift/reduce conflict for CLASS_KWD resolved as shift
    CLASS_KWD       shift and go to state 17
    TYPE_I          reduce using rule 204 (empty -> .)
    TYPE_F          reduce using rule 204 (empty -> .)
    TYPE_S          reduce using rule 204 (empty -> .)
    TYPE_B          reduce using rule 204 (empty -> .)
    TYPE_O          reduce using rule 204 (empty -> .)
    TYPE_V          reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    MAIN_KWD        reduce using rule 204 (empty -> .)

  ! CLASS_KWD       [ reduce using rule 204 (empty -> .) ]

    CLASS                          shift and go to state 14
    CLASS_STAR                     shift and go to state 35
    empty                          shift and go to state 36

state 15

    (28) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (204) empty -> .
    (198) TYPE -> . TYPE_I
    (199) TYPE -> . TYPE_F
    (200) TYPE -> . TYPE_S
    (201) TYPE -> . TYPE_B
    (202) TYPE -> . TYPE_O
    (203) TYPE -> . TYPE_V

  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    CLASS_KWD       reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    MAIN_KWD        reduce using rule 204 (empty -> .)
    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

  ! TYPE_I          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 204 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 204 (empty -> .) ]

    FUNC_DEF                       shift and go to state 15
    FUNC_DEF_STAR                  shift and go to state 37
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 16

    (14) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (204) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (147) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for ID resolved as shift
    CLASS_KWD       reduce using rule 204 (empty -> .)
    TYPE_I          reduce using rule 204 (empty -> .)
    TYPE_F          reduce using rule 204 (empty -> .)
    TYPE_S          reduce using rule 204 (empty -> .)
    TYPE_B          reduce using rule 204 (empty -> .)
    TYPE_O          reduce using rule 204 (empty -> .)
    TYPE_V          reduce using rule 204 (empty -> .)
    MAIN_KWD        reduce using rule 204 (empty -> .)
    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    ID              shift and go to state 7

  ! ID              [ reduce using rule 204 (empty -> .) ]

    VAR_LIST                       shift and go to state 16
    VAR_LIST_STAR                  shift and go to state 39
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 17

    (10) CLASS -> CLASS_KWD . ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 41


state 18

    (30) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 42


state 19

    (16) VAR_LIST -> SYMBOL_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 43


state 20

    (198) TYPE -> TYPE_I .

    ID              reduce using rule 198 (TYPE -> TYPE_I .)
    SEMI_COLON      reduce using rule 198 (TYPE -> TYPE_I .)
    COMMA           reduce using rule 198 (TYPE -> TYPE_I .)
    CLOSE_PARENTHESIS reduce using rule 198 (TYPE -> TYPE_I .)


state 21

    (199) TYPE -> TYPE_F .

    ID              reduce using rule 199 (TYPE -> TYPE_F .)
    SEMI_COLON      reduce using rule 199 (TYPE -> TYPE_F .)
    COMMA           reduce using rule 199 (TYPE -> TYPE_F .)
    CLOSE_PARENTHESIS reduce using rule 199 (TYPE -> TYPE_F .)


state 22

    (200) TYPE -> TYPE_S .

    ID              reduce using rule 200 (TYPE -> TYPE_S .)
    SEMI_COLON      reduce using rule 200 (TYPE -> TYPE_S .)
    COMMA           reduce using rule 200 (TYPE -> TYPE_S .)
    CLOSE_PARENTHESIS reduce using rule 200 (TYPE -> TYPE_S .)


state 23

    (201) TYPE -> TYPE_B .

    ID              reduce using rule 201 (TYPE -> TYPE_B .)
    SEMI_COLON      reduce using rule 201 (TYPE -> TYPE_B .)
    COMMA           reduce using rule 201 (TYPE -> TYPE_B .)
    CLOSE_PARENTHESIS reduce using rule 201 (TYPE -> TYPE_B .)


state 24

    (202) TYPE -> TYPE_O .

    ID              reduce using rule 202 (TYPE -> TYPE_O .)
    SEMI_COLON      reduce using rule 202 (TYPE -> TYPE_O .)
    COMMA           reduce using rule 202 (TYPE -> TYPE_O .)
    CLOSE_PARENTHESIS reduce using rule 202 (TYPE -> TYPE_O .)


state 25

    (203) TYPE -> TYPE_V .

    ID              reduce using rule 203 (TYPE -> TYPE_V .)
    SEMI_COLON      reduce using rule 203 (TYPE -> TYPE_V .)
    COMMA           reduce using rule 203 (TYPE -> TYPE_V .)
    CLOSE_PARENTHESIS reduce using rule 203 (TYPE -> TYPE_V .)


state 26

    (18) SYMBOL_LIST -> ARRAY_DECLARATION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 204 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 44
    empty                          shift and go to state 45

state 27

    (17) SYMBOL_LIST -> ID SYMBOL_LIST_P .

    COLON           reduce using rule 17 (SYMBOL_LIST -> ID SYMBOL_LIST_P .)


state 28

    (147) ARRAY_DECLARATION -> ID seen_array_def_id . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    OPEN_BRACKET    shift and go to state 46


state 29

    (19) SYMBOL_LIST_P -> COMMA . ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> COMMA . ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> COMMA .
    (147) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    ID              shift and go to state 47
    COLON           reduce using rule 21 (SYMBOL_LIST_P -> COMMA .)

    ARRAY_DECLARATION              shift and go to state 48

state 30

    (22) SYMBOL_LIST_P -> empty .
    (150) seen_array_def_id -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)
    OPEN_BRACKET    reduce using rule 150 (seen_array_def_id -> empty .)


state 31

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 49


state 32

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 2 (STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .)


state 33

    (3) STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 3 (STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .)


state 34

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 4 (STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .)


state 35

    (8) CLASS_STAR -> CLASS CLASS_STAR .

    CLASS_KWD       reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_I          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_F          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_S          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_B          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_O          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_V          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    ID              reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)


state 36

    (9) CLASS_STAR -> empty .

    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 9 (CLASS_STAR -> empty .)


state 37

    (28) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    CLASS_KWD       reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_I          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_F          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_S          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_B          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_O          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_V          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    ID              reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    MAIN_KWD        reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 38

    (29) FUNC_DEF_STAR -> empty .

    CLASS_KWD       reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_I          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_F          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_S          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_B          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_O          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_V          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    ID              reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    MAIN_KWD        reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 29 (FUNC_DEF_STAR -> empty .)


state 39

    (14) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_I          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_F          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_S          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_B          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_O          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_V          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    ID              reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 40

    (15) VAR_LIST_STAR -> empty .

    CLASS_KWD       reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_I          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_F          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_S          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_B          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_O          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_V          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    ID              reduce using rule 15 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 15 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 15 (VAR_LIST_STAR -> empty .)


state 41

    (10) CLASS -> CLASS_KWD ID . seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (11) seen_class_id_declaration -> . empty
    (204) empty -> .

    OPEN_CURLY      reduce using rule 204 (empty -> .)

    seen_class_id_declaration      shift and go to state 50
    empty                          shift and go to state 51

state 42

    (30) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (31) seen_func_id -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_func_id                   shift and go to state 52
    empty                          shift and go to state 53

state 43

    (16) VAR_LIST -> SYMBOL_LIST COLON . TYPE SEMI_COLON
    (198) TYPE -> . TYPE_I
    (199) TYPE -> . TYPE_F
    (200) TYPE -> . TYPE_S
    (201) TYPE -> . TYPE_B
    (202) TYPE -> . TYPE_O
    (203) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 54

state 44

    (18) SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P .

    COLON           reduce using rule 18 (SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P .)


state 45

    (22) SYMBOL_LIST_P -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)


state 46

    (147) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CTE_I           shift and go to state 55


state 47

    (19) SYMBOL_LIST_P -> COMMA ID . SYMBOL_LIST_P
    (147) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (150) seen_array_def_id -> . empty
    (204) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 204 (empty -> .)
    OPEN_BRACKET    reduce using rule 204 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 56
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 48

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 204 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 57
    empty                          shift and go to state 45

state 49

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 58


state 50

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration . OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 59


state 51

    (11) seen_class_id_declaration -> empty .

    OPEN_CURLY      reduce using rule 11 (seen_class_id_declaration -> empty .)


state 52

    (30) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 60


state 53

    (31) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 31 (seen_func_id -> empty .)


state 54

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 61


state 55

    (147) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (120) seen_cte_i -> . empty
    (204) empty -> .

    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_cte_i                     shift and go to state 62
    empty                          shift and go to state 63

state 56

    (19) SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .

    COLON           reduce using rule 19 (SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .)


state 57

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P .

    COLON           reduce using rule 20 (SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P .)


state 58

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 64


state 59

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY . CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (13) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 66

    CLASS_ATTR                     shift and go to state 65

state 60

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (34) FUNC_PARAM -> . ARG_DECLARATION FUNC_PARAM_P
    (35) FUNC_PARAM -> . empty
    (38) ARG_DECLARATION -> . ID COLON TYPE
    (204) empty -> .

    ID              shift and go to state 67
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    FUNC_PARAM                     shift and go to state 68
    ARG_DECLARATION                shift and go to state 69
    empty                          shift and go to state 70

state 61

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLASS_KWD       reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_I          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_F          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_S          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_B          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_O          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_V          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)


state 62

    (147) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (151) seen_array_def_dim -> . empty
    (204) empty -> .

    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_array_def_dim             shift and go to state 71
    empty                          shift and go to state 72

state 63

    (120) seen_cte_i -> empty .

    CLOSE_BRACKET   reduce using rule 120 (seen_cte_i -> empty .)
    STAR            reduce using rule 120 (seen_cte_i -> empty .)
    FWD_SLASH       reduce using rule 120 (seen_cte_i -> empty .)
    PLUS            reduce using rule 120 (seen_cte_i -> empty .)
    MINUS           reduce using rule 120 (seen_cte_i -> empty .)
    BIGGER          reduce using rule 120 (seen_cte_i -> empty .)
    BIGGER_EQ       reduce using rule 120 (seen_cte_i -> empty .)
    SMALLER         reduce using rule 120 (seen_cte_i -> empty .)
    SMALLER_EQ      reduce using rule 120 (seen_cte_i -> empty .)
    DOUBLE_EQUALS   reduce using rule 120 (seen_cte_i -> empty .)
    NOT_EQUALS      reduce using rule 120 (seen_cte_i -> empty .)
    AND             reduce using rule 120 (seen_cte_i -> empty .)
    OR              reduce using rule 120 (seen_cte_i -> empty .)
    SEMI_COLON      reduce using rule 120 (seen_cte_i -> empty .)
    CLOSE_PARENTHESIS reduce using rule 120 (seen_cte_i -> empty .)
    COMMA           reduce using rule 120 (seen_cte_i -> empty .)


state 64

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (7) seen_main_kwd -> . empty
    (204) empty -> .

    ID              reduce using rule 204 (empty -> .)
    READ_KWD        reduce using rule 204 (empty -> .)
    PRINT_KWD       reduce using rule 204 (empty -> .)
    PRINTLN_KWD     reduce using rule 204 (empty -> .)
    OPEN_KWD        reduce using rule 204 (empty -> .)
    WRITE_KWD       reduce using rule 204 (empty -> .)
    RETURN_KWD      reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    IF_KWD          reduce using rule 204 (empty -> .)
    WHILE_KWD       reduce using rule 204 (empty -> .)
    FOR_KWD         reduce using rule 204 (empty -> .)
    CLOSE_CURLY     reduce using rule 204 (empty -> .)

    seen_main_kwd                  shift and go to state 73
    empty                          shift and go to state 74

state 65

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR . seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (12) seen_class_attr -> . empty
    (204) empty -> .

    TYPE_I          reduce using rule 204 (empty -> .)
    TYPE_F          reduce using rule 204 (empty -> .)
    TYPE_S          reduce using rule 204 (empty -> .)
    TYPE_B          reduce using rule 204 (empty -> .)
    TYPE_O          reduce using rule 204 (empty -> .)
    TYPE_V          reduce using rule 204 (empty -> .)
    CLOSE_CURLY     reduce using rule 204 (empty -> .)

    seen_class_attr                shift and go to state 75
    empty                          shift and go to state 76

state 66

    (13) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 77


state 67

    (38) ARG_DECLARATION -> ID . COLON TYPE

    COLON           shift and go to state 78


state 68

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 79


state 69

    (34) FUNC_PARAM -> ARG_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA ARG_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 81
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 80
    empty                          shift and go to state 82

state 70

    (35) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 35 (FUNC_PARAM -> empty .)


state 71

    (147) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_BRACKET   shift and go to state 83


state 72

    (151) seen_array_def_dim -> empty .

    CLOSE_BRACKET   reduce using rule 151 (seen_array_def_dim -> empty .)


state 73

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (204) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (173) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (174) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (176) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (170) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (171) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (172) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (182) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (188) REPETITION -> . CONDITIONAL_REP
    (189) REPETITION -> . UNCONDITIONAL_REP
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (190) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (193) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 99
    PRINT_KWD       shift and go to state 100
    PRINTLN_KWD     shift and go to state 101
    OPEN_KWD        shift and go to state 102
    WRITE_KWD       shift and go to state 103
    RETURN_KWD      shift and go to state 106
    THIS_KWD        shift and go to state 108
    IF_KWD          shift and go to state 109
    WHILE_KWD       shift and go to state 112
    FOR_KWD         shift and go to state 113

    STATEMENT_STAR                 shift and go to state 85
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    FLOW_CONTROL                   shift and go to state 95
    FUNC_RETURN                    shift and go to state 96
    VAR                            shift and go to state 97
    CLASS_REFERENCE                shift and go to state 98
    DECISION                       shift and go to state 104
    REPETITION                     shift and go to state 105
    ARRAY                          shift and go to state 107
    CONDITIONAL_REP                shift and go to state 110
    UNCONDITIONAL_REP              shift and go to state 111

state 74

    (7) seen_main_kwd -> empty .

    ID              reduce using rule 7 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    PRINT_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    PRINTLN_KWD     reduce using rule 7 (seen_main_kwd -> empty .)
    OPEN_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    WRITE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    RETURN_KWD      reduce using rule 7 (seen_main_kwd -> empty .)
    THIS_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 7 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 7 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 7 (seen_main_kwd -> empty .)


state 75

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr . FUNC_DEF_STAR CLOSE_CURLY
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (204) empty -> .
    (198) TYPE -> . TYPE_I
    (199) TYPE -> . TYPE_F
    (200) TYPE -> . TYPE_S
    (201) TYPE -> . TYPE_B
    (202) TYPE -> . TYPE_O
    (203) TYPE -> . TYPE_V

    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    FUNC_DEF_STAR                  shift and go to state 114
    FUNC_DEF                       shift and go to state 15
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 76

    (12) seen_class_attr -> empty .

    TYPE_I          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_F          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_S          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_B          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_O          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_V          reduce using rule 12 (seen_class_attr -> empty .)
    CLOSE_CURLY     reduce using rule 12 (seen_class_attr -> empty .)


state 77

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (204) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (147) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 115
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 78

    (38) ARG_DECLARATION -> ID COLON . TYPE
    (198) TYPE -> . TYPE_I
    (199) TYPE -> . TYPE_F
    (200) TYPE -> . TYPE_S
    (201) TYPE -> . TYPE_B
    (202) TYPE -> . TYPE_O
    (203) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 116

state 79

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (32) seen_func_params -> . empty
    (204) empty -> .

    VARS_KWD        reduce using rule 204 (empty -> .)

    seen_func_params               shift and go to state 117
    empty                          shift and go to state 118

state 80

    (34) FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 34 (FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P .)


state 81

    (36) FUNC_PARAM_P -> COMMA . ARG_DECLARATION FUNC_PARAM_P
    (38) ARG_DECLARATION -> . ID COLON TYPE

    ID              shift and go to state 67

    ARG_DECLARATION                shift and go to state 119

state 82

    (37) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 37 (FUNC_PARAM_P -> empty .)


state 83

    (147) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DECLARATION_P
    (148) ARRAY_DECLARATION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (149) ARRAY_DECLARATION_P -> . empty
    (204) empty -> .

    OPEN_BRACKET    shift and go to state 120
    COMMA           reduce using rule 204 (empty -> .)
    COLON           reduce using rule 204 (empty -> .)

    ARRAY_DECLARATION_P            shift and go to state 121
    empty                          shift and go to state 122

state 84

    (158) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (134) VAR -> ID .
    (131) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (141) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (160) seen_func_call_id -> . empty
    (144) seen_array_id -> . empty
    (204) empty -> .

    EQUALS          reduce using rule 134 (VAR -> ID .)
    PLUS_EQUALS     reduce using rule 134 (VAR -> ID .)
    MINUS_EQUALS    reduce using rule 134 (VAR -> ID .)
    TIMES_EQUALS    reduce using rule 134 (VAR -> ID .)
    OVER_EQUALS     reduce using rule 134 (VAR -> ID .)
    PLUS_PLUS       reduce using rule 134 (VAR -> ID .)
    MINUS_MINUS     reduce using rule 134 (VAR -> ID .)
    STAR            reduce using rule 134 (VAR -> ID .)
    FWD_SLASH       reduce using rule 134 (VAR -> ID .)
    PLUS            reduce using rule 134 (VAR -> ID .)
    MINUS           reduce using rule 134 (VAR -> ID .)
    BIGGER          reduce using rule 134 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 134 (VAR -> ID .)
    SMALLER         reduce using rule 134 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 134 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 134 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 134 (VAR -> ID .)
    AND             reduce using rule 134 (VAR -> ID .)
    OR              reduce using rule 134 (VAR -> ID .)
    SEMI_COLON      reduce using rule 134 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 134 (VAR -> ID .)
    COMMA           reduce using rule 134 (VAR -> ID .)
    CLOSE_BRACKET   reduce using rule 134 (VAR -> ID .)
    DOT             shift and go to state 124
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    OPEN_BRACKET    reduce using rule 204 (empty -> .)

    seen_func_call_id              shift and go to state 123
    seen_array_id                  shift and go to state 125
    empty                          shift and go to state 126

state 85

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 127


state 86

    (40) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (204) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (173) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (174) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (176) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (170) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (171) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (172) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (182) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (188) REPETITION -> . CONDITIONAL_REP
    (189) REPETITION -> . UNCONDITIONAL_REP
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (190) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (193) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 99
    PRINT_KWD       shift and go to state 100
    PRINTLN_KWD     shift and go to state 101
    OPEN_KWD        shift and go to state 102
    WRITE_KWD       shift and go to state 103
    RETURN_KWD      shift and go to state 106
    THIS_KWD        shift and go to state 108
    IF_KWD          shift and go to state 109
    WHILE_KWD       shift and go to state 112
    FOR_KWD         shift and go to state 113

    STATEMENT                      shift and go to state 86
    STATEMENT_STAR                 shift and go to state 128
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    FLOW_CONTROL                   shift and go to state 95
    FUNC_RETURN                    shift and go to state 96
    VAR                            shift and go to state 97
    CLASS_REFERENCE                shift and go to state 98
    DECISION                       shift and go to state 104
    REPETITION                     shift and go to state 105
    ARRAY                          shift and go to state 107
    CONDITIONAL_REP                shift and go to state 110
    UNCONDITIONAL_REP              shift and go to state 111

state 87

    (41) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 41 (STATEMENT_STAR -> empty .)


state 88

    (42) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 129


state 89

    (43) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 130


state 90

    (44) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 131


state 91

    (45) STATEMENT -> PRINT . SEMI_COLON

    SEMI_COLON      shift and go to state 132


state 92

    (46) STATEMENT -> PRINTLN . SEMI_COLON

    SEMI_COLON      shift and go to state 133


state 93

    (47) STATEMENT -> OPEN . SEMI_COLON

    SEMI_COLON      shift and go to state 134


state 94

    (48) STATEMENT -> WRITE . SEMI_COLON

    SEMI_COLON      shift and go to state 135


state 95

    (49) STATEMENT -> FLOW_CONTROL .

    ID              reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    READ_KWD        reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    PRINT_KWD       reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    PRINTLN_KWD     reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    OPEN_KWD        reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    WRITE_KWD       reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    RETURN_KWD      reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    THIS_KWD        reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    IF_KWD          reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    WHILE_KWD       reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    FOR_KWD         reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    CLOSE_CURLY     reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)


state 96

    (50) STATEMENT -> FUNC_RETURN .

    ID              reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    READ_KWD        reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    PRINT_KWD       reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    PRINTLN_KWD     reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    OPEN_KWD        reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    WRITE_KWD       reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    RETURN_KWD      reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    THIS_KWD        reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    IF_KWD          reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    WHILE_KWD       reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    FOR_KWD         reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    CLOSE_CURLY     reduce using rule 50 (STATEMENT -> FUNC_RETURN .)


state 97

    (64) ASSIGN -> VAR . seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> VAR . seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> VAR . seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> VAR . seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> VAR . seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> VAR . seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> VAR . seen_var_in_assign MINUS_MINUS seen_minus_minus
    (117) seen_var_in_assign -> . empty
    (204) empty -> .

    EQUALS          reduce using rule 204 (empty -> .)
    PLUS_EQUALS     reduce using rule 204 (empty -> .)
    MINUS_EQUALS    reduce using rule 204 (empty -> .)
    TIMES_EQUALS    reduce using rule 204 (empty -> .)
    OVER_EQUALS     reduce using rule 204 (empty -> .)
    PLUS_PLUS       reduce using rule 204 (empty -> .)
    MINUS_MINUS     reduce using rule 204 (empty -> .)

    seen_var_in_assign             shift and go to state 136
    empty                          shift and go to state 137

state 98

    (159) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (136) VAR -> CLASS_REFERENCE . VAR
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 84
    THIS_KWD        shift and go to state 108

    CLASS_REFERENCE                shift and go to state 98
    FUNC_CALL                      shift and go to state 138
    VAR                            shift and go to state 139
    ARRAY                          shift and go to state 107

state 99

    (173) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 140


state 100

    (174) PRINT -> PRINT_KWD . seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (175) seen_print_kwd -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_print_kwd                 shift and go to state 141
    empty                          shift and go to state 142

state 101

    (176) PRINTLN -> PRINTLN_KWD . seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (177) seen_println_kwd -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_println_kwd               shift and go to state 143
    empty                          shift and go to state 144

state 102

    (51) OPEN -> OPEN_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 145


state 103

    (53) WRITE -> WRITE_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 146


state 104

    (57) FLOW_CONTROL -> DECISION .

    ID              reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    READ_KWD        reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    PRINT_KWD       reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    PRINTLN_KWD     reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    OPEN_KWD        reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    WRITE_KWD       reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    RETURN_KWD      reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    THIS_KWD        reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    IF_KWD          reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    WHILE_KWD       reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    FOR_KWD         reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    CLOSE_CURLY     reduce using rule 57 (FLOW_CONTROL -> DECISION .)


state 105

    (58) FLOW_CONTROL -> REPETITION .

    ID              reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    READ_KWD        reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    PRINT_KWD       reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    PRINTLN_KWD     reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    OPEN_KWD        reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    WRITE_KWD       reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    RETURN_KWD      reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    THIS_KWD        reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    IF_KWD          reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    WHILE_KWD       reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    FOR_KWD         reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    CLOSE_CURLY     reduce using rule 58 (FLOW_CONTROL -> REPETITION .)


state 106

    (170) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (171) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (172) FUNC_RETURN -> RETURN_KWD . SEMI_COLON
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    SEMI_COLON      shift and go to state 148
    ID              shift and go to state 151
    MINUS           shift and go to state 154
    THIS_KWD        shift and go to state 108
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXPRESSION                     shift and go to state 147
    FUNC_CALL                      shift and go to state 149
    EXP                            shift and go to state 150
    CLASS_REFERENCE                shift and go to state 98
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 107

    (135) VAR -> ARRAY .

    EQUALS          reduce using rule 135 (VAR -> ARRAY .)
    PLUS_EQUALS     reduce using rule 135 (VAR -> ARRAY .)
    MINUS_EQUALS    reduce using rule 135 (VAR -> ARRAY .)
    TIMES_EQUALS    reduce using rule 135 (VAR -> ARRAY .)
    OVER_EQUALS     reduce using rule 135 (VAR -> ARRAY .)
    PLUS_PLUS       reduce using rule 135 (VAR -> ARRAY .)
    MINUS_MINUS     reduce using rule 135 (VAR -> ARRAY .)
    STAR            reduce using rule 135 (VAR -> ARRAY .)
    FWD_SLASH       reduce using rule 135 (VAR -> ARRAY .)
    PLUS            reduce using rule 135 (VAR -> ARRAY .)
    MINUS           reduce using rule 135 (VAR -> ARRAY .)
    BIGGER          reduce using rule 135 (VAR -> ARRAY .)
    BIGGER_EQ       reduce using rule 135 (VAR -> ARRAY .)
    SMALLER         reduce using rule 135 (VAR -> ARRAY .)
    SMALLER_EQ      reduce using rule 135 (VAR -> ARRAY .)
    DOUBLE_EQUALS   reduce using rule 135 (VAR -> ARRAY .)
    NOT_EQUALS      reduce using rule 135 (VAR -> ARRAY .)
    AND             reduce using rule 135 (VAR -> ARRAY .)
    OR              reduce using rule 135 (VAR -> ARRAY .)
    SEMI_COLON      reduce using rule 135 (VAR -> ARRAY .)
    CLOSE_PARENTHESIS reduce using rule 135 (VAR -> ARRAY .)
    COMMA           reduce using rule 135 (VAR -> ARRAY .)
    CLOSE_BRACKET   reduce using rule 135 (VAR -> ARRAY .)


state 108

    (132) CLASS_REFERENCE -> THIS_KWD . seen_this_kwd DOT seen_this_dot_operator
    (133) seen_this_kwd -> . empty
    (204) empty -> .

    DOT             reduce using rule 204 (empty -> .)

    seen_this_kwd                  shift and go to state 170
    empty                          shift and go to state 171

state 109

    (182) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 172


state 110

    (188) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)
    THIS_KWD        reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 188 (REPETITION -> CONDITIONAL_REP .)


state 111

    (189) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)
    THIS_KWD        reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 189 (REPETITION -> UNCONDITIONAL_REP .)


state 112

    (190) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (191) seen_while_kwd -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_while_kwd                 shift and go to state 173
    empty                          shift and go to state 174

state 113

    (193) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 175


state 114

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 176


state 115

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 177


state 116

    (38) ARG_DECLARATION -> ID COLON TYPE .

    COMMA           reduce using rule 38 (ARG_DECLARATION -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 38 (ARG_DECLARATION -> ID COLON TYPE .)


state 117

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (39) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 179

    VARS                           shift and go to state 178

state 118

    (32) seen_func_params -> empty .

    VARS_KWD        reduce using rule 32 (seen_func_params -> empty .)


state 119

    (36) FUNC_PARAM_P -> COMMA ARG_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA ARG_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 81
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 180
    empty                          shift and go to state 82

state 120

    (148) ARRAY_DECLARATION_P -> OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CTE_I           shift and go to state 181


state 121

    (147) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .

    COMMA           reduce using rule 147 (ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)
    COLON           reduce using rule 147 (ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)


state 122

    (149) ARRAY_DECLARATION_P -> empty .

    COMMA           reduce using rule 149 (ARRAY_DECLARATION_P -> empty .)
    COLON           reduce using rule 149 (ARRAY_DECLARATION_P -> empty .)


state 123

    (158) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 182


state 124

    (131) CLASS_REFERENCE -> ID DOT . seen_dot_operator
    (139) seen_dot_operator -> . empty
    (204) empty -> .

    ID              reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)

    seen_dot_operator              shift and go to state 183
    empty                          shift and go to state 184

state 125

    (141) ARRAY -> ID seen_array_id . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_BRACKET    shift and go to state 185


state 126

    (160) seen_func_call_id -> empty .
    (144) seen_array_id -> empty .

    OPEN_PARENTHESIS reduce using rule 160 (seen_func_call_id -> empty .)
    OPEN_BRACKET    reduce using rule 144 (seen_array_id -> empty .)


state 127

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 128

    (40) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 40 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 129

    (42) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINT_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    OPEN_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WRITE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    RETURN_KWD      reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    THIS_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)


state 130

    (43) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 131

    (44) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINT_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    OPEN_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WRITE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    RETURN_KWD      reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    THIS_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)


state 132

    (45) STATEMENT -> PRINT SEMI_COLON .

    ID              reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    READ_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINT_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    OPEN_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WRITE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    RETURN_KWD      reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    THIS_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    IF_KWD          reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WHILE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    FOR_KWD         reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)


state 133

    (46) STATEMENT -> PRINTLN SEMI_COLON .

    ID              reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    READ_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINT_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    OPEN_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WRITE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    RETURN_KWD      reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    THIS_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    IF_KWD          reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WHILE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    FOR_KWD         reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)


state 134

    (47) STATEMENT -> OPEN SEMI_COLON .

    ID              reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    READ_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINT_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    OPEN_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    WRITE_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    RETURN_KWD      reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    THIS_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    IF_KWD          reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    WHILE_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    FOR_KWD         reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)


state 135

    (48) STATEMENT -> WRITE SEMI_COLON .

    ID              reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    READ_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    PRINT_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    OPEN_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    WRITE_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    RETURN_KWD      reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    THIS_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    IF_KWD          reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    WHILE_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    FOR_KWD         reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)


state 136

    (64) ASSIGN -> VAR seen_var_in_assign . EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> VAR seen_var_in_assign . PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> VAR seen_var_in_assign . MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> VAR seen_var_in_assign . TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> VAR seen_var_in_assign . OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> VAR seen_var_in_assign . PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> VAR seen_var_in_assign . MINUS_MINUS seen_minus_minus

    EQUALS          shift and go to state 186
    PLUS_EQUALS     shift and go to state 187
    MINUS_EQUALS    shift and go to state 188
    TIMES_EQUALS    shift and go to state 189
    OVER_EQUALS     shift and go to state 190
    PLUS_PLUS       shift and go to state 191
    MINUS_MINUS     shift and go to state 192


state 137

    (117) seen_var_in_assign -> empty .

    EQUALS          reduce using rule 117 (seen_var_in_assign -> empty .)
    PLUS_EQUALS     reduce using rule 117 (seen_var_in_assign -> empty .)
    MINUS_EQUALS    reduce using rule 117 (seen_var_in_assign -> empty .)
    TIMES_EQUALS    reduce using rule 117 (seen_var_in_assign -> empty .)
    OVER_EQUALS     reduce using rule 117 (seen_var_in_assign -> empty .)
    PLUS_PLUS       reduce using rule 117 (seen_var_in_assign -> empty .)
    MINUS_MINUS     reduce using rule 117 (seen_var_in_assign -> empty .)
    COMMA           reduce using rule 117 (seen_var_in_assign -> empty .)
    CLOSE_PARENTHESIS reduce using rule 117 (seen_var_in_assign -> empty .)


state 138

    (159) FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .

    SEMI_COLON      reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    STAR            reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    FWD_SLASH       reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    PLUS            reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    MINUS           reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER          reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER_EQ       reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER         reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER_EQ      reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    NOT_EQUALS      reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    AND             reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    OR              reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    COMMA           reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 159 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)


state 139

    (136) VAR -> CLASS_REFERENCE VAR .

    EQUALS          reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    PLUS_EQUALS     reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    MINUS_EQUALS    reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    TIMES_EQUALS    reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    OVER_EQUALS     reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    PLUS_PLUS       reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    MINUS_MINUS     reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    STAR            reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    FWD_SLASH       reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    PLUS            reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    MINUS           reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER          reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER_EQ       reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER         reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER_EQ      reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    DOUBLE_EQUALS   reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    NOT_EQUALS      reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    AND             reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    OR              reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    SEMI_COLON      reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_PARENTHESIS reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    COMMA           reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_BRACKET   reduce using rule 136 (VAR -> CLASS_REFERENCE VAR .)


state 140

    (173) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (23) READABLE_LIST -> . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 195
    THIS_KWD        shift and go to state 108

    READABLE_LIST                  shift and go to state 193
    VAR                            shift and go to state 194
    ARRAY                          shift and go to state 107
    CLASS_REFERENCE                shift and go to state 196

state 141

    (174) PRINT -> PRINT_KWD seen_print_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 197


state 142

    (175) seen_print_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 175 (seen_print_kwd -> empty .)


state 143

    (176) PRINTLN -> PRINTLN_KWD seen_println_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 198


state 144

    (177) seen_println_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 177 (seen_println_kwd -> empty .)


state 145

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 195
    THIS_KWD        shift and go to state 108

    VAR                            shift and go to state 199
    ARRAY                          shift and go to state 107
    CLASS_REFERENCE                shift and go to state 196

state 146

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 195
    THIS_KWD        shift and go to state 108

    VAR                            shift and go to state 200
    ARRAY                          shift and go to state 107
    CLASS_REFERENCE                shift and go to state 196

state 147

    (170) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 201


state 148

    (172) FUNC_RETURN -> RETURN_KWD SEMI_COLON .

    ID              reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    READ_KWD        reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINT_KWD       reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    OPEN_KWD        reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WRITE_KWD       reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    RETURN_KWD      reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    THIS_KWD        reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    IF_KWD          reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WHILE_KWD       reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    FOR_KWD         reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 172 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)


state 149

    (171) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (103) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 202
    STAR            reduce using rule 103 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 103 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 103 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 103 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 103 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 103 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 103 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 103 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 103 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 103 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 103 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 103 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 103 (FACTOR -> FUNC_CALL .) ]


state 150

    (85) EXPRESSION -> EXP .
    (86) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (89) COMP -> . BIGGER
    (90) COMP -> . BIGGER_EQ
    (91) COMP -> . SMALLER
    (92) COMP -> . SMALLER_EQ
    (93) COMP -> . DOUBLE_EQUALS
    (94) COMP -> . NOT_EQUALS
    (95) COMP -> . AND
    (96) COMP -> . OR

    SEMI_COLON      reduce using rule 85 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 85 (EXPRESSION -> EXP .)
    COMMA           reduce using rule 85 (EXPRESSION -> EXP .)
    CLOSE_BRACKET   reduce using rule 85 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 204
    BIGGER_EQ       shift and go to state 205
    SMALLER         shift and go to state 206
    SMALLER_EQ      shift and go to state 207
    DOUBLE_EQUALS   shift and go to state 208
    NOT_EQUALS      shift and go to state 209
    AND             shift and go to state 210
    OR              shift and go to state 211

    COMP                           shift and go to state 203

state 151

    (158) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (131) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (134) VAR -> ID .
    (141) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (160) seen_func_call_id -> . empty
    (144) seen_array_id -> . empty
    (204) empty -> .

    DOT             shift and go to state 124
    STAR            reduce using rule 134 (VAR -> ID .)
    FWD_SLASH       reduce using rule 134 (VAR -> ID .)
    PLUS            reduce using rule 134 (VAR -> ID .)
    MINUS           reduce using rule 134 (VAR -> ID .)
    BIGGER          reduce using rule 134 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 134 (VAR -> ID .)
    SMALLER         reduce using rule 134 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 134 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 134 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 134 (VAR -> ID .)
    AND             reduce using rule 134 (VAR -> ID .)
    OR              reduce using rule 134 (VAR -> ID .)
    SEMI_COLON      reduce using rule 134 (VAR -> ID .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    OPEN_BRACKET    reduce using rule 204 (empty -> .)

    seen_func_call_id              shift and go to state 123
    seen_array_id                  shift and go to state 125
    empty                          shift and go to state 126

state 152

    (97) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (115) seen_open_parenthesis -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_open_parenthesis          shift and go to state 212
    empty                          shift and go to state 213

state 153

    (78) EXP -> TERM . seen_term EXP_P
    (80) seen_term -> .

    PLUS            reduce using rule 80 (seen_term -> .)
    MINUS           reduce using rule 80 (seen_term -> .)
    BIGGER          reduce using rule 80 (seen_term -> .)
    BIGGER_EQ       reduce using rule 80 (seen_term -> .)
    SMALLER         reduce using rule 80 (seen_term -> .)
    SMALLER_EQ      reduce using rule 80 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 80 (seen_term -> .)
    NOT_EQUALS      reduce using rule 80 (seen_term -> .)
    AND             reduce using rule 80 (seen_term -> .)
    OR              reduce using rule 80 (seen_term -> .)
    SEMI_COLON      reduce using rule 80 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 80 (seen_term -> .)
    COMMA           reduce using rule 80 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 80 (seen_term -> .)

    seen_term                      shift and go to state 214

state 154

    (79) EXP -> MINUS . seen_unary_minus EXP pop_unary_minus
    (99) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (114) seen_unary_minus -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_unary_minus               shift and go to state 215
    empty                          shift and go to state 216

state 155

    (152) TERM -> FACTOR . seen_factor TERM_P
    (156) seen_factor -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_factor                    shift and go to state 217
    empty                          shift and go to state 218

state 156

    (98) FACTOR -> NOT . seen_not FACTOR pop_not
    (112) seen_not -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_not                       shift and go to state 219
    empty                          shift and go to state 220

state 157

    (100) FACTOR -> STOI_KWD . seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (108) seen_stoi_kwd -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_stoi_kwd                  shift and go to state 221
    empty                          shift and go to state 222

state 158

    (101) FACTOR -> STOF_KWD . seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (109) seen_stof_kwd -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_stof_kwd                  shift and go to state 223
    empty                          shift and go to state 224

state 159

    (102) FACTOR -> STOB_KWD . seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (110) seen_stob_kwd -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_stob_kwd                  shift and go to state 225
    empty                          shift and go to state 226

state 160

    (104) FACTOR -> CLASS_INSTANCE .

    STAR            reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    FWD_SLASH       reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    PLUS            reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    MINUS           reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    BIGGER          reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    BIGGER_EQ       reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    SMALLER         reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    SMALLER_EQ      reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    DOUBLE_EQUALS   reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    NOT_EQUALS      reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    AND             reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    OR              reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    SEMI_COLON      reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_PARENTHESIS reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    COMMA           reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_BRACKET   reduce using rule 104 (FACTOR -> CLASS_INSTANCE .)


state 161

    (105) FACTOR -> VAR . seen_var_as_factor
    (118) seen_var_as_factor -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_var_as_factor             shift and go to state 227
    empty                          shift and go to state 228

state 162

    (106) FACTOR -> CONSTANT .

    STAR            reduce using rule 106 (FACTOR -> CONSTANT .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> CONSTANT .)
    PLUS            reduce using rule 106 (FACTOR -> CONSTANT .)
    MINUS           reduce using rule 106 (FACTOR -> CONSTANT .)
    BIGGER          reduce using rule 106 (FACTOR -> CONSTANT .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> CONSTANT .)
    SMALLER         reduce using rule 106 (FACTOR -> CONSTANT .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> CONSTANT .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> CONSTANT .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> CONSTANT .)
    AND             reduce using rule 106 (FACTOR -> CONSTANT .)
    OR              reduce using rule 106 (FACTOR -> CONSTANT .)
    SEMI_COLON      reduce using rule 106 (FACTOR -> CONSTANT .)
    CLOSE_PARENTHESIS reduce using rule 106 (FACTOR -> CONSTANT .)
    COMMA           reduce using rule 106 (FACTOR -> CONSTANT .)
    CLOSE_BRACKET   reduce using rule 106 (FACTOR -> CONSTANT .)


state 163

    (137) CLASS_INSTANCE -> NEW_KWD . ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS

    ID              shift and go to state 229


state 164

    (125) CONSTANT -> CTE_I . seen_cte_i
    (120) seen_cte_i -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_cte_i                     shift and go to state 230
    empty                          shift and go to state 63

state 165

    (126) CONSTANT -> CTE_F . seen_cte_f
    (121) seen_cte_f -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_cte_f                     shift and go to state 231
    empty                          shift and go to state 232

state 166

    (127) CONSTANT -> CTE_S . seen_cte_s
    (122) seen_cte_s -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_cte_s                     shift and go to state 233
    empty                          shift and go to state 234

state 167

    (128) CONSTANT -> CTE_B .

    STAR            reduce using rule 128 (CONSTANT -> CTE_B .)
    FWD_SLASH       reduce using rule 128 (CONSTANT -> CTE_B .)
    PLUS            reduce using rule 128 (CONSTANT -> CTE_B .)
    MINUS           reduce using rule 128 (CONSTANT -> CTE_B .)
    BIGGER          reduce using rule 128 (CONSTANT -> CTE_B .)
    BIGGER_EQ       reduce using rule 128 (CONSTANT -> CTE_B .)
    SMALLER         reduce using rule 128 (CONSTANT -> CTE_B .)
    SMALLER_EQ      reduce using rule 128 (CONSTANT -> CTE_B .)
    DOUBLE_EQUALS   reduce using rule 128 (CONSTANT -> CTE_B .)
    NOT_EQUALS      reduce using rule 128 (CONSTANT -> CTE_B .)
    AND             reduce using rule 128 (CONSTANT -> CTE_B .)
    OR              reduce using rule 128 (CONSTANT -> CTE_B .)
    SEMI_COLON      reduce using rule 128 (CONSTANT -> CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 128 (CONSTANT -> CTE_B .)
    COMMA           reduce using rule 128 (CONSTANT -> CTE_B .)
    CLOSE_BRACKET   reduce using rule 128 (CONSTANT -> CTE_B .)


state 168

    (129) CTE_B -> CTE_TRUE . seen_cte_true
    (124) seen_cte_true -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_cte_true                  shift and go to state 235
    empty                          shift and go to state 236

state 169

    (130) CTE_B -> CTE_FALSE . seen_cte_false
    (123) seen_cte_false -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_cte_false                 shift and go to state 237
    empty                          shift and go to state 238

state 170

    (132) CLASS_REFERENCE -> THIS_KWD seen_this_kwd . DOT seen_this_dot_operator

    DOT             shift and go to state 239


state 171

    (133) seen_this_kwd -> empty .

    DOT             reduce using rule 133 (seen_this_kwd -> empty .)


state 172

    (182) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXPRESSION                     shift and go to state 240
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 173

    (190) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 242


state 174

    (191) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 191 (seen_while_kwd -> empty .)


state 175

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 195
    THIS_KWD        shift and go to state 108

    VAR                            shift and go to state 243
    ARRAY                          shift and go to state 107
    CLASS_REFERENCE                shift and go to state 196

state 176

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_I          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)


state 177

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 178

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (33) seen_func_vars -> . empty
    (204) empty -> .

    OPEN_CURLY      reduce using rule 204 (empty -> .)

    seen_func_vars                 shift and go to state 244
    empty                          shift and go to state 245

state 179

    (39) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 246


state 180

    (36) FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 36 (FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P .)


state 181

    (148) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (120) seen_cte_i -> . empty
    (204) empty -> .

    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_cte_i                     shift and go to state 247
    empty                          shift and go to state 63

state 182

    (158) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (161) ARG_LIST -> . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (162) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (163) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (164) ARG_LIST -> . empty
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (204) empty -> .
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    ID              shift and go to state 248
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    THIS_KWD        shift and go to state 108
    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    ARG_LIST                       shift and go to state 249
    VAR                            shift and go to state 250
    EXPRESSION                     shift and go to state 251
    FUNC_CALL                      shift and go to state 252
    empty                          shift and go to state 253
    ARRAY                          shift and go to state 107
    CLASS_REFERENCE                shift and go to state 254
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CTE_B                          shift and go to state 167

state 183

    (131) CLASS_REFERENCE -> ID DOT seen_dot_operator .

    ID              reduce using rule 131 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)
    THIS_KWD        reduce using rule 131 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)


state 184

    (139) seen_dot_operator -> empty .

    ID              reduce using rule 139 (seen_dot_operator -> empty .)
    THIS_KWD        reduce using rule 139 (seen_dot_operator -> empty .)


state 185

    (141) ARRAY -> ID seen_array_id OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (145) seen_open_bracket -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_open_bracket              shift and go to state 255
    empty                          shift and go to state 256

state 186

    (64) ASSIGN -> VAR seen_var_in_assign EQUALS . seen_equals EXPRESSION
    (71) seen_equals -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_equals                    shift and go to state 257
    empty                          shift and go to state 258

state 187

    (65) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS . seen_plus_equals EXPRESSION
    (72) seen_plus_equals -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_plus_equals               shift and go to state 259
    empty                          shift and go to state 260

state 188

    (66) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS . seen_minus_equals EXPRESSION
    (73) seen_minus_equals -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_minus_equals              shift and go to state 261
    empty                          shift and go to state 262

state 189

    (67) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS . seen_times_equals EXPRESSION
    (74) seen_times_equals -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_times_equals              shift and go to state 263
    empty                          shift and go to state 264

state 190

    (68) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS . seen_over_equals EXPRESSION
    (75) seen_over_equals -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_over_equals               shift and go to state 265
    empty                          shift and go to state 266

state 191

    (69) ASSIGN -> VAR seen_var_in_assign PLUS_PLUS . seen_plus_plus
    (76) seen_plus_plus -> . empty
    (204) empty -> .

    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_plus_plus                 shift and go to state 267
    empty                          shift and go to state 268

state 192

    (70) ASSIGN -> VAR seen_var_in_assign MINUS_MINUS . seen_minus_minus
    (77) seen_minus_minus -> . empty
    (204) empty -> .

    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_minus_minus               shift and go to state 269
    empty                          shift and go to state 270

state 193

    (173) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 271


state 194

    (23) READABLE_LIST -> VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (117) seen_var_in_assign -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_var_in_assign             shift and go to state 272
    empty                          shift and go to state 137

state 195

    (134) VAR -> ID .
    (141) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (131) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (144) seen_array_id -> . empty
    (204) empty -> .

    COMMA           reduce using rule 134 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 134 (VAR -> ID .)
    EQUALS          reduce using rule 134 (VAR -> ID .)
    DOT             shift and go to state 124
    OPEN_BRACKET    reduce using rule 204 (empty -> .)

    seen_array_id                  shift and go to state 125
    empty                          shift and go to state 273

state 196

    (136) VAR -> CLASS_REFERENCE . VAR
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 195
    THIS_KWD        shift and go to state 108

    CLASS_REFERENCE                shift and go to state 196
    VAR                            shift and go to state 139
    ARRAY                          shift and go to state 107

state 197

    (174) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (178) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    PRINTABLE                      shift and go to state 274
    EXPRESSION                     shift and go to state 275
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 198

    (176) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (178) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    PRINTABLE                      shift and go to state 276
    EXPRESSION                     shift and go to state 275
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 199

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (119) seen_var_in_io -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)

    seen_var_in_io                 shift and go to state 277
    empty                          shift and go to state 278

state 200

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (119) seen_var_in_io -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)

    seen_var_in_io                 shift and go to state 279
    empty                          shift and go to state 278

state 201

    (170) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINT_KWD       reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    OPEN_KWD        reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    THIS_KWD        reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 170 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 202

    (171) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    ID              reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 171 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 203

    (86) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (88) seen_comp_op -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_comp_op                   shift and go to state 280
    empty                          shift and go to state 281

state 204

    (89) COMP -> BIGGER .

    MINUS           reduce using rule 89 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 89 (COMP -> BIGGER .)
    NOT             reduce using rule 89 (COMP -> BIGGER .)
    STOI_KWD        reduce using rule 89 (COMP -> BIGGER .)
    STOF_KWD        reduce using rule 89 (COMP -> BIGGER .)
    STOB_KWD        reduce using rule 89 (COMP -> BIGGER .)
    ID              reduce using rule 89 (COMP -> BIGGER .)
    NEW_KWD         reduce using rule 89 (COMP -> BIGGER .)
    CTE_I           reduce using rule 89 (COMP -> BIGGER .)
    CTE_F           reduce using rule 89 (COMP -> BIGGER .)
    CTE_S           reduce using rule 89 (COMP -> BIGGER .)
    THIS_KWD        reduce using rule 89 (COMP -> BIGGER .)
    CTE_TRUE        reduce using rule 89 (COMP -> BIGGER .)
    CTE_FALSE       reduce using rule 89 (COMP -> BIGGER .)


state 205

    (90) COMP -> BIGGER_EQ .

    MINUS           reduce using rule 90 (COMP -> BIGGER_EQ .)
    OPEN_PARENTHESIS reduce using rule 90 (COMP -> BIGGER_EQ .)
    NOT             reduce using rule 90 (COMP -> BIGGER_EQ .)
    STOI_KWD        reduce using rule 90 (COMP -> BIGGER_EQ .)
    STOF_KWD        reduce using rule 90 (COMP -> BIGGER_EQ .)
    STOB_KWD        reduce using rule 90 (COMP -> BIGGER_EQ .)
    ID              reduce using rule 90 (COMP -> BIGGER_EQ .)
    NEW_KWD         reduce using rule 90 (COMP -> BIGGER_EQ .)
    CTE_I           reduce using rule 90 (COMP -> BIGGER_EQ .)
    CTE_F           reduce using rule 90 (COMP -> BIGGER_EQ .)
    CTE_S           reduce using rule 90 (COMP -> BIGGER_EQ .)
    THIS_KWD        reduce using rule 90 (COMP -> BIGGER_EQ .)
    CTE_TRUE        reduce using rule 90 (COMP -> BIGGER_EQ .)
    CTE_FALSE       reduce using rule 90 (COMP -> BIGGER_EQ .)


state 206

    (91) COMP -> SMALLER .

    MINUS           reduce using rule 91 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 91 (COMP -> SMALLER .)
    NOT             reduce using rule 91 (COMP -> SMALLER .)
    STOI_KWD        reduce using rule 91 (COMP -> SMALLER .)
    STOF_KWD        reduce using rule 91 (COMP -> SMALLER .)
    STOB_KWD        reduce using rule 91 (COMP -> SMALLER .)
    ID              reduce using rule 91 (COMP -> SMALLER .)
    NEW_KWD         reduce using rule 91 (COMP -> SMALLER .)
    CTE_I           reduce using rule 91 (COMP -> SMALLER .)
    CTE_F           reduce using rule 91 (COMP -> SMALLER .)
    CTE_S           reduce using rule 91 (COMP -> SMALLER .)
    THIS_KWD        reduce using rule 91 (COMP -> SMALLER .)
    CTE_TRUE        reduce using rule 91 (COMP -> SMALLER .)
    CTE_FALSE       reduce using rule 91 (COMP -> SMALLER .)


state 207

    (92) COMP -> SMALLER_EQ .

    MINUS           reduce using rule 92 (COMP -> SMALLER_EQ .)
    OPEN_PARENTHESIS reduce using rule 92 (COMP -> SMALLER_EQ .)
    NOT             reduce using rule 92 (COMP -> SMALLER_EQ .)
    STOI_KWD        reduce using rule 92 (COMP -> SMALLER_EQ .)
    STOF_KWD        reduce using rule 92 (COMP -> SMALLER_EQ .)
    STOB_KWD        reduce using rule 92 (COMP -> SMALLER_EQ .)
    ID              reduce using rule 92 (COMP -> SMALLER_EQ .)
    NEW_KWD         reduce using rule 92 (COMP -> SMALLER_EQ .)
    CTE_I           reduce using rule 92 (COMP -> SMALLER_EQ .)
    CTE_F           reduce using rule 92 (COMP -> SMALLER_EQ .)
    CTE_S           reduce using rule 92 (COMP -> SMALLER_EQ .)
    THIS_KWD        reduce using rule 92 (COMP -> SMALLER_EQ .)
    CTE_TRUE        reduce using rule 92 (COMP -> SMALLER_EQ .)
    CTE_FALSE       reduce using rule 92 (COMP -> SMALLER_EQ .)


state 208

    (93) COMP -> DOUBLE_EQUALS .

    MINUS           reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    NOT             reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    STOI_KWD        reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    STOF_KWD        reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    STOB_KWD        reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    NEW_KWD         reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    THIS_KWD        reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    CTE_TRUE        reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    CTE_FALSE       reduce using rule 93 (COMP -> DOUBLE_EQUALS .)


state 209

    (94) COMP -> NOT_EQUALS .

    MINUS           reduce using rule 94 (COMP -> NOT_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 94 (COMP -> NOT_EQUALS .)
    NOT             reduce using rule 94 (COMP -> NOT_EQUALS .)
    STOI_KWD        reduce using rule 94 (COMP -> NOT_EQUALS .)
    STOF_KWD        reduce using rule 94 (COMP -> NOT_EQUALS .)
    STOB_KWD        reduce using rule 94 (COMP -> NOT_EQUALS .)
    ID              reduce using rule 94 (COMP -> NOT_EQUALS .)
    NEW_KWD         reduce using rule 94 (COMP -> NOT_EQUALS .)
    CTE_I           reduce using rule 94 (COMP -> NOT_EQUALS .)
    CTE_F           reduce using rule 94 (COMP -> NOT_EQUALS .)
    CTE_S           reduce using rule 94 (COMP -> NOT_EQUALS .)
    THIS_KWD        reduce using rule 94 (COMP -> NOT_EQUALS .)
    CTE_TRUE        reduce using rule 94 (COMP -> NOT_EQUALS .)
    CTE_FALSE       reduce using rule 94 (COMP -> NOT_EQUALS .)


state 210

    (95) COMP -> AND .

    MINUS           reduce using rule 95 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 95 (COMP -> AND .)
    NOT             reduce using rule 95 (COMP -> AND .)
    STOI_KWD        reduce using rule 95 (COMP -> AND .)
    STOF_KWD        reduce using rule 95 (COMP -> AND .)
    STOB_KWD        reduce using rule 95 (COMP -> AND .)
    ID              reduce using rule 95 (COMP -> AND .)
    NEW_KWD         reduce using rule 95 (COMP -> AND .)
    CTE_I           reduce using rule 95 (COMP -> AND .)
    CTE_F           reduce using rule 95 (COMP -> AND .)
    CTE_S           reduce using rule 95 (COMP -> AND .)
    THIS_KWD        reduce using rule 95 (COMP -> AND .)
    CTE_TRUE        reduce using rule 95 (COMP -> AND .)
    CTE_FALSE       reduce using rule 95 (COMP -> AND .)


state 211

    (96) COMP -> OR .

    MINUS           reduce using rule 96 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 96 (COMP -> OR .)
    NOT             reduce using rule 96 (COMP -> OR .)
    STOI_KWD        reduce using rule 96 (COMP -> OR .)
    STOF_KWD        reduce using rule 96 (COMP -> OR .)
    STOB_KWD        reduce using rule 96 (COMP -> OR .)
    ID              reduce using rule 96 (COMP -> OR .)
    NEW_KWD         reduce using rule 96 (COMP -> OR .)
    CTE_I           reduce using rule 96 (COMP -> OR .)
    CTE_F           reduce using rule 96 (COMP -> OR .)
    CTE_S           reduce using rule 96 (COMP -> OR .)
    THIS_KWD        reduce using rule 96 (COMP -> OR .)
    CTE_TRUE        reduce using rule 96 (COMP -> OR .)
    CTE_FALSE       reduce using rule 96 (COMP -> OR .)


state 212

    (97) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXPRESSION                     shift and go to state 282
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 213

    (115) seen_open_parenthesis -> empty .

    MINUS           reduce using rule 115 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 115 (seen_open_parenthesis -> empty .)
    NOT             reduce using rule 115 (seen_open_parenthesis -> empty .)
    STOI_KWD        reduce using rule 115 (seen_open_parenthesis -> empty .)
    STOF_KWD        reduce using rule 115 (seen_open_parenthesis -> empty .)
    STOB_KWD        reduce using rule 115 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 115 (seen_open_parenthesis -> empty .)
    NEW_KWD         reduce using rule 115 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 115 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 115 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 115 (seen_open_parenthesis -> empty .)
    THIS_KWD        reduce using rule 115 (seen_open_parenthesis -> empty .)
    CTE_TRUE        reduce using rule 115 (seen_open_parenthesis -> empty .)
    CTE_FALSE       reduce using rule 115 (seen_open_parenthesis -> empty .)


state 214

    (78) EXP -> TERM seen_term . EXP_P
    (81) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (82) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (83) EXP_P -> . empty
    (204) empty -> .

    PLUS            shift and go to state 284
    MINUS           shift and go to state 285
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    EXP_P                          shift and go to state 283
    empty                          shift and go to state 286

state 215

    (79) EXP -> MINUS seen_unary_minus . EXP pop_unary_minus
    (99) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (152) TERM -> . FACTOR seen_factor TERM_P
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXP                            shift and go to state 287
    FACTOR                         shift and go to state 288
    TERM                           shift and go to state 153
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 216

    (114) seen_unary_minus -> empty .

    MINUS           reduce using rule 114 (seen_unary_minus -> empty .)
    OPEN_PARENTHESIS reduce using rule 114 (seen_unary_minus -> empty .)
    NOT             reduce using rule 114 (seen_unary_minus -> empty .)
    STOI_KWD        reduce using rule 114 (seen_unary_minus -> empty .)
    STOF_KWD        reduce using rule 114 (seen_unary_minus -> empty .)
    STOB_KWD        reduce using rule 114 (seen_unary_minus -> empty .)
    ID              reduce using rule 114 (seen_unary_minus -> empty .)
    NEW_KWD         reduce using rule 114 (seen_unary_minus -> empty .)
    CTE_I           reduce using rule 114 (seen_unary_minus -> empty .)
    CTE_F           reduce using rule 114 (seen_unary_minus -> empty .)
    CTE_S           reduce using rule 114 (seen_unary_minus -> empty .)
    THIS_KWD        reduce using rule 114 (seen_unary_minus -> empty .)
    CTE_TRUE        reduce using rule 114 (seen_unary_minus -> empty .)
    CTE_FALSE       reduce using rule 114 (seen_unary_minus -> empty .)


state 217

    (152) TERM -> FACTOR seen_factor . TERM_P
    (153) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (154) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (155) TERM_P -> . empty
    (204) empty -> .

    STAR            shift and go to state 290
    FWD_SLASH       shift and go to state 291
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    TERM_P                         shift and go to state 289
    empty                          shift and go to state 292

state 218

    (156) seen_factor -> empty .

    STAR            reduce using rule 156 (seen_factor -> empty .)
    FWD_SLASH       reduce using rule 156 (seen_factor -> empty .)
    PLUS            reduce using rule 156 (seen_factor -> empty .)
    MINUS           reduce using rule 156 (seen_factor -> empty .)
    BIGGER          reduce using rule 156 (seen_factor -> empty .)
    BIGGER_EQ       reduce using rule 156 (seen_factor -> empty .)
    SMALLER         reduce using rule 156 (seen_factor -> empty .)
    SMALLER_EQ      reduce using rule 156 (seen_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 156 (seen_factor -> empty .)
    NOT_EQUALS      reduce using rule 156 (seen_factor -> empty .)
    AND             reduce using rule 156 (seen_factor -> empty .)
    OR              reduce using rule 156 (seen_factor -> empty .)
    SEMI_COLON      reduce using rule 156 (seen_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 156 (seen_factor -> empty .)
    COMMA           reduce using rule 156 (seen_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 156 (seen_factor -> empty .)


state 219

    (98) FACTOR -> NOT seen_not . FACTOR pop_not
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    MINUS           shift and go to state 294
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    FACTOR                         shift and go to state 293
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 220

    (112) seen_not -> empty .

    OPEN_PARENTHESIS reduce using rule 112 (seen_not -> empty .)
    NOT             reduce using rule 112 (seen_not -> empty .)
    MINUS           reduce using rule 112 (seen_not -> empty .)
    STOI_KWD        reduce using rule 112 (seen_not -> empty .)
    STOF_KWD        reduce using rule 112 (seen_not -> empty .)
    STOB_KWD        reduce using rule 112 (seen_not -> empty .)
    ID              reduce using rule 112 (seen_not -> empty .)
    NEW_KWD         reduce using rule 112 (seen_not -> empty .)
    CTE_I           reduce using rule 112 (seen_not -> empty .)
    CTE_F           reduce using rule 112 (seen_not -> empty .)
    CTE_S           reduce using rule 112 (seen_not -> empty .)
    THIS_KWD        reduce using rule 112 (seen_not -> empty .)
    CTE_TRUE        reduce using rule 112 (seen_not -> empty .)
    CTE_FALSE       reduce using rule 112 (seen_not -> empty .)


state 221

    (100) FACTOR -> STOI_KWD seen_stoi_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 295


state 222

    (108) seen_stoi_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 108 (seen_stoi_kwd -> empty .)


state 223

    (101) FACTOR -> STOF_KWD seen_stof_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 296


state 224

    (109) seen_stof_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 109 (seen_stof_kwd -> empty .)


state 225

    (102) FACTOR -> STOB_KWD seen_stob_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 297


state 226

    (110) seen_stob_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 110 (seen_stob_kwd -> empty .)


state 227

    (105) FACTOR -> VAR seen_var_as_factor .

    STAR            reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    SEMI_COLON      reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_BRACKET   reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)


state 228

    (118) seen_var_as_factor -> empty .

    STAR            reduce using rule 118 (seen_var_as_factor -> empty .)
    FWD_SLASH       reduce using rule 118 (seen_var_as_factor -> empty .)
    PLUS            reduce using rule 118 (seen_var_as_factor -> empty .)
    MINUS           reduce using rule 118 (seen_var_as_factor -> empty .)
    BIGGER          reduce using rule 118 (seen_var_as_factor -> empty .)
    BIGGER_EQ       reduce using rule 118 (seen_var_as_factor -> empty .)
    SMALLER         reduce using rule 118 (seen_var_as_factor -> empty .)
    SMALLER_EQ      reduce using rule 118 (seen_var_as_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 118 (seen_var_as_factor -> empty .)
    NOT_EQUALS      reduce using rule 118 (seen_var_as_factor -> empty .)
    AND             reduce using rule 118 (seen_var_as_factor -> empty .)
    OR              reduce using rule 118 (seen_var_as_factor -> empty .)
    SEMI_COLON      reduce using rule 118 (seen_var_as_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 118 (seen_var_as_factor -> empty .)
    COMMA           reduce using rule 118 (seen_var_as_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 118 (seen_var_as_factor -> empty .)


state 229

    (137) CLASS_INSTANCE -> NEW_KWD ID . seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (138) seen_class_id_instance -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_class_id_instance         shift and go to state 298
    empty                          shift and go to state 299

state 230

    (125) CONSTANT -> CTE_I seen_cte_i .

    STAR            reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    BIGGER_EQ       reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    SMALLER_EQ      reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    NOT_EQUALS      reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    AND             reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    OR              reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)
    CLOSE_BRACKET   reduce using rule 125 (CONSTANT -> CTE_I seen_cte_i .)


state 231

    (126) CONSTANT -> CTE_F seen_cte_f .

    STAR            reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    BIGGER_EQ       reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    SMALLER_EQ      reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    NOT_EQUALS      reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    AND             reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    OR              reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)
    CLOSE_BRACKET   reduce using rule 126 (CONSTANT -> CTE_F seen_cte_f .)


state 232

    (121) seen_cte_f -> empty .

    STAR            reduce using rule 121 (seen_cte_f -> empty .)
    FWD_SLASH       reduce using rule 121 (seen_cte_f -> empty .)
    PLUS            reduce using rule 121 (seen_cte_f -> empty .)
    MINUS           reduce using rule 121 (seen_cte_f -> empty .)
    BIGGER          reduce using rule 121 (seen_cte_f -> empty .)
    BIGGER_EQ       reduce using rule 121 (seen_cte_f -> empty .)
    SMALLER         reduce using rule 121 (seen_cte_f -> empty .)
    SMALLER_EQ      reduce using rule 121 (seen_cte_f -> empty .)
    DOUBLE_EQUALS   reduce using rule 121 (seen_cte_f -> empty .)
    NOT_EQUALS      reduce using rule 121 (seen_cte_f -> empty .)
    AND             reduce using rule 121 (seen_cte_f -> empty .)
    OR              reduce using rule 121 (seen_cte_f -> empty .)
    SEMI_COLON      reduce using rule 121 (seen_cte_f -> empty .)
    CLOSE_PARENTHESIS reduce using rule 121 (seen_cte_f -> empty .)
    COMMA           reduce using rule 121 (seen_cte_f -> empty .)
    CLOSE_BRACKET   reduce using rule 121 (seen_cte_f -> empty .)


state 233

    (127) CONSTANT -> CTE_S seen_cte_s .

    STAR            reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    BIGGER_EQ       reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    SMALLER_EQ      reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    NOT_EQUALS      reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    AND             reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    OR              reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)
    CLOSE_BRACKET   reduce using rule 127 (CONSTANT -> CTE_S seen_cte_s .)


state 234

    (122) seen_cte_s -> empty .

    STAR            reduce using rule 122 (seen_cte_s -> empty .)
    FWD_SLASH       reduce using rule 122 (seen_cte_s -> empty .)
    PLUS            reduce using rule 122 (seen_cte_s -> empty .)
    MINUS           reduce using rule 122 (seen_cte_s -> empty .)
    BIGGER          reduce using rule 122 (seen_cte_s -> empty .)
    BIGGER_EQ       reduce using rule 122 (seen_cte_s -> empty .)
    SMALLER         reduce using rule 122 (seen_cte_s -> empty .)
    SMALLER_EQ      reduce using rule 122 (seen_cte_s -> empty .)
    DOUBLE_EQUALS   reduce using rule 122 (seen_cte_s -> empty .)
    NOT_EQUALS      reduce using rule 122 (seen_cte_s -> empty .)
    AND             reduce using rule 122 (seen_cte_s -> empty .)
    OR              reduce using rule 122 (seen_cte_s -> empty .)
    SEMI_COLON      reduce using rule 122 (seen_cte_s -> empty .)
    CLOSE_PARENTHESIS reduce using rule 122 (seen_cte_s -> empty .)
    COMMA           reduce using rule 122 (seen_cte_s -> empty .)
    CLOSE_BRACKET   reduce using rule 122 (seen_cte_s -> empty .)


state 235

    (129) CTE_B -> CTE_TRUE seen_cte_true .

    STAR            reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    FWD_SLASH       reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    PLUS            reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    MINUS           reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    BIGGER          reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    BIGGER_EQ       reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    SMALLER         reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    SMALLER_EQ      reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    DOUBLE_EQUALS   reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    NOT_EQUALS      reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    AND             reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    OR              reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    SEMI_COLON      reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    CLOSE_PARENTHESIS reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    COMMA           reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)
    CLOSE_BRACKET   reduce using rule 129 (CTE_B -> CTE_TRUE seen_cte_true .)


state 236

    (124) seen_cte_true -> empty .

    STAR            reduce using rule 124 (seen_cte_true -> empty .)
    FWD_SLASH       reduce using rule 124 (seen_cte_true -> empty .)
    PLUS            reduce using rule 124 (seen_cte_true -> empty .)
    MINUS           reduce using rule 124 (seen_cte_true -> empty .)
    BIGGER          reduce using rule 124 (seen_cte_true -> empty .)
    BIGGER_EQ       reduce using rule 124 (seen_cte_true -> empty .)
    SMALLER         reduce using rule 124 (seen_cte_true -> empty .)
    SMALLER_EQ      reduce using rule 124 (seen_cte_true -> empty .)
    DOUBLE_EQUALS   reduce using rule 124 (seen_cte_true -> empty .)
    NOT_EQUALS      reduce using rule 124 (seen_cte_true -> empty .)
    AND             reduce using rule 124 (seen_cte_true -> empty .)
    OR              reduce using rule 124 (seen_cte_true -> empty .)
    SEMI_COLON      reduce using rule 124 (seen_cte_true -> empty .)
    CLOSE_PARENTHESIS reduce using rule 124 (seen_cte_true -> empty .)
    COMMA           reduce using rule 124 (seen_cte_true -> empty .)
    CLOSE_BRACKET   reduce using rule 124 (seen_cte_true -> empty .)


state 237

    (130) CTE_B -> CTE_FALSE seen_cte_false .

    STAR            reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    FWD_SLASH       reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    PLUS            reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    MINUS           reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    BIGGER          reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    BIGGER_EQ       reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    SMALLER         reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    SMALLER_EQ      reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    DOUBLE_EQUALS   reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    NOT_EQUALS      reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    AND             reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    OR              reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    SEMI_COLON      reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    CLOSE_PARENTHESIS reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    COMMA           reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)
    CLOSE_BRACKET   reduce using rule 130 (CTE_B -> CTE_FALSE seen_cte_false .)


state 238

    (123) seen_cte_false -> empty .

    STAR            reduce using rule 123 (seen_cte_false -> empty .)
    FWD_SLASH       reduce using rule 123 (seen_cte_false -> empty .)
    PLUS            reduce using rule 123 (seen_cte_false -> empty .)
    MINUS           reduce using rule 123 (seen_cte_false -> empty .)
    BIGGER          reduce using rule 123 (seen_cte_false -> empty .)
    BIGGER_EQ       reduce using rule 123 (seen_cte_false -> empty .)
    SMALLER         reduce using rule 123 (seen_cte_false -> empty .)
    SMALLER_EQ      reduce using rule 123 (seen_cte_false -> empty .)
    DOUBLE_EQUALS   reduce using rule 123 (seen_cte_false -> empty .)
    NOT_EQUALS      reduce using rule 123 (seen_cte_false -> empty .)
    AND             reduce using rule 123 (seen_cte_false -> empty .)
    OR              reduce using rule 123 (seen_cte_false -> empty .)
    SEMI_COLON      reduce using rule 123 (seen_cte_false -> empty .)
    CLOSE_PARENTHESIS reduce using rule 123 (seen_cte_false -> empty .)
    COMMA           reduce using rule 123 (seen_cte_false -> empty .)
    CLOSE_BRACKET   reduce using rule 123 (seen_cte_false -> empty .)


state 239

    (132) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT . seen_this_dot_operator
    (140) seen_this_dot_operator -> . empty
    (204) empty -> .

    ID              reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)

    seen_this_dot_operator         shift and go to state 300
    empty                          shift and go to state 301

state 240

    (182) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 302


state 241

    (103) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 103 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 103 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 103 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 103 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 103 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 103 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 103 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 103 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 103 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 103 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 103 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 103 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 103 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 103 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 103 (FACTOR -> FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 103 (FACTOR -> FUNC_CALL .)


state 242

    (190) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXPRESSION                     shift and go to state 303
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 243

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (194) seen_for_kwd -> . empty
    (204) empty -> .

    EQUALS          reduce using rule 204 (empty -> .)

    seen_for_kwd                   shift and go to state 304
    empty                          shift and go to state 305

state 244

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 306


state 245

    (33) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 33 (seen_func_vars -> empty .)


state 246

    (39) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (204) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (147) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 307
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 247

    (148) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (151) seen_array_def_dim -> . empty
    (204) empty -> .

    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_array_def_dim             shift and go to state 308
    empty                          shift and go to state 72

state 248

    (134) VAR -> ID .
    (158) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (141) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (131) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (160) seen_func_call_id -> . empty
    (144) seen_array_id -> . empty
    (204) empty -> .

    COMMA           reduce using rule 134 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 134 (VAR -> ID .)
    STAR            reduce using rule 134 (VAR -> ID .)
    FWD_SLASH       reduce using rule 134 (VAR -> ID .)
    PLUS            reduce using rule 134 (VAR -> ID .)
    MINUS           reduce using rule 134 (VAR -> ID .)
    BIGGER          reduce using rule 134 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 134 (VAR -> ID .)
    SMALLER         reduce using rule 134 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 134 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 134 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 134 (VAR -> ID .)
    AND             reduce using rule 134 (VAR -> ID .)
    OR              reduce using rule 134 (VAR -> ID .)
    DOT             shift and go to state 124
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    OPEN_BRACKET    reduce using rule 204 (empty -> .)

    seen_func_call_id              shift and go to state 123
    seen_array_id                  shift and go to state 125
    empty                          shift and go to state 126

state 249

    (158) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 309


state 250

    (161) ARG_LIST -> VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (105) FACTOR -> VAR . seen_var_as_factor
    (118) seen_var_as_factor -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)

    seen_var_as_factor             shift and go to state 310
    empty                          shift and go to state 228

state 251

    (162) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (169) seen_arg -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_arg                       shift and go to state 311
    empty                          shift and go to state 312

state 252

    (163) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (103) FACTOR -> FUNC_CALL .
    (169) seen_arg -> . empty
    (204) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 103 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 103 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 103 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 103 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 103 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 103 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 103 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 103 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 103 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 103 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 103 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 103 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 103 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 103 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 103 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 103 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 204 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 204 (empty -> .) ]

    seen_arg                       shift and go to state 313
    empty                          shift and go to state 312

state 253

    (164) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 164 (ARG_LIST -> empty .)


state 254

    (136) VAR -> CLASS_REFERENCE . VAR
    (159) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 248
    THIS_KWD        shift and go to state 108

    CLASS_REFERENCE                shift and go to state 254
    VAR                            shift and go to state 139
    FUNC_CALL                      shift and go to state 138
    ARRAY                          shift and go to state 107

state 255

    (141) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXPRESSION                     shift and go to state 314
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 256

    (145) seen_open_bracket -> empty .

    MINUS           reduce using rule 145 (seen_open_bracket -> empty .)
    OPEN_PARENTHESIS reduce using rule 145 (seen_open_bracket -> empty .)
    NOT             reduce using rule 145 (seen_open_bracket -> empty .)
    STOI_KWD        reduce using rule 145 (seen_open_bracket -> empty .)
    STOF_KWD        reduce using rule 145 (seen_open_bracket -> empty .)
    STOB_KWD        reduce using rule 145 (seen_open_bracket -> empty .)
    ID              reduce using rule 145 (seen_open_bracket -> empty .)
    NEW_KWD         reduce using rule 145 (seen_open_bracket -> empty .)
    CTE_I           reduce using rule 145 (seen_open_bracket -> empty .)
    CTE_F           reduce using rule 145 (seen_open_bracket -> empty .)
    CTE_S           reduce using rule 145 (seen_open_bracket -> empty .)
    THIS_KWD        reduce using rule 145 (seen_open_bracket -> empty .)
    CTE_TRUE        reduce using rule 145 (seen_open_bracket -> empty .)
    CTE_FALSE       reduce using rule 145 (seen_open_bracket -> empty .)


state 257

    (64) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals . EXPRESSION
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 161
    EXPRESSION                     shift and go to state 315
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 258

    (71) seen_equals -> empty .

    MINUS           reduce using rule 71 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 71 (seen_equals -> empty .)
    NOT             reduce using rule 71 (seen_equals -> empty .)
    STOI_KWD        reduce using rule 71 (seen_equals -> empty .)
    STOF_KWD        reduce using rule 71 (seen_equals -> empty .)
    STOB_KWD        reduce using rule 71 (seen_equals -> empty .)
    ID              reduce using rule 71 (seen_equals -> empty .)
    NEW_KWD         reduce using rule 71 (seen_equals -> empty .)
    CTE_I           reduce using rule 71 (seen_equals -> empty .)
    CTE_F           reduce using rule 71 (seen_equals -> empty .)
    CTE_S           reduce using rule 71 (seen_equals -> empty .)
    THIS_KWD        reduce using rule 71 (seen_equals -> empty .)
    CTE_TRUE        reduce using rule 71 (seen_equals -> empty .)
    CTE_FALSE       reduce using rule 71 (seen_equals -> empty .)


state 259

    (65) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals . EXPRESSION
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 161
    EXPRESSION                     shift and go to state 316
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 260

    (72) seen_plus_equals -> empty .

    MINUS           reduce using rule 72 (seen_plus_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 72 (seen_plus_equals -> empty .)
    NOT             reduce using rule 72 (seen_plus_equals -> empty .)
    STOI_KWD        reduce using rule 72 (seen_plus_equals -> empty .)
    STOF_KWD        reduce using rule 72 (seen_plus_equals -> empty .)
    STOB_KWD        reduce using rule 72 (seen_plus_equals -> empty .)
    ID              reduce using rule 72 (seen_plus_equals -> empty .)
    NEW_KWD         reduce using rule 72 (seen_plus_equals -> empty .)
    CTE_I           reduce using rule 72 (seen_plus_equals -> empty .)
    CTE_F           reduce using rule 72 (seen_plus_equals -> empty .)
    CTE_S           reduce using rule 72 (seen_plus_equals -> empty .)
    THIS_KWD        reduce using rule 72 (seen_plus_equals -> empty .)
    CTE_TRUE        reduce using rule 72 (seen_plus_equals -> empty .)
    CTE_FALSE       reduce using rule 72 (seen_plus_equals -> empty .)


state 261

    (66) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals . EXPRESSION
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 161
    EXPRESSION                     shift and go to state 317
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 262

    (73) seen_minus_equals -> empty .

    MINUS           reduce using rule 73 (seen_minus_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 73 (seen_minus_equals -> empty .)
    NOT             reduce using rule 73 (seen_minus_equals -> empty .)
    STOI_KWD        reduce using rule 73 (seen_minus_equals -> empty .)
    STOF_KWD        reduce using rule 73 (seen_minus_equals -> empty .)
    STOB_KWD        reduce using rule 73 (seen_minus_equals -> empty .)
    ID              reduce using rule 73 (seen_minus_equals -> empty .)
    NEW_KWD         reduce using rule 73 (seen_minus_equals -> empty .)
    CTE_I           reduce using rule 73 (seen_minus_equals -> empty .)
    CTE_F           reduce using rule 73 (seen_minus_equals -> empty .)
    CTE_S           reduce using rule 73 (seen_minus_equals -> empty .)
    THIS_KWD        reduce using rule 73 (seen_minus_equals -> empty .)
    CTE_TRUE        reduce using rule 73 (seen_minus_equals -> empty .)
    CTE_FALSE       reduce using rule 73 (seen_minus_equals -> empty .)


state 263

    (67) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals . EXPRESSION
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 161
    EXPRESSION                     shift and go to state 318
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 264

    (74) seen_times_equals -> empty .

    MINUS           reduce using rule 74 (seen_times_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 74 (seen_times_equals -> empty .)
    NOT             reduce using rule 74 (seen_times_equals -> empty .)
    STOI_KWD        reduce using rule 74 (seen_times_equals -> empty .)
    STOF_KWD        reduce using rule 74 (seen_times_equals -> empty .)
    STOB_KWD        reduce using rule 74 (seen_times_equals -> empty .)
    ID              reduce using rule 74 (seen_times_equals -> empty .)
    NEW_KWD         reduce using rule 74 (seen_times_equals -> empty .)
    CTE_I           reduce using rule 74 (seen_times_equals -> empty .)
    CTE_F           reduce using rule 74 (seen_times_equals -> empty .)
    CTE_S           reduce using rule 74 (seen_times_equals -> empty .)
    THIS_KWD        reduce using rule 74 (seen_times_equals -> empty .)
    CTE_TRUE        reduce using rule 74 (seen_times_equals -> empty .)
    CTE_FALSE       reduce using rule 74 (seen_times_equals -> empty .)


state 265

    (68) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals . EXPRESSION
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 161
    EXPRESSION                     shift and go to state 319
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 266

    (75) seen_over_equals -> empty .

    MINUS           reduce using rule 75 (seen_over_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 75 (seen_over_equals -> empty .)
    NOT             reduce using rule 75 (seen_over_equals -> empty .)
    STOI_KWD        reduce using rule 75 (seen_over_equals -> empty .)
    STOF_KWD        reduce using rule 75 (seen_over_equals -> empty .)
    STOB_KWD        reduce using rule 75 (seen_over_equals -> empty .)
    ID              reduce using rule 75 (seen_over_equals -> empty .)
    NEW_KWD         reduce using rule 75 (seen_over_equals -> empty .)
    CTE_I           reduce using rule 75 (seen_over_equals -> empty .)
    CTE_F           reduce using rule 75 (seen_over_equals -> empty .)
    CTE_S           reduce using rule 75 (seen_over_equals -> empty .)
    THIS_KWD        reduce using rule 75 (seen_over_equals -> empty .)
    CTE_TRUE        reduce using rule 75 (seen_over_equals -> empty .)
    CTE_FALSE       reduce using rule 75 (seen_over_equals -> empty .)


state 267

    (69) ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .

    SEMI_COLON      reduce using rule 69 (ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .)
    CLOSE_PARENTHESIS reduce using rule 69 (ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .)


state 268

    (76) seen_plus_plus -> empty .

    SEMI_COLON      reduce using rule 76 (seen_plus_plus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 76 (seen_plus_plus -> empty .)


state 269

    (70) ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .

    SEMI_COLON      reduce using rule 70 (ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .)
    CLOSE_PARENTHESIS reduce using rule 70 (ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .)


state 270

    (77) seen_minus_minus -> empty .

    SEMI_COLON      reduce using rule 77 (seen_minus_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 77 (seen_minus_minus -> empty .)


state 271

    (173) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 173 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 173 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 272

    (23) READABLE_LIST -> VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_readable                  shift and go to state 320
    empty                          shift and go to state 321

state 273

    (144) seen_array_id -> empty .

    OPEN_BRACKET    reduce using rule 144 (seen_array_id -> empty .)


state 274

    (174) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 322


state 275

    (178) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (181) seen_printable -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_printable                 shift and go to state 323
    empty                          shift and go to state 324

state 276

    (176) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 325


state 277

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (52) seen_open_buffer -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)

    seen_open_buffer               shift and go to state 326
    empty                          shift and go to state 327

state 278

    (119) seen_var_in_io -> empty .

    COMMA           reduce using rule 119 (seen_var_in_io -> empty .)


state 279

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (54) seen_write_buffer -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)

    seen_write_buffer              shift and go to state 328
    empty                          shift and go to state 329

state 280

    (86) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXP                            shift and go to state 150
    EXPRESSION                     shift and go to state 330
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 281

    (88) seen_comp_op -> empty .

    MINUS           reduce using rule 88 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 88 (seen_comp_op -> empty .)
    NOT             reduce using rule 88 (seen_comp_op -> empty .)
    STOI_KWD        reduce using rule 88 (seen_comp_op -> empty .)
    STOF_KWD        reduce using rule 88 (seen_comp_op -> empty .)
    STOB_KWD        reduce using rule 88 (seen_comp_op -> empty .)
    ID              reduce using rule 88 (seen_comp_op -> empty .)
    NEW_KWD         reduce using rule 88 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 88 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 88 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 88 (seen_comp_op -> empty .)
    THIS_KWD        reduce using rule 88 (seen_comp_op -> empty .)
    CTE_TRUE        reduce using rule 88 (seen_comp_op -> empty .)
    CTE_FALSE       reduce using rule 88 (seen_comp_op -> empty .)


state 282

    (97) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 331


state 283

    (78) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 78 (EXP -> TERM seen_term EXP_P .)


state 284

    (81) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (84) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 84 (seen_term_op -> .)
    NOT             reduce using rule 84 (seen_term_op -> .)
    MINUS           reduce using rule 84 (seen_term_op -> .)
    STOI_KWD        reduce using rule 84 (seen_term_op -> .)
    STOF_KWD        reduce using rule 84 (seen_term_op -> .)
    STOB_KWD        reduce using rule 84 (seen_term_op -> .)
    ID              reduce using rule 84 (seen_term_op -> .)
    NEW_KWD         reduce using rule 84 (seen_term_op -> .)
    CTE_I           reduce using rule 84 (seen_term_op -> .)
    CTE_F           reduce using rule 84 (seen_term_op -> .)
    CTE_S           reduce using rule 84 (seen_term_op -> .)
    THIS_KWD        reduce using rule 84 (seen_term_op -> .)
    CTE_TRUE        reduce using rule 84 (seen_term_op -> .)
    CTE_FALSE       reduce using rule 84 (seen_term_op -> .)

    seen_term_op                   shift and go to state 332

state 285

    (82) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (84) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 84 (seen_term_op -> .)
    NOT             reduce using rule 84 (seen_term_op -> .)
    MINUS           reduce using rule 84 (seen_term_op -> .)
    STOI_KWD        reduce using rule 84 (seen_term_op -> .)
    STOF_KWD        reduce using rule 84 (seen_term_op -> .)
    STOB_KWD        reduce using rule 84 (seen_term_op -> .)
    ID              reduce using rule 84 (seen_term_op -> .)
    NEW_KWD         reduce using rule 84 (seen_term_op -> .)
    CTE_I           reduce using rule 84 (seen_term_op -> .)
    CTE_F           reduce using rule 84 (seen_term_op -> .)
    CTE_S           reduce using rule 84 (seen_term_op -> .)
    THIS_KWD        reduce using rule 84 (seen_term_op -> .)
    CTE_TRUE        reduce using rule 84 (seen_term_op -> .)
    CTE_FALSE       reduce using rule 84 (seen_term_op -> .)

    seen_term_op                   shift and go to state 333

state 286

    (83) EXP_P -> empty .

    BIGGER          reduce using rule 83 (EXP_P -> empty .)
    BIGGER_EQ       reduce using rule 83 (EXP_P -> empty .)
    SMALLER         reduce using rule 83 (EXP_P -> empty .)
    SMALLER_EQ      reduce using rule 83 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 83 (EXP_P -> empty .)
    NOT_EQUALS      reduce using rule 83 (EXP_P -> empty .)
    AND             reduce using rule 83 (EXP_P -> empty .)
    OR              reduce using rule 83 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 83 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 83 (EXP_P -> empty .)
    COMMA           reduce using rule 83 (EXP_P -> empty .)
    CLOSE_BRACKET   reduce using rule 83 (EXP_P -> empty .)


state 287

    (79) EXP -> MINUS seen_unary_minus EXP . pop_unary_minus
    (113) pop_unary_minus -> . empty
    (204) empty -> .

    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    pop_unary_minus                shift and go to state 334
    empty                          shift and go to state 335

state 288

    (99) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (152) TERM -> FACTOR . seen_factor TERM_P
    (113) pop_unary_minus -> . empty
    (156) seen_factor -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    pop_unary_minus                shift and go to state 336
    seen_factor                    shift and go to state 217
    empty                          shift and go to state 337

state 289

    (152) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 152 (TERM -> FACTOR seen_factor TERM_P .)


state 290

    (153) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (157) seen_factor_op -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_factor_op                 shift and go to state 338
    empty                          shift and go to state 339

state 291

    (154) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (157) seen_factor_op -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_factor_op                 shift and go to state 340
    empty                          shift and go to state 339

state 292

    (155) TERM_P -> empty .

    PLUS            reduce using rule 155 (TERM_P -> empty .)
    MINUS           reduce using rule 155 (TERM_P -> empty .)
    BIGGER          reduce using rule 155 (TERM_P -> empty .)
    BIGGER_EQ       reduce using rule 155 (TERM_P -> empty .)
    SMALLER         reduce using rule 155 (TERM_P -> empty .)
    SMALLER_EQ      reduce using rule 155 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 155 (TERM_P -> empty .)
    NOT_EQUALS      reduce using rule 155 (TERM_P -> empty .)
    AND             reduce using rule 155 (TERM_P -> empty .)
    OR              reduce using rule 155 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 155 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 155 (TERM_P -> empty .)
    COMMA           reduce using rule 155 (TERM_P -> empty .)
    CLOSE_BRACKET   reduce using rule 155 (TERM_P -> empty .)


state 293

    (98) FACTOR -> NOT seen_not FACTOR . pop_not
    (111) pop_not -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    pop_not                        shift and go to state 341
    empty                          shift and go to state 342

state 294

    (99) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (114) seen_unary_minus -> . empty
    (204) empty -> .

    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_unary_minus               shift and go to state 343
    empty                          shift and go to state 216

state 295

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (115) seen_open_parenthesis -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_open_parenthesis          shift and go to state 344
    empty                          shift and go to state 213

state 296

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (115) seen_open_parenthesis -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_open_parenthesis          shift and go to state 345
    empty                          shift and go to state 213

state 297

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (115) seen_open_parenthesis -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_open_parenthesis          shift and go to state 346
    empty                          shift and go to state 213

state 298

    (137) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 347


state 299

    (138) seen_class_id_instance -> empty .

    OPEN_PARENTHESIS reduce using rule 138 (seen_class_id_instance -> empty .)


state 300

    (132) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .

    ID              reduce using rule 132 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)
    THIS_KWD        reduce using rule 132 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)


state 301

    (140) seen_this_dot_operator -> empty .

    ID              reduce using rule 140 (seen_this_dot_operator -> empty .)
    THIS_KWD        reduce using rule 140 (seen_this_dot_operator -> empty .)


state 302

    (182) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (186) seen_if_kwd -> . empty
    (204) empty -> .

    OPEN_CURLY      reduce using rule 204 (empty -> .)

    seen_if_kwd                    shift and go to state 348
    empty                          shift and go to state 349

state 303

    (190) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 350


state 304

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 351


state 305

    (194) seen_for_kwd -> empty .

    EQUALS          reduce using rule 194 (seen_for_kwd -> empty .)


state 306

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (204) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (173) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (174) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (176) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (170) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (171) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (172) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (182) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (188) REPETITION -> . CONDITIONAL_REP
    (189) REPETITION -> . UNCONDITIONAL_REP
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (190) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (193) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 99
    PRINT_KWD       shift and go to state 100
    PRINTLN_KWD     shift and go to state 101
    OPEN_KWD        shift and go to state 102
    WRITE_KWD       shift and go to state 103
    RETURN_KWD      shift and go to state 106
    THIS_KWD        shift and go to state 108
    IF_KWD          shift and go to state 109
    WHILE_KWD       shift and go to state 112
    FOR_KWD         shift and go to state 113

    STATEMENT_STAR                 shift and go to state 352
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    FLOW_CONTROL                   shift and go to state 95
    FUNC_RETURN                    shift and go to state 96
    VAR                            shift and go to state 97
    CLASS_REFERENCE                shift and go to state 98
    DECISION                       shift and go to state 104
    REPETITION                     shift and go to state 105
    ARRAY                          shift and go to state 107
    CONDITIONAL_REP                shift and go to state 110
    UNCONDITIONAL_REP              shift and go to state 111

state 307

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 353


state 308

    (148) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_BRACKET   shift and go to state 354


state 309

    (158) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 158 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 310

    (161) ARG_LIST -> VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (105) FACTOR -> VAR seen_var_as_factor .
    (169) seen_arg -> . empty
    (204) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 105 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 204 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 204 (empty -> .) ]

    seen_arg                       shift and go to state 355
    empty                          shift and go to state 312

state 311

    (162) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (165) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (166) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (167) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (168) ARG_LIST_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 357
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    ARG_LIST_P                     shift and go to state 356
    empty                          shift and go to state 358

state 312

    (169) seen_arg -> empty .

    COMMA           reduce using rule 169 (seen_arg -> empty .)
    CLOSE_PARENTHESIS reduce using rule 169 (seen_arg -> empty .)


state 313

    (163) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (165) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (166) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (167) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (168) ARG_LIST_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 357
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    ARG_LIST_P                     shift and go to state 359
    empty                          shift and go to state 358

state 314

    (141) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (146) seen_array_access -> . empty
    (204) empty -> .

    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_array_access              shift and go to state 360
    empty                          shift and go to state 361

state 315

    (64) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 64 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 64 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)


state 316

    (65) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .

    SEMI_COLON      reduce using rule 65 (ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 65 (ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .)


state 317

    (66) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .

    SEMI_COLON      reduce using rule 66 (ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 66 (ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .)


state 318

    (67) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .

    SEMI_COLON      reduce using rule 67 (ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 67 (ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .)


state 319

    (68) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .

    SEMI_COLON      reduce using rule 68 (ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 68 (ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .)


state 320

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 363
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    READABLE_LIST_P                shift and go to state 362
    empty                          shift and go to state 364

state 321

    (26) seen_readable -> empty .

    COMMA           reduce using rule 26 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 26 (seen_readable -> empty .)


state 322

    (174) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 174 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 174 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 323

    (178) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (179) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (180) PRINTABLE_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 366
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    PRINTABLE_P                    shift and go to state 365
    empty                          shift and go to state 367

state 324

    (181) seen_printable -> empty .

    COMMA           reduce using rule 181 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 181 (seen_printable -> empty .)


state 325

    (176) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 176 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 176 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 326

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 368


state 327

    (52) seen_open_buffer -> empty .

    COMMA           reduce using rule 52 (seen_open_buffer -> empty .)


state 328

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 369


state 329

    (54) seen_write_buffer -> empty .

    COMMA           reduce using rule 54 (seen_write_buffer -> empty .)


state 330

    (86) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (87) seen_comp -> . empty
    (204) empty -> .

    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_comp                      shift and go to state 370
    empty                          shift and go to state 371

state 331

    (97) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (116) seen_close_parenthesis -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_close_parenthesis         shift and go to state 372
    empty                          shift and go to state 373

state 332

    (81) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    MINUS           shift and go to state 294
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    TERM                           shift and go to state 374
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 333

    (82) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    MINUS           shift and go to state 294
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    TERM                           shift and go to state 375
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 334

    (79) EXP -> MINUS seen_unary_minus EXP pop_unary_minus .

    BIGGER          reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    BIGGER_EQ       reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER         reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER_EQ      reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    NOT_EQUALS      reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    AND             reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    OR              reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SEMI_COLON      reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    COMMA           reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)


state 335

    (113) pop_unary_minus -> empty .

    BIGGER          reduce using rule 113 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 113 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 113 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 113 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 113 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 113 (pop_unary_minus -> empty .)
    AND             reduce using rule 113 (pop_unary_minus -> empty .)
    OR              reduce using rule 113 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 113 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 113 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 113 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 113 (pop_unary_minus -> empty .)
    STAR            reduce using rule 113 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 113 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 113 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 113 (pop_unary_minus -> empty .)


state 336

    (99) FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .

    STAR            reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    FWD_SLASH       reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    PLUS            reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    MINUS           reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER          reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER_EQ       reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER         reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER_EQ      reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    NOT_EQUALS      reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    AND             reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    OR              reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SEMI_COLON      reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    COMMA           reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)


state 337

    (113) pop_unary_minus -> empty .
    (156) seen_factor -> empty .

  ! reduce/reduce conflict for STAR resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 113 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 113 (pop_unary_minus -> empty .)
    STAR            reduce using rule 113 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 113 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 113 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 113 (pop_unary_minus -> empty .)
    BIGGER          reduce using rule 113 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 113 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 113 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 113 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 113 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 113 (pop_unary_minus -> empty .)
    AND             reduce using rule 113 (pop_unary_minus -> empty .)
    OR              reduce using rule 113 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 113 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 113 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 113 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 113 (pop_unary_minus -> empty .)

  ! STAR            [ reduce using rule 156 (seen_factor -> empty .) ]
  ! FWD_SLASH       [ reduce using rule 156 (seen_factor -> empty .) ]
  ! PLUS            [ reduce using rule 156 (seen_factor -> empty .) ]
  ! MINUS           [ reduce using rule 156 (seen_factor -> empty .) ]
  ! BIGGER          [ reduce using rule 156 (seen_factor -> empty .) ]
  ! BIGGER_EQ       [ reduce using rule 156 (seen_factor -> empty .) ]
  ! SMALLER         [ reduce using rule 156 (seen_factor -> empty .) ]
  ! SMALLER_EQ      [ reduce using rule 156 (seen_factor -> empty .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 156 (seen_factor -> empty .) ]
  ! NOT_EQUALS      [ reduce using rule 156 (seen_factor -> empty .) ]
  ! AND             [ reduce using rule 156 (seen_factor -> empty .) ]
  ! OR              [ reduce using rule 156 (seen_factor -> empty .) ]
  ! SEMI_COLON      [ reduce using rule 156 (seen_factor -> empty .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 156 (seen_factor -> empty .) ]
  ! COMMA           [ reduce using rule 156 (seen_factor -> empty .) ]
  ! CLOSE_BRACKET   [ reduce using rule 156 (seen_factor -> empty .) ]


state 338

    (153) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    MINUS           shift and go to state 294
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    FACTOR                         shift and go to state 376
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 339

    (157) seen_factor_op -> empty .

    OPEN_PARENTHESIS reduce using rule 157 (seen_factor_op -> empty .)
    NOT             reduce using rule 157 (seen_factor_op -> empty .)
    MINUS           reduce using rule 157 (seen_factor_op -> empty .)
    STOI_KWD        reduce using rule 157 (seen_factor_op -> empty .)
    STOF_KWD        reduce using rule 157 (seen_factor_op -> empty .)
    STOB_KWD        reduce using rule 157 (seen_factor_op -> empty .)
    ID              reduce using rule 157 (seen_factor_op -> empty .)
    NEW_KWD         reduce using rule 157 (seen_factor_op -> empty .)
    CTE_I           reduce using rule 157 (seen_factor_op -> empty .)
    CTE_F           reduce using rule 157 (seen_factor_op -> empty .)
    CTE_S           reduce using rule 157 (seen_factor_op -> empty .)
    THIS_KWD        reduce using rule 157 (seen_factor_op -> empty .)
    CTE_TRUE        reduce using rule 157 (seen_factor_op -> empty .)
    CTE_FALSE       reduce using rule 157 (seen_factor_op -> empty .)


state 340

    (154) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    MINUS           shift and go to state 294
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    FACTOR                         shift and go to state 377
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 341

    (98) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER_EQ       reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER_EQ      reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    NOT_EQUALS      reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_BRACKET   reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 342

    (111) pop_not -> empty .

    STAR            reduce using rule 111 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 111 (pop_not -> empty .)
    PLUS            reduce using rule 111 (pop_not -> empty .)
    MINUS           reduce using rule 111 (pop_not -> empty .)
    BIGGER          reduce using rule 111 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 111 (pop_not -> empty .)
    SMALLER         reduce using rule 111 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 111 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 111 (pop_not -> empty .)
    NOT_EQUALS      reduce using rule 111 (pop_not -> empty .)
    AND             reduce using rule 111 (pop_not -> empty .)
    OR              reduce using rule 111 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 111 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 111 (pop_not -> empty .)
    COMMA           reduce using rule 111 (pop_not -> empty .)
    CLOSE_BRACKET   reduce using rule 111 (pop_not -> empty .)


state 343

    (99) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    MINUS           shift and go to state 294
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    FACTOR                         shift and go to state 378
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 344

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXPRESSION                     shift and go to state 379
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 345

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXPRESSION                     shift and go to state 380
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 346

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXPRESSION                     shift and go to state 381
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 347

    (137) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 382


state 348

    (182) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 383


state 349

    (186) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 186 (seen_if_kwd -> empty .)


state 350

    (190) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (192) seen_while_exp -> . empty
    (204) empty -> .

    OPEN_CURLY      reduce using rule 204 (empty -> .)

    seen_while_exp                 shift and go to state 384
    empty                          shift and go to state 385

state 351

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 161
    EXPRESSION                     shift and go to state 386
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 352

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 387


state 353

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 39 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 354

    (148) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DECLARATION_P
    (148) ARRAY_DECLARATION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (149) ARRAY_DECLARATION_P -> . empty
    (204) empty -> .

    OPEN_BRACKET    shift and go to state 120
    COMMA           reduce using rule 204 (empty -> .)
    COLON           reduce using rule 204 (empty -> .)

    ARRAY_DECLARATION_P            shift and go to state 388
    empty                          shift and go to state 122

state 355

    (161) ARG_LIST -> VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (165) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (166) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (167) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (168) ARG_LIST_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 357
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    ARG_LIST_P                     shift and go to state 389
    empty                          shift and go to state 358

state 356

    (162) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 162 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 357

    (165) ARG_LIST_P -> COMMA . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (166) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (167) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    ID              shift and go to state 248
    THIS_KWD        shift and go to state 108
    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 390
    EXPRESSION                     shift and go to state 391
    FUNC_CALL                      shift and go to state 392
    ARRAY                          shift and go to state 107
    CLASS_REFERENCE                shift and go to state 254
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CTE_B                          shift and go to state 167

state 358

    (168) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 168 (ARG_LIST_P -> empty .)


state 359

    (163) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 163 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 360

    (141) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 393


state 361

    (146) seen_array_access -> empty .

    CLOSE_BRACKET   reduce using rule 146 (seen_array_access -> empty .)


state 362

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 23 (READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 363

    (24) READABLE_LIST_P -> COMMA . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 195
    THIS_KWD        shift and go to state 108

    VAR                            shift and go to state 394
    ARRAY                          shift and go to state 107
    CLASS_REFERENCE                shift and go to state 196

state 364

    (25) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 25 (READABLE_LIST_P -> empty .)


state 365

    (178) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 178 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 366

    (179) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXPRESSION                     shift and go to state 395
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 367

    (180) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 180 (PRINTABLE_P -> empty .)


state 368

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 161
    EXPRESSION                     shift and go to state 396
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 369

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 161
    EXPRESSION                     shift and go to state 397
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 370

    (86) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    SEMI_COLON      reduce using rule 86 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 86 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    COMMA           reduce using rule 86 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_BRACKET   reduce using rule 86 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 371

    (87) seen_comp -> empty .

    SEMI_COLON      reduce using rule 87 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 87 (seen_comp -> empty .)
    COMMA           reduce using rule 87 (seen_comp -> empty .)
    CLOSE_BRACKET   reduce using rule 87 (seen_comp -> empty .)


state 372

    (97) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    NOT_EQUALS      reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 373

    (116) seen_close_parenthesis -> empty .

    STAR            reduce using rule 116 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 116 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 116 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 116 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 116 (seen_close_parenthesis -> empty .)
    BIGGER_EQ       reduce using rule 116 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 116 (seen_close_parenthesis -> empty .)
    SMALLER_EQ      reduce using rule 116 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 116 (seen_close_parenthesis -> empty .)
    NOT_EQUALS      reduce using rule 116 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 116 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 116 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 116 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 116 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 116 (seen_close_parenthesis -> empty .)
    CLOSE_BRACKET   reduce using rule 116 (seen_close_parenthesis -> empty .)


state 374

    (81) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (80) seen_term -> .

    PLUS            reduce using rule 80 (seen_term -> .)
    MINUS           reduce using rule 80 (seen_term -> .)
    BIGGER          reduce using rule 80 (seen_term -> .)
    BIGGER_EQ       reduce using rule 80 (seen_term -> .)
    SMALLER         reduce using rule 80 (seen_term -> .)
    SMALLER_EQ      reduce using rule 80 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 80 (seen_term -> .)
    NOT_EQUALS      reduce using rule 80 (seen_term -> .)
    AND             reduce using rule 80 (seen_term -> .)
    OR              reduce using rule 80 (seen_term -> .)
    SEMI_COLON      reduce using rule 80 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 80 (seen_term -> .)
    COMMA           reduce using rule 80 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 80 (seen_term -> .)

    seen_term                      shift and go to state 398

state 375

    (82) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (80) seen_term -> .

    PLUS            reduce using rule 80 (seen_term -> .)
    MINUS           reduce using rule 80 (seen_term -> .)
    BIGGER          reduce using rule 80 (seen_term -> .)
    BIGGER_EQ       reduce using rule 80 (seen_term -> .)
    SMALLER         reduce using rule 80 (seen_term -> .)
    SMALLER_EQ      reduce using rule 80 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 80 (seen_term -> .)
    NOT_EQUALS      reduce using rule 80 (seen_term -> .)
    AND             reduce using rule 80 (seen_term -> .)
    OR              reduce using rule 80 (seen_term -> .)
    SEMI_COLON      reduce using rule 80 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 80 (seen_term -> .)
    COMMA           reduce using rule 80 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 80 (seen_term -> .)

    seen_term                      shift and go to state 399

state 376

    (153) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (156) seen_factor -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_factor                    shift and go to state 400
    empty                          shift and go to state 218

state 377

    (154) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (156) seen_factor -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_factor                    shift and go to state 401
    empty                          shift and go to state 218

state 378

    (99) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (113) pop_unary_minus -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    pop_unary_minus                shift and go to state 336
    empty                          shift and go to state 335

state 379

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 402


state 380

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 403


state 381

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 404


state 382

    (137) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    STAR            reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    AND             reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OR              reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMI_COLON      reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 137 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 383

    (182) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (204) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (173) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (174) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (176) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (170) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (171) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (172) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (182) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (188) REPETITION -> . CONDITIONAL_REP
    (189) REPETITION -> . UNCONDITIONAL_REP
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (190) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (193) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 99
    PRINT_KWD       shift and go to state 100
    PRINTLN_KWD     shift and go to state 101
    OPEN_KWD        shift and go to state 102
    WRITE_KWD       shift and go to state 103
    RETURN_KWD      shift and go to state 106
    THIS_KWD        shift and go to state 108
    IF_KWD          shift and go to state 109
    WHILE_KWD       shift and go to state 112
    FOR_KWD         shift and go to state 113

    STATEMENT_STAR                 shift and go to state 405
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    FLOW_CONTROL                   shift and go to state 95
    FUNC_RETURN                    shift and go to state 96
    VAR                            shift and go to state 97
    CLASS_REFERENCE                shift and go to state 98
    DECISION                       shift and go to state 104
    REPETITION                     shift and go to state 105
    ARRAY                          shift and go to state 107
    CONDITIONAL_REP                shift and go to state 110
    UNCONDITIONAL_REP              shift and go to state 111

state 384

    (190) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 406


state 385

    (192) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 192 (seen_while_exp -> empty .)


state 386

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (196) seen_for_start_exp -> . empty
    (204) empty -> .

    SEMI_COLON      reduce using rule 204 (empty -> .)

    seen_for_start_exp             shift and go to state 407
    empty                          shift and go to state 408

state 387

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLASS_KWD       reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    ID              reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 388

    (148) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .

    COMMA           reduce using rule 148 (ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)
    COLON           reduce using rule 148 (ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)


state 389

    (161) ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 161 (ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 390

    (165) ARG_LIST_P -> COMMA VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (105) FACTOR -> VAR . seen_var_as_factor
    (118) seen_var_as_factor -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)

    seen_var_as_factor             shift and go to state 409
    empty                          shift and go to state 228

state 391

    (166) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (169) seen_arg -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_arg                       shift and go to state 410
    empty                          shift and go to state 312

state 392

    (167) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (103) FACTOR -> FUNC_CALL .
    (169) seen_arg -> . empty
    (204) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 103 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 103 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 103 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 103 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 103 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 103 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 103 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 103 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 103 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 103 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 103 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 103 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 103 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 103 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 103 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 103 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 204 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 204 (empty -> .) ]

    seen_arg                       shift and go to state 411
    empty                          shift and go to state 312

state 393

    (141) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (142) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (143) ARRAY_P -> . empty
    (204) empty -> .

    OPEN_BRACKET    shift and go to state 412
    EQUALS          reduce using rule 204 (empty -> .)
    PLUS_EQUALS     reduce using rule 204 (empty -> .)
    MINUS_EQUALS    reduce using rule 204 (empty -> .)
    TIMES_EQUALS    reduce using rule 204 (empty -> .)
    OVER_EQUALS     reduce using rule 204 (empty -> .)
    PLUS_PLUS       reduce using rule 204 (empty -> .)
    MINUS_MINUS     reduce using rule 204 (empty -> .)
    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    ARRAY_P                        shift and go to state 413
    empty                          shift and go to state 414

state 394

    (24) READABLE_LIST_P -> COMMA VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (117) seen_var_in_assign -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_var_in_assign             shift and go to state 415
    empty                          shift and go to state 137

state 395

    (179) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (181) seen_printable -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_printable                 shift and go to state 416
    empty                          shift and go to state 324

state 396

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) seen_file_path -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)

    seen_file_path                 shift and go to state 417
    empty                          shift and go to state 418

state 397

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) seen_file_path -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)

    seen_file_path                 shift and go to state 419
    empty                          shift and go to state 418

state 398

    (81) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (81) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (82) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (83) EXP_P -> . empty
    (204) empty -> .

    PLUS            shift and go to state 284
    MINUS           shift and go to state 285
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    EXP_P                          shift and go to state 420
    empty                          shift and go to state 286

state 399

    (82) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (81) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (82) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (83) EXP_P -> . empty
    (204) empty -> .

    PLUS            shift and go to state 284
    MINUS           shift and go to state 285
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    EXP_P                          shift and go to state 421
    empty                          shift and go to state 286

state 400

    (153) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (153) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (154) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (155) TERM_P -> . empty
    (204) empty -> .

    STAR            shift and go to state 290
    FWD_SLASH       shift and go to state 291
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    TERM_P                         shift and go to state 422
    empty                          shift and go to state 292

state 401

    (154) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (153) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (154) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (155) TERM_P -> . empty
    (204) empty -> .

    STAR            shift and go to state 290
    FWD_SLASH       shift and go to state 291
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    TERM_P                         shift and go to state 423
    empty                          shift and go to state 292

state 402

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (116) seen_close_parenthesis -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_close_parenthesis         shift and go to state 424
    empty                          shift and go to state 373

state 403

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (116) seen_close_parenthesis -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_close_parenthesis         shift and go to state 425
    empty                          shift and go to state 373

state 404

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (116) seen_close_parenthesis -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_close_parenthesis         shift and go to state 426
    empty                          shift and go to state 373

state 405

    (182) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 427


state 406

    (190) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (204) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (173) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (174) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (176) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (170) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (171) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (172) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (182) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (188) REPETITION -> . CONDITIONAL_REP
    (189) REPETITION -> . UNCONDITIONAL_REP
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (190) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (193) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 99
    PRINT_KWD       shift and go to state 100
    PRINTLN_KWD     shift and go to state 101
    OPEN_KWD        shift and go to state 102
    WRITE_KWD       shift and go to state 103
    RETURN_KWD      shift and go to state 106
    THIS_KWD        shift and go to state 108
    IF_KWD          shift and go to state 109
    WHILE_KWD       shift and go to state 112
    FOR_KWD         shift and go to state 113

    STATEMENT_STAR                 shift and go to state 428
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    FLOW_CONTROL                   shift and go to state 95
    FUNC_RETURN                    shift and go to state 96
    VAR                            shift and go to state 97
    CLASS_REFERENCE                shift and go to state 98
    DECISION                       shift and go to state 104
    REPETITION                     shift and go to state 105
    ARRAY                          shift and go to state 107
    CONDITIONAL_REP                shift and go to state 110
    UNCONDITIONAL_REP              shift and go to state 111

state 407

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 429


state 408

    (196) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 196 (seen_for_start_exp -> empty .)


state 409

    (165) ARG_LIST_P -> COMMA VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (105) FACTOR -> VAR seen_var_as_factor .
    (169) seen_arg -> . empty
    (204) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 105 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 105 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 204 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 204 (empty -> .) ]

    seen_arg                       shift and go to state 430
    empty                          shift and go to state 312

state 410

    (166) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (165) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (166) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (167) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (168) ARG_LIST_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 357
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    ARG_LIST_P                     shift and go to state 431
    empty                          shift and go to state 358

state 411

    (167) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (165) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (166) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (167) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (168) ARG_LIST_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 357
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    ARG_LIST_P                     shift and go to state 432
    empty                          shift and go to state 358

state 412

    (142) ARRAY_P -> OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (145) seen_open_bracket -> . empty
    (204) empty -> .

    MINUS           reduce using rule 204 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 204 (empty -> .)
    NOT             reduce using rule 204 (empty -> .)
    STOI_KWD        reduce using rule 204 (empty -> .)
    STOF_KWD        reduce using rule 204 (empty -> .)
    STOB_KWD        reduce using rule 204 (empty -> .)
    ID              reduce using rule 204 (empty -> .)
    NEW_KWD         reduce using rule 204 (empty -> .)
    CTE_I           reduce using rule 204 (empty -> .)
    CTE_F           reduce using rule 204 (empty -> .)
    CTE_S           reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    CTE_TRUE        reduce using rule 204 (empty -> .)
    CTE_FALSE       reduce using rule 204 (empty -> .)

    seen_open_bracket              shift and go to state 433
    empty                          shift and go to state 256

state 413

    (141) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_EQUALS     reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_EQUALS    reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    TIMES_EQUALS    reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OVER_EQUALS     reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_PLUS       reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_MINUS     reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 141 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 414

    (143) ARRAY_P -> empty .

    EQUALS          reduce using rule 143 (ARRAY_P -> empty .)
    PLUS_EQUALS     reduce using rule 143 (ARRAY_P -> empty .)
    MINUS_EQUALS    reduce using rule 143 (ARRAY_P -> empty .)
    TIMES_EQUALS    reduce using rule 143 (ARRAY_P -> empty .)
    OVER_EQUALS     reduce using rule 143 (ARRAY_P -> empty .)
    PLUS_PLUS       reduce using rule 143 (ARRAY_P -> empty .)
    MINUS_MINUS     reduce using rule 143 (ARRAY_P -> empty .)
    STAR            reduce using rule 143 (ARRAY_P -> empty .)
    FWD_SLASH       reduce using rule 143 (ARRAY_P -> empty .)
    PLUS            reduce using rule 143 (ARRAY_P -> empty .)
    MINUS           reduce using rule 143 (ARRAY_P -> empty .)
    BIGGER          reduce using rule 143 (ARRAY_P -> empty .)
    BIGGER_EQ       reduce using rule 143 (ARRAY_P -> empty .)
    SMALLER         reduce using rule 143 (ARRAY_P -> empty .)
    SMALLER_EQ      reduce using rule 143 (ARRAY_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 143 (ARRAY_P -> empty .)
    NOT_EQUALS      reduce using rule 143 (ARRAY_P -> empty .)
    AND             reduce using rule 143 (ARRAY_P -> empty .)
    OR              reduce using rule 143 (ARRAY_P -> empty .)
    SEMI_COLON      reduce using rule 143 (ARRAY_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 143 (ARRAY_P -> empty .)
    COMMA           reduce using rule 143 (ARRAY_P -> empty .)
    CLOSE_BRACKET   reduce using rule 143 (ARRAY_P -> empty .)


state 415

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (204) empty -> .

    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_readable                  shift and go to state 434
    empty                          shift and go to state 321

state 416

    (179) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (179) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (180) PRINTABLE_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 366
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    PRINTABLE_P                    shift and go to state 435
    empty                          shift and go to state 367

state 417

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 436


state 418

    (55) seen_file_path -> empty .

    COMMA           reduce using rule 55 (seen_file_path -> empty .)


state 419

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 437


state 420

    (81) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 421

    (82) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 422

    (153) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 153 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 423

    (154) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 154 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 424

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (107) seen_stox_factor -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_stox_factor               shift and go to state 438
    empty                          shift and go to state 439

state 425

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (107) seen_stox_factor -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_stox_factor               shift and go to state 440
    empty                          shift and go to state 439

state 426

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (107) seen_stox_factor -> . empty
    (204) empty -> .

    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_stox_factor               shift and go to state 441
    empty                          shift and go to state 439

state 427

    (182) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (183) DECISION_P -> . ELSE_KWD seen_else_kwd DECISION
    (184) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (185) DECISION_P -> . empty
    (204) empty -> .

    ELSE_KWD        shift and go to state 443
    ID              reduce using rule 204 (empty -> .)
    READ_KWD        reduce using rule 204 (empty -> .)
    PRINT_KWD       reduce using rule 204 (empty -> .)
    PRINTLN_KWD     reduce using rule 204 (empty -> .)
    OPEN_KWD        reduce using rule 204 (empty -> .)
    WRITE_KWD       reduce using rule 204 (empty -> .)
    RETURN_KWD      reduce using rule 204 (empty -> .)
    THIS_KWD        reduce using rule 204 (empty -> .)
    IF_KWD          reduce using rule 204 (empty -> .)
    WHILE_KWD       reduce using rule 204 (empty -> .)
    FOR_KWD         reduce using rule 204 (empty -> .)
    CLOSE_CURLY     reduce using rule 204 (empty -> .)

    DECISION_P                     shift and go to state 442
    empty                          shift and go to state 444

state 428

    (190) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 445


state 429

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 161
    EXPRESSION                     shift and go to state 446
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 430

    (165) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (165) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (166) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (167) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (168) ARG_LIST_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 357
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    ARG_LIST_P                     shift and go to state 447
    empty                          shift and go to state 358

state 431

    (166) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 166 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 432

    (167) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 167 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 433

    (142) ARRAY_P -> OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    EXPRESSION                     shift and go to state 448
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    VAR                            shift and go to state 161
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 434

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (204) empty -> .

    COMMA           shift and go to state 363
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    READABLE_LIST_P                shift and go to state 449
    empty                          shift and go to state 364

state 435

    (179) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 179 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 436

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 161
    EXPRESSION                     shift and go to state 450
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 437

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (152) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . FUNC_CALL
    (104) FACTOR -> . CLASS_INSTANCE
    (105) FACTOR -> . VAR seen_var_as_factor
    (106) FACTOR -> . CONSTANT
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (137) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (125) CONSTANT -> . CTE_I seen_cte_i
    (126) CONSTANT -> . CTE_F seen_cte_f
    (127) CONSTANT -> . CTE_S seen_cte_s
    (128) CONSTANT -> . CTE_B
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (129) CTE_B -> . CTE_TRUE seen_cte_true
    (130) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 152
    NOT             shift and go to state 156
    STOI_KWD        shift and go to state 157
    STOF_KWD        shift and go to state 158
    STOB_KWD        shift and go to state 159
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 163
    CTE_I           shift and go to state 164
    CTE_F           shift and go to state 165
    CTE_S           shift and go to state 166
    THIS_KWD        shift and go to state 108
    CTE_TRUE        shift and go to state 168
    CTE_FALSE       shift and go to state 169

    VAR                            shift and go to state 161
    EXPRESSION                     shift and go to state 451
    EXP                            shift and go to state 150
    TERM                           shift and go to state 153
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 241
    CLASS_INSTANCE                 shift and go to state 160
    CONSTANT                       shift and go to state 162
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107
    CTE_B                          shift and go to state 167

state 438

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 439

    (107) seen_stox_factor -> empty .

    STAR            reduce using rule 107 (seen_stox_factor -> empty .)
    FWD_SLASH       reduce using rule 107 (seen_stox_factor -> empty .)
    PLUS            reduce using rule 107 (seen_stox_factor -> empty .)
    MINUS           reduce using rule 107 (seen_stox_factor -> empty .)
    BIGGER          reduce using rule 107 (seen_stox_factor -> empty .)
    BIGGER_EQ       reduce using rule 107 (seen_stox_factor -> empty .)
    SMALLER         reduce using rule 107 (seen_stox_factor -> empty .)
    SMALLER_EQ      reduce using rule 107 (seen_stox_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 107 (seen_stox_factor -> empty .)
    NOT_EQUALS      reduce using rule 107 (seen_stox_factor -> empty .)
    AND             reduce using rule 107 (seen_stox_factor -> empty .)
    OR              reduce using rule 107 (seen_stox_factor -> empty .)
    SEMI_COLON      reduce using rule 107 (seen_stox_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 107 (seen_stox_factor -> empty .)
    COMMA           reduce using rule 107 (seen_stox_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 107 (seen_stox_factor -> empty .)


state 440

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 441

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 442

    (182) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINT_KWD       reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINTLN_KWD     reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    OPEN_KWD        reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    RETURN_KWD      reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    THIS_KWD        reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 182 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 443

    (183) DECISION_P -> ELSE_KWD . seen_else_kwd DECISION
    (184) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (187) seen_else_kwd -> . empty
    (204) empty -> .

    OPEN_CURLY      reduce using rule 204 (empty -> .)
    IF_KWD          reduce using rule 204 (empty -> .)

    seen_else_kwd                  shift and go to state 452
    empty                          shift and go to state 453

state 444

    (185) DECISION_P -> empty .

    ID              reduce using rule 185 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 185 (DECISION_P -> empty .)
    PRINT_KWD       reduce using rule 185 (DECISION_P -> empty .)
    PRINTLN_KWD     reduce using rule 185 (DECISION_P -> empty .)
    OPEN_KWD        reduce using rule 185 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 185 (DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 185 (DECISION_P -> empty .)
    THIS_KWD        reduce using rule 185 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 185 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 185 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 185 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 185 (DECISION_P -> empty .)


state 445

    (190) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 190 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 446

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (197) seen_for_end_exp -> . empty
    (204) empty -> .

    SEMI_COLON      reduce using rule 204 (empty -> .)

    seen_for_end_exp               shift and go to state 454
    empty                          shift and go to state 455

state 447

    (165) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 165 (ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 448

    (142) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (146) seen_array_access -> . empty
    (204) empty -> .

    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    seen_array_access              shift and go to state 456
    empty                          shift and go to state 361

state 449

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 24 (READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 450

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (56) seen_separator -> . empty
    (204) empty -> .

    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_separator                 shift and go to state 457
    empty                          shift and go to state 458

state 451

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (56) seen_separator -> . empty
    (204) empty -> .

    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_separator                 shift and go to state 459
    empty                          shift and go to state 458

state 452

    (183) DECISION_P -> ELSE_KWD seen_else_kwd . DECISION
    (184) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (182) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 461
    IF_KWD          shift and go to state 109

    DECISION                       shift and go to state 460

state 453

    (187) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 187 (seen_else_kwd -> empty .)
    IF_KWD          reduce using rule 187 (seen_else_kwd -> empty .)


state 454

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 462


state 455

    (197) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 197 (seen_for_end_exp -> empty .)


state 456

    (142) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 463


state 457

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 464


state 458

    (56) seen_separator -> empty .

    CLOSE_PARENTHESIS reduce using rule 56 (seen_separator -> empty .)


state 459

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 465


state 460

    (183) DECISION_P -> ELSE_KWD seen_else_kwd DECISION .

    ID              reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    READ_KWD        reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    PRINT_KWD       reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    PRINTLN_KWD     reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    OPEN_KWD        reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    WRITE_KWD       reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    RETURN_KWD      reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    THIS_KWD        reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    IF_KWD          reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    WHILE_KWD       reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    FOR_KWD         reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    CLOSE_CURLY     reduce using rule 183 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)


state 461

    (184) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (204) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (173) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (174) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (176) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (170) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (171) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (172) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (182) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (188) REPETITION -> . CONDITIONAL_REP
    (189) REPETITION -> . UNCONDITIONAL_REP
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (190) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (193) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 99
    PRINT_KWD       shift and go to state 100
    PRINTLN_KWD     shift and go to state 101
    OPEN_KWD        shift and go to state 102
    WRITE_KWD       shift and go to state 103
    RETURN_KWD      shift and go to state 106
    THIS_KWD        shift and go to state 108
    IF_KWD          shift and go to state 109
    WHILE_KWD       shift and go to state 112
    FOR_KWD         shift and go to state 113

    STATEMENT_STAR                 shift and go to state 466
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    FLOW_CONTROL                   shift and go to state 95
    FUNC_RETURN                    shift and go to state 96
    VAR                            shift and go to state 97
    CLASS_REFERENCE                shift and go to state 98
    DECISION                       shift and go to state 104
    REPETITION                     shift and go to state 105
    ARRAY                          shift and go to state 107
    CONDITIONAL_REP                shift and go to state 110
    UNCONDITIONAL_REP              shift and go to state 111

state 462

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (59) FOR_INCR_STATEMENT -> . ASSIGN
    (60) FOR_INCR_STATEMENT -> . FUNC_CALL
    (61) FOR_INCR_STATEMENT -> . READ
    (62) FOR_INCR_STATEMENT -> . PRINT
    (63) FOR_INCR_STATEMENT -> . PRINTLN
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (173) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (174) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (176) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 84
    READ_KWD        shift and go to state 99
    PRINT_KWD       shift and go to state 100
    PRINTLN_KWD     shift and go to state 101
    THIS_KWD        shift and go to state 108

    VAR                            shift and go to state 97
    FOR_INCR_STATEMENT             shift and go to state 467
    ASSIGN                         shift and go to state 468
    FUNC_CALL                      shift and go to state 469
    READ                           shift and go to state 470
    PRINT                          shift and go to state 471
    PRINTLN                        shift and go to state 472
    CLASS_REFERENCE                shift and go to state 98
    ARRAY                          shift and go to state 107

state 463

    (142) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (142) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (143) ARRAY_P -> . empty
    (204) empty -> .

    OPEN_BRACKET    shift and go to state 412
    EQUALS          reduce using rule 204 (empty -> .)
    PLUS_EQUALS     reduce using rule 204 (empty -> .)
    MINUS_EQUALS    reduce using rule 204 (empty -> .)
    TIMES_EQUALS    reduce using rule 204 (empty -> .)
    OVER_EQUALS     reduce using rule 204 (empty -> .)
    PLUS_PLUS       reduce using rule 204 (empty -> .)
    MINUS_MINUS     reduce using rule 204 (empty -> .)
    STAR            reduce using rule 204 (empty -> .)
    FWD_SLASH       reduce using rule 204 (empty -> .)
    PLUS            reduce using rule 204 (empty -> .)
    MINUS           reduce using rule 204 (empty -> .)
    BIGGER          reduce using rule 204 (empty -> .)
    BIGGER_EQ       reduce using rule 204 (empty -> .)
    SMALLER         reduce using rule 204 (empty -> .)
    SMALLER_EQ      reduce using rule 204 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 204 (empty -> .)
    NOT_EQUALS      reduce using rule 204 (empty -> .)
    AND             reduce using rule 204 (empty -> .)
    OR              reduce using rule 204 (empty -> .)
    SEMI_COLON      reduce using rule 204 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)
    COMMA           reduce using rule 204 (empty -> .)
    CLOSE_BRACKET   reduce using rule 204 (empty -> .)

    ARRAY_P                        shift and go to state 473
    empty                          shift and go to state 414

state 464

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 51 (OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 465

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 53 (WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 466

    (184) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 474


state 467

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (195) seen_for_incr_exp -> . empty
    (204) empty -> .

    CLOSE_PARENTHESIS reduce using rule 204 (empty -> .)

    seen_for_incr_exp              shift and go to state 475
    empty                          shift and go to state 476

state 468

    (59) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 59 (FOR_INCR_STATEMENT -> ASSIGN .)


state 469

    (60) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 60 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 470

    (61) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 61 (FOR_INCR_STATEMENT -> READ .)


state 471

    (62) FOR_INCR_STATEMENT -> PRINT .

    CLOSE_PARENTHESIS reduce using rule 62 (FOR_INCR_STATEMENT -> PRINT .)


state 472

    (63) FOR_INCR_STATEMENT -> PRINTLN .

    CLOSE_PARENTHESIS reduce using rule 63 (FOR_INCR_STATEMENT -> PRINTLN .)


state 473

    (142) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_EQUALS     reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_EQUALS    reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    TIMES_EQUALS    reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OVER_EQUALS     reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_PLUS       reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_MINUS     reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 142 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 474

    (184) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 184 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 475

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 477


state 476

    (195) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 195 (seen_for_incr_exp -> empty .)


state 477

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 478


state 478

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (204) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (158) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (159) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (173) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (174) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (176) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (170) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (171) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (172) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (134) VAR -> . ID
    (135) VAR -> . ARRAY
    (136) VAR -> . CLASS_REFERENCE VAR
    (131) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (132) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (182) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (188) REPETITION -> . CONDITIONAL_REP
    (189) REPETITION -> . UNCONDITIONAL_REP
    (141) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (190) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (193) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 204 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 99
    PRINT_KWD       shift and go to state 100
    PRINTLN_KWD     shift and go to state 101
    OPEN_KWD        shift and go to state 102
    WRITE_KWD       shift and go to state 103
    RETURN_KWD      shift and go to state 106
    THIS_KWD        shift and go to state 108
    IF_KWD          shift and go to state 109
    WHILE_KWD       shift and go to state 112
    FOR_KWD         shift and go to state 113

    VAR                            shift and go to state 97
    STATEMENT_STAR                 shift and go to state 479
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    FLOW_CONTROL                   shift and go to state 95
    FUNC_RETURN                    shift and go to state 96
    CLASS_REFERENCE                shift and go to state 98
    DECISION                       shift and go to state 104
    REPETITION                     shift and go to state 105
    ARRAY                          shift and go to state 107
    CONDITIONAL_REP                shift and go to state 110
    UNCONDITIONAL_REP              shift and go to state 111

state 479

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 480


state 480

    (193) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 193 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLASS_KWD in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 14 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SEMI_COLON in state 149 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (CLASS_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 252 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 252
WARNING: reduce/reduce conflict in state 310 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 310
WARNING: reduce/reduce conflict in state 337 resolved using rule (pop_unary_minus -> empty)
WARNING: rejected rule (seen_factor -> empty) in state 337
WARNING: reduce/reduce conflict in state 392 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 392
WARNING: reduce/reduce conflict in state 409 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 409
