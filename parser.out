Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION
Rule 3     STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION
Rule 4     STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION
Rule 5     STRUCTURE_DEFINITION -> empty
Rule 6     seen_program_id -> empty
Rule 7     seen_main_kwd -> empty
Rule 8     CLASS_STAR -> CLASS CLASS_STAR
Rule 9     CLASS_STAR -> empty
Rule 10    CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
Rule 11    seen_class_id_declaration -> empty
Rule 12    seen_class_attr -> empty
Rule 13    CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 14    VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 15    VAR_LIST_STAR -> empty
Rule 16    VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON
Rule 17    SYMBOL_LIST -> ID SYMBOL_LIST_P
Rule 18    SYMBOL_LIST -> ARRAY_DEFINITION SYMBOL_LIST_P
Rule 19    SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P
Rule 20    SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION SYMBOL_LIST_P
Rule 21    SYMBOL_LIST_P -> COMMA
Rule 22    SYMBOL_LIST_P -> empty
Rule 23    READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 24    READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 25    READABLE_LIST_P -> empty
Rule 26    seen_readable -> empty
Rule 27    GLOBAL_VAR -> VAR_LIST_STAR
Rule 28    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 29    FUNC_DEF_STAR -> empty
Rule 30    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 31    seen_func_id -> empty
Rule 32    seen_func_params -> empty
Rule 33    seen_func_vars -> empty
Rule 34    FUNC_PARAM -> VAR_DECLARATION FUNC_PARAM_P
Rule 35    FUNC_PARAM -> empty
Rule 36    FUNC_PARAM_P -> COMMA VAR_DECLARATION FUNC_PARAM_P
Rule 37    FUNC_PARAM_P -> empty
Rule 38    VAR_DECLARATION -> ID COLON TYPE
Rule 39    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 40    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 41    STATEMENT_STAR -> empty
Rule 42    STATEMENT -> ASSIGN SEMI_COLON
Rule 43    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 44    STATEMENT -> READ SEMI_COLON
Rule 45    STATEMENT -> PRINT SEMI_COLON
Rule 46    STATEMENT -> PRINTLN SEMI_COLON
Rule 47    STATEMENT -> FLOW_CONTROL
Rule 48    STATEMENT -> FUNC_RETURN
Rule 49    FLOW_CONTROL -> DECISION
Rule 50    FLOW_CONTROL -> REPETITION
Rule 51    FOR_INCR_STATEMENT -> ASSIGN
Rule 52    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 53    FOR_INCR_STATEMENT -> READ
Rule 54    FOR_INCR_STATEMENT -> PRINT
Rule 55    FOR_INCR_STATEMENT -> PRINTLN
Rule 56    ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
Rule 57    seen_equals -> empty
Rule 58    EXP -> TERM seen_term EXP_P
Rule 59    EXP -> MINUS seen_unary_minus EXP pop_unary_minus
Rule 60    EXP -> NOT seen_not EXP pop_not
Rule 61    seen_term -> <empty>
Rule 62    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 63    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 64    EXP_P -> empty
Rule 65    seen_term_op -> <empty>
Rule 66    EXPRESSION -> EXP
Rule 67    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 68    seen_comp -> empty
Rule 69    seen_comp_op -> empty
Rule 70    COMP -> BIGGER
Rule 71    COMP -> BIGGER_EQ
Rule 72    COMP -> SMALLER
Rule 73    COMP -> SMALLER_EQ
Rule 74    COMP -> DOUBLE_EQUALS
Rule 75    COMP -> DIFFERENT
Rule 76    COMP -> AND
Rule 77    COMP -> OR
Rule 78    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 79    FACTOR -> NOT seen_not FACTOR pop_not
Rule 80    FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus
Rule 81    FACTOR -> FUNC_CALL
Rule 82    FACTOR -> CLASS_INSTANCE
Rule 83    FACTOR -> VAR seen_var_as_factor
Rule 84    FACTOR -> CNST
Rule 85    pop_not -> empty
Rule 86    seen_not -> empty
Rule 87    pop_unary_minus -> empty
Rule 88    seen_unary_minus -> empty
Rule 89    seen_open_parenthesis -> empty
Rule 90    seen_close_parenthesis -> empty
Rule 91    seen_var_in_assign -> empty
Rule 92    seen_var_as_factor -> empty
Rule 93    seen_cte_i -> <empty>
Rule 94    seen_cte_f -> <empty>
Rule 95    seen_cte_s -> <empty>
Rule 96    CNST -> CTE_S seen_cte_s
Rule 97    CNST -> CTE_F seen_cte_f
Rule 98    CNST -> CTE_I seen_cte_i
Rule 99    CLASS_REFERENCE -> ID DOT seen_dot_operator
Rule 100   CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator
Rule 101   seen_this_kwd -> empty
Rule 102   VAR -> ID
Rule 103   VAR -> ARRAY
Rule 104   VAR -> CLASS_REFERENCE VAR
Rule 105   CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 106   seen_class_id_instance -> empty
Rule 107   seen_dot_operator -> empty
Rule 108   seen_this_dot_operator -> empty
Rule 109   ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 110   ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 111   ARRAY_P -> empty
Rule 112   seen_array_id -> empty
Rule 113   seen_open_bracket -> empty
Rule 114   seen_array_access -> empty
Rule 115   ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
Rule 116   ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
Rule 117   ARRAY_DEFINITION_P -> empty
Rule 118   seen_array_def_id -> empty
Rule 119   seen_array_def_dim -> empty
Rule 120   TERM -> FACTOR seen_factor TERM_P
Rule 121   TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 122   TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 123   TERM_P -> empty
Rule 124   seen_factor -> empty
Rule 125   seen_factor_op -> empty
Rule 126   FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 127   FUNC_CALL -> CLASS_REFERENCE FUNC_CALL
Rule 128   seen_func_call_id -> empty
Rule 129   ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 130   ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 131   ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 132   ARG_LIST -> empty
Rule 133   ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 134   ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 135   ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 136   ARG_LIST_P -> empty
Rule 137   seen_arg -> empty
Rule 138   FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 139   FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 140   FUNC_RETURN -> RETURN_KWD SEMI_COLON
Rule 141   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 142   PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 143   seen_print_kwd -> empty
Rule 144   PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 145   seen_println_kwd -> empty
Rule 146   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 147   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 148   PRINTABLE_P -> empty
Rule 149   seen_printable -> empty
Rule 150   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 151   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 152   DECISION_P -> empty
Rule 153   seen_if_kwd -> empty
Rule 154   seen_else_kwd -> empty
Rule 155   REPETITION -> CONDITIONAL_REP
Rule 156   REPETITION -> UNCONDITIONAL_REP
Rule 157   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 158   seen_while_kwd -> empty
Rule 159   seen_while_exp -> empty
Rule 160   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 161   seen_for_kwd -> empty
Rule 162   seen_for_incr_exp -> empty
Rule 163   seen_for_start_exp -> empty
Rule 164   seen_for_end_exp -> empty
Rule 165   TYPE -> TYPE_I
Rule 166   TYPE -> TYPE_F
Rule 167   TYPE -> TYPE_S
Rule 168   TYPE -> TYPE_B
Rule 169   TYPE -> TYPE_O
Rule 170   TYPE -> TYPE_V
Rule 171   empty -> <empty>

Terminals, with rules where they appear

AND                  : 76
ATTR_KWD             : 13
BIGGER               : 70
BIGGER_EQ            : 71
CLASS_KWD            : 10
CLOSE_BRACKET        : 109 110 115 116
CLOSE_CURLY          : 1 10 13 30 39 150 151 157 160
CLOSE_PARENTHESIS    : 1 30 78 105 126 141 142 144 150 157 160
COLON                : 16 38
COMMA                : 19 20 21 24 36 133 134 135 147
CTE_F                : 97
CTE_I                : 98 115 116
CTE_S                : 96
DIFFERENT            : 75
DOT                  : 99 100
DOUBLE_EQUALS        : 74
ELSE_KWD             : 151
EQUALS               : 56 160
FOR_KWD              : 160
FWD_SLASH            : 122
ID                   : 1 10 17 19 30 38 99 102 105 109 115 126
IF_KWD               : 150
MAIN_KWD             : 1
MINUS                : 59 63 80
NEW_KWD              : 105
NOT                  : 60 79
OPEN_BRACKET         : 109 110 115 116
OPEN_CURLY           : 1 10 13 30 39 150 151 157 160
OPEN_PARENTHESIS     : 1 30 78 105 126 141 142 144 150 157 160
OR                   : 77
PLUS                 : 62
PRINTLN_KWD          : 144
PRINT_KWD            : 142
PROGRAM_KWD          : 1
READ_KWD             : 141
RETURN_KWD           : 138 139 140
SEMI_COLON           : 1 16 42 43 44 45 46 138 139 140 160 160
SMALLER              : 72
SMALLER_EQ           : 73
STAR                 : 121
THIS_KWD             : 100
TYPE_B               : 168
TYPE_F               : 166
TYPE_I               : 165
TYPE_O               : 169
TYPE_S               : 167
TYPE_V               : 170
VARS_KWD             : 39
WHILE_KWD            : 157
error                : 

Nonterminals, with rules where they appear

ARG_LIST             : 126
ARG_LIST_P           : 129 130 131 133 134 135
ARRAY                : 103
ARRAY_DEFINITION     : 18 20
ARRAY_DEFINITION_P   : 115 116
ARRAY_P              : 109 110
ASSIGN               : 42 51
CLASS                : 8
CLASS_ATTR           : 10
CLASS_INSTANCE       : 82
CLASS_REFERENCE      : 104 127
CLASS_STAR           : 3 8
CNST                 : 84
COMP                 : 67
CONDITIONAL_REP      : 155
DECISION             : 49
DECISION_P           : 150
EXP                  : 59 60 66 67
EXPRESSION           : 56 67 78 109 110 130 134 138 146 147 150 157 160 160
EXP_P                : 58 62 63
FACTOR               : 79 80 120 121 122
FLOW_CONTROL         : 47
FOR_INCR_STATEMENT   : 160
FUNC_CALL            : 43 52 81 127 131 135 139
FUNC_DEF             : 28
FUNC_DEF_STAR        : 4 10 28
FUNC_PARAM           : 30
FUNC_PARAM_P         : 34 36
FUNC_RETURN          : 48
GLOBAL_VAR           : 2
PRINT                : 45 54
PRINTABLE            : 142 144
PRINTABLE_P          : 146 147
PRINTLN              : 46 55
PROGRAM              : 0
READ                 : 44 53
READABLE_LIST        : 141
READABLE_LIST_P      : 23 24
REPETITION           : 50
STATEMENT            : 40
STATEMENT_STAR       : 1 30 40 150 151 157 160
STRUCTURE_DEFINITION : 1 2 3 4
SYMBOL_LIST          : 16
SYMBOL_LIST_P        : 17 18 19 20
TERM                 : 58 62 63
TERM_P               : 120 121 122
TYPE                 : 16 30 38
UNCONDITIONAL_REP    : 156
VAR                  : 23 24 56 83 104 129 133 160
VARS                 : 30
VAR_DECLARATION      : 34 36
VAR_LIST             : 14
VAR_LIST_STAR        : 13 14 27 39
empty                : 5 6 7 9 11 12 15 22 25 26 29 31 32 33 35 37 41 57 64 68 69 85 86 87 88 89 90 91 92 101 106 107 108 111 112 113 114 117 118 119 123 124 125 128 132 136 137 143 145 148 149 152 153 154 158 159 161 162 163 164
pop_not              : 60 79
pop_unary_minus      : 59 80
seen_arg             : 129 130 131 133 134 135
seen_array_access    : 109 110
seen_array_def_dim   : 115 116
seen_array_def_id    : 115
seen_array_id        : 109
seen_class_attr      : 10
seen_class_id_declaration : 10
seen_class_id_instance : 105
seen_close_parenthesis : 78
seen_comp            : 67
seen_comp_op         : 67
seen_cte_f           : 97
seen_cte_i           : 98 115 116
seen_cte_s           : 96
seen_dot_operator    : 99
seen_else_kwd        : 151
seen_equals          : 56
seen_factor          : 120 121 122
seen_factor_op       : 121 122
seen_for_end_exp     : 160
seen_for_incr_exp    : 160
seen_for_kwd         : 160
seen_for_start_exp   : 160
seen_func_call_id    : 126
seen_func_id         : 30
seen_func_params     : 30
seen_func_vars       : 30
seen_if_kwd          : 150
seen_main_kwd        : 1
seen_not             : 60 79
seen_open_bracket    : 109 110
seen_open_parenthesis : 78
seen_print_kwd       : 142
seen_printable       : 146 147
seen_println_kwd     : 144
seen_program_id      : 1
seen_readable        : 23 24
seen_term            : 58 62 63
seen_term_op         : 62 63
seen_this_dot_operator : 100
seen_this_kwd        : 100
seen_unary_minus     : 59 80
seen_var_as_factor   : 83 129 133
seen_var_in_assign   : 23 24 56
seen_while_exp       : 157
seen_while_kwd       : 157

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (6) seen_program_id -> . empty
    (171) empty -> .

    SEMI_COLON      reduce using rule 171 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (6) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 6 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (171) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (165) TYPE -> . TYPE_I
    (166) TYPE -> . TYPE_F
    (167) TYPE -> . TYPE_S
    (168) TYPE -> . TYPE_B
    (169) TYPE -> . TYPE_O
    (170) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (115) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 171 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 171 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 171 (empty -> .) ]
  ! ID              [ reduce using rule 171 (empty -> .) ]

    STRUCTURE_DEFINITION           shift and go to state 8
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 7

    (17) SYMBOL_LIST -> ID . SYMBOL_LIST_P
    (115) ARRAY_DEFINITION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (118) seen_array_def_id -> . empty
    (171) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 171 (empty -> .)
    OPEN_BRACKET    reduce using rule 171 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 27
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 8

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 31


state 9

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (171) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (165) TYPE -> . TYPE_I
    (166) TYPE -> . TYPE_F
    (167) TYPE -> . TYPE_S
    (168) TYPE -> . TYPE_B
    (169) TYPE -> . TYPE_O
    (170) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (115) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 171 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 171 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 171 (empty -> .) ]
  ! ID              [ reduce using rule 171 (empty -> .) ]

    GLOBAL_VAR                     shift and go to state 9
    STRUCTURE_DEFINITION           shift and go to state 32
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 10

    (3) STRUCTURE_DEFINITION -> CLASS_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (171) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (165) TYPE -> . TYPE_I
    (166) TYPE -> . TYPE_F
    (167) TYPE -> . TYPE_S
    (168) TYPE -> . TYPE_B
    (169) TYPE -> . TYPE_O
    (170) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (115) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 171 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 171 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 171 (empty -> .) ]
  ! ID              [ reduce using rule 171 (empty -> .) ]

    CLASS_STAR                     shift and go to state 10
    STRUCTURE_DEFINITION           shift and go to state 33
    GLOBAL_VAR                     shift and go to state 9
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 11

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (171) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (165) TYPE -> . TYPE_I
    (166) TYPE -> . TYPE_F
    (167) TYPE -> . TYPE_S
    (168) TYPE -> . TYPE_B
    (169) TYPE -> . TYPE_O
    (170) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (115) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 171 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 171 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 171 (empty -> .) ]
  ! ID              [ reduce using rule 171 (empty -> .) ]

    FUNC_DEF_STAR                  shift and go to state 11
    STRUCTURE_DEFINITION           shift and go to state 34
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 12

    (5) STRUCTURE_DEFINITION -> empty .
    (9) CLASS_STAR -> empty .
    (29) FUNC_DEF_STAR -> empty .
    (15) VAR_LIST_STAR -> empty .

  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
    MAIN_KWD        reduce using rule 5 (STRUCTURE_DEFINITION -> empty .)
    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)

  ! MAIN_KWD        [ reduce using rule 9 (CLASS_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! ID              [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! ID              [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]


state 13

    (27) GLOBAL_VAR -> VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_I          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_F          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_S          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_B          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_O          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_V          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    ID              reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) CLASS_STAR -> CLASS . CLASS_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (171) empty -> .

  ! shift/reduce conflict for CLASS_KWD resolved as shift
    CLASS_KWD       shift and go to state 17
    TYPE_I          reduce using rule 171 (empty -> .)
    TYPE_F          reduce using rule 171 (empty -> .)
    TYPE_S          reduce using rule 171 (empty -> .)
    TYPE_B          reduce using rule 171 (empty -> .)
    TYPE_O          reduce using rule 171 (empty -> .)
    TYPE_V          reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    MAIN_KWD        reduce using rule 171 (empty -> .)

  ! CLASS_KWD       [ reduce using rule 171 (empty -> .) ]

    CLASS                          shift and go to state 14
    CLASS_STAR                     shift and go to state 35
    empty                          shift and go to state 36

state 15

    (28) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (171) empty -> .
    (165) TYPE -> . TYPE_I
    (166) TYPE -> . TYPE_F
    (167) TYPE -> . TYPE_S
    (168) TYPE -> . TYPE_B
    (169) TYPE -> . TYPE_O
    (170) TYPE -> . TYPE_V

  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    CLASS_KWD       reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    MAIN_KWD        reduce using rule 171 (empty -> .)
    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

  ! TYPE_I          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 171 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 171 (empty -> .) ]

    FUNC_DEF                       shift and go to state 15
    FUNC_DEF_STAR                  shift and go to state 37
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 16

    (14) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (171) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (115) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for ID resolved as shift
    CLASS_KWD       reduce using rule 171 (empty -> .)
    TYPE_I          reduce using rule 171 (empty -> .)
    TYPE_F          reduce using rule 171 (empty -> .)
    TYPE_S          reduce using rule 171 (empty -> .)
    TYPE_B          reduce using rule 171 (empty -> .)
    TYPE_O          reduce using rule 171 (empty -> .)
    TYPE_V          reduce using rule 171 (empty -> .)
    MAIN_KWD        reduce using rule 171 (empty -> .)
    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    ID              shift and go to state 7

  ! ID              [ reduce using rule 171 (empty -> .) ]

    VAR_LIST                       shift and go to state 16
    VAR_LIST_STAR                  shift and go to state 39
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 17

    (10) CLASS -> CLASS_KWD . ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 41


state 18

    (30) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 42


state 19

    (16) VAR_LIST -> SYMBOL_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 43


state 20

    (165) TYPE -> TYPE_I .

    ID              reduce using rule 165 (TYPE -> TYPE_I .)
    SEMI_COLON      reduce using rule 165 (TYPE -> TYPE_I .)
    COMMA           reduce using rule 165 (TYPE -> TYPE_I .)
    CLOSE_PARENTHESIS reduce using rule 165 (TYPE -> TYPE_I .)


state 21

    (166) TYPE -> TYPE_F .

    ID              reduce using rule 166 (TYPE -> TYPE_F .)
    SEMI_COLON      reduce using rule 166 (TYPE -> TYPE_F .)
    COMMA           reduce using rule 166 (TYPE -> TYPE_F .)
    CLOSE_PARENTHESIS reduce using rule 166 (TYPE -> TYPE_F .)


state 22

    (167) TYPE -> TYPE_S .

    ID              reduce using rule 167 (TYPE -> TYPE_S .)
    SEMI_COLON      reduce using rule 167 (TYPE -> TYPE_S .)
    COMMA           reduce using rule 167 (TYPE -> TYPE_S .)
    CLOSE_PARENTHESIS reduce using rule 167 (TYPE -> TYPE_S .)


state 23

    (168) TYPE -> TYPE_B .

    ID              reduce using rule 168 (TYPE -> TYPE_B .)
    SEMI_COLON      reduce using rule 168 (TYPE -> TYPE_B .)
    COMMA           reduce using rule 168 (TYPE -> TYPE_B .)
    CLOSE_PARENTHESIS reduce using rule 168 (TYPE -> TYPE_B .)


state 24

    (169) TYPE -> TYPE_O .

    ID              reduce using rule 169 (TYPE -> TYPE_O .)
    SEMI_COLON      reduce using rule 169 (TYPE -> TYPE_O .)
    COMMA           reduce using rule 169 (TYPE -> TYPE_O .)
    CLOSE_PARENTHESIS reduce using rule 169 (TYPE -> TYPE_O .)


state 25

    (170) TYPE -> TYPE_V .

    ID              reduce using rule 170 (TYPE -> TYPE_V .)
    SEMI_COLON      reduce using rule 170 (TYPE -> TYPE_V .)
    COMMA           reduce using rule 170 (TYPE -> TYPE_V .)
    CLOSE_PARENTHESIS reduce using rule 170 (TYPE -> TYPE_V .)


state 26

    (18) SYMBOL_LIST -> ARRAY_DEFINITION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 171 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 44
    empty                          shift and go to state 45

state 27

    (17) SYMBOL_LIST -> ID SYMBOL_LIST_P .

    COLON           reduce using rule 17 (SYMBOL_LIST -> ID SYMBOL_LIST_P .)


state 28

    (115) ARRAY_DEFINITION -> ID seen_array_def_id . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    OPEN_BRACKET    shift and go to state 46


state 29

    (19) SYMBOL_LIST_P -> COMMA . ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> COMMA . ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> COMMA .
    (115) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    ID              shift and go to state 47
    COLON           reduce using rule 21 (SYMBOL_LIST_P -> COMMA .)

    ARRAY_DEFINITION               shift and go to state 48

state 30

    (22) SYMBOL_LIST_P -> empty .
    (118) seen_array_def_id -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)
    OPEN_BRACKET    reduce using rule 118 (seen_array_def_id -> empty .)


state 31

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 49


state 32

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 2 (STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .)


state 33

    (3) STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 3 (STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .)


state 34

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 4 (STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .)


state 35

    (8) CLASS_STAR -> CLASS CLASS_STAR .

    CLASS_KWD       reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_I          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_F          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_S          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_B          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_O          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_V          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    ID              reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)


state 36

    (9) CLASS_STAR -> empty .

    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 9 (CLASS_STAR -> empty .)


state 37

    (28) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    CLASS_KWD       reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_I          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_F          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_S          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_B          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_O          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_V          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    ID              reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    MAIN_KWD        reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 38

    (29) FUNC_DEF_STAR -> empty .

    CLASS_KWD       reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_I          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_F          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_S          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_B          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_O          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_V          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    ID              reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    MAIN_KWD        reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 29 (FUNC_DEF_STAR -> empty .)


state 39

    (14) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_I          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_F          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_S          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_B          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_O          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_V          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    ID              reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 40

    (15) VAR_LIST_STAR -> empty .

    CLASS_KWD       reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_I          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_F          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_S          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_B          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_O          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_V          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    ID              reduce using rule 15 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 15 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 15 (VAR_LIST_STAR -> empty .)


state 41

    (10) CLASS -> CLASS_KWD ID . seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (11) seen_class_id_declaration -> . empty
    (171) empty -> .

    OPEN_CURLY      reduce using rule 171 (empty -> .)

    seen_class_id_declaration      shift and go to state 50
    empty                          shift and go to state 51

state 42

    (30) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (31) seen_func_id -> . empty
    (171) empty -> .

    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_func_id                   shift and go to state 52
    empty                          shift and go to state 53

state 43

    (16) VAR_LIST -> SYMBOL_LIST COLON . TYPE SEMI_COLON
    (165) TYPE -> . TYPE_I
    (166) TYPE -> . TYPE_F
    (167) TYPE -> . TYPE_S
    (168) TYPE -> . TYPE_B
    (169) TYPE -> . TYPE_O
    (170) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 54

state 44

    (18) SYMBOL_LIST -> ARRAY_DEFINITION SYMBOL_LIST_P .

    COLON           reduce using rule 18 (SYMBOL_LIST -> ARRAY_DEFINITION SYMBOL_LIST_P .)


state 45

    (22) SYMBOL_LIST_P -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)


state 46

    (115) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CTE_I           shift and go to state 55


state 47

    (19) SYMBOL_LIST_P -> COMMA ID . SYMBOL_LIST_P
    (115) ARRAY_DEFINITION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (118) seen_array_def_id -> . empty
    (171) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 171 (empty -> .)
    OPEN_BRACKET    reduce using rule 171 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 56
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 48

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 171 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 57
    empty                          shift and go to state 45

state 49

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 58


state 50

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration . OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 59


state 51

    (11) seen_class_id_declaration -> empty .

    OPEN_CURLY      reduce using rule 11 (seen_class_id_declaration -> empty .)


state 52

    (30) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 60


state 53

    (31) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 31 (seen_func_id -> empty .)


state 54

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 61


state 55

    (115) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (93) seen_cte_i -> .

    CLOSE_BRACKET   reduce using rule 93 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 62

state 56

    (19) SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .

    COLON           reduce using rule 19 (SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .)


state 57

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION SYMBOL_LIST_P .

    COLON           reduce using rule 20 (SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION SYMBOL_LIST_P .)


state 58

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 63


state 59

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY . CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (13) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 65

    CLASS_ATTR                     shift and go to state 64

state 60

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (34) FUNC_PARAM -> . VAR_DECLARATION FUNC_PARAM_P
    (35) FUNC_PARAM -> . empty
    (38) VAR_DECLARATION -> . ID COLON TYPE
    (171) empty -> .

    ID              shift and go to state 66
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    FUNC_PARAM                     shift and go to state 67
    VAR_DECLARATION                shift and go to state 68
    empty                          shift and go to state 69

state 61

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLASS_KWD       reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_I          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_F          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_S          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_B          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_O          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_V          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)


state 62

    (115) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (119) seen_array_def_dim -> . empty
    (171) empty -> .

    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    seen_array_def_dim             shift and go to state 70
    empty                          shift and go to state 71

state 63

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (7) seen_main_kwd -> . empty
    (171) empty -> .

    ID              reduce using rule 171 (empty -> .)
    READ_KWD        reduce using rule 171 (empty -> .)
    PRINT_KWD       reduce using rule 171 (empty -> .)
    PRINTLN_KWD     reduce using rule 171 (empty -> .)
    RETURN_KWD      reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)
    IF_KWD          reduce using rule 171 (empty -> .)
    WHILE_KWD       reduce using rule 171 (empty -> .)
    FOR_KWD         reduce using rule 171 (empty -> .)
    CLOSE_CURLY     reduce using rule 171 (empty -> .)

    seen_main_kwd                  shift and go to state 72
    empty                          shift and go to state 73

state 64

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR . seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (12) seen_class_attr -> . empty
    (171) empty -> .

    TYPE_I          reduce using rule 171 (empty -> .)
    TYPE_F          reduce using rule 171 (empty -> .)
    TYPE_S          reduce using rule 171 (empty -> .)
    TYPE_B          reduce using rule 171 (empty -> .)
    TYPE_O          reduce using rule 171 (empty -> .)
    TYPE_V          reduce using rule 171 (empty -> .)
    CLOSE_CURLY     reduce using rule 171 (empty -> .)

    seen_class_attr                shift and go to state 74
    empty                          shift and go to state 75

state 65

    (13) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 76


state 66

    (38) VAR_DECLARATION -> ID . COLON TYPE

    COLON           shift and go to state 77


state 67

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 78


state 68

    (34) FUNC_PARAM -> VAR_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA VAR_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 80
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 79
    empty                          shift and go to state 81

state 69

    (35) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 35 (FUNC_PARAM -> empty .)


state 70

    (115) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_BRACKET   shift and go to state 82


state 71

    (119) seen_array_def_dim -> empty .

    CLOSE_BRACKET   reduce using rule 119 (seen_array_def_dim -> empty .)


state 72

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (171) empty -> .
    (56) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (141) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (142) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (144) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) FLOW_CONTROL -> . DECISION
    (50) FLOW_CONTROL -> . REPETITION
    (138) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (139) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (140) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (155) REPETITION -> . CONDITIONAL_REP
    (156) REPETITION -> . UNCONDITIONAL_REP
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (157) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (160) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 96
    PRINT_KWD       shift and go to state 97
    PRINTLN_KWD     shift and go to state 98
    RETURN_KWD      shift and go to state 101
    THIS_KWD        shift and go to state 103
    IF_KWD          shift and go to state 104
    WHILE_KWD       shift and go to state 107
    FOR_KWD         shift and go to state 108

    STATEMENT_STAR                 shift and go to state 84
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    FLOW_CONTROL                   shift and go to state 92
    FUNC_RETURN                    shift and go to state 93
    VAR                            shift and go to state 94
    CLASS_REFERENCE                shift and go to state 95
    DECISION                       shift and go to state 99
    REPETITION                     shift and go to state 100
    ARRAY                          shift and go to state 102
    CONDITIONAL_REP                shift and go to state 105
    UNCONDITIONAL_REP              shift and go to state 106

state 73

    (7) seen_main_kwd -> empty .

    ID              reduce using rule 7 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    PRINT_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    PRINTLN_KWD     reduce using rule 7 (seen_main_kwd -> empty .)
    RETURN_KWD      reduce using rule 7 (seen_main_kwd -> empty .)
    THIS_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 7 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 7 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 7 (seen_main_kwd -> empty .)


state 74

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr . FUNC_DEF_STAR CLOSE_CURLY
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (171) empty -> .
    (165) TYPE -> . TYPE_I
    (166) TYPE -> . TYPE_F
    (167) TYPE -> . TYPE_S
    (168) TYPE -> . TYPE_B
    (169) TYPE -> . TYPE_O
    (170) TYPE -> . TYPE_V

    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    FUNC_DEF_STAR                  shift and go to state 109
    FUNC_DEF                       shift and go to state 15
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 75

    (12) seen_class_attr -> empty .

    TYPE_I          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_F          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_S          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_B          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_O          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_V          reduce using rule 12 (seen_class_attr -> empty .)
    CLOSE_CURLY     reduce using rule 12 (seen_class_attr -> empty .)


state 76

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (171) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (115) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 110
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 77

    (38) VAR_DECLARATION -> ID COLON . TYPE
    (165) TYPE -> . TYPE_I
    (166) TYPE -> . TYPE_F
    (167) TYPE -> . TYPE_S
    (168) TYPE -> . TYPE_B
    (169) TYPE -> . TYPE_O
    (170) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 111

state 78

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (32) seen_func_params -> . empty
    (171) empty -> .

    VARS_KWD        reduce using rule 171 (empty -> .)

    seen_func_params               shift and go to state 112
    empty                          shift and go to state 113

state 79

    (34) FUNC_PARAM -> VAR_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 34 (FUNC_PARAM -> VAR_DECLARATION FUNC_PARAM_P .)


state 80

    (36) FUNC_PARAM_P -> COMMA . VAR_DECLARATION FUNC_PARAM_P
    (38) VAR_DECLARATION -> . ID COLON TYPE

    ID              shift and go to state 66

    VAR_DECLARATION                shift and go to state 114

state 81

    (37) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 37 (FUNC_PARAM_P -> empty .)


state 82

    (115) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DEFINITION_P
    (116) ARRAY_DEFINITION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (117) ARRAY_DEFINITION_P -> . empty
    (171) empty -> .

    OPEN_BRACKET    shift and go to state 115
    COMMA           reduce using rule 171 (empty -> .)
    COLON           reduce using rule 171 (empty -> .)

    ARRAY_DEFINITION_P             shift and go to state 116
    empty                          shift and go to state 117

state 83

    (126) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (102) VAR -> ID .
    (99) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (109) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (128) seen_func_call_id -> . empty
    (112) seen_array_id -> . empty
    (171) empty -> .

    EQUALS          reduce using rule 102 (VAR -> ID .)
    STAR            reduce using rule 102 (VAR -> ID .)
    FWD_SLASH       reduce using rule 102 (VAR -> ID .)
    PLUS            reduce using rule 102 (VAR -> ID .)
    MINUS           reduce using rule 102 (VAR -> ID .)
    BIGGER          reduce using rule 102 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 102 (VAR -> ID .)
    SMALLER         reduce using rule 102 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 102 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 102 (VAR -> ID .)
    DIFFERENT       reduce using rule 102 (VAR -> ID .)
    AND             reduce using rule 102 (VAR -> ID .)
    OR              reduce using rule 102 (VAR -> ID .)
    SEMI_COLON      reduce using rule 102 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 102 (VAR -> ID .)
    COMMA           reduce using rule 102 (VAR -> ID .)
    CLOSE_BRACKET   reduce using rule 102 (VAR -> ID .)
    DOT             shift and go to state 119
    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    OPEN_BRACKET    reduce using rule 171 (empty -> .)

    seen_func_call_id              shift and go to state 118
    seen_array_id                  shift and go to state 120
    empty                          shift and go to state 121

state 84

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 122


state 85

    (40) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (171) empty -> .
    (56) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (141) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (142) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (144) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) FLOW_CONTROL -> . DECISION
    (50) FLOW_CONTROL -> . REPETITION
    (138) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (139) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (140) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (155) REPETITION -> . CONDITIONAL_REP
    (156) REPETITION -> . UNCONDITIONAL_REP
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (157) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (160) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 96
    PRINT_KWD       shift and go to state 97
    PRINTLN_KWD     shift and go to state 98
    RETURN_KWD      shift and go to state 101
    THIS_KWD        shift and go to state 103
    IF_KWD          shift and go to state 104
    WHILE_KWD       shift and go to state 107
    FOR_KWD         shift and go to state 108

    STATEMENT                      shift and go to state 85
    STATEMENT_STAR                 shift and go to state 123
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    FLOW_CONTROL                   shift and go to state 92
    FUNC_RETURN                    shift and go to state 93
    VAR                            shift and go to state 94
    CLASS_REFERENCE                shift and go to state 95
    DECISION                       shift and go to state 99
    REPETITION                     shift and go to state 100
    ARRAY                          shift and go to state 102
    CONDITIONAL_REP                shift and go to state 105
    UNCONDITIONAL_REP              shift and go to state 106

state 86

    (41) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 41 (STATEMENT_STAR -> empty .)


state 87

    (42) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 124


state 88

    (43) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 125


state 89

    (44) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 126


state 90

    (45) STATEMENT -> PRINT . SEMI_COLON

    SEMI_COLON      shift and go to state 127


state 91

    (46) STATEMENT -> PRINTLN . SEMI_COLON

    SEMI_COLON      shift and go to state 128


state 92

    (47) STATEMENT -> FLOW_CONTROL .

    ID              reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    READ_KWD        reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    PRINT_KWD       reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    PRINTLN_KWD     reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    RETURN_KWD      reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    THIS_KWD        reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    IF_KWD          reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    WHILE_KWD       reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    FOR_KWD         reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)
    CLOSE_CURLY     reduce using rule 47 (STATEMENT -> FLOW_CONTROL .)


state 93

    (48) STATEMENT -> FUNC_RETURN .

    ID              reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    READ_KWD        reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    PRINT_KWD       reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    PRINTLN_KWD     reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    RETURN_KWD      reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    THIS_KWD        reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    IF_KWD          reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    WHILE_KWD       reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    FOR_KWD         reduce using rule 48 (STATEMENT -> FUNC_RETURN .)
    CLOSE_CURLY     reduce using rule 48 (STATEMENT -> FUNC_RETURN .)


state 94

    (56) ASSIGN -> VAR . seen_var_in_assign EQUALS seen_equals EXPRESSION
    (91) seen_var_in_assign -> . empty
    (171) empty -> .

    EQUALS          reduce using rule 171 (empty -> .)

    seen_var_in_assign             shift and go to state 129
    empty                          shift and go to state 130

state 95

    (127) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (104) VAR -> CLASS_REFERENCE . VAR
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 83
    THIS_KWD        shift and go to state 103

    CLASS_REFERENCE                shift and go to state 95
    FUNC_CALL                      shift and go to state 131
    VAR                            shift and go to state 132
    ARRAY                          shift and go to state 102

state 96

    (141) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 133


state 97

    (142) PRINT -> PRINT_KWD . seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (143) seen_print_kwd -> . empty
    (171) empty -> .

    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_print_kwd                 shift and go to state 134
    empty                          shift and go to state 135

state 98

    (144) PRINTLN -> PRINTLN_KWD . seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (145) seen_println_kwd -> . empty
    (171) empty -> .

    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_println_kwd               shift and go to state 136
    empty                          shift and go to state 137

state 99

    (49) FLOW_CONTROL -> DECISION .

    ID              reduce using rule 49 (FLOW_CONTROL -> DECISION .)
    READ_KWD        reduce using rule 49 (FLOW_CONTROL -> DECISION .)
    PRINT_KWD       reduce using rule 49 (FLOW_CONTROL -> DECISION .)
    PRINTLN_KWD     reduce using rule 49 (FLOW_CONTROL -> DECISION .)
    RETURN_KWD      reduce using rule 49 (FLOW_CONTROL -> DECISION .)
    THIS_KWD        reduce using rule 49 (FLOW_CONTROL -> DECISION .)
    IF_KWD          reduce using rule 49 (FLOW_CONTROL -> DECISION .)
    WHILE_KWD       reduce using rule 49 (FLOW_CONTROL -> DECISION .)
    FOR_KWD         reduce using rule 49 (FLOW_CONTROL -> DECISION .)
    CLOSE_CURLY     reduce using rule 49 (FLOW_CONTROL -> DECISION .)


state 100

    (50) FLOW_CONTROL -> REPETITION .

    ID              reduce using rule 50 (FLOW_CONTROL -> REPETITION .)
    READ_KWD        reduce using rule 50 (FLOW_CONTROL -> REPETITION .)
    PRINT_KWD       reduce using rule 50 (FLOW_CONTROL -> REPETITION .)
    PRINTLN_KWD     reduce using rule 50 (FLOW_CONTROL -> REPETITION .)
    RETURN_KWD      reduce using rule 50 (FLOW_CONTROL -> REPETITION .)
    THIS_KWD        reduce using rule 50 (FLOW_CONTROL -> REPETITION .)
    IF_KWD          reduce using rule 50 (FLOW_CONTROL -> REPETITION .)
    WHILE_KWD       reduce using rule 50 (FLOW_CONTROL -> REPETITION .)
    FOR_KWD         reduce using rule 50 (FLOW_CONTROL -> REPETITION .)
    CLOSE_CURLY     reduce using rule 50 (FLOW_CONTROL -> REPETITION .)


state 101

    (138) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (139) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (140) FUNC_RETURN -> RETURN_KWD . SEMI_COLON
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    SEMI_COLON      shift and go to state 139
    ID              shift and go to state 142
    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    THIS_KWD        shift and go to state 103
    OPEN_PARENTHESIS shift and go to state 143
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154

    EXPRESSION                     shift and go to state 138
    FUNC_CALL                      shift and go to state 140
    EXP                            shift and go to state 141
    CLASS_REFERENCE                shift and go to state 95
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    ARRAY                          shift and go to state 102

state 102

    (103) VAR -> ARRAY .

    EQUALS          reduce using rule 103 (VAR -> ARRAY .)
    STAR            reduce using rule 103 (VAR -> ARRAY .)
    FWD_SLASH       reduce using rule 103 (VAR -> ARRAY .)
    PLUS            reduce using rule 103 (VAR -> ARRAY .)
    MINUS           reduce using rule 103 (VAR -> ARRAY .)
    BIGGER          reduce using rule 103 (VAR -> ARRAY .)
    BIGGER_EQ       reduce using rule 103 (VAR -> ARRAY .)
    SMALLER         reduce using rule 103 (VAR -> ARRAY .)
    SMALLER_EQ      reduce using rule 103 (VAR -> ARRAY .)
    DOUBLE_EQUALS   reduce using rule 103 (VAR -> ARRAY .)
    DIFFERENT       reduce using rule 103 (VAR -> ARRAY .)
    AND             reduce using rule 103 (VAR -> ARRAY .)
    OR              reduce using rule 103 (VAR -> ARRAY .)
    SEMI_COLON      reduce using rule 103 (VAR -> ARRAY .)
    CLOSE_PARENTHESIS reduce using rule 103 (VAR -> ARRAY .)
    COMMA           reduce using rule 103 (VAR -> ARRAY .)
    CLOSE_BRACKET   reduce using rule 103 (VAR -> ARRAY .)


state 103

    (100) CLASS_REFERENCE -> THIS_KWD . seen_this_kwd DOT seen_this_dot_operator
    (101) seen_this_kwd -> . empty
    (171) empty -> .

    DOT             reduce using rule 171 (empty -> .)

    seen_this_kwd                  shift and go to state 155
    empty                          shift and go to state 156

state 104

    (150) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 157


state 105

    (155) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 155 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 155 (REPETITION -> CONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 155 (REPETITION -> CONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 155 (REPETITION -> CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 155 (REPETITION -> CONDITIONAL_REP .)
    THIS_KWD        reduce using rule 155 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 155 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 155 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 155 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 155 (REPETITION -> CONDITIONAL_REP .)


state 106

    (156) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 156 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 156 (REPETITION -> UNCONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 156 (REPETITION -> UNCONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 156 (REPETITION -> UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 156 (REPETITION -> UNCONDITIONAL_REP .)
    THIS_KWD        reduce using rule 156 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 156 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 156 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 156 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 156 (REPETITION -> UNCONDITIONAL_REP .)


state 107

    (157) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (158) seen_while_kwd -> . empty
    (171) empty -> .

    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_while_kwd                 shift and go to state 158
    empty                          shift and go to state 159

state 108

    (160) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 160


state 109

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 161


state 110

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 162


state 111

    (38) VAR_DECLARATION -> ID COLON TYPE .

    COMMA           reduce using rule 38 (VAR_DECLARATION -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 38 (VAR_DECLARATION -> ID COLON TYPE .)


state 112

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (39) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 164

    VARS                           shift and go to state 163

state 113

    (32) seen_func_params -> empty .

    VARS_KWD        reduce using rule 32 (seen_func_params -> empty .)


state 114

    (36) FUNC_PARAM_P -> COMMA VAR_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA VAR_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 80
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 165
    empty                          shift and go to state 81

state 115

    (116) ARRAY_DEFINITION_P -> OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CTE_I           shift and go to state 166


state 116

    (115) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .

    COMMA           reduce using rule 115 (ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)
    COLON           reduce using rule 115 (ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)


state 117

    (117) ARRAY_DEFINITION_P -> empty .

    COMMA           reduce using rule 117 (ARRAY_DEFINITION_P -> empty .)
    COLON           reduce using rule 117 (ARRAY_DEFINITION_P -> empty .)


state 118

    (126) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 167


state 119

    (99) CLASS_REFERENCE -> ID DOT . seen_dot_operator
    (107) seen_dot_operator -> . empty
    (171) empty -> .

    ID              reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_dot_operator              shift and go to state 168
    empty                          shift and go to state 169

state 120

    (109) ARRAY -> ID seen_array_id . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_BRACKET    shift and go to state 170


state 121

    (128) seen_func_call_id -> empty .
    (112) seen_array_id -> empty .

    OPEN_PARENTHESIS reduce using rule 128 (seen_func_call_id -> empty .)
    OPEN_BRACKET    reduce using rule 112 (seen_array_id -> empty .)


state 122

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 123

    (40) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 40 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 124

    (42) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINT_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    RETURN_KWD      reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    THIS_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)


state 125

    (43) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 126

    (44) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINT_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    RETURN_KWD      reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    THIS_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)


state 127

    (45) STATEMENT -> PRINT SEMI_COLON .

    ID              reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    READ_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINT_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    RETURN_KWD      reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    THIS_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    IF_KWD          reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WHILE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    FOR_KWD         reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)


state 128

    (46) STATEMENT -> PRINTLN SEMI_COLON .

    ID              reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    READ_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINT_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    RETURN_KWD      reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    THIS_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    IF_KWD          reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WHILE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    FOR_KWD         reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)


state 129

    (56) ASSIGN -> VAR seen_var_in_assign . EQUALS seen_equals EXPRESSION

    EQUALS          shift and go to state 171


state 130

    (91) seen_var_in_assign -> empty .

    EQUALS          reduce using rule 91 (seen_var_in_assign -> empty .)
    COMMA           reduce using rule 91 (seen_var_in_assign -> empty .)
    CLOSE_PARENTHESIS reduce using rule 91 (seen_var_in_assign -> empty .)


state 131

    (127) FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .

    SEMI_COLON      reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    STAR            reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    FWD_SLASH       reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    PLUS            reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    MINUS           reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER          reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER_EQ       reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER         reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER_EQ      reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    DIFFERENT       reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    AND             reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    OR              reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    COMMA           reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 127 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)


state 132

    (104) VAR -> CLASS_REFERENCE VAR .

    EQUALS          reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    STAR            reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    FWD_SLASH       reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    PLUS            reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    MINUS           reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER          reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER_EQ       reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER         reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER_EQ      reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    DOUBLE_EQUALS   reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    DIFFERENT       reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    AND             reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    OR              reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    SEMI_COLON      reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_PARENTHESIS reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    COMMA           reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_BRACKET   reduce using rule 104 (VAR -> CLASS_REFERENCE VAR .)


state 133

    (141) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (23) READABLE_LIST -> . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 174
    THIS_KWD        shift and go to state 103

    READABLE_LIST                  shift and go to state 172
    VAR                            shift and go to state 173
    ARRAY                          shift and go to state 102
    CLASS_REFERENCE                shift and go to state 175

state 134

    (142) PRINT -> PRINT_KWD seen_print_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 176


state 135

    (143) seen_print_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 143 (seen_print_kwd -> empty .)


state 136

    (144) PRINTLN -> PRINTLN_KWD seen_println_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 177


state 137

    (145) seen_println_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 145 (seen_println_kwd -> empty .)


state 138

    (138) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 178


state 139

    (140) FUNC_RETURN -> RETURN_KWD SEMI_COLON .

    ID              reduce using rule 140 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    READ_KWD        reduce using rule 140 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINT_KWD       reduce using rule 140 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 140 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    RETURN_KWD      reduce using rule 140 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    THIS_KWD        reduce using rule 140 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    IF_KWD          reduce using rule 140 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WHILE_KWD       reduce using rule 140 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    FOR_KWD         reduce using rule 140 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 140 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)


state 140

    (139) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (81) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 179
    STAR            reduce using rule 81 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 81 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 81 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 81 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 81 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 81 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 81 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 81 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 81 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 81 (FACTOR -> FUNC_CALL .) ]


state 141

    (66) EXPRESSION -> EXP .
    (67) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (70) COMP -> . BIGGER
    (71) COMP -> . BIGGER_EQ
    (72) COMP -> . SMALLER
    (73) COMP -> . SMALLER_EQ
    (74) COMP -> . DOUBLE_EQUALS
    (75) COMP -> . DIFFERENT
    (76) COMP -> . AND
    (77) COMP -> . OR

    SEMI_COLON      reduce using rule 66 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 66 (EXPRESSION -> EXP .)
    COMMA           reduce using rule 66 (EXPRESSION -> EXP .)
    CLOSE_BRACKET   reduce using rule 66 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 181
    BIGGER_EQ       shift and go to state 182
    SMALLER         shift and go to state 183
    SMALLER_EQ      shift and go to state 184
    DOUBLE_EQUALS   shift and go to state 185
    DIFFERENT       shift and go to state 186
    AND             shift and go to state 187
    OR              shift and go to state 188

    COMP                           shift and go to state 180

state 142

    (126) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (99) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (102) VAR -> ID .
    (109) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (128) seen_func_call_id -> . empty
    (112) seen_array_id -> . empty
    (171) empty -> .

    DOT             shift and go to state 119
    STAR            reduce using rule 102 (VAR -> ID .)
    FWD_SLASH       reduce using rule 102 (VAR -> ID .)
    PLUS            reduce using rule 102 (VAR -> ID .)
    MINUS           reduce using rule 102 (VAR -> ID .)
    BIGGER          reduce using rule 102 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 102 (VAR -> ID .)
    SMALLER         reduce using rule 102 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 102 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 102 (VAR -> ID .)
    DIFFERENT       reduce using rule 102 (VAR -> ID .)
    AND             reduce using rule 102 (VAR -> ID .)
    OR              reduce using rule 102 (VAR -> ID .)
    SEMI_COLON      reduce using rule 102 (VAR -> ID .)
    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    OPEN_BRACKET    reduce using rule 171 (empty -> .)

    seen_func_call_id              shift and go to state 118
    seen_array_id                  shift and go to state 120
    empty                          shift and go to state 121

state 143

    (78) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (89) seen_open_parenthesis -> . empty
    (171) empty -> .

    MINUS           reduce using rule 171 (empty -> .)
    NOT             reduce using rule 171 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    NEW_KWD         reduce using rule 171 (empty -> .)
    CTE_S           reduce using rule 171 (empty -> .)
    CTE_F           reduce using rule 171 (empty -> .)
    CTE_I           reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_open_parenthesis          shift and go to state 189
    empty                          shift and go to state 190

state 144

    (58) EXP -> TERM . seen_term EXP_P
    (61) seen_term -> .

    PLUS            reduce using rule 61 (seen_term -> .)
    MINUS           reduce using rule 61 (seen_term -> .)
    BIGGER          reduce using rule 61 (seen_term -> .)
    BIGGER_EQ       reduce using rule 61 (seen_term -> .)
    SMALLER         reduce using rule 61 (seen_term -> .)
    SMALLER_EQ      reduce using rule 61 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 61 (seen_term -> .)
    DIFFERENT       reduce using rule 61 (seen_term -> .)
    AND             reduce using rule 61 (seen_term -> .)
    OR              reduce using rule 61 (seen_term -> .)
    SEMI_COLON      reduce using rule 61 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 61 (seen_term -> .)
    COMMA           reduce using rule 61 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 61 (seen_term -> .)

    seen_term                      shift and go to state 191

state 145

    (59) EXP -> MINUS . seen_unary_minus EXP pop_unary_minus
    (80) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (88) seen_unary_minus -> . empty
    (171) empty -> .

    MINUS           reduce using rule 171 (empty -> .)
    NOT             reduce using rule 171 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    NEW_KWD         reduce using rule 171 (empty -> .)
    CTE_S           reduce using rule 171 (empty -> .)
    CTE_F           reduce using rule 171 (empty -> .)
    CTE_I           reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_unary_minus               shift and go to state 192
    empty                          shift and go to state 193

state 146

    (60) EXP -> NOT . seen_not EXP pop_not
    (79) FACTOR -> NOT . seen_not FACTOR pop_not
    (86) seen_not -> . empty
    (171) empty -> .

    MINUS           reduce using rule 171 (empty -> .)
    NOT             reduce using rule 171 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    NEW_KWD         reduce using rule 171 (empty -> .)
    CTE_S           reduce using rule 171 (empty -> .)
    CTE_F           reduce using rule 171 (empty -> .)
    CTE_I           reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_not                       shift and go to state 194
    empty                          shift and go to state 195

state 147

    (120) TERM -> FACTOR . seen_factor TERM_P
    (124) seen_factor -> . empty
    (171) empty -> .

    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    seen_factor                    shift and go to state 196
    empty                          shift and go to state 197

state 148

    (82) FACTOR -> CLASS_INSTANCE .

    STAR            reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    FWD_SLASH       reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    PLUS            reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    MINUS           reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    BIGGER          reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    BIGGER_EQ       reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    SMALLER         reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    SMALLER_EQ      reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    DOUBLE_EQUALS   reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    DIFFERENT       reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    AND             reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    OR              reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    SEMI_COLON      reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_PARENTHESIS reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    COMMA           reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_BRACKET   reduce using rule 82 (FACTOR -> CLASS_INSTANCE .)


state 149

    (83) FACTOR -> VAR . seen_var_as_factor
    (92) seen_var_as_factor -> . empty
    (171) empty -> .

    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    seen_var_as_factor             shift and go to state 198
    empty                          shift and go to state 199

state 150

    (84) FACTOR -> CNST .

    STAR            reduce using rule 84 (FACTOR -> CNST .)
    FWD_SLASH       reduce using rule 84 (FACTOR -> CNST .)
    PLUS            reduce using rule 84 (FACTOR -> CNST .)
    MINUS           reduce using rule 84 (FACTOR -> CNST .)
    BIGGER          reduce using rule 84 (FACTOR -> CNST .)
    BIGGER_EQ       reduce using rule 84 (FACTOR -> CNST .)
    SMALLER         reduce using rule 84 (FACTOR -> CNST .)
    SMALLER_EQ      reduce using rule 84 (FACTOR -> CNST .)
    DOUBLE_EQUALS   reduce using rule 84 (FACTOR -> CNST .)
    DIFFERENT       reduce using rule 84 (FACTOR -> CNST .)
    AND             reduce using rule 84 (FACTOR -> CNST .)
    OR              reduce using rule 84 (FACTOR -> CNST .)
    SEMI_COLON      reduce using rule 84 (FACTOR -> CNST .)
    CLOSE_PARENTHESIS reduce using rule 84 (FACTOR -> CNST .)
    COMMA           reduce using rule 84 (FACTOR -> CNST .)
    CLOSE_BRACKET   reduce using rule 84 (FACTOR -> CNST .)


state 151

    (105) CLASS_INSTANCE -> NEW_KWD . ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS

    ID              shift and go to state 200


state 152

    (96) CNST -> CTE_S . seen_cte_s
    (95) seen_cte_s -> .

    STAR            reduce using rule 95 (seen_cte_s -> .)
    FWD_SLASH       reduce using rule 95 (seen_cte_s -> .)
    PLUS            reduce using rule 95 (seen_cte_s -> .)
    MINUS           reduce using rule 95 (seen_cte_s -> .)
    BIGGER          reduce using rule 95 (seen_cte_s -> .)
    BIGGER_EQ       reduce using rule 95 (seen_cte_s -> .)
    SMALLER         reduce using rule 95 (seen_cte_s -> .)
    SMALLER_EQ      reduce using rule 95 (seen_cte_s -> .)
    DOUBLE_EQUALS   reduce using rule 95 (seen_cte_s -> .)
    DIFFERENT       reduce using rule 95 (seen_cte_s -> .)
    AND             reduce using rule 95 (seen_cte_s -> .)
    OR              reduce using rule 95 (seen_cte_s -> .)
    SEMI_COLON      reduce using rule 95 (seen_cte_s -> .)
    CLOSE_PARENTHESIS reduce using rule 95 (seen_cte_s -> .)
    COMMA           reduce using rule 95 (seen_cte_s -> .)
    CLOSE_BRACKET   reduce using rule 95 (seen_cte_s -> .)

    seen_cte_s                     shift and go to state 201

state 153

    (97) CNST -> CTE_F . seen_cte_f
    (94) seen_cte_f -> .

    STAR            reduce using rule 94 (seen_cte_f -> .)
    FWD_SLASH       reduce using rule 94 (seen_cte_f -> .)
    PLUS            reduce using rule 94 (seen_cte_f -> .)
    MINUS           reduce using rule 94 (seen_cte_f -> .)
    BIGGER          reduce using rule 94 (seen_cte_f -> .)
    BIGGER_EQ       reduce using rule 94 (seen_cte_f -> .)
    SMALLER         reduce using rule 94 (seen_cte_f -> .)
    SMALLER_EQ      reduce using rule 94 (seen_cte_f -> .)
    DOUBLE_EQUALS   reduce using rule 94 (seen_cte_f -> .)
    DIFFERENT       reduce using rule 94 (seen_cte_f -> .)
    AND             reduce using rule 94 (seen_cte_f -> .)
    OR              reduce using rule 94 (seen_cte_f -> .)
    SEMI_COLON      reduce using rule 94 (seen_cte_f -> .)
    CLOSE_PARENTHESIS reduce using rule 94 (seen_cte_f -> .)
    COMMA           reduce using rule 94 (seen_cte_f -> .)
    CLOSE_BRACKET   reduce using rule 94 (seen_cte_f -> .)

    seen_cte_f                     shift and go to state 202

state 154

    (98) CNST -> CTE_I . seen_cte_i
    (93) seen_cte_i -> .

    STAR            reduce using rule 93 (seen_cte_i -> .)
    FWD_SLASH       reduce using rule 93 (seen_cte_i -> .)
    PLUS            reduce using rule 93 (seen_cte_i -> .)
    MINUS           reduce using rule 93 (seen_cte_i -> .)
    BIGGER          reduce using rule 93 (seen_cte_i -> .)
    BIGGER_EQ       reduce using rule 93 (seen_cte_i -> .)
    SMALLER         reduce using rule 93 (seen_cte_i -> .)
    SMALLER_EQ      reduce using rule 93 (seen_cte_i -> .)
    DOUBLE_EQUALS   reduce using rule 93 (seen_cte_i -> .)
    DIFFERENT       reduce using rule 93 (seen_cte_i -> .)
    AND             reduce using rule 93 (seen_cte_i -> .)
    OR              reduce using rule 93 (seen_cte_i -> .)
    SEMI_COLON      reduce using rule 93 (seen_cte_i -> .)
    CLOSE_PARENTHESIS reduce using rule 93 (seen_cte_i -> .)
    COMMA           reduce using rule 93 (seen_cte_i -> .)
    CLOSE_BRACKET   reduce using rule 93 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 203

state 155

    (100) CLASS_REFERENCE -> THIS_KWD seen_this_kwd . DOT seen_this_dot_operator

    DOT             shift and go to state 204


state 156

    (101) seen_this_kwd -> empty .

    DOT             reduce using rule 101 (seen_this_kwd -> empty .)


state 157

    (150) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    EXPRESSION                     shift and go to state 205
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 158

    (157) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 207


state 159

    (158) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 158 (seen_while_kwd -> empty .)


state 160

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 174
    THIS_KWD        shift and go to state 103

    VAR                            shift and go to state 208
    ARRAY                          shift and go to state 102
    CLASS_REFERENCE                shift and go to state 175

state 161

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_I          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)


state 162

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 163

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (33) seen_func_vars -> . empty
    (171) empty -> .

    OPEN_CURLY      reduce using rule 171 (empty -> .)

    seen_func_vars                 shift and go to state 209
    empty                          shift and go to state 210

state 164

    (39) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 211


state 165

    (36) FUNC_PARAM_P -> COMMA VAR_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 36 (FUNC_PARAM_P -> COMMA VAR_DECLARATION FUNC_PARAM_P .)


state 166

    (116) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (93) seen_cte_i -> .

    CLOSE_BRACKET   reduce using rule 93 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 212

state 167

    (126) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (129) ARG_LIST -> . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (130) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (131) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (132) ARG_LIST -> . empty
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (171) empty -> .
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 213
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    THIS_KWD        shift and go to state 103
    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154

    ARG_LIST                       shift and go to state 214
    VAR                            shift and go to state 215
    EXPRESSION                     shift and go to state 216
    FUNC_CALL                      shift and go to state 217
    empty                          shift and go to state 218
    ARRAY                          shift and go to state 102
    CLASS_REFERENCE                shift and go to state 219
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    CLASS_INSTANCE                 shift and go to state 148
    CNST                           shift and go to state 150

state 168

    (99) CLASS_REFERENCE -> ID DOT seen_dot_operator .

    ID              reduce using rule 99 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)
    THIS_KWD        reduce using rule 99 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)


state 169

    (107) seen_dot_operator -> empty .

    ID              reduce using rule 107 (seen_dot_operator -> empty .)
    THIS_KWD        reduce using rule 107 (seen_dot_operator -> empty .)


state 170

    (109) ARRAY -> ID seen_array_id OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (113) seen_open_bracket -> . empty
    (171) empty -> .

    MINUS           reduce using rule 171 (empty -> .)
    NOT             reduce using rule 171 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    NEW_KWD         reduce using rule 171 (empty -> .)
    CTE_S           reduce using rule 171 (empty -> .)
    CTE_F           reduce using rule 171 (empty -> .)
    CTE_I           reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_open_bracket              shift and go to state 220
    empty                          shift and go to state 221

state 171

    (56) ASSIGN -> VAR seen_var_in_assign EQUALS . seen_equals EXPRESSION
    (57) seen_equals -> . empty
    (171) empty -> .

    MINUS           reduce using rule 171 (empty -> .)
    NOT             reduce using rule 171 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    NEW_KWD         reduce using rule 171 (empty -> .)
    CTE_S           reduce using rule 171 (empty -> .)
    CTE_F           reduce using rule 171 (empty -> .)
    CTE_I           reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_equals                    shift and go to state 222
    empty                          shift and go to state 223

state 172

    (141) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 224


state 173

    (23) READABLE_LIST -> VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (91) seen_var_in_assign -> . empty
    (171) empty -> .

    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_var_in_assign             shift and go to state 225
    empty                          shift and go to state 130

state 174

    (102) VAR -> ID .
    (109) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (99) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (112) seen_array_id -> . empty
    (171) empty -> .

    COMMA           reduce using rule 102 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 102 (VAR -> ID .)
    EQUALS          reduce using rule 102 (VAR -> ID .)
    DOT             shift and go to state 119
    OPEN_BRACKET    reduce using rule 171 (empty -> .)

    seen_array_id                  shift and go to state 120
    empty                          shift and go to state 226

state 175

    (104) VAR -> CLASS_REFERENCE . VAR
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 174
    THIS_KWD        shift and go to state 103

    CLASS_REFERENCE                shift and go to state 175
    VAR                            shift and go to state 132
    ARRAY                          shift and go to state 102

state 176

    (142) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (146) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    PRINTABLE                      shift and go to state 227
    EXPRESSION                     shift and go to state 228
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 177

    (144) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (146) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    PRINTABLE                      shift and go to state 229
    EXPRESSION                     shift and go to state 228
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 178

    (138) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 138 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 138 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINT_KWD       reduce using rule 138 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 138 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 138 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    THIS_KWD        reduce using rule 138 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 138 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 138 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 138 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 138 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 179

    (139) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    ID              reduce using rule 139 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 139 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 139 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 139 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 139 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 139 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 139 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 139 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 139 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 139 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 180

    (67) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (69) seen_comp_op -> . empty
    (171) empty -> .

    MINUS           reduce using rule 171 (empty -> .)
    NOT             reduce using rule 171 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    NEW_KWD         reduce using rule 171 (empty -> .)
    CTE_S           reduce using rule 171 (empty -> .)
    CTE_F           reduce using rule 171 (empty -> .)
    CTE_I           reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_comp_op                   shift and go to state 230
    empty                          shift and go to state 231

state 181

    (70) COMP -> BIGGER .

    MINUS           reduce using rule 70 (COMP -> BIGGER .)
    NOT             reduce using rule 70 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 70 (COMP -> BIGGER .)
    ID              reduce using rule 70 (COMP -> BIGGER .)
    NEW_KWD         reduce using rule 70 (COMP -> BIGGER .)
    CTE_S           reduce using rule 70 (COMP -> BIGGER .)
    CTE_F           reduce using rule 70 (COMP -> BIGGER .)
    CTE_I           reduce using rule 70 (COMP -> BIGGER .)
    THIS_KWD        reduce using rule 70 (COMP -> BIGGER .)


state 182

    (71) COMP -> BIGGER_EQ .

    MINUS           reduce using rule 71 (COMP -> BIGGER_EQ .)
    NOT             reduce using rule 71 (COMP -> BIGGER_EQ .)
    OPEN_PARENTHESIS reduce using rule 71 (COMP -> BIGGER_EQ .)
    ID              reduce using rule 71 (COMP -> BIGGER_EQ .)
    NEW_KWD         reduce using rule 71 (COMP -> BIGGER_EQ .)
    CTE_S           reduce using rule 71 (COMP -> BIGGER_EQ .)
    CTE_F           reduce using rule 71 (COMP -> BIGGER_EQ .)
    CTE_I           reduce using rule 71 (COMP -> BIGGER_EQ .)
    THIS_KWD        reduce using rule 71 (COMP -> BIGGER_EQ .)


state 183

    (72) COMP -> SMALLER .

    MINUS           reduce using rule 72 (COMP -> SMALLER .)
    NOT             reduce using rule 72 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 72 (COMP -> SMALLER .)
    ID              reduce using rule 72 (COMP -> SMALLER .)
    NEW_KWD         reduce using rule 72 (COMP -> SMALLER .)
    CTE_S           reduce using rule 72 (COMP -> SMALLER .)
    CTE_F           reduce using rule 72 (COMP -> SMALLER .)
    CTE_I           reduce using rule 72 (COMP -> SMALLER .)
    THIS_KWD        reduce using rule 72 (COMP -> SMALLER .)


state 184

    (73) COMP -> SMALLER_EQ .

    MINUS           reduce using rule 73 (COMP -> SMALLER_EQ .)
    NOT             reduce using rule 73 (COMP -> SMALLER_EQ .)
    OPEN_PARENTHESIS reduce using rule 73 (COMP -> SMALLER_EQ .)
    ID              reduce using rule 73 (COMP -> SMALLER_EQ .)
    NEW_KWD         reduce using rule 73 (COMP -> SMALLER_EQ .)
    CTE_S           reduce using rule 73 (COMP -> SMALLER_EQ .)
    CTE_F           reduce using rule 73 (COMP -> SMALLER_EQ .)
    CTE_I           reduce using rule 73 (COMP -> SMALLER_EQ .)
    THIS_KWD        reduce using rule 73 (COMP -> SMALLER_EQ .)


state 185

    (74) COMP -> DOUBLE_EQUALS .

    MINUS           reduce using rule 74 (COMP -> DOUBLE_EQUALS .)
    NOT             reduce using rule 74 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 74 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 74 (COMP -> DOUBLE_EQUALS .)
    NEW_KWD         reduce using rule 74 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 74 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 74 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 74 (COMP -> DOUBLE_EQUALS .)
    THIS_KWD        reduce using rule 74 (COMP -> DOUBLE_EQUALS .)


state 186

    (75) COMP -> DIFFERENT .

    MINUS           reduce using rule 75 (COMP -> DIFFERENT .)
    NOT             reduce using rule 75 (COMP -> DIFFERENT .)
    OPEN_PARENTHESIS reduce using rule 75 (COMP -> DIFFERENT .)
    ID              reduce using rule 75 (COMP -> DIFFERENT .)
    NEW_KWD         reduce using rule 75 (COMP -> DIFFERENT .)
    CTE_S           reduce using rule 75 (COMP -> DIFFERENT .)
    CTE_F           reduce using rule 75 (COMP -> DIFFERENT .)
    CTE_I           reduce using rule 75 (COMP -> DIFFERENT .)
    THIS_KWD        reduce using rule 75 (COMP -> DIFFERENT .)


state 187

    (76) COMP -> AND .

    MINUS           reduce using rule 76 (COMP -> AND .)
    NOT             reduce using rule 76 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 76 (COMP -> AND .)
    ID              reduce using rule 76 (COMP -> AND .)
    NEW_KWD         reduce using rule 76 (COMP -> AND .)
    CTE_S           reduce using rule 76 (COMP -> AND .)
    CTE_F           reduce using rule 76 (COMP -> AND .)
    CTE_I           reduce using rule 76 (COMP -> AND .)
    THIS_KWD        reduce using rule 76 (COMP -> AND .)


state 188

    (77) COMP -> OR .

    MINUS           reduce using rule 77 (COMP -> OR .)
    NOT             reduce using rule 77 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 77 (COMP -> OR .)
    ID              reduce using rule 77 (COMP -> OR .)
    NEW_KWD         reduce using rule 77 (COMP -> OR .)
    CTE_S           reduce using rule 77 (COMP -> OR .)
    CTE_F           reduce using rule 77 (COMP -> OR .)
    CTE_I           reduce using rule 77 (COMP -> OR .)
    THIS_KWD        reduce using rule 77 (COMP -> OR .)


state 189

    (78) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    EXPRESSION                     shift and go to state 232
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 190

    (89) seen_open_parenthesis -> empty .

    MINUS           reduce using rule 89 (seen_open_parenthesis -> empty .)
    NOT             reduce using rule 89 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 89 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 89 (seen_open_parenthesis -> empty .)
    NEW_KWD         reduce using rule 89 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 89 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 89 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 89 (seen_open_parenthesis -> empty .)
    THIS_KWD        reduce using rule 89 (seen_open_parenthesis -> empty .)


state 191

    (58) EXP -> TERM seen_term . EXP_P
    (62) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (63) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (64) EXP_P -> . empty
    (171) empty -> .

    PLUS            shift and go to state 234
    MINUS           shift and go to state 235
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    EXP_P                          shift and go to state 233
    empty                          shift and go to state 236

state 192

    (59) EXP -> MINUS seen_unary_minus . EXP pop_unary_minus
    (80) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (120) TERM -> . FACTOR seen_factor TERM_P
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    EXP                            shift and go to state 237
    FACTOR                         shift and go to state 238
    TERM                           shift and go to state 144
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 193

    (88) seen_unary_minus -> empty .

    MINUS           reduce using rule 88 (seen_unary_minus -> empty .)
    NOT             reduce using rule 88 (seen_unary_minus -> empty .)
    OPEN_PARENTHESIS reduce using rule 88 (seen_unary_minus -> empty .)
    ID              reduce using rule 88 (seen_unary_minus -> empty .)
    NEW_KWD         reduce using rule 88 (seen_unary_minus -> empty .)
    CTE_S           reduce using rule 88 (seen_unary_minus -> empty .)
    CTE_F           reduce using rule 88 (seen_unary_minus -> empty .)
    CTE_I           reduce using rule 88 (seen_unary_minus -> empty .)
    THIS_KWD        reduce using rule 88 (seen_unary_minus -> empty .)


state 194

    (60) EXP -> NOT seen_not . EXP pop_not
    (79) FACTOR -> NOT seen_not . FACTOR pop_not
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (120) TERM -> . FACTOR seen_factor TERM_P
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    EXP                            shift and go to state 239
    FACTOR                         shift and go to state 240
    TERM                           shift and go to state 144
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 195

    (86) seen_not -> empty .

    MINUS           reduce using rule 86 (seen_not -> empty .)
    NOT             reduce using rule 86 (seen_not -> empty .)
    OPEN_PARENTHESIS reduce using rule 86 (seen_not -> empty .)
    ID              reduce using rule 86 (seen_not -> empty .)
    NEW_KWD         reduce using rule 86 (seen_not -> empty .)
    CTE_S           reduce using rule 86 (seen_not -> empty .)
    CTE_F           reduce using rule 86 (seen_not -> empty .)
    CTE_I           reduce using rule 86 (seen_not -> empty .)
    THIS_KWD        reduce using rule 86 (seen_not -> empty .)


state 196

    (120) TERM -> FACTOR seen_factor . TERM_P
    (121) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (122) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (123) TERM_P -> . empty
    (171) empty -> .

    STAR            shift and go to state 242
    FWD_SLASH       shift and go to state 243
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    TERM_P                         shift and go to state 241
    empty                          shift and go to state 244

state 197

    (124) seen_factor -> empty .

    STAR            reduce using rule 124 (seen_factor -> empty .)
    FWD_SLASH       reduce using rule 124 (seen_factor -> empty .)
    PLUS            reduce using rule 124 (seen_factor -> empty .)
    MINUS           reduce using rule 124 (seen_factor -> empty .)
    BIGGER          reduce using rule 124 (seen_factor -> empty .)
    BIGGER_EQ       reduce using rule 124 (seen_factor -> empty .)
    SMALLER         reduce using rule 124 (seen_factor -> empty .)
    SMALLER_EQ      reduce using rule 124 (seen_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 124 (seen_factor -> empty .)
    DIFFERENT       reduce using rule 124 (seen_factor -> empty .)
    AND             reduce using rule 124 (seen_factor -> empty .)
    OR              reduce using rule 124 (seen_factor -> empty .)
    SEMI_COLON      reduce using rule 124 (seen_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 124 (seen_factor -> empty .)
    COMMA           reduce using rule 124 (seen_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 124 (seen_factor -> empty .)


state 198

    (83) FACTOR -> VAR seen_var_as_factor .

    STAR            reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    DIFFERENT       reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    SEMI_COLON      reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_BRACKET   reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)


state 199

    (92) seen_var_as_factor -> empty .

    STAR            reduce using rule 92 (seen_var_as_factor -> empty .)
    FWD_SLASH       reduce using rule 92 (seen_var_as_factor -> empty .)
    PLUS            reduce using rule 92 (seen_var_as_factor -> empty .)
    MINUS           reduce using rule 92 (seen_var_as_factor -> empty .)
    BIGGER          reduce using rule 92 (seen_var_as_factor -> empty .)
    BIGGER_EQ       reduce using rule 92 (seen_var_as_factor -> empty .)
    SMALLER         reduce using rule 92 (seen_var_as_factor -> empty .)
    SMALLER_EQ      reduce using rule 92 (seen_var_as_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 92 (seen_var_as_factor -> empty .)
    DIFFERENT       reduce using rule 92 (seen_var_as_factor -> empty .)
    AND             reduce using rule 92 (seen_var_as_factor -> empty .)
    OR              reduce using rule 92 (seen_var_as_factor -> empty .)
    SEMI_COLON      reduce using rule 92 (seen_var_as_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 92 (seen_var_as_factor -> empty .)
    COMMA           reduce using rule 92 (seen_var_as_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 92 (seen_var_as_factor -> empty .)


state 200

    (105) CLASS_INSTANCE -> NEW_KWD ID . seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (106) seen_class_id_instance -> . empty
    (171) empty -> .

    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_class_id_instance         shift and go to state 245
    empty                          shift and go to state 246

state 201

    (96) CNST -> CTE_S seen_cte_s .

    STAR            reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    BIGGER_EQ       reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    SMALLER_EQ      reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    DIFFERENT       reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    AND             reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    OR              reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 96 (CNST -> CTE_S seen_cte_s .)
    CLOSE_BRACKET   reduce using rule 96 (CNST -> CTE_S seen_cte_s .)


state 202

    (97) CNST -> CTE_F seen_cte_f .

    STAR            reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    BIGGER_EQ       reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    SMALLER_EQ      reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    DIFFERENT       reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    AND             reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    OR              reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 97 (CNST -> CTE_F seen_cte_f .)
    CLOSE_BRACKET   reduce using rule 97 (CNST -> CTE_F seen_cte_f .)


state 203

    (98) CNST -> CTE_I seen_cte_i .

    STAR            reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    BIGGER_EQ       reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    SMALLER_EQ      reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    DIFFERENT       reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    AND             reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    OR              reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 98 (CNST -> CTE_I seen_cte_i .)
    CLOSE_BRACKET   reduce using rule 98 (CNST -> CTE_I seen_cte_i .)


state 204

    (100) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT . seen_this_dot_operator
    (108) seen_this_dot_operator -> . empty
    (171) empty -> .

    ID              reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_this_dot_operator         shift and go to state 247
    empty                          shift and go to state 248

state 205

    (150) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 249


state 206

    (81) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 81 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 81 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 81 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 81 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 81 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 81 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 81 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 81 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 81 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 81 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 81 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 81 (FACTOR -> FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 81 (FACTOR -> FUNC_CALL .)


state 207

    (157) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    EXPRESSION                     shift and go to state 250
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 208

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (161) seen_for_kwd -> . empty
    (171) empty -> .

    EQUALS          reduce using rule 171 (empty -> .)

    seen_for_kwd                   shift and go to state 251
    empty                          shift and go to state 252

state 209

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 253


state 210

    (33) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 33 (seen_func_vars -> empty .)


state 211

    (39) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (171) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (115) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 254
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 212

    (116) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (119) seen_array_def_dim -> . empty
    (171) empty -> .

    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    seen_array_def_dim             shift and go to state 255
    empty                          shift and go to state 71

state 213

    (102) VAR -> ID .
    (126) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (109) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (99) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (128) seen_func_call_id -> . empty
    (112) seen_array_id -> . empty
    (171) empty -> .

    COMMA           reduce using rule 102 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 102 (VAR -> ID .)
    STAR            reduce using rule 102 (VAR -> ID .)
    FWD_SLASH       reduce using rule 102 (VAR -> ID .)
    PLUS            reduce using rule 102 (VAR -> ID .)
    MINUS           reduce using rule 102 (VAR -> ID .)
    BIGGER          reduce using rule 102 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 102 (VAR -> ID .)
    SMALLER         reduce using rule 102 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 102 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 102 (VAR -> ID .)
    DIFFERENT       reduce using rule 102 (VAR -> ID .)
    AND             reduce using rule 102 (VAR -> ID .)
    OR              reduce using rule 102 (VAR -> ID .)
    DOT             shift and go to state 119
    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    OPEN_BRACKET    reduce using rule 171 (empty -> .)

    seen_func_call_id              shift and go to state 118
    seen_array_id                  shift and go to state 120
    empty                          shift and go to state 121

state 214

    (126) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 256


state 215

    (129) ARG_LIST -> VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (83) FACTOR -> VAR . seen_var_as_factor
    (92) seen_var_as_factor -> . empty
    (171) empty -> .

    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)

    seen_var_as_factor             shift and go to state 257
    empty                          shift and go to state 199

state 216

    (130) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (137) seen_arg -> . empty
    (171) empty -> .

    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_arg                       shift and go to state 258
    empty                          shift and go to state 259

state 217

    (131) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (81) FACTOR -> FUNC_CALL .
    (137) seen_arg -> . empty
    (171) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 81 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 81 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 81 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 81 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 81 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 81 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 81 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 81 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 81 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 81 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 81 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 81 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 81 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 171 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 171 (empty -> .) ]

    seen_arg                       shift and go to state 260
    empty                          shift and go to state 259

state 218

    (132) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 132 (ARG_LIST -> empty .)


state 219

    (104) VAR -> CLASS_REFERENCE . VAR
    (127) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 213
    THIS_KWD        shift and go to state 103

    CLASS_REFERENCE                shift and go to state 219
    VAR                            shift and go to state 132
    FUNC_CALL                      shift and go to state 131
    ARRAY                          shift and go to state 102

state 220

    (109) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    EXPRESSION                     shift and go to state 261
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 221

    (113) seen_open_bracket -> empty .

    MINUS           reduce using rule 113 (seen_open_bracket -> empty .)
    NOT             reduce using rule 113 (seen_open_bracket -> empty .)
    OPEN_PARENTHESIS reduce using rule 113 (seen_open_bracket -> empty .)
    ID              reduce using rule 113 (seen_open_bracket -> empty .)
    NEW_KWD         reduce using rule 113 (seen_open_bracket -> empty .)
    CTE_S           reduce using rule 113 (seen_open_bracket -> empty .)
    CTE_F           reduce using rule 113 (seen_open_bracket -> empty .)
    CTE_I           reduce using rule 113 (seen_open_bracket -> empty .)
    THIS_KWD        reduce using rule 113 (seen_open_bracket -> empty .)


state 222

    (56) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals . EXPRESSION
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    VAR                            shift and go to state 149
    EXPRESSION                     shift and go to state 262
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 223

    (57) seen_equals -> empty .

    MINUS           reduce using rule 57 (seen_equals -> empty .)
    NOT             reduce using rule 57 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 57 (seen_equals -> empty .)
    ID              reduce using rule 57 (seen_equals -> empty .)
    NEW_KWD         reduce using rule 57 (seen_equals -> empty .)
    CTE_S           reduce using rule 57 (seen_equals -> empty .)
    CTE_F           reduce using rule 57 (seen_equals -> empty .)
    CTE_I           reduce using rule 57 (seen_equals -> empty .)
    THIS_KWD        reduce using rule 57 (seen_equals -> empty .)


state 224

    (141) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 141 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 141 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 225

    (23) READABLE_LIST -> VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (171) empty -> .

    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_readable                  shift and go to state 263
    empty                          shift and go to state 264

state 226

    (112) seen_array_id -> empty .

    OPEN_BRACKET    reduce using rule 112 (seen_array_id -> empty .)


state 227

    (142) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 265


state 228

    (146) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (149) seen_printable -> . empty
    (171) empty -> .

    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_printable                 shift and go to state 266
    empty                          shift and go to state 267

state 229

    (144) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 268


state 230

    (67) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    EXP                            shift and go to state 141
    EXPRESSION                     shift and go to state 269
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 231

    (69) seen_comp_op -> empty .

    MINUS           reduce using rule 69 (seen_comp_op -> empty .)
    NOT             reduce using rule 69 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 69 (seen_comp_op -> empty .)
    ID              reduce using rule 69 (seen_comp_op -> empty .)
    NEW_KWD         reduce using rule 69 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 69 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 69 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 69 (seen_comp_op -> empty .)
    THIS_KWD        reduce using rule 69 (seen_comp_op -> empty .)


state 232

    (78) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 270


state 233

    (58) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 58 (EXP -> TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 58 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 58 (EXP -> TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 58 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 58 (EXP -> TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 58 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 58 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 58 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 58 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 58 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 58 (EXP -> TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 58 (EXP -> TERM seen_term EXP_P .)


state 234

    (62) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (65) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 65 (seen_term_op -> .)
    NOT             reduce using rule 65 (seen_term_op -> .)
    MINUS           reduce using rule 65 (seen_term_op -> .)
    ID              reduce using rule 65 (seen_term_op -> .)
    NEW_KWD         reduce using rule 65 (seen_term_op -> .)
    CTE_S           reduce using rule 65 (seen_term_op -> .)
    CTE_F           reduce using rule 65 (seen_term_op -> .)
    CTE_I           reduce using rule 65 (seen_term_op -> .)
    THIS_KWD        reduce using rule 65 (seen_term_op -> .)

    seen_term_op                   shift and go to state 271

state 235

    (63) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (65) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 65 (seen_term_op -> .)
    NOT             reduce using rule 65 (seen_term_op -> .)
    MINUS           reduce using rule 65 (seen_term_op -> .)
    ID              reduce using rule 65 (seen_term_op -> .)
    NEW_KWD         reduce using rule 65 (seen_term_op -> .)
    CTE_S           reduce using rule 65 (seen_term_op -> .)
    CTE_F           reduce using rule 65 (seen_term_op -> .)
    CTE_I           reduce using rule 65 (seen_term_op -> .)
    THIS_KWD        reduce using rule 65 (seen_term_op -> .)

    seen_term_op                   shift and go to state 272

state 236

    (64) EXP_P -> empty .

    BIGGER          reduce using rule 64 (EXP_P -> empty .)
    BIGGER_EQ       reduce using rule 64 (EXP_P -> empty .)
    SMALLER         reduce using rule 64 (EXP_P -> empty .)
    SMALLER_EQ      reduce using rule 64 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 64 (EXP_P -> empty .)
    DIFFERENT       reduce using rule 64 (EXP_P -> empty .)
    AND             reduce using rule 64 (EXP_P -> empty .)
    OR              reduce using rule 64 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 64 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 64 (EXP_P -> empty .)
    COMMA           reduce using rule 64 (EXP_P -> empty .)
    CLOSE_BRACKET   reduce using rule 64 (EXP_P -> empty .)


state 237

    (59) EXP -> MINUS seen_unary_minus EXP . pop_unary_minus
    (87) pop_unary_minus -> . empty
    (171) empty -> .

    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    pop_unary_minus                shift and go to state 273
    empty                          shift and go to state 274

state 238

    (80) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (120) TERM -> FACTOR . seen_factor TERM_P
    (87) pop_unary_minus -> . empty
    (124) seen_factor -> . empty
    (171) empty -> .

    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    pop_unary_minus                shift and go to state 275
    seen_factor                    shift and go to state 196
    empty                          shift and go to state 276

state 239

    (60) EXP -> NOT seen_not EXP . pop_not
    (85) pop_not -> . empty
    (171) empty -> .

    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    pop_not                        shift and go to state 277
    empty                          shift and go to state 278

state 240

    (79) FACTOR -> NOT seen_not FACTOR . pop_not
    (120) TERM -> FACTOR . seen_factor TERM_P
    (85) pop_not -> . empty
    (124) seen_factor -> . empty
    (171) empty -> .

    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    pop_not                        shift and go to state 279
    seen_factor                    shift and go to state 196
    empty                          shift and go to state 280

state 241

    (120) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 120 (TERM -> FACTOR seen_factor TERM_P .)


state 242

    (121) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (125) seen_factor_op -> . empty
    (171) empty -> .

    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    NOT             reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    NEW_KWD         reduce using rule 171 (empty -> .)
    CTE_S           reduce using rule 171 (empty -> .)
    CTE_F           reduce using rule 171 (empty -> .)
    CTE_I           reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_factor_op                 shift and go to state 281
    empty                          shift and go to state 282

state 243

    (122) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (125) seen_factor_op -> . empty
    (171) empty -> .

    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    NOT             reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    NEW_KWD         reduce using rule 171 (empty -> .)
    CTE_S           reduce using rule 171 (empty -> .)
    CTE_F           reduce using rule 171 (empty -> .)
    CTE_I           reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_factor_op                 shift and go to state 283
    empty                          shift and go to state 282

state 244

    (123) TERM_P -> empty .

    PLUS            reduce using rule 123 (TERM_P -> empty .)
    MINUS           reduce using rule 123 (TERM_P -> empty .)
    BIGGER          reduce using rule 123 (TERM_P -> empty .)
    BIGGER_EQ       reduce using rule 123 (TERM_P -> empty .)
    SMALLER         reduce using rule 123 (TERM_P -> empty .)
    SMALLER_EQ      reduce using rule 123 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 123 (TERM_P -> empty .)
    DIFFERENT       reduce using rule 123 (TERM_P -> empty .)
    AND             reduce using rule 123 (TERM_P -> empty .)
    OR              reduce using rule 123 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 123 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 123 (TERM_P -> empty .)
    COMMA           reduce using rule 123 (TERM_P -> empty .)
    CLOSE_BRACKET   reduce using rule 123 (TERM_P -> empty .)


state 245

    (105) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 284


state 246

    (106) seen_class_id_instance -> empty .

    OPEN_PARENTHESIS reduce using rule 106 (seen_class_id_instance -> empty .)


state 247

    (100) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .

    ID              reduce using rule 100 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)
    THIS_KWD        reduce using rule 100 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)


state 248

    (108) seen_this_dot_operator -> empty .

    ID              reduce using rule 108 (seen_this_dot_operator -> empty .)
    THIS_KWD        reduce using rule 108 (seen_this_dot_operator -> empty .)


state 249

    (150) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (153) seen_if_kwd -> . empty
    (171) empty -> .

    OPEN_CURLY      reduce using rule 171 (empty -> .)

    seen_if_kwd                    shift and go to state 285
    empty                          shift and go to state 286

state 250

    (157) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 287


state 251

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 288


state 252

    (161) seen_for_kwd -> empty .

    EQUALS          reduce using rule 161 (seen_for_kwd -> empty .)


state 253

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (171) empty -> .
    (56) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (141) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (142) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (144) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) FLOW_CONTROL -> . DECISION
    (50) FLOW_CONTROL -> . REPETITION
    (138) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (139) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (140) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (155) REPETITION -> . CONDITIONAL_REP
    (156) REPETITION -> . UNCONDITIONAL_REP
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (157) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (160) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 96
    PRINT_KWD       shift and go to state 97
    PRINTLN_KWD     shift and go to state 98
    RETURN_KWD      shift and go to state 101
    THIS_KWD        shift and go to state 103
    IF_KWD          shift and go to state 104
    WHILE_KWD       shift and go to state 107
    FOR_KWD         shift and go to state 108

    STATEMENT_STAR                 shift and go to state 289
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    FLOW_CONTROL                   shift and go to state 92
    FUNC_RETURN                    shift and go to state 93
    VAR                            shift and go to state 94
    CLASS_REFERENCE                shift and go to state 95
    DECISION                       shift and go to state 99
    REPETITION                     shift and go to state 100
    ARRAY                          shift and go to state 102
    CONDITIONAL_REP                shift and go to state 105
    UNCONDITIONAL_REP              shift and go to state 106

state 254

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 290


state 255

    (116) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_BRACKET   shift and go to state 291


state 256

    (126) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DIFFERENT       reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 126 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 257

    (129) ARG_LIST -> VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (83) FACTOR -> VAR seen_var_as_factor .
    (137) seen_arg -> . empty
    (171) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 83 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    DIFFERENT       reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 171 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 171 (empty -> .) ]

    seen_arg                       shift and go to state 292
    empty                          shift and go to state 259

state 258

    (130) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (133) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (134) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (135) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (136) ARG_LIST_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 294
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    ARG_LIST_P                     shift and go to state 293
    empty                          shift and go to state 295

state 259

    (137) seen_arg -> empty .

    COMMA           reduce using rule 137 (seen_arg -> empty .)
    CLOSE_PARENTHESIS reduce using rule 137 (seen_arg -> empty .)


state 260

    (131) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (133) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (134) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (135) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (136) ARG_LIST_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 294
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    ARG_LIST_P                     shift and go to state 296
    empty                          shift and go to state 295

state 261

    (109) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (114) seen_array_access -> . empty
    (171) empty -> .

    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    seen_array_access              shift and go to state 297
    empty                          shift and go to state 298

state 262

    (56) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 56 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 56 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)


state 263

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 300
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    READABLE_LIST_P                shift and go to state 299
    empty                          shift and go to state 301

state 264

    (26) seen_readable -> empty .

    COMMA           reduce using rule 26 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 26 (seen_readable -> empty .)


state 265

    (142) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 142 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 142 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 266

    (146) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (147) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (148) PRINTABLE_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 303
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    PRINTABLE_P                    shift and go to state 302
    empty                          shift and go to state 304

state 267

    (149) seen_printable -> empty .

    COMMA           reduce using rule 149 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 149 (seen_printable -> empty .)


state 268

    (144) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 144 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 144 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 269

    (67) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (68) seen_comp -> . empty
    (171) empty -> .

    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    seen_comp                      shift and go to state 305
    empty                          shift and go to state 306

state 270

    (78) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (90) seen_close_parenthesis -> . empty
    (171) empty -> .

    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    seen_close_parenthesis         shift and go to state 307
    empty                          shift and go to state 308

state 271

    (62) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 143
    NOT             shift and go to state 310
    MINUS           shift and go to state 311
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    TERM                           shift and go to state 309
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 272

    (63) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 143
    NOT             shift and go to state 310
    MINUS           shift and go to state 311
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    TERM                           shift and go to state 312
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 273

    (59) EXP -> MINUS seen_unary_minus EXP pop_unary_minus .

    BIGGER          reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    BIGGER_EQ       reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER         reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER_EQ      reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    DIFFERENT       reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    AND             reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    OR              reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SEMI_COLON      reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    COMMA           reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 59 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)


state 274

    (87) pop_unary_minus -> empty .

    BIGGER          reduce using rule 87 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 87 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 87 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 87 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 87 (pop_unary_minus -> empty .)
    DIFFERENT       reduce using rule 87 (pop_unary_minus -> empty .)
    AND             reduce using rule 87 (pop_unary_minus -> empty .)
    OR              reduce using rule 87 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 87 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 87 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 87 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 87 (pop_unary_minus -> empty .)
    STAR            reduce using rule 87 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 87 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 87 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 87 (pop_unary_minus -> empty .)


state 275

    (80) FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .

    STAR            reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    FWD_SLASH       reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    PLUS            reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    MINUS           reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER          reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER_EQ       reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER         reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER_EQ      reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    DIFFERENT       reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    AND             reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    OR              reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SEMI_COLON      reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    COMMA           reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 80 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)


state 276

    (87) pop_unary_minus -> empty .
    (124) seen_factor -> empty .

  ! reduce/reduce conflict for STAR resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 87 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 87 (pop_unary_minus -> empty .)
    STAR            reduce using rule 87 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 87 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 87 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 87 (pop_unary_minus -> empty .)
    BIGGER          reduce using rule 87 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 87 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 87 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 87 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 87 (pop_unary_minus -> empty .)
    DIFFERENT       reduce using rule 87 (pop_unary_minus -> empty .)
    AND             reduce using rule 87 (pop_unary_minus -> empty .)
    OR              reduce using rule 87 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 87 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 87 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 87 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 87 (pop_unary_minus -> empty .)

  ! STAR            [ reduce using rule 124 (seen_factor -> empty .) ]
  ! FWD_SLASH       [ reduce using rule 124 (seen_factor -> empty .) ]
  ! PLUS            [ reduce using rule 124 (seen_factor -> empty .) ]
  ! MINUS           [ reduce using rule 124 (seen_factor -> empty .) ]
  ! BIGGER          [ reduce using rule 124 (seen_factor -> empty .) ]
  ! BIGGER_EQ       [ reduce using rule 124 (seen_factor -> empty .) ]
  ! SMALLER         [ reduce using rule 124 (seen_factor -> empty .) ]
  ! SMALLER_EQ      [ reduce using rule 124 (seen_factor -> empty .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 124 (seen_factor -> empty .) ]
  ! DIFFERENT       [ reduce using rule 124 (seen_factor -> empty .) ]
  ! AND             [ reduce using rule 124 (seen_factor -> empty .) ]
  ! OR              [ reduce using rule 124 (seen_factor -> empty .) ]
  ! SEMI_COLON      [ reduce using rule 124 (seen_factor -> empty .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 124 (seen_factor -> empty .) ]
  ! COMMA           [ reduce using rule 124 (seen_factor -> empty .) ]
  ! CLOSE_BRACKET   [ reduce using rule 124 (seen_factor -> empty .) ]


state 277

    (60) EXP -> NOT seen_not EXP pop_not .

    BIGGER          reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)
    BIGGER_EQ       reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER         reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER_EQ      reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)
    DOUBLE_EQUALS   reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)
    DIFFERENT       reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)
    AND             reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)
    OR              reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)
    SEMI_COLON      reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)
    CLOSE_PARENTHESIS reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)
    COMMA           reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)
    CLOSE_BRACKET   reduce using rule 60 (EXP -> NOT seen_not EXP pop_not .)


state 278

    (85) pop_not -> empty .

    BIGGER          reduce using rule 85 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 85 (pop_not -> empty .)
    SMALLER         reduce using rule 85 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 85 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 85 (pop_not -> empty .)
    DIFFERENT       reduce using rule 85 (pop_not -> empty .)
    AND             reduce using rule 85 (pop_not -> empty .)
    OR              reduce using rule 85 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 85 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 85 (pop_not -> empty .)
    COMMA           reduce using rule 85 (pop_not -> empty .)
    CLOSE_BRACKET   reduce using rule 85 (pop_not -> empty .)
    STAR            reduce using rule 85 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 85 (pop_not -> empty .)
    PLUS            reduce using rule 85 (pop_not -> empty .)
    MINUS           reduce using rule 85 (pop_not -> empty .)


state 279

    (79) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER_EQ       reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER_EQ      reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DIFFERENT       reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_BRACKET   reduce using rule 79 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 280

    (85) pop_not -> empty .
    (124) seen_factor -> empty .

  ! reduce/reduce conflict for STAR resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for BIGGER resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for SMALLER resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 85 (pop_not -> empty .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 85 (pop_not -> empty .)
    STAR            reduce using rule 85 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 85 (pop_not -> empty .)
    PLUS            reduce using rule 85 (pop_not -> empty .)
    MINUS           reduce using rule 85 (pop_not -> empty .)
    BIGGER          reduce using rule 85 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 85 (pop_not -> empty .)
    SMALLER         reduce using rule 85 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 85 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 85 (pop_not -> empty .)
    DIFFERENT       reduce using rule 85 (pop_not -> empty .)
    AND             reduce using rule 85 (pop_not -> empty .)
    OR              reduce using rule 85 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 85 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 85 (pop_not -> empty .)
    COMMA           reduce using rule 85 (pop_not -> empty .)
    CLOSE_BRACKET   reduce using rule 85 (pop_not -> empty .)

  ! STAR            [ reduce using rule 124 (seen_factor -> empty .) ]
  ! FWD_SLASH       [ reduce using rule 124 (seen_factor -> empty .) ]
  ! PLUS            [ reduce using rule 124 (seen_factor -> empty .) ]
  ! MINUS           [ reduce using rule 124 (seen_factor -> empty .) ]
  ! BIGGER          [ reduce using rule 124 (seen_factor -> empty .) ]
  ! BIGGER_EQ       [ reduce using rule 124 (seen_factor -> empty .) ]
  ! SMALLER         [ reduce using rule 124 (seen_factor -> empty .) ]
  ! SMALLER_EQ      [ reduce using rule 124 (seen_factor -> empty .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 124 (seen_factor -> empty .) ]
  ! DIFFERENT       [ reduce using rule 124 (seen_factor -> empty .) ]
  ! AND             [ reduce using rule 124 (seen_factor -> empty .) ]
  ! OR              [ reduce using rule 124 (seen_factor -> empty .) ]
  ! SEMI_COLON      [ reduce using rule 124 (seen_factor -> empty .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 124 (seen_factor -> empty .) ]
  ! COMMA           [ reduce using rule 124 (seen_factor -> empty .) ]
  ! CLOSE_BRACKET   [ reduce using rule 124 (seen_factor -> empty .) ]


state 281

    (121) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 143
    NOT             shift and go to state 310
    MINUS           shift and go to state 311
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    FACTOR                         shift and go to state 313
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 282

    (125) seen_factor_op -> empty .

    OPEN_PARENTHESIS reduce using rule 125 (seen_factor_op -> empty .)
    NOT             reduce using rule 125 (seen_factor_op -> empty .)
    MINUS           reduce using rule 125 (seen_factor_op -> empty .)
    ID              reduce using rule 125 (seen_factor_op -> empty .)
    NEW_KWD         reduce using rule 125 (seen_factor_op -> empty .)
    CTE_S           reduce using rule 125 (seen_factor_op -> empty .)
    CTE_F           reduce using rule 125 (seen_factor_op -> empty .)
    CTE_I           reduce using rule 125 (seen_factor_op -> empty .)
    THIS_KWD        reduce using rule 125 (seen_factor_op -> empty .)


state 283

    (122) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 143
    NOT             shift and go to state 310
    MINUS           shift and go to state 311
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    FACTOR                         shift and go to state 314
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 284

    (105) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 315


state 285

    (150) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 316


state 286

    (153) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 153 (seen_if_kwd -> empty .)


state 287

    (157) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (159) seen_while_exp -> . empty
    (171) empty -> .

    OPEN_CURLY      reduce using rule 171 (empty -> .)

    seen_while_exp                 shift and go to state 317
    empty                          shift and go to state 318

state 288

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    VAR                            shift and go to state 149
    EXPRESSION                     shift and go to state 319
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 289

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 320


state 290

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 39 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 291

    (116) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DEFINITION_P
    (116) ARRAY_DEFINITION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (117) ARRAY_DEFINITION_P -> . empty
    (171) empty -> .

    OPEN_BRACKET    shift and go to state 115
    COMMA           reduce using rule 171 (empty -> .)
    COLON           reduce using rule 171 (empty -> .)

    ARRAY_DEFINITION_P             shift and go to state 321
    empty                          shift and go to state 117

state 292

    (129) ARG_LIST -> VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (133) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (134) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (135) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (136) ARG_LIST_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 294
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    ARG_LIST_P                     shift and go to state 322
    empty                          shift and go to state 295

state 293

    (130) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 130 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 294

    (133) ARG_LIST_P -> COMMA . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (134) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (135) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 213
    THIS_KWD        shift and go to state 103
    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154

    VAR                            shift and go to state 323
    EXPRESSION                     shift and go to state 324
    FUNC_CALL                      shift and go to state 325
    ARRAY                          shift and go to state 102
    CLASS_REFERENCE                shift and go to state 219
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    CLASS_INSTANCE                 shift and go to state 148
    CNST                           shift and go to state 150

state 295

    (136) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 136 (ARG_LIST_P -> empty .)


state 296

    (131) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 131 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 297

    (109) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 326


state 298

    (114) seen_array_access -> empty .

    CLOSE_BRACKET   reduce using rule 114 (seen_array_access -> empty .)


state 299

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 23 (READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 300

    (24) READABLE_LIST_P -> COMMA . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 174
    THIS_KWD        shift and go to state 103

    VAR                            shift and go to state 327
    ARRAY                          shift and go to state 102
    CLASS_REFERENCE                shift and go to state 175

state 301

    (25) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 25 (READABLE_LIST_P -> empty .)


state 302

    (146) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 146 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 303

    (147) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    EXPRESSION                     shift and go to state 328
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 304

    (148) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 148 (PRINTABLE_P -> empty .)


state 305

    (67) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    SEMI_COLON      reduce using rule 67 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 67 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    COMMA           reduce using rule 67 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_BRACKET   reduce using rule 67 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 306

    (68) seen_comp -> empty .

    SEMI_COLON      reduce using rule 68 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 68 (seen_comp -> empty .)
    COMMA           reduce using rule 68 (seen_comp -> empty .)
    CLOSE_BRACKET   reduce using rule 68 (seen_comp -> empty .)


state 307

    (78) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DIFFERENT       reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 78 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 308

    (90) seen_close_parenthesis -> empty .

    STAR            reduce using rule 90 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 90 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 90 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 90 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 90 (seen_close_parenthesis -> empty .)
    BIGGER_EQ       reduce using rule 90 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 90 (seen_close_parenthesis -> empty .)
    SMALLER_EQ      reduce using rule 90 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 90 (seen_close_parenthesis -> empty .)
    DIFFERENT       reduce using rule 90 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 90 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 90 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 90 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 90 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 90 (seen_close_parenthesis -> empty .)
    CLOSE_BRACKET   reduce using rule 90 (seen_close_parenthesis -> empty .)


state 309

    (62) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (61) seen_term -> .

    PLUS            reduce using rule 61 (seen_term -> .)
    MINUS           reduce using rule 61 (seen_term -> .)
    BIGGER          reduce using rule 61 (seen_term -> .)
    BIGGER_EQ       reduce using rule 61 (seen_term -> .)
    SMALLER         reduce using rule 61 (seen_term -> .)
    SMALLER_EQ      reduce using rule 61 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 61 (seen_term -> .)
    DIFFERENT       reduce using rule 61 (seen_term -> .)
    AND             reduce using rule 61 (seen_term -> .)
    OR              reduce using rule 61 (seen_term -> .)
    SEMI_COLON      reduce using rule 61 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 61 (seen_term -> .)
    COMMA           reduce using rule 61 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 61 (seen_term -> .)

    seen_term                      shift and go to state 329

state 310

    (79) FACTOR -> NOT . seen_not FACTOR pop_not
    (86) seen_not -> . empty
    (171) empty -> .

    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    NOT             reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    NEW_KWD         reduce using rule 171 (empty -> .)
    CTE_S           reduce using rule 171 (empty -> .)
    CTE_F           reduce using rule 171 (empty -> .)
    CTE_I           reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_not                       shift and go to state 330
    empty                          shift and go to state 195

state 311

    (80) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (88) seen_unary_minus -> . empty
    (171) empty -> .

    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    NOT             reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    NEW_KWD         reduce using rule 171 (empty -> .)
    CTE_S           reduce using rule 171 (empty -> .)
    CTE_F           reduce using rule 171 (empty -> .)
    CTE_I           reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_unary_minus               shift and go to state 331
    empty                          shift and go to state 193

state 312

    (63) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (61) seen_term -> .

    PLUS            reduce using rule 61 (seen_term -> .)
    MINUS           reduce using rule 61 (seen_term -> .)
    BIGGER          reduce using rule 61 (seen_term -> .)
    BIGGER_EQ       reduce using rule 61 (seen_term -> .)
    SMALLER         reduce using rule 61 (seen_term -> .)
    SMALLER_EQ      reduce using rule 61 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 61 (seen_term -> .)
    DIFFERENT       reduce using rule 61 (seen_term -> .)
    AND             reduce using rule 61 (seen_term -> .)
    OR              reduce using rule 61 (seen_term -> .)
    SEMI_COLON      reduce using rule 61 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 61 (seen_term -> .)
    COMMA           reduce using rule 61 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 61 (seen_term -> .)

    seen_term                      shift and go to state 332

state 313

    (121) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (124) seen_factor -> . empty
    (171) empty -> .

    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    seen_factor                    shift and go to state 333
    empty                          shift and go to state 197

state 314

    (122) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (124) seen_factor -> . empty
    (171) empty -> .

    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    seen_factor                    shift and go to state 334
    empty                          shift and go to state 197

state 315

    (105) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    STAR            reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DIFFERENT       reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    AND             reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OR              reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMI_COLON      reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 105 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 316

    (150) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (171) empty -> .
    (56) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (141) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (142) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (144) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) FLOW_CONTROL -> . DECISION
    (50) FLOW_CONTROL -> . REPETITION
    (138) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (139) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (140) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (155) REPETITION -> . CONDITIONAL_REP
    (156) REPETITION -> . UNCONDITIONAL_REP
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (157) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (160) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 96
    PRINT_KWD       shift and go to state 97
    PRINTLN_KWD     shift and go to state 98
    RETURN_KWD      shift and go to state 101
    THIS_KWD        shift and go to state 103
    IF_KWD          shift and go to state 104
    WHILE_KWD       shift and go to state 107
    FOR_KWD         shift and go to state 108

    STATEMENT_STAR                 shift and go to state 335
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    FLOW_CONTROL                   shift and go to state 92
    FUNC_RETURN                    shift and go to state 93
    VAR                            shift and go to state 94
    CLASS_REFERENCE                shift and go to state 95
    DECISION                       shift and go to state 99
    REPETITION                     shift and go to state 100
    ARRAY                          shift and go to state 102
    CONDITIONAL_REP                shift and go to state 105
    UNCONDITIONAL_REP              shift and go to state 106

state 317

    (157) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 336


state 318

    (159) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 159 (seen_while_exp -> empty .)


state 319

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (163) seen_for_start_exp -> . empty
    (171) empty -> .

    SEMI_COLON      reduce using rule 171 (empty -> .)

    seen_for_start_exp             shift and go to state 337
    empty                          shift and go to state 338

state 320

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLASS_KWD       reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    ID              reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 321

    (116) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .

    COMMA           reduce using rule 116 (ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)
    COLON           reduce using rule 116 (ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)


state 322

    (129) ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 129 (ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 323

    (133) ARG_LIST_P -> COMMA VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (83) FACTOR -> VAR . seen_var_as_factor
    (92) seen_var_as_factor -> . empty
    (171) empty -> .

    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)

    seen_var_as_factor             shift and go to state 339
    empty                          shift and go to state 199

state 324

    (134) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (137) seen_arg -> . empty
    (171) empty -> .

    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_arg                       shift and go to state 340
    empty                          shift and go to state 259

state 325

    (135) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (81) FACTOR -> FUNC_CALL .
    (137) seen_arg -> . empty
    (171) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 81 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 81 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 81 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 81 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 81 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 81 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 81 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 81 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 81 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 81 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 81 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 81 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 81 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 81 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 171 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 171 (empty -> .) ]

    seen_arg                       shift and go to state 341
    empty                          shift and go to state 259

state 326

    (109) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (110) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (111) ARRAY_P -> . empty
    (171) empty -> .

    OPEN_BRACKET    shift and go to state 342
    EQUALS          reduce using rule 171 (empty -> .)
    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    ARRAY_P                        shift and go to state 343
    empty                          shift and go to state 344

state 327

    (24) READABLE_LIST_P -> COMMA VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (91) seen_var_in_assign -> . empty
    (171) empty -> .

    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_var_in_assign             shift and go to state 345
    empty                          shift and go to state 130

state 328

    (147) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (149) seen_printable -> . empty
    (171) empty -> .

    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_printable                 shift and go to state 346
    empty                          shift and go to state 267

state 329

    (62) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (62) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (63) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (64) EXP_P -> . empty
    (171) empty -> .

    PLUS            shift and go to state 234
    MINUS           shift and go to state 235
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    EXP_P                          shift and go to state 347
    empty                          shift and go to state 236

state 330

    (79) FACTOR -> NOT seen_not . FACTOR pop_not
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 143
    NOT             shift and go to state 310
    MINUS           shift and go to state 311
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    FACTOR                         shift and go to state 348
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 331

    (80) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 143
    NOT             shift and go to state 310
    MINUS           shift and go to state 311
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    FACTOR                         shift and go to state 349
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 332

    (63) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (62) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (63) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (64) EXP_P -> . empty
    (171) empty -> .

    PLUS            shift and go to state 234
    MINUS           shift and go to state 235
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    EXP_P                          shift and go to state 350
    empty                          shift and go to state 236

state 333

    (121) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (121) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (122) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (123) TERM_P -> . empty
    (171) empty -> .

    STAR            shift and go to state 242
    FWD_SLASH       shift and go to state 243
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    TERM_P                         shift and go to state 351
    empty                          shift and go to state 244

state 334

    (122) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (121) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (122) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (123) TERM_P -> . empty
    (171) empty -> .

    STAR            shift and go to state 242
    FWD_SLASH       shift and go to state 243
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    TERM_P                         shift and go to state 352
    empty                          shift and go to state 244

state 335

    (150) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 353


state 336

    (157) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (171) empty -> .
    (56) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (141) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (142) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (144) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) FLOW_CONTROL -> . DECISION
    (50) FLOW_CONTROL -> . REPETITION
    (138) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (139) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (140) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (155) REPETITION -> . CONDITIONAL_REP
    (156) REPETITION -> . UNCONDITIONAL_REP
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (157) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (160) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 96
    PRINT_KWD       shift and go to state 97
    PRINTLN_KWD     shift and go to state 98
    RETURN_KWD      shift and go to state 101
    THIS_KWD        shift and go to state 103
    IF_KWD          shift and go to state 104
    WHILE_KWD       shift and go to state 107
    FOR_KWD         shift and go to state 108

    STATEMENT_STAR                 shift and go to state 354
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    FLOW_CONTROL                   shift and go to state 92
    FUNC_RETURN                    shift and go to state 93
    VAR                            shift and go to state 94
    CLASS_REFERENCE                shift and go to state 95
    DECISION                       shift and go to state 99
    REPETITION                     shift and go to state 100
    ARRAY                          shift and go to state 102
    CONDITIONAL_REP                shift and go to state 105
    UNCONDITIONAL_REP              shift and go to state 106

state 337

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 355


state 338

    (163) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 163 (seen_for_start_exp -> empty .)


state 339

    (133) ARG_LIST_P -> COMMA VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (83) FACTOR -> VAR seen_var_as_factor .
    (137) seen_arg -> . empty
    (171) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 83 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    DIFFERENT       reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 83 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 171 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 171 (empty -> .) ]

    seen_arg                       shift and go to state 356
    empty                          shift and go to state 259

state 340

    (134) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (133) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (134) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (135) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (136) ARG_LIST_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 294
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    ARG_LIST_P                     shift and go to state 357
    empty                          shift and go to state 295

state 341

    (135) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (133) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (134) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (135) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (136) ARG_LIST_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 294
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    ARG_LIST_P                     shift and go to state 358
    empty                          shift and go to state 295

state 342

    (110) ARRAY_P -> OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (113) seen_open_bracket -> . empty
    (171) empty -> .

    MINUS           reduce using rule 171 (empty -> .)
    NOT             reduce using rule 171 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 171 (empty -> .)
    ID              reduce using rule 171 (empty -> .)
    NEW_KWD         reduce using rule 171 (empty -> .)
    CTE_S           reduce using rule 171 (empty -> .)
    CTE_F           reduce using rule 171 (empty -> .)
    CTE_I           reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)

    seen_open_bracket              shift and go to state 359
    empty                          shift and go to state 221

state 343

    (109) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DIFFERENT       reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 109 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 344

    (111) ARRAY_P -> empty .

    EQUALS          reduce using rule 111 (ARRAY_P -> empty .)
    STAR            reduce using rule 111 (ARRAY_P -> empty .)
    FWD_SLASH       reduce using rule 111 (ARRAY_P -> empty .)
    PLUS            reduce using rule 111 (ARRAY_P -> empty .)
    MINUS           reduce using rule 111 (ARRAY_P -> empty .)
    BIGGER          reduce using rule 111 (ARRAY_P -> empty .)
    BIGGER_EQ       reduce using rule 111 (ARRAY_P -> empty .)
    SMALLER         reduce using rule 111 (ARRAY_P -> empty .)
    SMALLER_EQ      reduce using rule 111 (ARRAY_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 111 (ARRAY_P -> empty .)
    DIFFERENT       reduce using rule 111 (ARRAY_P -> empty .)
    AND             reduce using rule 111 (ARRAY_P -> empty .)
    OR              reduce using rule 111 (ARRAY_P -> empty .)
    SEMI_COLON      reduce using rule 111 (ARRAY_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 111 (ARRAY_P -> empty .)
    COMMA           reduce using rule 111 (ARRAY_P -> empty .)
    CLOSE_BRACKET   reduce using rule 111 (ARRAY_P -> empty .)


state 345

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (171) empty -> .

    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_readable                  shift and go to state 360
    empty                          shift and go to state 264

state 346

    (147) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (147) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (148) PRINTABLE_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 303
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    PRINTABLE_P                    shift and go to state 361
    empty                          shift and go to state 304

state 347

    (62) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 62 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 348

    (79) FACTOR -> NOT seen_not FACTOR . pop_not
    (85) pop_not -> . empty
    (171) empty -> .

    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    pop_not                        shift and go to state 279
    empty                          shift and go to state 278

state 349

    (80) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (87) pop_unary_minus -> . empty
    (171) empty -> .

    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    pop_unary_minus                shift and go to state 275
    empty                          shift and go to state 274

state 350

    (63) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 63 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 351

    (121) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 121 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 352

    (122) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 122 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 353

    (150) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (151) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (152) DECISION_P -> . empty
    (171) empty -> .

    ELSE_KWD        shift and go to state 363
    ID              reduce using rule 171 (empty -> .)
    READ_KWD        reduce using rule 171 (empty -> .)
    PRINT_KWD       reduce using rule 171 (empty -> .)
    PRINTLN_KWD     reduce using rule 171 (empty -> .)
    RETURN_KWD      reduce using rule 171 (empty -> .)
    THIS_KWD        reduce using rule 171 (empty -> .)
    IF_KWD          reduce using rule 171 (empty -> .)
    WHILE_KWD       reduce using rule 171 (empty -> .)
    FOR_KWD         reduce using rule 171 (empty -> .)
    CLOSE_CURLY     reduce using rule 171 (empty -> .)

    DECISION_P                     shift and go to state 362
    empty                          shift and go to state 364

state 354

    (157) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 365


state 355

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    VAR                            shift and go to state 149
    EXPRESSION                     shift and go to state 366
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 356

    (133) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (133) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (134) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (135) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (136) ARG_LIST_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 294
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    ARG_LIST_P                     shift and go to state 367
    empty                          shift and go to state 295

state 357

    (134) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 134 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 358

    (135) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 135 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 359

    (110) ARRAY_P -> OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (66) EXPRESSION -> . EXP
    (67) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (58) EXP -> . TERM seen_term EXP_P
    (59) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (60) EXP -> . NOT seen_not EXP pop_not
    (120) TERM -> . FACTOR seen_factor TERM_P
    (78) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) FACTOR -> . NOT seen_not FACTOR pop_not
    (80) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (81) FACTOR -> . FUNC_CALL
    (82) FACTOR -> . CLASS_INSTANCE
    (83) FACTOR -> . VAR seen_var_as_factor
    (84) FACTOR -> . CNST
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (105) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (96) CNST -> . CTE_S seen_cte_s
    (97) CNST -> . CTE_F seen_cte_f
    (98) CNST -> . CTE_I seen_cte_i
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 145
    NOT             shift and go to state 146
    OPEN_PARENTHESIS shift and go to state 143
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 151
    CTE_S           shift and go to state 152
    CTE_F           shift and go to state 153
    CTE_I           shift and go to state 154
    THIS_KWD        shift and go to state 103

    EXPRESSION                     shift and go to state 368
    EXP                            shift and go to state 141
    TERM                           shift and go to state 144
    FACTOR                         shift and go to state 147
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 148
    VAR                            shift and go to state 149
    CNST                           shift and go to state 150
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 360

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (171) empty -> .

    COMMA           shift and go to state 300
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    READABLE_LIST_P                shift and go to state 369
    empty                          shift and go to state 301

state 361

    (147) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 147 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 362

    (150) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 150 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 150 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINT_KWD       reduce using rule 150 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINTLN_KWD     reduce using rule 150 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    RETURN_KWD      reduce using rule 150 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    THIS_KWD        reduce using rule 150 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 150 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 150 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 150 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 150 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 363

    (151) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (154) seen_else_kwd -> . empty
    (171) empty -> .

    OPEN_CURLY      reduce using rule 171 (empty -> .)

    seen_else_kwd                  shift and go to state 370
    empty                          shift and go to state 371

state 364

    (152) DECISION_P -> empty .

    ID              reduce using rule 152 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 152 (DECISION_P -> empty .)
    PRINT_KWD       reduce using rule 152 (DECISION_P -> empty .)
    PRINTLN_KWD     reduce using rule 152 (DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 152 (DECISION_P -> empty .)
    THIS_KWD        reduce using rule 152 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 152 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 152 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 152 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 152 (DECISION_P -> empty .)


state 365

    (157) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 157 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 157 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 157 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 157 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 157 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 157 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 157 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 157 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 157 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 157 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 366

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (164) seen_for_end_exp -> . empty
    (171) empty -> .

    SEMI_COLON      reduce using rule 171 (empty -> .)

    seen_for_end_exp               shift and go to state 372
    empty                          shift and go to state 373

state 367

    (133) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 133 (ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 368

    (110) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (114) seen_array_access -> . empty
    (171) empty -> .

    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    seen_array_access              shift and go to state 374
    empty                          shift and go to state 298

state 369

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 24 (READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 370

    (151) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 375


state 371

    (154) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 154 (seen_else_kwd -> empty .)


state 372

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 376


state 373

    (164) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 164 (seen_for_end_exp -> empty .)


state 374

    (110) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 377


state 375

    (151) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (171) empty -> .
    (56) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (141) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (142) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (144) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) FLOW_CONTROL -> . DECISION
    (50) FLOW_CONTROL -> . REPETITION
    (138) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (139) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (140) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (155) REPETITION -> . CONDITIONAL_REP
    (156) REPETITION -> . UNCONDITIONAL_REP
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (157) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (160) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 96
    PRINT_KWD       shift and go to state 97
    PRINTLN_KWD     shift and go to state 98
    RETURN_KWD      shift and go to state 101
    THIS_KWD        shift and go to state 103
    IF_KWD          shift and go to state 104
    WHILE_KWD       shift and go to state 107
    FOR_KWD         shift and go to state 108

    STATEMENT_STAR                 shift and go to state 378
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    FLOW_CONTROL                   shift and go to state 92
    FUNC_RETURN                    shift and go to state 93
    VAR                            shift and go to state 94
    CLASS_REFERENCE                shift and go to state 95
    DECISION                       shift and go to state 99
    REPETITION                     shift and go to state 100
    ARRAY                          shift and go to state 102
    CONDITIONAL_REP                shift and go to state 105
    UNCONDITIONAL_REP              shift and go to state 106

state 376

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (51) FOR_INCR_STATEMENT -> . ASSIGN
    (52) FOR_INCR_STATEMENT -> . FUNC_CALL
    (53) FOR_INCR_STATEMENT -> . READ
    (54) FOR_INCR_STATEMENT -> . PRINT
    (55) FOR_INCR_STATEMENT -> . PRINTLN
    (56) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (141) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (142) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (144) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 83
    READ_KWD        shift and go to state 96
    PRINT_KWD       shift and go to state 97
    PRINTLN_KWD     shift and go to state 98
    THIS_KWD        shift and go to state 103

    VAR                            shift and go to state 94
    FOR_INCR_STATEMENT             shift and go to state 379
    ASSIGN                         shift and go to state 380
    FUNC_CALL                      shift and go to state 381
    READ                           shift and go to state 382
    PRINT                          shift and go to state 383
    PRINTLN                        shift and go to state 384
    CLASS_REFERENCE                shift and go to state 95
    ARRAY                          shift and go to state 102

state 377

    (110) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (110) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (111) ARRAY_P -> . empty
    (171) empty -> .

    OPEN_BRACKET    shift and go to state 342
    EQUALS          reduce using rule 171 (empty -> .)
    STAR            reduce using rule 171 (empty -> .)
    FWD_SLASH       reduce using rule 171 (empty -> .)
    PLUS            reduce using rule 171 (empty -> .)
    MINUS           reduce using rule 171 (empty -> .)
    BIGGER          reduce using rule 171 (empty -> .)
    BIGGER_EQ       reduce using rule 171 (empty -> .)
    SMALLER         reduce using rule 171 (empty -> .)
    SMALLER_EQ      reduce using rule 171 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 171 (empty -> .)
    DIFFERENT       reduce using rule 171 (empty -> .)
    AND             reduce using rule 171 (empty -> .)
    OR              reduce using rule 171 (empty -> .)
    SEMI_COLON      reduce using rule 171 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)
    COMMA           reduce using rule 171 (empty -> .)
    CLOSE_BRACKET   reduce using rule 171 (empty -> .)

    ARRAY_P                        shift and go to state 385
    empty                          shift and go to state 344

state 378

    (151) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 386


state 379

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (162) seen_for_incr_exp -> . empty
    (171) empty -> .

    CLOSE_PARENTHESIS reduce using rule 171 (empty -> .)

    seen_for_incr_exp              shift and go to state 387
    empty                          shift and go to state 388

state 380

    (51) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 51 (FOR_INCR_STATEMENT -> ASSIGN .)


state 381

    (52) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 52 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 382

    (53) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 53 (FOR_INCR_STATEMENT -> READ .)


state 383

    (54) FOR_INCR_STATEMENT -> PRINT .

    CLOSE_PARENTHESIS reduce using rule 54 (FOR_INCR_STATEMENT -> PRINT .)


state 384

    (55) FOR_INCR_STATEMENT -> PRINTLN .

    CLOSE_PARENTHESIS reduce using rule 55 (FOR_INCR_STATEMENT -> PRINTLN .)


state 385

    (110) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DIFFERENT       reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 110 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 386

    (151) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 151 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 151 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 151 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 151 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 151 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 151 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 151 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 151 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 151 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 151 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 387

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 389


state 388

    (162) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 162 (seen_for_incr_exp -> empty .)


state 389

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 390


state 390

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . FLOW_CONTROL
    (48) STATEMENT -> . FUNC_RETURN
    (171) empty -> .
    (56) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (126) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (127) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (141) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (142) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (144) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (49) FLOW_CONTROL -> . DECISION
    (50) FLOW_CONTROL -> . REPETITION
    (138) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (139) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (140) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (102) VAR -> . ID
    (103) VAR -> . ARRAY
    (104) VAR -> . CLASS_REFERENCE VAR
    (99) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (100) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (150) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (155) REPETITION -> . CONDITIONAL_REP
    (156) REPETITION -> . UNCONDITIONAL_REP
    (109) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (157) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (160) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 171 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 96
    PRINT_KWD       shift and go to state 97
    PRINTLN_KWD     shift and go to state 98
    RETURN_KWD      shift and go to state 101
    THIS_KWD        shift and go to state 103
    IF_KWD          shift and go to state 104
    WHILE_KWD       shift and go to state 107
    FOR_KWD         shift and go to state 108

    VAR                            shift and go to state 94
    STATEMENT_STAR                 shift and go to state 391
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    FLOW_CONTROL                   shift and go to state 92
    FUNC_RETURN                    shift and go to state 93
    CLASS_REFERENCE                shift and go to state 95
    DECISION                       shift and go to state 99
    REPETITION                     shift and go to state 100
    ARRAY                          shift and go to state 102
    CONDITIONAL_REP                shift and go to state 105
    UNCONDITIONAL_REP              shift and go to state 106

state 391

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 392


state 392

    (160) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 160 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 160 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 160 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 160 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 160 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 160 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 160 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 160 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 160 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 160 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLASS_KWD in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 14 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SEMI_COLON in state 140 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (CLASS_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 217 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 217
WARNING: reduce/reduce conflict in state 257 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 257
WARNING: reduce/reduce conflict in state 276 resolved using rule (pop_unary_minus -> empty)
WARNING: rejected rule (seen_factor -> empty) in state 276
WARNING: reduce/reduce conflict in state 280 resolved using rule (pop_not -> empty)
WARNING: rejected rule (seen_factor -> empty) in state 280
WARNING: reduce/reduce conflict in state 325 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 325
WARNING: reduce/reduce conflict in state 339 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 339
