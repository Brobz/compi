Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     seen_program_id -> empty
Rule 3     seen_main_kwd -> empty
Rule 4     CLASS_STAR -> CLASS CLASS_STAR
Rule 5     CLASS_STAR -> empty
Rule 6     CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
Rule 7     CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 8     VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 9     VAR_LIST_STAR -> empty
Rule 10    VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON
Rule 11    ID_LIST -> ID ID_LIST_P
Rule 12    ID_LIST_P -> COMMA ID ID_LIST_P
Rule 13    ID_LIST_P -> empty
Rule 14    READABLE_LIST -> ID seen_readable READABLE_LIST_P
Rule 15    READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P
Rule 16    READABLE_LIST_P -> empty
Rule 17    seen_readable -> empty
Rule 18    GLOBAL_VAR -> VAR_LIST_STAR
Rule 19    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 20    FUNC_DEF_STAR -> empty
Rule 21    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 22    seen_func_id -> empty
Rule 23    seen_func_params -> empty
Rule 24    seen_func_vars -> empty
Rule 25    FUNC_PARAM -> VAR FUNC_PARAM_P
Rule 26    FUNC_PARAM -> empty
Rule 27    FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P
Rule 28    FUNC_PARAM_P -> empty
Rule 29    VAR -> ID COLON TYPE
Rule 30    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 31    FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
Rule 32    FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
Rule 33    FUNC_STATEMENT_STAR -> READ SEMI_COLON FUNC_STATEMENT_STAR
Rule 34    FUNC_STATEMENT_STAR -> WRITE SEMI_COLON FUNC_STATEMENT_STAR
Rule 35    FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
Rule 36    FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR
Rule 37    FUNC_STATEMENT_STAR -> empty
Rule 38    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 39    STATEMENT_STAR -> empty
Rule 40    STATEMENT -> ASSIGN SEMI_COLON
Rule 41    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 42    STATEMENT -> READ SEMI_COLON
Rule 43    STATEMENT -> WRITE SEMI_COLON
Rule 44    STATEMENT -> FLOW_CONTROL
Rule 45    FLOW_CONTROL -> DECISION
Rule 46    FLOW_CONTROL -> REPETITION
Rule 47    FUNC_FLOW_CONTROL -> FUNC_DECISION
Rule 48    FUNC_FLOW_CONTROL -> FUNC_REPETITION
Rule 49    FOR_INCR_STATEMENT -> ASSIGN
Rule 50    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 51    FOR_INCR_STATEMENT -> READ
Rule 52    FOR_INCR_STATEMENT -> WRITE
Rule 53    ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION
Rule 54    seen_equals -> empty
Rule 55    EXP -> TERM seen_term EXP_P
Rule 56    EXP -> NOT seen_not EXP pop_not
Rule 57    seen_term -> <empty>
Rule 58    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 59    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 60    EXP_P -> empty
Rule 61    seen_term_op -> <empty>
Rule 62    EXPRESSION -> EXP
Rule 63    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 64    seen_comp -> empty
Rule 65    seen_comp_op -> empty
Rule 66    COMP -> BIGGER
Rule 67    COMP -> SMALLER
Rule 68    COMP -> DOUBLE_EQUALS
Rule 69    COMP -> DIFFERENT
Rule 70    COMP -> AND
Rule 71    COMP -> OR
Rule 72    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 73    FACTOR -> NOT seen_not FACTOR pop_not
Rule 74    FACTOR -> FUNC_CALL
Rule 75    FACTOR -> ID seen_id
Rule 76    FACTOR -> CNST
Rule 77    pop_not -> empty
Rule 78    seen_not -> empty
Rule 79    seen_open_parenthesis -> empty
Rule 80    seen_close_parenthesis -> empty
Rule 81    seen_id -> <empty>
Rule 82    seen_cte_i -> <empty>
Rule 83    seen_cte_f -> <empty>
Rule 84    seen_cte_s -> <empty>
Rule 85    CNST -> CTE_S seen_cte_s
Rule 86    CNST -> CTE_F seen_cte_f
Rule 87    CNST -> CTE_I seen_cte_i
Rule 88    TERM -> FACTOR seen_factor TERM_P
Rule 89    TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 90    TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 91    TERM_P -> empty
Rule 92    seen_factor -> <empty>
Rule 93    seen_factor_op -> <empty>
Rule 94    FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 95    seen_func_call_id -> empty
Rule 96    ARG_LIST -> ID seen_arg ARG_LIST_P
Rule 97    ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 98    ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 99    ARG_LIST -> empty
Rule 100   ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P
Rule 101   ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 102   ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 103   ARG_LIST_P -> empty
Rule 104   seen_arg -> <empty>
Rule 105   FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 106   FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 107   FUNC_RETURN -> RETURN_KWD SEMI_COLON
Rule 108   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 109   WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 110   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 111   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 112   PRINTABLE_P -> empty
Rule 113   seen_printable -> empty
Rule 114   FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
Rule 115   FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 116   FUNC_DECISION_P -> empty
Rule 117   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 118   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 119   DECISION_P -> empty
Rule 120   seen_if_kwd -> empty
Rule 121   seen_else_kwd -> empty
Rule 122   FUNC_REPETITION -> FUNC_CONDITIONAL_REP
Rule 123   FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP
Rule 124   FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 125   FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 126   REPETITION -> CONDITIONAL_REP
Rule 127   REPETITION -> UNCONDITIONAL_REP
Rule 128   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 129   seen_while_kwd -> empty
Rule 130   seen_while_exp -> empty
Rule 131   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 132   seen_for_kwd -> empty
Rule 133   seen_for_incr_exp -> empty
Rule 134   seen_for_start_exp -> empty
Rule 135   seen_for_end_exp -> empty
Rule 136   TYPE -> TYPE_I
Rule 137   TYPE -> TYPE_F
Rule 138   TYPE -> TYPE_S
Rule 139   TYPE -> TYPE_B
Rule 140   TYPE -> TYPE_V
Rule 141   empty -> <empty>

Terminals, with rules where they appear

AND                  : 70
ATTR_KWD             : 7
BIGGER               : 6 66
CLASS_KWD            : 6
CLOSE_CURLY          : 1 6 7 21 30 114 115 117 118 124 125 128 131
CLOSE_PARENTHESIS    : 1 21 72 94 108 109 114 117 124 125 128 131
COLON                : 10 29
COMMA                : 12 15 27 100 101 102 111
CTE_F                : 86
CTE_I                : 87
CTE_S                : 85
DERIVES_KWD          : 6
DIFFERENT            : 69
DOUBLE_EQUALS        : 68
ELSE_KWD             : 115 118
EQUALS               : 53 125 131
FOR_KWD              : 125 131
FWD_SLASH            : 90
ID                   : 1 6 11 12 14 15 21 29 53 75 94 96 100 125 131
IF_KWD               : 114 117
MAIN_KWD             : 1
MINUS                : 59
NOT                  : 56 73
OPEN_CURLY           : 1 6 7 21 30 114 115 117 118 124 125 128 131
OPEN_PARENTHESIS     : 1 21 72 94 108 109 114 117 124 125 128 131
OR                   : 71
PLUS                 : 58
PROGRAM_KWD          : 1
READ_KWD             : 108
RETURN_KWD           : 105 106 107
SEMI_COLON           : 1 10 31 32 33 34 40 41 42 43 105 106 107 125 125 131 131
SMALLER              : 6 67
STAR                 : 89
TYPE_B               : 139
TYPE_F               : 137
TYPE_I               : 136
TYPE_S               : 138
TYPE_V               : 140
VARS_KWD             : 30
WHILE_KWD            : 124 128
WRITE_KWD            : 109
error                : 

Nonterminals, with rules where they appear

ARG_LIST             : 94
ARG_LIST_P           : 96 97 98 100 101 102
ASSIGN               : 31 40 49
CLASS                : 4
CLASS_ATTR           : 6
CLASS_STAR           : 1 4
CNST                 : 76
COMP                 : 63
CONDITIONAL_REP      : 126
DECISION             : 45
DECISION_P           : 117
EXP                  : 56 62 63
EXPRESSION           : 53 63 72 97 101 105 110 111 114 117 124 125 125 128 131 131
EXP_P                : 55 58 59
FACTOR               : 73 88 89 90
FLOW_CONTROL         : 44
FOR_INCR_STATEMENT   : 125 131
FUNC_CALL            : 32 41 50 74 98 102 106
FUNC_CONDITIONAL_REP : 122
FUNC_DECISION        : 47
FUNC_DECISION_P      : 114
FUNC_DEF             : 19
FUNC_DEF_STAR        : 1 6 19
FUNC_FLOW_CONTROL    : 35
FUNC_PARAM           : 21
FUNC_PARAM_P         : 25 27
FUNC_REPETITION      : 48
FUNC_RETURN          : 36
FUNC_STATEMENT_STAR  : 21 31 32 33 34 35 36 114 115 124 125
FUNC_UNCONDITIONAL_REP : 123
GLOBAL_VAR           : 1
ID_LIST              : 10
ID_LIST_P            : 11 12
PRINTABLE            : 109
PRINTABLE_P          : 110 111
PROGRAM              : 0
READ                 : 33 42 51
READABLE_LIST        : 108
READABLE_LIST_P      : 14 15
REPETITION           : 46
STATEMENT            : 38
STATEMENT_STAR       : 1 38 117 118 128 131
TERM                 : 55 58 59
TERM_P               : 88 89 90
TYPE                 : 6 10 21 29
UNCONDITIONAL_REP    : 127
VAR                  : 25 27
VARS                 : 21
VAR_LIST             : 8
VAR_LIST_STAR        : 7 8 18 30
WRITE                : 34 43 52
empty                : 2 3 5 9 13 16 17 20 22 23 24 26 28 37 39 54 60 64 65 77 78 79 80 91 95 99 103 112 113 116 119 120 121 129 130 132 133 134 135
pop_not              : 56 73
seen_arg             : 96 97 98 100 101 102
seen_close_parenthesis : 72
seen_comp            : 63
seen_comp_op         : 63
seen_cte_f           : 86
seen_cte_i           : 87
seen_cte_s           : 85
seen_else_kwd        : 115 118
seen_equals          : 53
seen_factor          : 88 89 90
seen_factor_op       : 89 90
seen_for_end_exp     : 125 131
seen_for_incr_exp    : 125 131
seen_for_kwd         : 125 131
seen_for_start_exp   : 125 131
seen_func_call_id    : 94
seen_func_id         : 21
seen_func_params     : 21
seen_func_vars       : 21
seen_id              : 53 75
seen_if_kwd          : 114 117
seen_main_kwd        : 1
seen_not             : 56 73
seen_open_parenthesis : 72
seen_printable       : 110 111
seen_program_id      : 1
seen_readable        : 14 15
seen_term            : 55 58 59
seen_term_op         : 58 59
seen_while_exp       : 124 128
seen_while_kwd       : 124 128

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) seen_program_id -> . empty
    (141) empty -> .

    SEMI_COLON      reduce using rule 141 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (2) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 2 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (4) CLASS_STAR -> . CLASS CLASS_STAR
    (5) CLASS_STAR -> . empty
    (6) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (141) empty -> .

    CLASS_KWD       shift and go to state 10
    ID              reduce using rule 141 (empty -> .)
    TYPE_I          reduce using rule 141 (empty -> .)
    TYPE_F          reduce using rule 141 (empty -> .)
    TYPE_S          reduce using rule 141 (empty -> .)
    TYPE_B          reduce using rule 141 (empty -> .)
    TYPE_V          reduce using rule 141 (empty -> .)
    MAIN_KWD        reduce using rule 141 (empty -> .)

    CLASS_STAR                     shift and go to state 7
    CLASS                          shift and go to state 8
    empty                          shift and go to state 9

state 7

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR . GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (18) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (141) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    TYPE_I          reduce using rule 141 (empty -> .)
    TYPE_F          reduce using rule 141 (empty -> .)
    TYPE_S          reduce using rule 141 (empty -> .)
    TYPE_B          reduce using rule 141 (empty -> .)
    TYPE_V          reduce using rule 141 (empty -> .)
    MAIN_KWD        reduce using rule 141 (empty -> .)
    ID              shift and go to state 11

    GLOBAL_VAR                     shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 8

    (4) CLASS_STAR -> CLASS . CLASS_STAR
    (4) CLASS_STAR -> . CLASS CLASS_STAR
    (5) CLASS_STAR -> . empty
    (6) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (141) empty -> .

    CLASS_KWD       shift and go to state 10
    ID              reduce using rule 141 (empty -> .)
    TYPE_I          reduce using rule 141 (empty -> .)
    TYPE_F          reduce using rule 141 (empty -> .)
    TYPE_S          reduce using rule 141 (empty -> .)
    TYPE_B          reduce using rule 141 (empty -> .)
    TYPE_V          reduce using rule 141 (empty -> .)
    MAIN_KWD        reduce using rule 141 (empty -> .)

    CLASS                          shift and go to state 8
    CLASS_STAR                     shift and go to state 17
    empty                          shift and go to state 9

state 9

    (5) CLASS_STAR -> empty .

    ID              reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 5 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 5 (CLASS_STAR -> empty .)


state 10

    (6) CLASS -> CLASS_KWD . ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 18


state 11

    (11) ID_LIST -> ID . ID_LIST_P
    (12) ID_LIST_P -> . COMMA ID ID_LIST_P
    (13) ID_LIST_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 20
    COLON           reduce using rule 141 (empty -> .)

    ID_LIST_P                      shift and go to state 19
    empty                          shift and go to state 21

state 12

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR . FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (141) empty -> .
    (136) TYPE -> . TYPE_I
    (137) TYPE -> . TYPE_F
    (138) TYPE -> . TYPE_S
    (139) TYPE -> . TYPE_B
    (140) TYPE -> . TYPE_V

    MAIN_KWD        reduce using rule 141 (empty -> .)
    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    FUNC_DEF_STAR                  shift and go to state 22
    FUNC_DEF                       shift and go to state 23
    empty                          shift and go to state 24
    TYPE                           shift and go to state 25

state 13

    (18) GLOBAL_VAR -> VAR_LIST_STAR .

    TYPE_I          reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_F          reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_S          reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_B          reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_V          reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (141) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    TYPE_I          reduce using rule 141 (empty -> .)
    TYPE_F          reduce using rule 141 (empty -> .)
    TYPE_S          reduce using rule 141 (empty -> .)
    TYPE_B          reduce using rule 141 (empty -> .)
    TYPE_V          reduce using rule 141 (empty -> .)
    MAIN_KWD        reduce using rule 141 (empty -> .)
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST                       shift and go to state 14
    VAR_LIST_STAR                  shift and go to state 31
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 15

    (9) VAR_LIST_STAR -> empty .

    TYPE_I          reduce using rule 9 (VAR_LIST_STAR -> empty .)
    TYPE_F          reduce using rule 9 (VAR_LIST_STAR -> empty .)
    TYPE_S          reduce using rule 9 (VAR_LIST_STAR -> empty .)
    TYPE_B          reduce using rule 9 (VAR_LIST_STAR -> empty .)
    TYPE_V          reduce using rule 9 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 9 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 9 (VAR_LIST_STAR -> empty .)


state 16

    (10) VAR_LIST -> ID_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 32


state 17

    (4) CLASS_STAR -> CLASS CLASS_STAR .

    ID              reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_I          reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_F          reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_S          reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_B          reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_V          reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)


state 18

    (6) CLASS -> CLASS_KWD ID . SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    SMALLER         shift and go to state 33


state 19

    (11) ID_LIST -> ID ID_LIST_P .

    COLON           reduce using rule 11 (ID_LIST -> ID ID_LIST_P .)


state 20

    (12) ID_LIST_P -> COMMA . ID ID_LIST_P

    ID              shift and go to state 34


state 21

    (13) ID_LIST_P -> empty .

    COLON           reduce using rule 13 (ID_LIST_P -> empty .)


state 22

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 35


state 23

    (19) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (141) empty -> .
    (136) TYPE -> . TYPE_I
    (137) TYPE -> . TYPE_F
    (138) TYPE -> . TYPE_S
    (139) TYPE -> . TYPE_B
    (140) TYPE -> . TYPE_V

    MAIN_KWD        reduce using rule 141 (empty -> .)
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    FUNC_DEF                       shift and go to state 23
    FUNC_DEF_STAR                  shift and go to state 36
    empty                          shift and go to state 24
    TYPE                           shift and go to state 25

state 24

    (20) FUNC_DEF_STAR -> empty .

    MAIN_KWD        reduce using rule 20 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 20 (FUNC_DEF_STAR -> empty .)


state 25

    (21) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 37


state 26

    (136) TYPE -> TYPE_I .

    ID              reduce using rule 136 (TYPE -> TYPE_I .)
    SEMI_COLON      reduce using rule 136 (TYPE -> TYPE_I .)
    BIGGER          reduce using rule 136 (TYPE -> TYPE_I .)
    COMMA           reduce using rule 136 (TYPE -> TYPE_I .)
    CLOSE_PARENTHESIS reduce using rule 136 (TYPE -> TYPE_I .)


state 27

    (137) TYPE -> TYPE_F .

    ID              reduce using rule 137 (TYPE -> TYPE_F .)
    SEMI_COLON      reduce using rule 137 (TYPE -> TYPE_F .)
    BIGGER          reduce using rule 137 (TYPE -> TYPE_F .)
    COMMA           reduce using rule 137 (TYPE -> TYPE_F .)
    CLOSE_PARENTHESIS reduce using rule 137 (TYPE -> TYPE_F .)


state 28

    (138) TYPE -> TYPE_S .

    ID              reduce using rule 138 (TYPE -> TYPE_S .)
    SEMI_COLON      reduce using rule 138 (TYPE -> TYPE_S .)
    BIGGER          reduce using rule 138 (TYPE -> TYPE_S .)
    COMMA           reduce using rule 138 (TYPE -> TYPE_S .)
    CLOSE_PARENTHESIS reduce using rule 138 (TYPE -> TYPE_S .)


state 29

    (139) TYPE -> TYPE_B .

    ID              reduce using rule 139 (TYPE -> TYPE_B .)
    SEMI_COLON      reduce using rule 139 (TYPE -> TYPE_B .)
    BIGGER          reduce using rule 139 (TYPE -> TYPE_B .)
    COMMA           reduce using rule 139 (TYPE -> TYPE_B .)
    CLOSE_PARENTHESIS reduce using rule 139 (TYPE -> TYPE_B .)


state 30

    (140) TYPE -> TYPE_V .

    ID              reduce using rule 140 (TYPE -> TYPE_V .)
    SEMI_COLON      reduce using rule 140 (TYPE -> TYPE_V .)
    BIGGER          reduce using rule 140 (TYPE -> TYPE_V .)
    COMMA           reduce using rule 140 (TYPE -> TYPE_V .)
    CLOSE_PARENTHESIS reduce using rule 140 (TYPE -> TYPE_V .)


state 31

    (8) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    TYPE_I          reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_F          reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_S          reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_B          reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_V          reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 32

    (10) VAR_LIST -> ID_LIST COLON . TYPE SEMI_COLON
    (136) TYPE -> . TYPE_I
    (137) TYPE -> . TYPE_F
    (138) TYPE -> . TYPE_S
    (139) TYPE -> . TYPE_B
    (140) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    TYPE                           shift and go to state 38

state 33

    (6) CLASS -> CLASS_KWD ID SMALLER . DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    DERIVES_KWD     shift and go to state 39


state 34

    (12) ID_LIST_P -> COMMA ID . ID_LIST_P
    (12) ID_LIST_P -> . COMMA ID ID_LIST_P
    (13) ID_LIST_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 20
    COLON           reduce using rule 141 (empty -> .)

    ID_LIST_P                      shift and go to state 40
    empty                          shift and go to state 21

state 35

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 41


state 36

    (19) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    MAIN_KWD        reduce using rule 19 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 19 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 37

    (21) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (22) seen_func_id -> . empty
    (141) empty -> .

    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_func_id                   shift and go to state 42
    empty                          shift and go to state 43

state 38

    (10) VAR_LIST -> ID_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 44


state 39

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD . TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (136) TYPE -> . TYPE_I
    (137) TYPE -> . TYPE_F
    (138) TYPE -> . TYPE_S
    (139) TYPE -> . TYPE_B
    (140) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    TYPE                           shift and go to state 45

state 40

    (12) ID_LIST_P -> COMMA ID ID_LIST_P .

    COLON           reduce using rule 12 (ID_LIST_P -> COMMA ID ID_LIST_P .)


state 41

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 46


state 42

    (21) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 47


state 43

    (22) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 22 (seen_func_id -> empty .)


state 44

    (10) VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE_I          reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE_F          reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE_S          reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE_B          reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE_V          reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)


state 45

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE . BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    BIGGER          shift and go to state 48


state 46

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 49


state 47

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (25) FUNC_PARAM -> . VAR FUNC_PARAM_P
    (26) FUNC_PARAM -> . empty
    (29) VAR -> . ID COLON TYPE
    (141) empty -> .

    ID              shift and go to state 50
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    FUNC_PARAM                     shift and go to state 51
    VAR                            shift and go to state 52
    empty                          shift and go to state 53

state 48

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER . OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 54


state 49

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (3) seen_main_kwd -> . empty
    (141) empty -> .

    ID              reduce using rule 141 (empty -> .)
    READ_KWD        reduce using rule 141 (empty -> .)
    WRITE_KWD       reduce using rule 141 (empty -> .)
    IF_KWD          reduce using rule 141 (empty -> .)
    WHILE_KWD       reduce using rule 141 (empty -> .)
    FOR_KWD         reduce using rule 141 (empty -> .)
    CLOSE_CURLY     reduce using rule 141 (empty -> .)

    seen_main_kwd                  shift and go to state 55
    empty                          shift and go to state 56

state 50

    (29) VAR -> ID . COLON TYPE

    COLON           shift and go to state 57


state 51

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 58


state 52

    (25) FUNC_PARAM -> VAR . FUNC_PARAM_P
    (27) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (28) FUNC_PARAM_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 60
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 59
    empty                          shift and go to state 61

state 53

    (26) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 26 (FUNC_PARAM -> empty .)


state 54

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY . CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (7) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 63

    CLASS_ATTR                     shift and go to state 62

state 55

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (141) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT_STAR                 shift and go to state 65
    STATEMENT                      shift and go to state 66
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 56

    (3) seen_main_kwd -> empty .

    ID              reduce using rule 3 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 3 (seen_main_kwd -> empty .)
    WRITE_KWD       reduce using rule 3 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 3 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 3 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 3 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 3 (seen_main_kwd -> empty .)


state 57

    (29) VAR -> ID COLON . TYPE
    (136) TYPE -> . TYPE_I
    (137) TYPE -> . TYPE_F
    (138) TYPE -> . TYPE_S
    (139) TYPE -> . TYPE_B
    (140) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    TYPE                           shift and go to state 82

state 58

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (23) seen_func_params -> . empty
    (141) empty -> .

    VARS_KWD        reduce using rule 141 (empty -> .)

    seen_func_params               shift and go to state 83
    empty                          shift and go to state 84

state 59

    (25) FUNC_PARAM -> VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 25 (FUNC_PARAM -> VAR FUNC_PARAM_P .)


state 60

    (27) FUNC_PARAM_P -> COMMA . VAR FUNC_PARAM_P
    (29) VAR -> . ID COLON TYPE

    ID              shift and go to state 50

    VAR                            shift and go to state 85

state 61

    (28) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 28 (FUNC_PARAM_P -> empty .)


state 62

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR . FUNC_DEF_STAR CLOSE_CURLY
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (141) empty -> .
    (136) TYPE -> . TYPE_I
    (137) TYPE -> . TYPE_F
    (138) TYPE -> . TYPE_S
    (139) TYPE -> . TYPE_B
    (140) TYPE -> . TYPE_V

    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    TYPE                           shift and go to state 25
    FUNC_DEF_STAR                  shift and go to state 86
    FUNC_DEF                       shift and go to state 23
    empty                          shift and go to state 24

state 63

    (7) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 87


state 64

    (53) ASSIGN -> ID . seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (81) seen_id -> .
    (95) seen_func_call_id -> . empty
    (141) empty -> .

    EQUALS          reduce using rule 81 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_id                        shift and go to state 88
    seen_func_call_id              shift and go to state 89
    empty                          shift and go to state 90

state 65

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 91


state 66

    (38) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (141) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT                      shift and go to state 66
    STATEMENT_STAR                 shift and go to state 92
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 67

    (39) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 39 (STATEMENT_STAR -> empty .)


state 68

    (40) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 93


state 69

    (41) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 94


state 70

    (42) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 95


state 71

    (43) STATEMENT -> WRITE . SEMI_COLON

    SEMI_COLON      shift and go to state 96


state 72

    (44) STATEMENT -> FLOW_CONTROL .

    ID              reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    READ_KWD        reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    WRITE_KWD       reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    IF_KWD          reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    WHILE_KWD       reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    FOR_KWD         reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    CLOSE_CURLY     reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)


state 73

    (108) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 97


state 74

    (109) WRITE -> WRITE_KWD . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 98


state 75

    (45) FLOW_CONTROL -> DECISION .

    ID              reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    READ_KWD        reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    WRITE_KWD       reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    IF_KWD          reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    WHILE_KWD       reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    FOR_KWD         reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    CLOSE_CURLY     reduce using rule 45 (FLOW_CONTROL -> DECISION .)


state 76

    (46) FLOW_CONTROL -> REPETITION .

    ID              reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    READ_KWD        reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    WRITE_KWD       reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    IF_KWD          reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    WHILE_KWD       reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    FOR_KWD         reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    CLOSE_CURLY     reduce using rule 46 (FLOW_CONTROL -> REPETITION .)


state 77

    (117) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 99


state 78

    (126) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 126 (REPETITION -> CONDITIONAL_REP .)


state 79

    (127) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 127 (REPETITION -> UNCONDITIONAL_REP .)


state 80

    (128) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (129) seen_while_kwd -> . empty
    (141) empty -> .

    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_while_kwd                 shift and go to state 100
    empty                          shift and go to state 101

state 81

    (131) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 102


state 82

    (29) VAR -> ID COLON TYPE .

    COMMA           reduce using rule 29 (VAR -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 29 (VAR -> ID COLON TYPE .)


state 83

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (30) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 104

    VARS                           shift and go to state 103

state 84

    (23) seen_func_params -> empty .

    VARS_KWD        reduce using rule 23 (seen_func_params -> empty .)


state 85

    (27) FUNC_PARAM_P -> COMMA VAR . FUNC_PARAM_P
    (27) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (28) FUNC_PARAM_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 60
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 105
    empty                          shift and go to state 61

state 86

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 106


state 87

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (141) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST_STAR                  shift and go to state 107
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 88

    (53) ASSIGN -> ID seen_id . EQUALS seen_equals EXPRESSION

    EQUALS          shift and go to state 108


state 89

    (94) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 109


state 90

    (95) seen_func_call_id -> empty .

    OPEN_PARENTHESIS reduce using rule 95 (seen_func_call_id -> empty .)


state 91

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 92

    (38) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 38 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 93

    (40) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    WRITE_KWD       reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)


state 94

    (41) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 95

    (42) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    WRITE_KWD       reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)


state 96

    (43) STATEMENT -> WRITE SEMI_COLON .

    ID              reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    READ_KWD        reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    WRITE_KWD       reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    IF_KWD          reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    WHILE_KWD       reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    FOR_KWD         reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)


state 97

    (108) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (14) READABLE_LIST -> . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 111

    READABLE_LIST                  shift and go to state 110

state 98

    (109) WRITE -> WRITE_KWD OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (110) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    PRINTABLE                      shift and go to state 113
    EXPRESSION                     shift and go to state 114
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 99

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 125
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 100

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 126


state 101

    (129) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 129 (seen_while_kwd -> empty .)


state 102

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 127


state 103

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (24) seen_func_vars -> . empty
    (141) empty -> .

    OPEN_CURLY      reduce using rule 141 (empty -> .)

    seen_func_vars                 shift and go to state 128
    empty                          shift and go to state 129

state 104

    (30) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 130


state 105

    (27) FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 27 (FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .)


state 106

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_I          reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)


state 107

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 131


state 108

    (53) ASSIGN -> ID seen_id EQUALS . seen_equals EXPRESSION
    (54) seen_equals -> . empty
    (141) empty -> .

    NOT             reduce using rule 141 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    CTE_S           reduce using rule 141 (empty -> .)
    CTE_F           reduce using rule 141 (empty -> .)
    CTE_I           reduce using rule 141 (empty -> .)

    seen_equals                    shift and go to state 132
    empty                          shift and go to state 133

state 109

    (94) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (96) ARG_LIST -> . ID seen_arg ARG_LIST_P
    (97) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (98) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (99) ARG_LIST -> . empty
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (141) empty -> .
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 134
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)
    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    ARG_LIST                       shift and go to state 135
    EXPRESSION                     shift and go to state 136
    FUNC_CALL                      shift and go to state 137
    empty                          shift and go to state 138
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    CNST                           shift and go to state 121

state 110

    (108) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 139


state 111

    (14) READABLE_LIST -> ID . seen_readable READABLE_LIST_P
    (17) seen_readable -> . empty
    (141) empty -> .

    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_readable                  shift and go to state 140
    empty                          shift and go to state 141

state 112

    (72) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (79) seen_open_parenthesis -> . empty
    (141) empty -> .

    NOT             reduce using rule 141 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    CTE_S           reduce using rule 141 (empty -> .)
    CTE_F           reduce using rule 141 (empty -> .)
    CTE_I           reduce using rule 141 (empty -> .)

    seen_open_parenthesis          shift and go to state 142
    empty                          shift and go to state 143

state 113

    (109) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 144


state 114

    (110) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (113) seen_printable -> . empty
    (141) empty -> .

    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_printable                 shift and go to state 145
    empty                          shift and go to state 146

state 115

    (62) EXPRESSION -> EXP .
    (63) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (66) COMP -> . BIGGER
    (67) COMP -> . SMALLER
    (68) COMP -> . DOUBLE_EQUALS
    (69) COMP -> . DIFFERENT
    (70) COMP -> . AND
    (71) COMP -> . OR

    COMMA           reduce using rule 62 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 62 (EXPRESSION -> EXP .)
    SEMI_COLON      reduce using rule 62 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 148
    SMALLER         shift and go to state 149
    DOUBLE_EQUALS   shift and go to state 150
    DIFFERENT       shift and go to state 151
    AND             shift and go to state 152
    OR              shift and go to state 153

    COMP                           shift and go to state 147

state 116

    (55) EXP -> TERM . seen_term EXP_P
    (57) seen_term -> .

    PLUS            reduce using rule 57 (seen_term -> .)
    MINUS           reduce using rule 57 (seen_term -> .)
    BIGGER          reduce using rule 57 (seen_term -> .)
    SMALLER         reduce using rule 57 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 57 (seen_term -> .)
    DIFFERENT       reduce using rule 57 (seen_term -> .)
    AND             reduce using rule 57 (seen_term -> .)
    OR              reduce using rule 57 (seen_term -> .)
    COMMA           reduce using rule 57 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 57 (seen_term -> .)
    SEMI_COLON      reduce using rule 57 (seen_term -> .)

    seen_term                      shift and go to state 154

state 117

    (56) EXP -> NOT . seen_not EXP pop_not
    (73) FACTOR -> NOT . seen_not FACTOR pop_not
    (78) seen_not -> . empty
    (141) empty -> .

    NOT             reduce using rule 141 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    CTE_S           reduce using rule 141 (empty -> .)
    CTE_F           reduce using rule 141 (empty -> .)
    CTE_I           reduce using rule 141 (empty -> .)

    seen_not                       shift and go to state 155
    empty                          shift and go to state 156

state 118

    (88) TERM -> FACTOR . seen_factor TERM_P
    (92) seen_factor -> .

    STAR            reduce using rule 92 (seen_factor -> .)
    FWD_SLASH       reduce using rule 92 (seen_factor -> .)
    PLUS            reduce using rule 92 (seen_factor -> .)
    MINUS           reduce using rule 92 (seen_factor -> .)
    BIGGER          reduce using rule 92 (seen_factor -> .)
    SMALLER         reduce using rule 92 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 92 (seen_factor -> .)
    DIFFERENT       reduce using rule 92 (seen_factor -> .)
    AND             reduce using rule 92 (seen_factor -> .)
    OR              reduce using rule 92 (seen_factor -> .)
    COMMA           reduce using rule 92 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 92 (seen_factor -> .)
    SEMI_COLON      reduce using rule 92 (seen_factor -> .)

    seen_factor                    shift and go to state 157

state 119

    (74) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 74 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 74 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 74 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 74 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 74 (FACTOR -> FUNC_CALL .)


state 120

    (75) FACTOR -> ID . seen_id
    (94) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (81) seen_id -> .
    (95) seen_func_call_id -> . empty
    (141) empty -> .

    STAR            reduce using rule 81 (seen_id -> .)
    FWD_SLASH       reduce using rule 81 (seen_id -> .)
    PLUS            reduce using rule 81 (seen_id -> .)
    MINUS           reduce using rule 81 (seen_id -> .)
    BIGGER          reduce using rule 81 (seen_id -> .)
    SMALLER         reduce using rule 81 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 81 (seen_id -> .)
    DIFFERENT       reduce using rule 81 (seen_id -> .)
    AND             reduce using rule 81 (seen_id -> .)
    OR              reduce using rule 81 (seen_id -> .)
    COMMA           reduce using rule 81 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 81 (seen_id -> .)
    SEMI_COLON      reduce using rule 81 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_id                        shift and go to state 158
    seen_func_call_id              shift and go to state 89
    empty                          shift and go to state 90

state 121

    (76) FACTOR -> CNST .

    STAR            reduce using rule 76 (FACTOR -> CNST .)
    FWD_SLASH       reduce using rule 76 (FACTOR -> CNST .)
    PLUS            reduce using rule 76 (FACTOR -> CNST .)
    MINUS           reduce using rule 76 (FACTOR -> CNST .)
    BIGGER          reduce using rule 76 (FACTOR -> CNST .)
    SMALLER         reduce using rule 76 (FACTOR -> CNST .)
    DOUBLE_EQUALS   reduce using rule 76 (FACTOR -> CNST .)
    DIFFERENT       reduce using rule 76 (FACTOR -> CNST .)
    AND             reduce using rule 76 (FACTOR -> CNST .)
    OR              reduce using rule 76 (FACTOR -> CNST .)
    COMMA           reduce using rule 76 (FACTOR -> CNST .)
    CLOSE_PARENTHESIS reduce using rule 76 (FACTOR -> CNST .)
    SEMI_COLON      reduce using rule 76 (FACTOR -> CNST .)


state 122

    (85) CNST -> CTE_S . seen_cte_s
    (84) seen_cte_s -> .

    STAR            reduce using rule 84 (seen_cte_s -> .)
    FWD_SLASH       reduce using rule 84 (seen_cte_s -> .)
    PLUS            reduce using rule 84 (seen_cte_s -> .)
    MINUS           reduce using rule 84 (seen_cte_s -> .)
    BIGGER          reduce using rule 84 (seen_cte_s -> .)
    SMALLER         reduce using rule 84 (seen_cte_s -> .)
    DOUBLE_EQUALS   reduce using rule 84 (seen_cte_s -> .)
    DIFFERENT       reduce using rule 84 (seen_cte_s -> .)
    AND             reduce using rule 84 (seen_cte_s -> .)
    OR              reduce using rule 84 (seen_cte_s -> .)
    COMMA           reduce using rule 84 (seen_cte_s -> .)
    CLOSE_PARENTHESIS reduce using rule 84 (seen_cte_s -> .)
    SEMI_COLON      reduce using rule 84 (seen_cte_s -> .)

    seen_cte_s                     shift and go to state 159

state 123

    (86) CNST -> CTE_F . seen_cte_f
    (83) seen_cte_f -> .

    STAR            reduce using rule 83 (seen_cte_f -> .)
    FWD_SLASH       reduce using rule 83 (seen_cte_f -> .)
    PLUS            reduce using rule 83 (seen_cte_f -> .)
    MINUS           reduce using rule 83 (seen_cte_f -> .)
    BIGGER          reduce using rule 83 (seen_cte_f -> .)
    SMALLER         reduce using rule 83 (seen_cte_f -> .)
    DOUBLE_EQUALS   reduce using rule 83 (seen_cte_f -> .)
    DIFFERENT       reduce using rule 83 (seen_cte_f -> .)
    AND             reduce using rule 83 (seen_cte_f -> .)
    OR              reduce using rule 83 (seen_cte_f -> .)
    COMMA           reduce using rule 83 (seen_cte_f -> .)
    CLOSE_PARENTHESIS reduce using rule 83 (seen_cte_f -> .)
    SEMI_COLON      reduce using rule 83 (seen_cte_f -> .)

    seen_cte_f                     shift and go to state 160

state 124

    (87) CNST -> CTE_I . seen_cte_i
    (82) seen_cte_i -> .

    STAR            reduce using rule 82 (seen_cte_i -> .)
    FWD_SLASH       reduce using rule 82 (seen_cte_i -> .)
    PLUS            reduce using rule 82 (seen_cte_i -> .)
    MINUS           reduce using rule 82 (seen_cte_i -> .)
    BIGGER          reduce using rule 82 (seen_cte_i -> .)
    SMALLER         reduce using rule 82 (seen_cte_i -> .)
    DOUBLE_EQUALS   reduce using rule 82 (seen_cte_i -> .)
    DIFFERENT       reduce using rule 82 (seen_cte_i -> .)
    AND             reduce using rule 82 (seen_cte_i -> .)
    OR              reduce using rule 82 (seen_cte_i -> .)
    COMMA           reduce using rule 82 (seen_cte_i -> .)
    CLOSE_PARENTHESIS reduce using rule 82 (seen_cte_i -> .)
    SEMI_COLON      reduce using rule 82 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 161

state 125

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 162


state 126

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 163
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 127

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (132) seen_for_kwd -> . empty
    (141) empty -> .

    EQUALS          reduce using rule 141 (empty -> .)

    seen_for_kwd                   shift and go to state 164
    empty                          shift and go to state 165

state 128

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 166


state 129

    (24) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 24 (seen_func_vars -> empty .)


state 130

    (30) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (141) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST_STAR                  shift and go to state 167
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 131

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 132

    (53) ASSIGN -> ID seen_id EQUALS seen_equals . EXPRESSION
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 168
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 133

    (54) seen_equals -> empty .

    NOT             reduce using rule 54 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 54 (seen_equals -> empty .)
    ID              reduce using rule 54 (seen_equals -> empty .)
    CTE_S           reduce using rule 54 (seen_equals -> empty .)
    CTE_F           reduce using rule 54 (seen_equals -> empty .)
    CTE_I           reduce using rule 54 (seen_equals -> empty .)


state 134

    (96) ARG_LIST -> ID . seen_arg ARG_LIST_P
    (94) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (75) FACTOR -> ID . seen_id
    (104) seen_arg -> .
    (95) seen_func_call_id -> . empty
    (81) seen_id -> .
    (141) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 81 (seen_id -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 81 (seen_id -> .)
    STAR            reduce using rule 81 (seen_id -> .)
    FWD_SLASH       reduce using rule 81 (seen_id -> .)
    PLUS            reduce using rule 81 (seen_id -> .)
    MINUS           reduce using rule 81 (seen_id -> .)
    BIGGER          reduce using rule 81 (seen_id -> .)
    SMALLER         reduce using rule 81 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 81 (seen_id -> .)
    DIFFERENT       reduce using rule 81 (seen_id -> .)
    AND             reduce using rule 81 (seen_id -> .)
    OR              reduce using rule 81 (seen_id -> .)
    COMMA           reduce using rule 81 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 81 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)

  ! COMMA           [ reduce using rule 104 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 104 (seen_arg -> .) ]

    seen_arg                       shift and go to state 169
    seen_func_call_id              shift and go to state 89
    seen_id                        shift and go to state 158
    empty                          shift and go to state 90

state 135

    (94) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 170


state 136

    (97) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (104) seen_arg -> .

    COMMA           reduce using rule 104 (seen_arg -> .)
    CLOSE_PARENTHESIS reduce using rule 104 (seen_arg -> .)

    seen_arg                       shift and go to state 171

state 137

    (98) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (74) FACTOR -> FUNC_CALL .
    (104) seen_arg -> .

  ! reduce/reduce conflict for COMMA resolved using rule 74 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 74 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 74 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 74 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 74 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 74 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 104 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 104 (seen_arg -> .) ]

    seen_arg                       shift and go to state 172

state 138

    (99) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 99 (ARG_LIST -> empty .)


state 139

    (108) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 108 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 108 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 140

    (14) READABLE_LIST -> ID seen_readable . READABLE_LIST_P
    (15) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (16) READABLE_LIST_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 174
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    READABLE_LIST_P                shift and go to state 173
    empty                          shift and go to state 175

state 141

    (17) seen_readable -> empty .

    COMMA           reduce using rule 17 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 17 (seen_readable -> empty .)


state 142

    (72) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 176
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 143

    (79) seen_open_parenthesis -> empty .

    NOT             reduce using rule 79 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 79 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 79 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 79 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 79 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 79 (seen_open_parenthesis -> empty .)


state 144

    (109) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 109 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 109 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 145

    (110) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (111) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (112) PRINTABLE_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 178
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    PRINTABLE_P                    shift and go to state 177
    empty                          shift and go to state 179

state 146

    (113) seen_printable -> empty .

    COMMA           reduce using rule 113 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 113 (seen_printable -> empty .)


state 147

    (63) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (65) seen_comp_op -> . empty
    (141) empty -> .

    NOT             reduce using rule 141 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    CTE_S           reduce using rule 141 (empty -> .)
    CTE_F           reduce using rule 141 (empty -> .)
    CTE_I           reduce using rule 141 (empty -> .)

    seen_comp_op                   shift and go to state 180
    empty                          shift and go to state 181

state 148

    (66) COMP -> BIGGER .

    NOT             reduce using rule 66 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 66 (COMP -> BIGGER .)
    ID              reduce using rule 66 (COMP -> BIGGER .)
    CTE_S           reduce using rule 66 (COMP -> BIGGER .)
    CTE_F           reduce using rule 66 (COMP -> BIGGER .)
    CTE_I           reduce using rule 66 (COMP -> BIGGER .)


state 149

    (67) COMP -> SMALLER .

    NOT             reduce using rule 67 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 67 (COMP -> SMALLER .)
    ID              reduce using rule 67 (COMP -> SMALLER .)
    CTE_S           reduce using rule 67 (COMP -> SMALLER .)
    CTE_F           reduce using rule 67 (COMP -> SMALLER .)
    CTE_I           reduce using rule 67 (COMP -> SMALLER .)


state 150

    (68) COMP -> DOUBLE_EQUALS .

    NOT             reduce using rule 68 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 68 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 68 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 68 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 68 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 68 (COMP -> DOUBLE_EQUALS .)


state 151

    (69) COMP -> DIFFERENT .

    NOT             reduce using rule 69 (COMP -> DIFFERENT .)
    OPEN_PARENTHESIS reduce using rule 69 (COMP -> DIFFERENT .)
    ID              reduce using rule 69 (COMP -> DIFFERENT .)
    CTE_S           reduce using rule 69 (COMP -> DIFFERENT .)
    CTE_F           reduce using rule 69 (COMP -> DIFFERENT .)
    CTE_I           reduce using rule 69 (COMP -> DIFFERENT .)


state 152

    (70) COMP -> AND .

    NOT             reduce using rule 70 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 70 (COMP -> AND .)
    ID              reduce using rule 70 (COMP -> AND .)
    CTE_S           reduce using rule 70 (COMP -> AND .)
    CTE_F           reduce using rule 70 (COMP -> AND .)
    CTE_I           reduce using rule 70 (COMP -> AND .)


state 153

    (71) COMP -> OR .

    NOT             reduce using rule 71 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 71 (COMP -> OR .)
    ID              reduce using rule 71 (COMP -> OR .)
    CTE_S           reduce using rule 71 (COMP -> OR .)
    CTE_F           reduce using rule 71 (COMP -> OR .)
    CTE_I           reduce using rule 71 (COMP -> OR .)


state 154

    (55) EXP -> TERM seen_term . EXP_P
    (58) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (59) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (60) EXP_P -> . empty
    (141) empty -> .

    PLUS            shift and go to state 183
    MINUS           shift and go to state 184
    BIGGER          reduce using rule 141 (empty -> .)
    SMALLER         reduce using rule 141 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 141 (empty -> .)
    DIFFERENT       reduce using rule 141 (empty -> .)
    AND             reduce using rule 141 (empty -> .)
    OR              reduce using rule 141 (empty -> .)
    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)
    SEMI_COLON      reduce using rule 141 (empty -> .)

    EXP_P                          shift and go to state 182
    empty                          shift and go to state 185

state 155

    (56) EXP -> NOT seen_not . EXP pop_not
    (73) FACTOR -> NOT seen_not . FACTOR pop_not
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (88) TERM -> . FACTOR seen_factor TERM_P
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXP                            shift and go to state 186
    FACTOR                         shift and go to state 187
    TERM                           shift and go to state 116
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 156

    (78) seen_not -> empty .

    NOT             reduce using rule 78 (seen_not -> empty .)
    OPEN_PARENTHESIS reduce using rule 78 (seen_not -> empty .)
    ID              reduce using rule 78 (seen_not -> empty .)
    CTE_S           reduce using rule 78 (seen_not -> empty .)
    CTE_F           reduce using rule 78 (seen_not -> empty .)
    CTE_I           reduce using rule 78 (seen_not -> empty .)


state 157

    (88) TERM -> FACTOR seen_factor . TERM_P
    (89) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (90) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (91) TERM_P -> . empty
    (141) empty -> .

    STAR            shift and go to state 189
    FWD_SLASH       shift and go to state 190
    PLUS            reduce using rule 141 (empty -> .)
    MINUS           reduce using rule 141 (empty -> .)
    BIGGER          reduce using rule 141 (empty -> .)
    SMALLER         reduce using rule 141 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 141 (empty -> .)
    DIFFERENT       reduce using rule 141 (empty -> .)
    AND             reduce using rule 141 (empty -> .)
    OR              reduce using rule 141 (empty -> .)
    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)
    SEMI_COLON      reduce using rule 141 (empty -> .)

    TERM_P                         shift and go to state 188
    empty                          shift and go to state 191

state 158

    (75) FACTOR -> ID seen_id .

    STAR            reduce using rule 75 (FACTOR -> ID seen_id .)
    FWD_SLASH       reduce using rule 75 (FACTOR -> ID seen_id .)
    PLUS            reduce using rule 75 (FACTOR -> ID seen_id .)
    MINUS           reduce using rule 75 (FACTOR -> ID seen_id .)
    BIGGER          reduce using rule 75 (FACTOR -> ID seen_id .)
    SMALLER         reduce using rule 75 (FACTOR -> ID seen_id .)
    DOUBLE_EQUALS   reduce using rule 75 (FACTOR -> ID seen_id .)
    DIFFERENT       reduce using rule 75 (FACTOR -> ID seen_id .)
    AND             reduce using rule 75 (FACTOR -> ID seen_id .)
    OR              reduce using rule 75 (FACTOR -> ID seen_id .)
    COMMA           reduce using rule 75 (FACTOR -> ID seen_id .)
    CLOSE_PARENTHESIS reduce using rule 75 (FACTOR -> ID seen_id .)
    SEMI_COLON      reduce using rule 75 (FACTOR -> ID seen_id .)


state 159

    (85) CNST -> CTE_S seen_cte_s .

    STAR            reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    DIFFERENT       reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    AND             reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    OR              reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 85 (CNST -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 85 (CNST -> CTE_S seen_cte_s .)


state 160

    (86) CNST -> CTE_F seen_cte_f .

    STAR            reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    DIFFERENT       reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    AND             reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    OR              reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 86 (CNST -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 86 (CNST -> CTE_F seen_cte_f .)


state 161

    (87) CNST -> CTE_I seen_cte_i .

    STAR            reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    DIFFERENT       reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    AND             reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    OR              reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 87 (CNST -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 87 (CNST -> CTE_I seen_cte_i .)


state 162

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (120) seen_if_kwd -> . empty
    (141) empty -> .

    OPEN_CURLY      reduce using rule 141 (empty -> .)

    seen_if_kwd                    shift and go to state 192
    empty                          shift and go to state 193

state 163

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 194


state 164

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 195


state 165

    (132) seen_for_kwd -> empty .

    EQUALS          reduce using rule 132 (seen_for_kwd -> empty .)


state 166

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 206
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    IF_KWD          shift and go to state 207
    WHILE_KWD       shift and go to state 210
    FOR_KWD         shift and go to state 211

    FUNC_STATEMENT_STAR            shift and go to state 196
    ASSIGN                         shift and go to state 197
    FUNC_CALL                      shift and go to state 198
    READ                           shift and go to state 199
    WRITE                          shift and go to state 200
    FUNC_FLOW_CONTROL              shift and go to state 201
    FUNC_RETURN                    shift and go to state 202
    empty                          shift and go to state 203
    FUNC_DECISION                  shift and go to state 204
    FUNC_REPETITION                shift and go to state 205
    FUNC_CONDITIONAL_REP           shift and go to state 208
    FUNC_UNCONDITIONAL_REP         shift and go to state 209

state 167

    (30) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 212


state 168

    (53) ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 53 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 53 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .)


state 169

    (96) ARG_LIST -> ID seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 214
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    ARG_LIST_P                     shift and go to state 213
    empty                          shift and go to state 215

state 170

    (94) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DIFFERENT       reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 94 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 171

    (97) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 214
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    ARG_LIST_P                     shift and go to state 216
    empty                          shift and go to state 215

state 172

    (98) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 214
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    ARG_LIST_P                     shift and go to state 217
    empty                          shift and go to state 215

state 173

    (14) READABLE_LIST -> ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 14 (READABLE_LIST -> ID seen_readable READABLE_LIST_P .)


state 174

    (15) READABLE_LIST_P -> COMMA . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 218


state 175

    (16) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 16 (READABLE_LIST_P -> empty .)


state 176

    (72) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 219


state 177

    (110) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 110 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 178

    (111) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 220
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 179

    (112) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 112 (PRINTABLE_P -> empty .)


state 180

    (63) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXP                            shift and go to state 115
    EXPRESSION                     shift and go to state 221
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 181

    (65) seen_comp_op -> empty .

    NOT             reduce using rule 65 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 65 (seen_comp_op -> empty .)
    ID              reduce using rule 65 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 65 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 65 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 65 (seen_comp_op -> empty .)


state 182

    (55) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 55 (EXP -> TERM seen_term EXP_P .)


state 183

    (58) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (61) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 61 (seen_term_op -> .)
    NOT             reduce using rule 61 (seen_term_op -> .)
    ID              reduce using rule 61 (seen_term_op -> .)
    CTE_S           reduce using rule 61 (seen_term_op -> .)
    CTE_F           reduce using rule 61 (seen_term_op -> .)
    CTE_I           reduce using rule 61 (seen_term_op -> .)

    seen_term_op                   shift and go to state 222

state 184

    (59) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (61) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 61 (seen_term_op -> .)
    NOT             reduce using rule 61 (seen_term_op -> .)
    ID              reduce using rule 61 (seen_term_op -> .)
    CTE_S           reduce using rule 61 (seen_term_op -> .)
    CTE_F           reduce using rule 61 (seen_term_op -> .)
    CTE_I           reduce using rule 61 (seen_term_op -> .)

    seen_term_op                   shift and go to state 223

state 185

    (60) EXP_P -> empty .

    BIGGER          reduce using rule 60 (EXP_P -> empty .)
    SMALLER         reduce using rule 60 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 60 (EXP_P -> empty .)
    DIFFERENT       reduce using rule 60 (EXP_P -> empty .)
    AND             reduce using rule 60 (EXP_P -> empty .)
    OR              reduce using rule 60 (EXP_P -> empty .)
    COMMA           reduce using rule 60 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 60 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 60 (EXP_P -> empty .)


state 186

    (56) EXP -> NOT seen_not EXP . pop_not
    (77) pop_not -> . empty
    (141) empty -> .

    BIGGER          reduce using rule 141 (empty -> .)
    SMALLER         reduce using rule 141 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 141 (empty -> .)
    DIFFERENT       reduce using rule 141 (empty -> .)
    AND             reduce using rule 141 (empty -> .)
    OR              reduce using rule 141 (empty -> .)
    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)
    SEMI_COLON      reduce using rule 141 (empty -> .)

    pop_not                        shift and go to state 224
    empty                          shift and go to state 225

state 187

    (73) FACTOR -> NOT seen_not FACTOR . pop_not
    (88) TERM -> FACTOR . seen_factor TERM_P
    (77) pop_not -> . empty
    (92) seen_factor -> .
    (141) empty -> .

  ! reduce/reduce conflict for STAR resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for BIGGER resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for SMALLER resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for AND resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for OR resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 92 (seen_factor -> .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 92 (seen_factor -> .)
    STAR            reduce using rule 92 (seen_factor -> .)
    FWD_SLASH       reduce using rule 92 (seen_factor -> .)
    PLUS            reduce using rule 92 (seen_factor -> .)
    MINUS           reduce using rule 92 (seen_factor -> .)
    BIGGER          reduce using rule 92 (seen_factor -> .)
    SMALLER         reduce using rule 92 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 92 (seen_factor -> .)
    DIFFERENT       reduce using rule 92 (seen_factor -> .)
    AND             reduce using rule 92 (seen_factor -> .)
    OR              reduce using rule 92 (seen_factor -> .)
    COMMA           reduce using rule 92 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 92 (seen_factor -> .)
    SEMI_COLON      reduce using rule 92 (seen_factor -> .)

  ! STAR            [ reduce using rule 141 (empty -> .) ]
  ! FWD_SLASH       [ reduce using rule 141 (empty -> .) ]
  ! PLUS            [ reduce using rule 141 (empty -> .) ]
  ! MINUS           [ reduce using rule 141 (empty -> .) ]
  ! BIGGER          [ reduce using rule 141 (empty -> .) ]
  ! SMALLER         [ reduce using rule 141 (empty -> .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 141 (empty -> .) ]
  ! DIFFERENT       [ reduce using rule 141 (empty -> .) ]
  ! AND             [ reduce using rule 141 (empty -> .) ]
  ! OR              [ reduce using rule 141 (empty -> .) ]
  ! COMMA           [ reduce using rule 141 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 141 (empty -> .) ]
  ! SEMI_COLON      [ reduce using rule 141 (empty -> .) ]

    pop_not                        shift and go to state 226
    seen_factor                    shift and go to state 157
    empty                          shift and go to state 225

state 188

    (88) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 88 (TERM -> FACTOR seen_factor TERM_P .)


state 189

    (89) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (93) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 93 (seen_factor_op -> .)
    NOT             reduce using rule 93 (seen_factor_op -> .)
    ID              reduce using rule 93 (seen_factor_op -> .)
    CTE_S           reduce using rule 93 (seen_factor_op -> .)
    CTE_F           reduce using rule 93 (seen_factor_op -> .)
    CTE_I           reduce using rule 93 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 227

state 190

    (90) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (93) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 93 (seen_factor_op -> .)
    NOT             reduce using rule 93 (seen_factor_op -> .)
    ID              reduce using rule 93 (seen_factor_op -> .)
    CTE_S           reduce using rule 93 (seen_factor_op -> .)
    CTE_F           reduce using rule 93 (seen_factor_op -> .)
    CTE_I           reduce using rule 93 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 228

state 191

    (91) TERM_P -> empty .

    PLUS            reduce using rule 91 (TERM_P -> empty .)
    MINUS           reduce using rule 91 (TERM_P -> empty .)
    BIGGER          reduce using rule 91 (TERM_P -> empty .)
    SMALLER         reduce using rule 91 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 91 (TERM_P -> empty .)
    DIFFERENT       reduce using rule 91 (TERM_P -> empty .)
    AND             reduce using rule 91 (TERM_P -> empty .)
    OR              reduce using rule 91 (TERM_P -> empty .)
    COMMA           reduce using rule 91 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 91 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 91 (TERM_P -> empty .)


state 192

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 229


state 193

    (120) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 120 (seen_if_kwd -> empty .)


state 194

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (130) seen_while_exp -> . empty
    (141) empty -> .

    OPEN_CURLY      reduce using rule 141 (empty -> .)

    seen_while_exp                 shift and go to state 230
    empty                          shift and go to state 231

state 195

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 232
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 196

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 233


state 197

    (31) FUNC_STATEMENT_STAR -> ASSIGN . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 234


state 198

    (32) FUNC_STATEMENT_STAR -> FUNC_CALL . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 235


state 199

    (33) FUNC_STATEMENT_STAR -> READ . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 236


state 200

    (34) FUNC_STATEMENT_STAR -> WRITE . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 237


state 201

    (35) FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 206
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    IF_KWD          shift and go to state 207
    WHILE_KWD       shift and go to state 210
    FOR_KWD         shift and go to state 211

    FUNC_FLOW_CONTROL              shift and go to state 201
    FUNC_STATEMENT_STAR            shift and go to state 238
    ASSIGN                         shift and go to state 197
    FUNC_CALL                      shift and go to state 198
    READ                           shift and go to state 199
    WRITE                          shift and go to state 200
    FUNC_RETURN                    shift and go to state 202
    empty                          shift and go to state 203
    FUNC_DECISION                  shift and go to state 204
    FUNC_REPETITION                shift and go to state 205
    FUNC_CONDITIONAL_REP           shift and go to state 208
    FUNC_UNCONDITIONAL_REP         shift and go to state 209

state 202

    (36) FUNC_STATEMENT_STAR -> FUNC_RETURN . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 206
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    IF_KWD          shift and go to state 207
    WHILE_KWD       shift and go to state 210
    FOR_KWD         shift and go to state 211

    FUNC_RETURN                    shift and go to state 202
    FUNC_STATEMENT_STAR            shift and go to state 239
    ASSIGN                         shift and go to state 197
    FUNC_CALL                      shift and go to state 198
    READ                           shift and go to state 199
    WRITE                          shift and go to state 200
    FUNC_FLOW_CONTROL              shift and go to state 201
    empty                          shift and go to state 203
    FUNC_DECISION                  shift and go to state 204
    FUNC_REPETITION                shift and go to state 205
    FUNC_CONDITIONAL_REP           shift and go to state 208
    FUNC_UNCONDITIONAL_REP         shift and go to state 209

state 203

    (37) FUNC_STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 37 (FUNC_STATEMENT_STAR -> empty .)


state 204

    (47) FUNC_FLOW_CONTROL -> FUNC_DECISION .

    ID              reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    READ_KWD        reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    WRITE_KWD       reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    RETURN_KWD      reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    IF_KWD          reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    WHILE_KWD       reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    FOR_KWD         reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    CLOSE_CURLY     reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)


state 205

    (48) FUNC_FLOW_CONTROL -> FUNC_REPETITION .

    ID              reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    READ_KWD        reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    WRITE_KWD       reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    RETURN_KWD      reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    IF_KWD          reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    WHILE_KWD       reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    FOR_KWD         reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    CLOSE_CURLY     reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)


state 206

    (105) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> RETURN_KWD . SEMI_COLON
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    SEMI_COLON      shift and go to state 241
    ID              shift and go to state 243
    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 240
    FUNC_CALL                      shift and go to state 242
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    CNST                           shift and go to state 121

state 207

    (114) FUNC_DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P

    OPEN_PARENTHESIS shift and go to state 244


state 208

    (122) FUNC_REPETITION -> FUNC_CONDITIONAL_REP .

    ID              reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    READ_KWD        reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    IF_KWD          reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 122 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)


state 209

    (123) FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .

    ID              reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 123 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)


state 210

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (129) seen_while_kwd -> . empty
    (141) empty -> .

    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_while_kwd                 shift and go to state 245
    empty                          shift and go to state 101

state 211

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 246


state 212

    (30) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 30 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 213

    (96) ARG_LIST -> ID seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 96 (ARG_LIST -> ID seen_arg ARG_LIST_P .)


state 214

    (100) ARG_LIST_P -> COMMA . ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 247
    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 248
    FUNC_CALL                      shift and go to state 249
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    CNST                           shift and go to state 121

state 215

    (103) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 103 (ARG_LIST_P -> empty .)


state 216

    (97) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 97 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 217

    (98) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 98 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 218

    (15) READABLE_LIST_P -> COMMA ID . seen_readable READABLE_LIST_P
    (17) seen_readable -> . empty
    (141) empty -> .

    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_readable                  shift and go to state 250
    empty                          shift and go to state 141

state 219

    (72) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (80) seen_close_parenthesis -> . empty
    (141) empty -> .

    STAR            reduce using rule 141 (empty -> .)
    FWD_SLASH       reduce using rule 141 (empty -> .)
    PLUS            reduce using rule 141 (empty -> .)
    MINUS           reduce using rule 141 (empty -> .)
    BIGGER          reduce using rule 141 (empty -> .)
    SMALLER         reduce using rule 141 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 141 (empty -> .)
    DIFFERENT       reduce using rule 141 (empty -> .)
    AND             reduce using rule 141 (empty -> .)
    OR              reduce using rule 141 (empty -> .)
    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)
    SEMI_COLON      reduce using rule 141 (empty -> .)

    seen_close_parenthesis         shift and go to state 251
    empty                          shift and go to state 252

state 220

    (111) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (113) seen_printable -> . empty
    (141) empty -> .

    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_printable                 shift and go to state 253
    empty                          shift and go to state 146

state 221

    (63) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (64) seen_comp -> . empty
    (141) empty -> .

    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)
    SEMI_COLON      reduce using rule 141 (empty -> .)

    seen_comp                      shift and go to state 254
    empty                          shift and go to state 255

state 222

    (58) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 112
    NOT             shift and go to state 257
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    TERM                           shift and go to state 256
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 223

    (59) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 112
    NOT             shift and go to state 257
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    TERM                           shift and go to state 258
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 224

    (56) EXP -> NOT seen_not EXP pop_not .

    BIGGER          reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER         reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    DOUBLE_EQUALS   reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    DIFFERENT       reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    AND             reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    OR              reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    COMMA           reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    CLOSE_PARENTHESIS reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    SEMI_COLON      reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)


state 225

    (77) pop_not -> empty .

    BIGGER          reduce using rule 77 (pop_not -> empty .)
    SMALLER         reduce using rule 77 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 77 (pop_not -> empty .)
    DIFFERENT       reduce using rule 77 (pop_not -> empty .)
    AND             reduce using rule 77 (pop_not -> empty .)
    OR              reduce using rule 77 (pop_not -> empty .)
    COMMA           reduce using rule 77 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 77 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 77 (pop_not -> empty .)
    STAR            reduce using rule 77 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 77 (pop_not -> empty .)
    PLUS            reduce using rule 77 (pop_not -> empty .)
    MINUS           reduce using rule 77 (pop_not -> empty .)


state 226

    (73) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DIFFERENT       reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 73 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 227

    (89) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 112
    NOT             shift and go to state 257
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    FACTOR                         shift and go to state 259
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 228

    (90) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 112
    NOT             shift and go to state 257
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    FACTOR                         shift and go to state 260
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 229

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (141) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT_STAR                 shift and go to state 261
    STATEMENT                      shift and go to state 66
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 230

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 262


state 231

    (130) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 130 (seen_while_exp -> empty .)


state 232

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (134) seen_for_start_exp -> . empty
    (141) empty -> .

    SEMI_COLON      reduce using rule 141 (empty -> .)

    seen_for_start_exp             shift and go to state 263
    empty                          shift and go to state 264

state 233

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)


state 234

    (31) FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 206
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    IF_KWD          shift and go to state 207
    WHILE_KWD       shift and go to state 210
    FOR_KWD         shift and go to state 211

    ASSIGN                         shift and go to state 197
    FUNC_STATEMENT_STAR            shift and go to state 265
    FUNC_CALL                      shift and go to state 198
    READ                           shift and go to state 199
    WRITE                          shift and go to state 200
    FUNC_FLOW_CONTROL              shift and go to state 201
    FUNC_RETURN                    shift and go to state 202
    empty                          shift and go to state 203
    FUNC_DECISION                  shift and go to state 204
    FUNC_REPETITION                shift and go to state 205
    FUNC_CONDITIONAL_REP           shift and go to state 208
    FUNC_UNCONDITIONAL_REP         shift and go to state 209

state 235

    (32) FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 206
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    IF_KWD          shift and go to state 207
    WHILE_KWD       shift and go to state 210
    FOR_KWD         shift and go to state 211

    FUNC_CALL                      shift and go to state 198
    FUNC_STATEMENT_STAR            shift and go to state 266
    ASSIGN                         shift and go to state 197
    READ                           shift and go to state 199
    WRITE                          shift and go to state 200
    FUNC_FLOW_CONTROL              shift and go to state 201
    FUNC_RETURN                    shift and go to state 202
    empty                          shift and go to state 203
    FUNC_DECISION                  shift and go to state 204
    FUNC_REPETITION                shift and go to state 205
    FUNC_CONDITIONAL_REP           shift and go to state 208
    FUNC_UNCONDITIONAL_REP         shift and go to state 209

state 236

    (33) FUNC_STATEMENT_STAR -> READ SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 206
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    IF_KWD          shift and go to state 207
    WHILE_KWD       shift and go to state 210
    FOR_KWD         shift and go to state 211

    READ                           shift and go to state 199
    FUNC_STATEMENT_STAR            shift and go to state 267
    ASSIGN                         shift and go to state 197
    FUNC_CALL                      shift and go to state 198
    WRITE                          shift and go to state 200
    FUNC_FLOW_CONTROL              shift and go to state 201
    FUNC_RETURN                    shift and go to state 202
    empty                          shift and go to state 203
    FUNC_DECISION                  shift and go to state 204
    FUNC_REPETITION                shift and go to state 205
    FUNC_CONDITIONAL_REP           shift and go to state 208
    FUNC_UNCONDITIONAL_REP         shift and go to state 209

state 237

    (34) FUNC_STATEMENT_STAR -> WRITE SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 206
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    IF_KWD          shift and go to state 207
    WHILE_KWD       shift and go to state 210
    FOR_KWD         shift and go to state 211

    WRITE                          shift and go to state 200
    FUNC_STATEMENT_STAR            shift and go to state 268
    ASSIGN                         shift and go to state 197
    FUNC_CALL                      shift and go to state 198
    READ                           shift and go to state 199
    FUNC_FLOW_CONTROL              shift and go to state 201
    FUNC_RETURN                    shift and go to state 202
    empty                          shift and go to state 203
    FUNC_DECISION                  shift and go to state 204
    FUNC_REPETITION                shift and go to state 205
    FUNC_CONDITIONAL_REP           shift and go to state 208
    FUNC_UNCONDITIONAL_REP         shift and go to state 209

state 238

    (35) FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 35 (FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR .)


state 239

    (36) FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 36 (FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR .)


state 240

    (105) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 269


state 241

    (107) FUNC_RETURN -> RETURN_KWD SEMI_COLON .

    ID              reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    READ_KWD        reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WRITE_KWD       reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    RETURN_KWD      reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    IF_KWD          reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WHILE_KWD       reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    FOR_KWD         reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 107 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)


state 242

    (106) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (74) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 270
    STAR            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 74 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 74 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 74 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 74 (FACTOR -> FUNC_CALL .) ]


state 243

    (94) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (75) FACTOR -> ID . seen_id
    (95) seen_func_call_id -> . empty
    (81) seen_id -> .
    (141) empty -> .

    STAR            reduce using rule 81 (seen_id -> .)
    FWD_SLASH       reduce using rule 81 (seen_id -> .)
    PLUS            reduce using rule 81 (seen_id -> .)
    MINUS           reduce using rule 81 (seen_id -> .)
    BIGGER          reduce using rule 81 (seen_id -> .)
    SMALLER         reduce using rule 81 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 81 (seen_id -> .)
    DIFFERENT       reduce using rule 81 (seen_id -> .)
    AND             reduce using rule 81 (seen_id -> .)
    OR              reduce using rule 81 (seen_id -> .)
    SEMI_COLON      reduce using rule 81 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_func_call_id              shift and go to state 89
    seen_id                        shift and go to state 158
    empty                          shift and go to state 90

state 244

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 271
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 245

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 272


state 246

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 273


state 247

    (100) ARG_LIST_P -> COMMA ID . seen_arg ARG_LIST_P
    (94) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (75) FACTOR -> ID . seen_id
    (104) seen_arg -> .
    (95) seen_func_call_id -> . empty
    (81) seen_id -> .
    (141) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 81 (seen_id -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 81 (seen_id -> .)
    STAR            reduce using rule 81 (seen_id -> .)
    FWD_SLASH       reduce using rule 81 (seen_id -> .)
    PLUS            reduce using rule 81 (seen_id -> .)
    MINUS           reduce using rule 81 (seen_id -> .)
    BIGGER          reduce using rule 81 (seen_id -> .)
    SMALLER         reduce using rule 81 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 81 (seen_id -> .)
    DIFFERENT       reduce using rule 81 (seen_id -> .)
    AND             reduce using rule 81 (seen_id -> .)
    OR              reduce using rule 81 (seen_id -> .)
    COMMA           reduce using rule 81 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 81 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)

  ! COMMA           [ reduce using rule 104 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 104 (seen_arg -> .) ]

    seen_arg                       shift and go to state 274
    seen_func_call_id              shift and go to state 89
    seen_id                        shift and go to state 158
    empty                          shift and go to state 90

state 248

    (101) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (104) seen_arg -> .

    COMMA           reduce using rule 104 (seen_arg -> .)
    CLOSE_PARENTHESIS reduce using rule 104 (seen_arg -> .)

    seen_arg                       shift and go to state 275

state 249

    (102) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (74) FACTOR -> FUNC_CALL .
    (104) seen_arg -> .

  ! reduce/reduce conflict for COMMA resolved using rule 74 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 74 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 74 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 74 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 74 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 74 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 74 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 74 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 74 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 74 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 104 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 104 (seen_arg -> .) ]

    seen_arg                       shift and go to state 276

state 250

    (15) READABLE_LIST_P -> COMMA ID seen_readable . READABLE_LIST_P
    (15) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (16) READABLE_LIST_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 174
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    READABLE_LIST_P                shift and go to state 277
    empty                          shift and go to state 175

state 251

    (72) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DIFFERENT       reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 72 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 252

    (80) seen_close_parenthesis -> empty .

    STAR            reduce using rule 80 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 80 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 80 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 80 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 80 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 80 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 80 (seen_close_parenthesis -> empty .)
    DIFFERENT       reduce using rule 80 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 80 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 80 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 80 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 80 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 80 (seen_close_parenthesis -> empty .)


state 253

    (111) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (111) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (112) PRINTABLE_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 178
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    PRINTABLE_P                    shift and go to state 278
    empty                          shift and go to state 179

state 254

    (63) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    COMMA           reduce using rule 63 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 63 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    SEMI_COLON      reduce using rule 63 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 255

    (64) seen_comp -> empty .

    COMMA           reduce using rule 64 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 64 (seen_comp -> empty .)
    SEMI_COLON      reduce using rule 64 (seen_comp -> empty .)


state 256

    (58) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (57) seen_term -> .

    PLUS            reduce using rule 57 (seen_term -> .)
    MINUS           reduce using rule 57 (seen_term -> .)
    BIGGER          reduce using rule 57 (seen_term -> .)
    SMALLER         reduce using rule 57 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 57 (seen_term -> .)
    DIFFERENT       reduce using rule 57 (seen_term -> .)
    AND             reduce using rule 57 (seen_term -> .)
    OR              reduce using rule 57 (seen_term -> .)
    COMMA           reduce using rule 57 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 57 (seen_term -> .)
    SEMI_COLON      reduce using rule 57 (seen_term -> .)

    seen_term                      shift and go to state 279

state 257

    (73) FACTOR -> NOT . seen_not FACTOR pop_not
    (78) seen_not -> . empty
    (141) empty -> .

    OPEN_PARENTHESIS reduce using rule 141 (empty -> .)
    NOT             reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    CTE_S           reduce using rule 141 (empty -> .)
    CTE_F           reduce using rule 141 (empty -> .)
    CTE_I           reduce using rule 141 (empty -> .)

    seen_not                       shift and go to state 280
    empty                          shift and go to state 156

state 258

    (59) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (57) seen_term -> .

    PLUS            reduce using rule 57 (seen_term -> .)
    MINUS           reduce using rule 57 (seen_term -> .)
    BIGGER          reduce using rule 57 (seen_term -> .)
    SMALLER         reduce using rule 57 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 57 (seen_term -> .)
    DIFFERENT       reduce using rule 57 (seen_term -> .)
    AND             reduce using rule 57 (seen_term -> .)
    OR              reduce using rule 57 (seen_term -> .)
    COMMA           reduce using rule 57 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 57 (seen_term -> .)
    SEMI_COLON      reduce using rule 57 (seen_term -> .)

    seen_term                      shift and go to state 281

state 259

    (89) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (92) seen_factor -> .

    STAR            reduce using rule 92 (seen_factor -> .)
    FWD_SLASH       reduce using rule 92 (seen_factor -> .)
    PLUS            reduce using rule 92 (seen_factor -> .)
    MINUS           reduce using rule 92 (seen_factor -> .)
    BIGGER          reduce using rule 92 (seen_factor -> .)
    SMALLER         reduce using rule 92 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 92 (seen_factor -> .)
    DIFFERENT       reduce using rule 92 (seen_factor -> .)
    AND             reduce using rule 92 (seen_factor -> .)
    OR              reduce using rule 92 (seen_factor -> .)
    COMMA           reduce using rule 92 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 92 (seen_factor -> .)
    SEMI_COLON      reduce using rule 92 (seen_factor -> .)

    seen_factor                    shift and go to state 282

state 260

    (90) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (92) seen_factor -> .

    STAR            reduce using rule 92 (seen_factor -> .)
    FWD_SLASH       reduce using rule 92 (seen_factor -> .)
    PLUS            reduce using rule 92 (seen_factor -> .)
    MINUS           reduce using rule 92 (seen_factor -> .)
    BIGGER          reduce using rule 92 (seen_factor -> .)
    SMALLER         reduce using rule 92 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 92 (seen_factor -> .)
    DIFFERENT       reduce using rule 92 (seen_factor -> .)
    AND             reduce using rule 92 (seen_factor -> .)
    OR              reduce using rule 92 (seen_factor -> .)
    COMMA           reduce using rule 92 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 92 (seen_factor -> .)
    SEMI_COLON      reduce using rule 92 (seen_factor -> .)

    seen_factor                    shift and go to state 283

state 261

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 284


state 262

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (141) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT_STAR                 shift and go to state 285
    STATEMENT                      shift and go to state 66
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 263

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 286


state 264

    (134) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 134 (seen_for_start_exp -> empty .)


state 265

    (31) FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 31 (FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON FUNC_STATEMENT_STAR .)


state 266

    (32) FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 32 (FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR .)


state 267

    (33) FUNC_STATEMENT_STAR -> READ SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 33 (FUNC_STATEMENT_STAR -> READ SEMI_COLON FUNC_STATEMENT_STAR .)


state 268

    (34) FUNC_STATEMENT_STAR -> WRITE SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 34 (FUNC_STATEMENT_STAR -> WRITE SEMI_COLON FUNC_STATEMENT_STAR .)


state 269

    (105) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 105 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 270

    (106) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    ID              reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 106 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 271

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P

    CLOSE_PARENTHESIS shift and go to state 287


state 272

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 288
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 273

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (132) seen_for_kwd -> . empty
    (141) empty -> .

    EQUALS          reduce using rule 141 (empty -> .)

    seen_for_kwd                   shift and go to state 289
    empty                          shift and go to state 165

state 274

    (100) ARG_LIST_P -> COMMA ID seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 214
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    ARG_LIST_P                     shift and go to state 290
    empty                          shift and go to state 215

state 275

    (101) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 214
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    ARG_LIST_P                     shift and go to state 291
    empty                          shift and go to state 215

state 276

    (102) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (100) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (101) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . empty
    (141) empty -> .

    COMMA           shift and go to state 214
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    ARG_LIST_P                     shift and go to state 292
    empty                          shift and go to state 215

state 277

    (15) READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 15 (READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .)


state 278

    (111) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 111 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 279

    (58) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (58) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (59) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (60) EXP_P -> . empty
    (141) empty -> .

    PLUS            shift and go to state 183
    MINUS           shift and go to state 184
    BIGGER          reduce using rule 141 (empty -> .)
    SMALLER         reduce using rule 141 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 141 (empty -> .)
    DIFFERENT       reduce using rule 141 (empty -> .)
    AND             reduce using rule 141 (empty -> .)
    OR              reduce using rule 141 (empty -> .)
    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)
    SEMI_COLON      reduce using rule 141 (empty -> .)

    EXP_P                          shift and go to state 293
    empty                          shift and go to state 185

state 280

    (73) FACTOR -> NOT seen_not . FACTOR pop_not
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 112
    NOT             shift and go to state 257
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    FACTOR                         shift and go to state 294
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 281

    (59) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (58) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (59) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (60) EXP_P -> . empty
    (141) empty -> .

    PLUS            shift and go to state 183
    MINUS           shift and go to state 184
    BIGGER          reduce using rule 141 (empty -> .)
    SMALLER         reduce using rule 141 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 141 (empty -> .)
    DIFFERENT       reduce using rule 141 (empty -> .)
    AND             reduce using rule 141 (empty -> .)
    OR              reduce using rule 141 (empty -> .)
    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)
    SEMI_COLON      reduce using rule 141 (empty -> .)

    EXP_P                          shift and go to state 295
    empty                          shift and go to state 185

state 282

    (89) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (89) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (90) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (91) TERM_P -> . empty
    (141) empty -> .

    STAR            shift and go to state 189
    FWD_SLASH       shift and go to state 190
    PLUS            reduce using rule 141 (empty -> .)
    MINUS           reduce using rule 141 (empty -> .)
    BIGGER          reduce using rule 141 (empty -> .)
    SMALLER         reduce using rule 141 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 141 (empty -> .)
    DIFFERENT       reduce using rule 141 (empty -> .)
    AND             reduce using rule 141 (empty -> .)
    OR              reduce using rule 141 (empty -> .)
    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)
    SEMI_COLON      reduce using rule 141 (empty -> .)

    TERM_P                         shift and go to state 296
    empty                          shift and go to state 191

state 283

    (90) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (89) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (90) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (91) TERM_P -> . empty
    (141) empty -> .

    STAR            shift and go to state 189
    FWD_SLASH       shift and go to state 190
    PLUS            reduce using rule 141 (empty -> .)
    MINUS           reduce using rule 141 (empty -> .)
    BIGGER          reduce using rule 141 (empty -> .)
    SMALLER         reduce using rule 141 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 141 (empty -> .)
    DIFFERENT       reduce using rule 141 (empty -> .)
    AND             reduce using rule 141 (empty -> .)
    OR              reduce using rule 141 (empty -> .)
    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)
    SEMI_COLON      reduce using rule 141 (empty -> .)

    TERM_P                         shift and go to state 297
    empty                          shift and go to state 191

state 284

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (118) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (119) DECISION_P -> . empty
    (141) empty -> .

    ELSE_KWD        shift and go to state 299
    ID              reduce using rule 141 (empty -> .)
    READ_KWD        reduce using rule 141 (empty -> .)
    WRITE_KWD       reduce using rule 141 (empty -> .)
    IF_KWD          reduce using rule 141 (empty -> .)
    WHILE_KWD       reduce using rule 141 (empty -> .)
    FOR_KWD         reduce using rule 141 (empty -> .)
    CLOSE_CURLY     reduce using rule 141 (empty -> .)

    DECISION_P                     shift and go to state 298
    empty                          shift and go to state 300

state 285

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 301


state 286

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 302
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 287

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (120) seen_if_kwd -> . empty
    (141) empty -> .

    OPEN_CURLY      reduce using rule 141 (empty -> .)

    seen_if_kwd                    shift and go to state 303
    empty                          shift and go to state 193

state 288

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 304


state 289

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 305


state 290

    (100) ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 100 (ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P .)


state 291

    (101) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 101 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 292

    (102) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 102 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 293

    (58) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 294

    (73) FACTOR -> NOT seen_not FACTOR . pop_not
    (77) pop_not -> . empty
    (141) empty -> .

    STAR            reduce using rule 141 (empty -> .)
    FWD_SLASH       reduce using rule 141 (empty -> .)
    PLUS            reduce using rule 141 (empty -> .)
    MINUS           reduce using rule 141 (empty -> .)
    BIGGER          reduce using rule 141 (empty -> .)
    SMALLER         reduce using rule 141 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 141 (empty -> .)
    DIFFERENT       reduce using rule 141 (empty -> .)
    AND             reduce using rule 141 (empty -> .)
    OR              reduce using rule 141 (empty -> .)
    COMMA           reduce using rule 141 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)
    SEMI_COLON      reduce using rule 141 (empty -> .)

    pop_not                        shift and go to state 226
    empty                          shift and go to state 225

state 295

    (59) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 296

    (89) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 89 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 297

    (90) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 90 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 298

    (117) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 117 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 299

    (118) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (121) seen_else_kwd -> . empty
    (141) empty -> .

    OPEN_CURLY      reduce using rule 141 (empty -> .)

    seen_else_kwd                  shift and go to state 306
    empty                          shift and go to state 307

state 300

    (119) DECISION_P -> empty .

    ID              reduce using rule 119 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 119 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 119 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 119 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 119 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 119 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 119 (DECISION_P -> empty .)


state 301

    (128) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 128 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 302

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (135) seen_for_end_exp -> . empty
    (141) empty -> .

    SEMI_COLON      reduce using rule 141 (empty -> .)

    seen_for_end_exp               shift and go to state 308
    empty                          shift and go to state 309

state 303

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P

    OPEN_CURLY      shift and go to state 310


state 304

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (130) seen_while_exp -> . empty
    (141) empty -> .

    OPEN_CURLY      reduce using rule 141 (empty -> .)

    seen_while_exp                 shift and go to state 311
    empty                          shift and go to state 231

state 305

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 312
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 306

    (118) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 313


state 307

    (121) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 121 (seen_else_kwd -> empty .)


state 308

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 314


state 309

    (135) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 135 (seen_for_end_exp -> empty .)


state 310

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 206
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    IF_KWD          shift and go to state 207
    WHILE_KWD       shift and go to state 210
    FOR_KWD         shift and go to state 211

    FUNC_STATEMENT_STAR            shift and go to state 315
    ASSIGN                         shift and go to state 197
    FUNC_CALL                      shift and go to state 198
    READ                           shift and go to state 199
    WRITE                          shift and go to state 200
    FUNC_FLOW_CONTROL              shift and go to state 201
    FUNC_RETURN                    shift and go to state 202
    empty                          shift and go to state 203
    FUNC_DECISION                  shift and go to state 204
    FUNC_REPETITION                shift and go to state 205
    FUNC_CONDITIONAL_REP           shift and go to state 208
    FUNC_UNCONDITIONAL_REP         shift and go to state 209

state 311

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 316


state 312

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (134) seen_for_start_exp -> . empty
    (141) empty -> .

    SEMI_COLON      reduce using rule 141 (empty -> .)

    seen_for_start_exp             shift and go to state 317
    empty                          shift and go to state 264

state 313

    (118) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (141) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT_STAR                 shift and go to state 318
    STATEMENT                      shift and go to state 66
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 314

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (49) FOR_INCR_STATEMENT -> . ASSIGN
    (50) FOR_INCR_STATEMENT -> . FUNC_CALL
    (51) FOR_INCR_STATEMENT -> . READ
    (52) FOR_INCR_STATEMENT -> . WRITE
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74

    FOR_INCR_STATEMENT             shift and go to state 319
    ASSIGN                         shift and go to state 320
    FUNC_CALL                      shift and go to state 321
    READ                           shift and go to state 322
    WRITE                          shift and go to state 323

state 315

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY FUNC_DECISION_P

    CLOSE_CURLY     shift and go to state 324


state 316

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 206
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    IF_KWD          shift and go to state 207
    WHILE_KWD       shift and go to state 210
    FOR_KWD         shift and go to state 211

    FUNC_STATEMENT_STAR            shift and go to state 325
    ASSIGN                         shift and go to state 197
    FUNC_CALL                      shift and go to state 198
    READ                           shift and go to state 199
    WRITE                          shift and go to state 200
    FUNC_FLOW_CONTROL              shift and go to state 201
    FUNC_RETURN                    shift and go to state 202
    empty                          shift and go to state 203
    FUNC_DECISION                  shift and go to state 204
    FUNC_REPETITION                shift and go to state 205
    FUNC_CONDITIONAL_REP           shift and go to state 208
    FUNC_UNCONDITIONAL_REP         shift and go to state 209

state 317

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 326


state 318

    (118) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 327


state 319

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (133) seen_for_incr_exp -> . empty
    (141) empty -> .

    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_for_incr_exp              shift and go to state 328
    empty                          shift and go to state 329

state 320

    (49) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 49 (FOR_INCR_STATEMENT -> ASSIGN .)


state 321

    (50) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 50 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 322

    (51) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 51 (FOR_INCR_STATEMENT -> READ .)


state 323

    (52) FOR_INCR_STATEMENT -> WRITE .

    CLOSE_PARENTHESIS reduce using rule 52 (FOR_INCR_STATEMENT -> WRITE .)


state 324

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY . FUNC_DECISION_P
    (115) FUNC_DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (116) FUNC_DECISION_P -> . empty
    (141) empty -> .

    ELSE_KWD        shift and go to state 331
    ID              reduce using rule 141 (empty -> .)
    READ_KWD        reduce using rule 141 (empty -> .)
    WRITE_KWD       reduce using rule 141 (empty -> .)
    RETURN_KWD      reduce using rule 141 (empty -> .)
    IF_KWD          reduce using rule 141 (empty -> .)
    WHILE_KWD       reduce using rule 141 (empty -> .)
    FOR_KWD         reduce using rule 141 (empty -> .)
    CLOSE_CURLY     reduce using rule 141 (empty -> .)

    FUNC_DECISION_P                shift and go to state 330
    empty                          shift and go to state 332

state 325

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 333


state 326

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (88) TERM -> . FACTOR seen_factor TERM_P
    (72) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (73) FACTOR -> . NOT seen_not FACTOR pop_not
    (74) FACTOR -> . FUNC_CALL
    (75) FACTOR -> . ID seen_id
    (76) FACTOR -> . CNST
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (85) CNST -> . CTE_S seen_cte_s
    (86) CNST -> . CTE_F seen_cte_f
    (87) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 334
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 327

    (118) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 118 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 328

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 335


state 329

    (133) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 133 (seen_for_incr_exp -> empty .)


state 330

    (114) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .

    ID              reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    READ_KWD        reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    WRITE_KWD       reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    RETURN_KWD      reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    IF_KWD          reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    WHILE_KWD       reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    FOR_KWD         reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    CLOSE_CURLY     reduce using rule 114 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)


state 331

    (115) FUNC_DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (121) seen_else_kwd -> . empty
    (141) empty -> .

    OPEN_CURLY      reduce using rule 141 (empty -> .)

    seen_else_kwd                  shift and go to state 336
    empty                          shift and go to state 307

state 332

    (116) FUNC_DECISION_P -> empty .

    ID              reduce using rule 116 (FUNC_DECISION_P -> empty .)
    READ_KWD        reduce using rule 116 (FUNC_DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 116 (FUNC_DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 116 (FUNC_DECISION_P -> empty .)
    IF_KWD          reduce using rule 116 (FUNC_DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 116 (FUNC_DECISION_P -> empty .)
    FOR_KWD         reduce using rule 116 (FUNC_DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 116 (FUNC_DECISION_P -> empty .)


state 333

    (124) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 124 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)


state 334

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (135) seen_for_end_exp -> . empty
    (141) empty -> .

    SEMI_COLON      reduce using rule 141 (empty -> .)

    seen_for_end_exp               shift and go to state 337
    empty                          shift and go to state 309

state 335

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 338


state 336

    (115) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 339


state 337

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 340


state 338

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (141) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (117) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (126) REPETITION -> . CONDITIONAL_REP
    (127) REPETITION -> . UNCONDITIONAL_REP
    (128) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT_STAR                 shift and go to state 341
    STATEMENT                      shift and go to state 66
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 339

    (115) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 206
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    IF_KWD          shift and go to state 207
    WHILE_KWD       shift and go to state 210
    FOR_KWD         shift and go to state 211

    FUNC_STATEMENT_STAR            shift and go to state 342
    ASSIGN                         shift and go to state 197
    FUNC_CALL                      shift and go to state 198
    READ                           shift and go to state 199
    WRITE                          shift and go to state 200
    FUNC_FLOW_CONTROL              shift and go to state 201
    FUNC_RETURN                    shift and go to state 202
    empty                          shift and go to state 203
    FUNC_DECISION                  shift and go to state 204
    FUNC_REPETITION                shift and go to state 205
    FUNC_CONDITIONAL_REP           shift and go to state 208
    FUNC_UNCONDITIONAL_REP         shift and go to state 209

state 340

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (49) FOR_INCR_STATEMENT -> . ASSIGN
    (50) FOR_INCR_STATEMENT -> . FUNC_CALL
    (51) FOR_INCR_STATEMENT -> . READ
    (52) FOR_INCR_STATEMENT -> . WRITE
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74

    FOR_INCR_STATEMENT             shift and go to state 343
    ASSIGN                         shift and go to state 320
    FUNC_CALL                      shift and go to state 321
    READ                           shift and go to state 322
    WRITE                          shift and go to state 323

state 341

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 344


state 342

    (115) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 345


state 343

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (133) seen_for_incr_exp -> . empty
    (141) empty -> .

    CLOSE_PARENTHESIS reduce using rule 141 (empty -> .)

    seen_for_incr_exp              shift and go to state 346
    empty                          shift and go to state 329

state 344

    (131) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 131 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 345

    (115) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 115 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)


state 346

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 347


state 347

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 348


state 348

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (94) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (109) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (105) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (106) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (107) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) empty -> .
    (114) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (123) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (124) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (125) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 206
    CLOSE_CURLY     reduce using rule 141 (empty -> .)
    IF_KWD          shift and go to state 207
    WHILE_KWD       shift and go to state 210
    FOR_KWD         shift and go to state 211

    FUNC_STATEMENT_STAR            shift and go to state 349
    ASSIGN                         shift and go to state 197
    FUNC_CALL                      shift and go to state 198
    READ                           shift and go to state 199
    WRITE                          shift and go to state 200
    FUNC_FLOW_CONTROL              shift and go to state 201
    FUNC_RETURN                    shift and go to state 202
    empty                          shift and go to state 203
    FUNC_DECISION                  shift and go to state 204
    FUNC_REPETITION                shift and go to state 205
    FUNC_CONDITIONAL_REP           shift and go to state 208
    FUNC_UNCONDITIONAL_REP         shift and go to state 209

state 349

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 350


state 350

    (125) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 125 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMI_COLON in state 242 resolved as shift
WARNING: reduce/reduce conflict in state 134 resolved using rule (seen_id -> <empty>)
WARNING: rejected rule (seen_arg -> <empty>) in state 134
WARNING: reduce/reduce conflict in state 137 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (seen_arg -> <empty>) in state 137
WARNING: reduce/reduce conflict in state 187 resolved using rule (seen_factor -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 187
WARNING: reduce/reduce conflict in state 247 resolved using rule (seen_id -> <empty>)
WARNING: rejected rule (seen_arg -> <empty>) in state 247
WARNING: reduce/reduce conflict in state 249 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (seen_arg -> <empty>) in state 249
