Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION
Rule 3     STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION
Rule 4     STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION
Rule 5     STRUCTURE_DEFINITION -> empty
Rule 6     seen_program_id -> empty
Rule 7     seen_main_kwd -> empty
Rule 8     CLASS_STAR -> CLASS CLASS_STAR
Rule 9     CLASS_STAR -> empty
Rule 10    CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
Rule 11    seen_class_id_declaration -> empty
Rule 12    seen_class_attr -> empty
Rule 13    CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 14    VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 15    VAR_LIST_STAR -> empty
Rule 16    VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON
Rule 17    SYMBOL_LIST -> ID SYMBOL_LIST_P
Rule 18    SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P
Rule 19    SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P
Rule 20    SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P
Rule 21    SYMBOL_LIST_P -> COMMA
Rule 22    SYMBOL_LIST_P -> empty
Rule 23    READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 24    READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 25    READABLE_LIST_P -> empty
Rule 26    seen_readable -> empty
Rule 27    GLOBAL_VAR -> VAR_LIST_STAR
Rule 28    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 29    FUNC_DEF_STAR -> empty
Rule 30    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 31    seen_func_id -> empty
Rule 32    seen_func_params -> empty
Rule 33    seen_func_vars -> empty
Rule 34    FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P
Rule 35    FUNC_PARAM -> empty
Rule 36    FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P
Rule 37    FUNC_PARAM_P -> empty
Rule 38    ARG_DECLARATION -> ID COLON TYPE
Rule 39    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 40    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 41    STATEMENT_STAR -> empty
Rule 42    STATEMENT -> ASSIGN SEMI_COLON
Rule 43    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 44    STATEMENT -> READ SEMI_COLON
Rule 45    STATEMENT -> PRINT SEMI_COLON
Rule 46    STATEMENT -> PRINTLN SEMI_COLON
Rule 47    STATEMENT -> OPEN SEMI_COLON
Rule 48    STATEMENT -> WRITE SEMI_COLON
Rule 49    STATEMENT -> FLOW_CONTROL
Rule 50    STATEMENT -> FUNC_RETURN
Rule 51    OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 52    seen_open_buffer -> empty
Rule 53    WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 54    seen_write_buffer -> empty
Rule 55    seen_file_path -> empty
Rule 56    seen_separator -> empty
Rule 57    FLOW_CONTROL -> DECISION
Rule 58    FLOW_CONTROL -> REPETITION
Rule 59    FOR_INCR_STATEMENT -> ASSIGN
Rule 60    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 61    FOR_INCR_STATEMENT -> READ
Rule 62    FOR_INCR_STATEMENT -> PRINT
Rule 63    FOR_INCR_STATEMENT -> PRINTLN
Rule 64    ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
Rule 65    ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
Rule 66    ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
Rule 67    ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
Rule 68    ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
Rule 69    ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
Rule 70    ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
Rule 71    seen_equals -> empty
Rule 72    seen_plus_equals -> empty
Rule 73    seen_minus_equals -> empty
Rule 74    seen_times_equals -> empty
Rule 75    seen_over_equals -> empty
Rule 76    seen_plus_plus -> empty
Rule 77    seen_minus_minus -> empty
Rule 78    EXP -> TERM seen_term EXP_P
Rule 79    EXP -> MINUS seen_unary_minus EXP pop_unary_minus
Rule 80    seen_term -> <empty>
Rule 81    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 82    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 83    EXP_P -> empty
Rule 84    seen_term_op -> <empty>
Rule 85    EXPRESSION -> EXP
Rule 86    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 87    seen_comp -> empty
Rule 88    seen_comp_op -> empty
Rule 89    COMP -> BIGGER
Rule 90    COMP -> BIGGER_EQ
Rule 91    COMP -> SMALLER
Rule 92    COMP -> SMALLER_EQ
Rule 93    COMP -> DOUBLE_EQUALS
Rule 94    COMP -> NOT_EQUALS
Rule 95    COMP -> AND
Rule 96    COMP -> OR
Rule 97    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 98    FACTOR -> NOT seen_not FACTOR pop_not
Rule 99    FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus
Rule 100   FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 101   FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 102   FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 103   FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
Rule 104   FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
Rule 105   FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
Rule 106   FACTOR -> FUNC_CALL
Rule 107   FACTOR -> CLASS_INSTANCE
Rule 108   FACTOR -> VAR seen_var_as_factor
Rule 109   FACTOR -> CONSTANT
Rule 110   seen_randint -> empty
Rule 111   seen_randint_arg -> empty
Rule 112   seen_strlen -> empty
Rule 113   seen_substr_str -> empty
Rule 114   seen_substr_idx -> empty
Rule 115   seen_substr_size -> empty
Rule 116   seen_substr -> empty
Rule 117   seen_stox_factor -> empty
Rule 118   seen_stoi_kwd -> empty
Rule 119   seen_stof_kwd -> empty
Rule 120   seen_stob_kwd -> empty
Rule 121   pop_not -> empty
Rule 122   seen_not -> empty
Rule 123   pop_unary_minus -> empty
Rule 124   seen_unary_minus -> empty
Rule 125   seen_open_parenthesis -> empty
Rule 126   seen_close_parenthesis -> empty
Rule 127   seen_var_in_assign -> empty
Rule 128   seen_var_as_factor -> empty
Rule 129   seen_var_in_io -> empty
Rule 130   seen_cte_i -> empty
Rule 131   seen_cte_f -> empty
Rule 132   seen_cte_s -> empty
Rule 133   seen_cte_false -> empty
Rule 134   seen_cte_true -> empty
Rule 135   CONSTANT -> CTE_I seen_cte_i
Rule 136   CONSTANT -> CTE_F seen_cte_f
Rule 137   CONSTANT -> CTE_S seen_cte_s
Rule 138   CONSTANT -> CTE_B
Rule 139   CTE_B -> CTE_TRUE seen_cte_true
Rule 140   CTE_B -> CTE_FALSE seen_cte_false
Rule 141   CLASS_REFERENCE -> ID DOT seen_dot_operator
Rule 142   CLASS_REFERENCE -> ARRAY seen_var_in_assign DOT seen_dot_operator
Rule 143   CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator
Rule 144   seen_this_kwd -> empty
Rule 145   VAR -> ID
Rule 146   VAR -> ARRAY
Rule 147   VAR -> CLASS_REFERENCE VAR
Rule 148   CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 149   seen_class_id_instance -> empty
Rule 150   seen_dot_operator -> empty
Rule 151   seen_this_dot_operator -> empty
Rule 152   ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 153   ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 154   ARRAY_P -> empty
Rule 155   seen_array_id -> empty
Rule 156   seen_open_bracket -> empty
Rule 157   seen_array_access -> empty
Rule 158   ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
Rule 159   ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
Rule 160   ARRAY_DECLARATION_P -> empty
Rule 161   seen_array_def_id -> empty
Rule 162   seen_array_def_dim -> empty
Rule 163   TERM -> FACTOR seen_factor TERM_P
Rule 164   TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 165   TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 166   TERM_P -> empty
Rule 167   seen_factor -> empty
Rule 168   seen_factor_op -> empty
Rule 169   FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 170   FUNC_CALL -> CLASS_REFERENCE FUNC_CALL
Rule 171   seen_func_call_id -> empty
Rule 172   ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 173   ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 174   ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 175   ARG_LIST -> empty
Rule 176   ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 177   ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 178   ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 179   ARG_LIST_P -> empty
Rule 180   seen_arg -> empty
Rule 181   FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 182   FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 183   FUNC_RETURN -> RETURN_KWD SEMI_COLON
Rule 184   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 185   PRINT -> PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 186   PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 187   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 188   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 189   PRINTABLE_P -> empty
Rule 190   seen_printable -> empty
Rule 191   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 192   DECISION_P -> ELSE_KWD seen_else_kwd DECISION
Rule 193   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 194   DECISION_P -> empty
Rule 195   seen_if_kwd -> empty
Rule 196   seen_else_kwd -> empty
Rule 197   REPETITION -> CONDITIONAL_REP
Rule 198   REPETITION -> UNCONDITIONAL_REP
Rule 199   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 200   seen_while_kwd -> empty
Rule 201   seen_while_exp -> empty
Rule 202   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 203   seen_for_kwd -> empty
Rule 204   seen_for_incr_exp -> empty
Rule 205   seen_for_start_exp -> empty
Rule 206   seen_for_end_exp -> empty
Rule 207   TYPE -> TYPE_I
Rule 208   TYPE -> TYPE_F
Rule 209   TYPE -> TYPE_S
Rule 210   TYPE -> TYPE_B
Rule 211   TYPE -> ID seen_id_as_class_name
Rule 212   TYPE -> TYPE_V
Rule 213   seen_id_as_class_name -> empty
Rule 214   empty -> <empty>

Terminals, with rules where they appear

AND                  : 95
ATTR_KWD             : 13
BIGGER               : 89
BIGGER_EQ            : 90
CLASS_KWD            : 10
CLOSE_BRACKET        : 152 153 158 159
CLOSE_CURLY          : 1 10 13 30 39 191 193 199 202
CLOSE_PARENTHESIS    : 1 30 51 53 97 100 101 102 103 104 105 148 169 184 185 186 191 199 202
COLON                : 16 38
COMMA                : 19 20 21 24 36 51 51 53 53 103 103 105 176 177 178 188
CTE_F                : 136
CTE_FALSE            : 140
CTE_I                : 135 158 159
CTE_S                : 137
CTE_TRUE             : 139
DOT                  : 141 142 143
DOUBLE_EQUALS        : 93
ELSE_KWD             : 192 193
EQUALS               : 64 202
FOR_KWD              : 202
FWD_SLASH            : 165
ID                   : 1 10 17 19 30 38 141 145 148 152 158 169 211
IF_KWD               : 191
MAIN_KWD             : 1
MINUS                : 79 82 99
MINUS_EQUALS         : 66
MINUS_MINUS          : 70
NEW_KWD              : 148
NOT                  : 98
NOT_EQUALS           : 94
OPEN_BRACKET         : 152 153 158 159
OPEN_CURLY           : 1 10 13 30 39 191 193 199 202
OPEN_KWD             : 51
OPEN_PARENTHESIS     : 1 30 51 53 97 100 101 102 103 104 105 148 169 184 185 186 191 199 202
OR                   : 96
OVER_EQUALS          : 68
PLUS                 : 81
PLUS_EQUALS          : 65
PLUS_PLUS            : 69
PRINTLN_KWD          : 186
PRINT_KWD            : 185
PROGRAM_KWD          : 1
RANDINT_KWD          : 105
READ_KWD             : 184
RETURN_KWD           : 181 182 183
SEMI_COLON           : 1 16 42 43 44 45 46 47 48 181 182 183 202 202
SMALLER              : 91
SMALLER_EQ           : 92
STAR                 : 164
STOB_KWD             : 102
STOF_KWD             : 101
STOI_KWD             : 100
STRLEN_KWD           : 104
SUBSTR_KWD           : 103
THIS_KWD             : 143
TIMES_EQUALS         : 67
TYPE_B               : 210
TYPE_F               : 208
TYPE_I               : 207
TYPE_S               : 209
TYPE_V               : 212
VARS_KWD             : 39
WHILE_KWD            : 199
WRITE_KWD            : 53
error                : 

Nonterminals, with rules where they appear

ARG_DECLARATION      : 34 36
ARG_LIST             : 169
ARG_LIST_P           : 172 173 174 176 177 178
ARRAY                : 142 146
ARRAY_DECLARATION    : 18 20
ARRAY_DECLARATION_P  : 158 159
ARRAY_P              : 152 153
ASSIGN               : 42 59
CLASS                : 8
CLASS_ATTR           : 10
CLASS_INSTANCE       : 107
CLASS_REFERENCE      : 147 170
CLASS_STAR           : 3 8
COMP                 : 86
CONDITIONAL_REP      : 197
CONSTANT             : 109
CTE_B                : 138
DECISION             : 57 192
DECISION_P           : 191
EXP                  : 79 85 86
EXPRESSION           : 51 51 53 53 64 65 66 67 68 86 97 100 101 102 103 103 103 104 105 105 152 153 173 177 181 187 188 191 199 202 202
EXP_P                : 78 81 82
FACTOR               : 98 99 163 164 165
FLOW_CONTROL         : 49
FOR_INCR_STATEMENT   : 202
FUNC_CALL            : 43 60 106 170 174 178 182
FUNC_DEF             : 28
FUNC_DEF_STAR        : 4 10 28
FUNC_PARAM           : 30
FUNC_PARAM_P         : 34 36
FUNC_RETURN          : 50
GLOBAL_VAR           : 2
OPEN                 : 47
PRINT                : 45 62
PRINTABLE            : 185 186
PRINTABLE_P          : 187 188
PRINTLN              : 46 63
PROGRAM              : 0
READ                 : 44 61
READABLE_LIST        : 184
READABLE_LIST_P      : 23 24
REPETITION           : 58
STATEMENT            : 40
STATEMENT_STAR       : 1 30 40 191 193 199 202
STRUCTURE_DEFINITION : 1 2 3 4
SYMBOL_LIST          : 16
SYMBOL_LIST_P        : 17 18 19 20
TERM                 : 78 81 82
TERM_P               : 163 164 165
TYPE                 : 16 30 38
UNCONDITIONAL_REP    : 198
VAR                  : 23 24 51 53 64 65 66 67 68 69 70 108 147 172 176 202
VARS                 : 30
VAR_LIST             : 14
VAR_LIST_STAR        : 13 14 27 39
WRITE                : 48
empty                : 5 6 7 9 11 12 15 22 25 26 29 31 32 33 35 37 41 52 54 55 56 71 72 73 74 75 76 77 83 87 88 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 144 149 150 151 154 155 156 157 160 161 162 166 167 168 171 175 179 180 189 190 194 195 196 200 201 203 204 205 206 213
pop_not              : 98
pop_unary_minus      : 79 99
seen_arg             : 172 173 174 176 177 178
seen_array_access    : 152 153
seen_array_def_dim   : 158 159
seen_array_def_id    : 158
seen_array_id        : 152
seen_class_attr      : 10
seen_class_id_declaration : 10
seen_class_id_instance : 148
seen_close_parenthesis : 97 100 101 102 103 104 105
seen_comp            : 86
seen_comp_op         : 86
seen_cte_f           : 136
seen_cte_false       : 140
seen_cte_i           : 135 158 159
seen_cte_s           : 137
seen_cte_true        : 139
seen_dot_operator    : 141 142
seen_else_kwd        : 192 193
seen_equals          : 64
seen_factor          : 163 164 165
seen_factor_op       : 164 165
seen_file_path       : 51 53
seen_for_end_exp     : 202
seen_for_incr_exp    : 202
seen_for_kwd         : 202
seen_for_start_exp   : 202
seen_func_call_id    : 169
seen_func_id         : 30
seen_func_params     : 30
seen_func_vars       : 30
seen_id_as_class_name : 211
seen_if_kwd          : 191
seen_main_kwd        : 1
seen_minus_equals    : 66
seen_minus_minus     : 70
seen_not             : 98
seen_open_bracket    : 152 153
seen_open_buffer     : 51
seen_open_parenthesis : 97 100 101 102 103 104 105
seen_over_equals     : 68
seen_plus_equals     : 65
seen_plus_plus       : 69
seen_printable       : 187 188
seen_program_id      : 1
seen_randint         : 105
seen_randint_arg     : 105 105
seen_readable        : 23 24
seen_separator       : 51 53
seen_stob_kwd        : 102
seen_stof_kwd        : 101
seen_stoi_kwd        : 100
seen_stox_factor     : 100 101 102
seen_strlen          : 104
seen_substr          : 103
seen_substr_idx      : 103
seen_substr_size     : 103
seen_substr_str      : 103
seen_term            : 78 81 82
seen_term_op         : 81 82
seen_this_dot_operator : 143
seen_this_kwd        : 143
seen_times_equals    : 67
seen_unary_minus     : 79 99
seen_var_as_factor   : 108 172 176
seen_var_in_assign   : 23 24 64 65 66 67 68 69 70 142
seen_var_in_io       : 51 53
seen_while_exp       : 199
seen_while_kwd       : 199
seen_write_buffer    : 53

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (6) seen_program_id -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (6) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 6 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (214) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    MAIN_KWD        reduce using rule 214 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    ID              shift and go to state 7
    TYPE_V          shift and go to state 24

  ! CLASS_KWD       [ reduce using rule 214 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 214 (empty -> .) ]
  ! ID              [ reduce using rule 214 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 214 (empty -> .) ]

    STRUCTURE_DEFINITION           shift and go to state 8
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 25

state 7

    (211) TYPE -> ID . seen_id_as_class_name
    (17) SYMBOL_LIST -> ID . SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (213) seen_id_as_class_name -> . empty
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (161) seen_array_def_id -> . empty
    (214) empty -> .

    COMMA           shift and go to state 30
    ID              reduce using rule 214 (empty -> .)
    COLON           reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    seen_id_as_class_name          shift and go to state 26
    SYMBOL_LIST_P                  shift and go to state 27
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 29

state 8

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 31


state 9

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (214) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    MAIN_KWD        reduce using rule 214 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    ID              shift and go to state 7
    TYPE_V          shift and go to state 24

  ! CLASS_KWD       [ reduce using rule 214 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 214 (empty -> .) ]
  ! ID              [ reduce using rule 214 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 214 (empty -> .) ]

    GLOBAL_VAR                     shift and go to state 9
    STRUCTURE_DEFINITION           shift and go to state 32
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 25

state 10

    (3) STRUCTURE_DEFINITION -> CLASS_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (214) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    MAIN_KWD        reduce using rule 214 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    ID              shift and go to state 7
    TYPE_V          shift and go to state 24

  ! CLASS_KWD       [ reduce using rule 214 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 214 (empty -> .) ]
  ! ID              [ reduce using rule 214 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 214 (empty -> .) ]

    CLASS_STAR                     shift and go to state 10
    STRUCTURE_DEFINITION           shift and go to state 33
    GLOBAL_VAR                     shift and go to state 9
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 25

state 11

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (214) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    MAIN_KWD        reduce using rule 214 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    ID              shift and go to state 7
    TYPE_V          shift and go to state 24

  ! CLASS_KWD       [ reduce using rule 214 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 214 (empty -> .) ]
  ! ID              [ reduce using rule 214 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 214 (empty -> .) ]

    FUNC_DEF_STAR                  shift and go to state 11
    STRUCTURE_DEFINITION           shift and go to state 34
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 25

state 12

    (5) STRUCTURE_DEFINITION -> empty .
    (9) CLASS_STAR -> empty .
    (29) FUNC_DEF_STAR -> empty .
    (15) VAR_LIST_STAR -> empty .

  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
    MAIN_KWD        reduce using rule 5 (STRUCTURE_DEFINITION -> empty .)
    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)

  ! MAIN_KWD        [ reduce using rule 9 (CLASS_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! ID              [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! ID              [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]


state 13

    (27) GLOBAL_VAR -> VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_I          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_F          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_S          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_B          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    ID              reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_V          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) CLASS_STAR -> CLASS . CLASS_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (214) empty -> .

  ! shift/reduce conflict for CLASS_KWD resolved as shift
    CLASS_KWD       shift and go to state 17
    TYPE_I          reduce using rule 214 (empty -> .)
    TYPE_F          reduce using rule 214 (empty -> .)
    TYPE_S          reduce using rule 214 (empty -> .)
    TYPE_B          reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    TYPE_V          reduce using rule 214 (empty -> .)
    MAIN_KWD        reduce using rule 214 (empty -> .)

  ! CLASS_KWD       [ reduce using rule 214 (empty -> .) ]

    CLASS                          shift and go to state 14
    CLASS_STAR                     shift and go to state 35
    empty                          shift and go to state 36

state 15

    (28) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (214) empty -> .
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V

  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    CLASS_KWD       reduce using rule 214 (empty -> .)
    MAIN_KWD        reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    ID              shift and go to state 39
    TYPE_V          shift and go to state 24

  ! TYPE_I          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 214 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 214 (empty -> .) ]
  ! ID              [ reduce using rule 214 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 214 (empty -> .) ]

    FUNC_DEF                       shift and go to state 15
    FUNC_DEF_STAR                  shift and go to state 37
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 16

    (14) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (214) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for ID resolved as shift
    CLASS_KWD       reduce using rule 214 (empty -> .)
    TYPE_I          reduce using rule 214 (empty -> .)
    TYPE_F          reduce using rule 214 (empty -> .)
    TYPE_S          reduce using rule 214 (empty -> .)
    TYPE_B          reduce using rule 214 (empty -> .)
    TYPE_V          reduce using rule 214 (empty -> .)
    MAIN_KWD        reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 42

  ! ID              [ reduce using rule 214 (empty -> .) ]

    VAR_LIST                       shift and go to state 16
    VAR_LIST_STAR                  shift and go to state 40
    empty                          shift and go to state 41
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 25

state 17

    (10) CLASS -> CLASS_KWD . ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 43


state 18

    (30) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 44


state 19

    (16) VAR_LIST -> SYMBOL_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 45


state 20

    (207) TYPE -> TYPE_I .

    ID              reduce using rule 207 (TYPE -> TYPE_I .)
    SEMI_COLON      reduce using rule 207 (TYPE -> TYPE_I .)
    COMMA           reduce using rule 207 (TYPE -> TYPE_I .)
    CLOSE_PARENTHESIS reduce using rule 207 (TYPE -> TYPE_I .)


state 21

    (208) TYPE -> TYPE_F .

    ID              reduce using rule 208 (TYPE -> TYPE_F .)
    SEMI_COLON      reduce using rule 208 (TYPE -> TYPE_F .)
    COMMA           reduce using rule 208 (TYPE -> TYPE_F .)
    CLOSE_PARENTHESIS reduce using rule 208 (TYPE -> TYPE_F .)


state 22

    (209) TYPE -> TYPE_S .

    ID              reduce using rule 209 (TYPE -> TYPE_S .)
    SEMI_COLON      reduce using rule 209 (TYPE -> TYPE_S .)
    COMMA           reduce using rule 209 (TYPE -> TYPE_S .)
    CLOSE_PARENTHESIS reduce using rule 209 (TYPE -> TYPE_S .)


state 23

    (210) TYPE -> TYPE_B .

    ID              reduce using rule 210 (TYPE -> TYPE_B .)
    SEMI_COLON      reduce using rule 210 (TYPE -> TYPE_B .)
    COMMA           reduce using rule 210 (TYPE -> TYPE_B .)
    CLOSE_PARENTHESIS reduce using rule 210 (TYPE -> TYPE_B .)


state 24

    (212) TYPE -> TYPE_V .

    ID              reduce using rule 212 (TYPE -> TYPE_V .)
    SEMI_COLON      reduce using rule 212 (TYPE -> TYPE_V .)
    COMMA           reduce using rule 212 (TYPE -> TYPE_V .)
    CLOSE_PARENTHESIS reduce using rule 212 (TYPE -> TYPE_V .)


state 25

    (18) SYMBOL_LIST -> ARRAY_DECLARATION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 30
    COLON           reduce using rule 214 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 46
    empty                          shift and go to state 47

state 26

    (211) TYPE -> ID seen_id_as_class_name .

    ID              reduce using rule 211 (TYPE -> ID seen_id_as_class_name .)
    SEMI_COLON      reduce using rule 211 (TYPE -> ID seen_id_as_class_name .)
    COMMA           reduce using rule 211 (TYPE -> ID seen_id_as_class_name .)
    CLOSE_PARENTHESIS reduce using rule 211 (TYPE -> ID seen_id_as_class_name .)


state 27

    (17) SYMBOL_LIST -> ID SYMBOL_LIST_P .

    COLON           reduce using rule 17 (SYMBOL_LIST -> ID SYMBOL_LIST_P .)


state 28

    (158) ARRAY_DECLARATION -> ID seen_array_def_id . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    OPEN_BRACKET    shift and go to state 48


state 29

    (213) seen_id_as_class_name -> empty .
    (22) SYMBOL_LIST_P -> empty .
    (161) seen_array_def_id -> empty .

    ID              reduce using rule 213 (seen_id_as_class_name -> empty .)
    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)
    OPEN_BRACKET    reduce using rule 161 (seen_array_def_id -> empty .)


state 30

    (19) SYMBOL_LIST_P -> COMMA . ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> COMMA . ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> COMMA .
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    ID              shift and go to state 49
    COLON           reduce using rule 21 (SYMBOL_LIST_P -> COMMA .)

    ARRAY_DECLARATION              shift and go to state 50

state 31

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 51


state 32

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 2 (STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .)


state 33

    (3) STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 3 (STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .)


state 34

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 4 (STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .)


state 35

    (8) CLASS_STAR -> CLASS CLASS_STAR .

    CLASS_KWD       reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_I          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_F          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_S          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_B          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    ID              reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_V          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)


state 36

    (9) CLASS_STAR -> empty .

    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 9 (CLASS_STAR -> empty .)


state 37

    (28) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    CLASS_KWD       reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_I          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_F          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_S          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_B          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    ID              reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_V          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    MAIN_KWD        reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 38

    (29) FUNC_DEF_STAR -> empty .

    CLASS_KWD       reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_I          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_F          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_S          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_B          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    ID              reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_V          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    MAIN_KWD        reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 29 (FUNC_DEF_STAR -> empty .)


state 39

    (211) TYPE -> ID . seen_id_as_class_name
    (213) seen_id_as_class_name -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_id_as_class_name          shift and go to state 26
    empty                          shift and go to state 52

state 40

    (14) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_I          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_F          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_S          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_B          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    ID              reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_V          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 41

    (15) VAR_LIST_STAR -> empty .

    CLASS_KWD       reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_I          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_F          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_S          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_B          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    ID              reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_V          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 15 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 15 (VAR_LIST_STAR -> empty .)


state 42

    (17) SYMBOL_LIST -> ID . SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (161) seen_array_def_id -> . empty
    (214) empty -> .

    COMMA           shift and go to state 30
    COLON           reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 27
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 53

state 43

    (10) CLASS -> CLASS_KWD ID . seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (11) seen_class_id_declaration -> . empty
    (214) empty -> .

    OPEN_CURLY      reduce using rule 214 (empty -> .)

    seen_class_id_declaration      shift and go to state 54
    empty                          shift and go to state 55

state 44

    (30) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (31) seen_func_id -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_func_id                   shift and go to state 56
    empty                          shift and go to state 57

state 45

    (16) VAR_LIST -> SYMBOL_LIST COLON . TYPE SEMI_COLON
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    ID              shift and go to state 39
    TYPE_V          shift and go to state 24

    TYPE                           shift and go to state 58

state 46

    (18) SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P .

    COLON           reduce using rule 18 (SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P .)


state 47

    (22) SYMBOL_LIST_P -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)


state 48

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CTE_I           shift and go to state 59


state 49

    (19) SYMBOL_LIST_P -> COMMA ID . SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (161) seen_array_def_id -> . empty
    (214) empty -> .

    COMMA           shift and go to state 30
    COLON           reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 60
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 53

state 50

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 30
    COLON           reduce using rule 214 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 61
    empty                          shift and go to state 47

state 51

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 62


state 52

    (213) seen_id_as_class_name -> empty .

    ID              reduce using rule 213 (seen_id_as_class_name -> empty .)
    SEMI_COLON      reduce using rule 213 (seen_id_as_class_name -> empty .)
    COMMA           reduce using rule 213 (seen_id_as_class_name -> empty .)
    CLOSE_PARENTHESIS reduce using rule 213 (seen_id_as_class_name -> empty .)


state 53

    (22) SYMBOL_LIST_P -> empty .
    (161) seen_array_def_id -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)
    OPEN_BRACKET    reduce using rule 161 (seen_array_def_id -> empty .)


state 54

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration . OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 63


state 55

    (11) seen_class_id_declaration -> empty .

    OPEN_CURLY      reduce using rule 11 (seen_class_id_declaration -> empty .)


state 56

    (30) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 64


state 57

    (31) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 31 (seen_func_id -> empty .)


state 58

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 65


state 59

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (130) seen_cte_i -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_i                     shift and go to state 66
    empty                          shift and go to state 67

state 60

    (19) SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .

    COLON           reduce using rule 19 (SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .)


state 61

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P .

    COLON           reduce using rule 20 (SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P .)


state 62

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 68


state 63

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY . CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (13) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 70

    CLASS_ATTR                     shift and go to state 69

state 64

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (34) FUNC_PARAM -> . ARG_DECLARATION FUNC_PARAM_P
    (35) FUNC_PARAM -> . empty
    (38) ARG_DECLARATION -> . ID COLON TYPE
    (214) empty -> .

    ID              shift and go to state 71
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    FUNC_PARAM                     shift and go to state 72
    ARG_DECLARATION                shift and go to state 73
    empty                          shift and go to state 74

state 65

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLASS_KWD       reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_I          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_F          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_S          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_B          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_V          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)


state 66

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (162) seen_array_def_dim -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_array_def_dim             shift and go to state 75
    empty                          shift and go to state 76

state 67

    (130) seen_cte_i -> empty .

    CLOSE_BRACKET   reduce using rule 130 (seen_cte_i -> empty .)
    STAR            reduce using rule 130 (seen_cte_i -> empty .)
    FWD_SLASH       reduce using rule 130 (seen_cte_i -> empty .)
    PLUS            reduce using rule 130 (seen_cte_i -> empty .)
    MINUS           reduce using rule 130 (seen_cte_i -> empty .)
    BIGGER          reduce using rule 130 (seen_cte_i -> empty .)
    BIGGER_EQ       reduce using rule 130 (seen_cte_i -> empty .)
    SMALLER         reduce using rule 130 (seen_cte_i -> empty .)
    SMALLER_EQ      reduce using rule 130 (seen_cte_i -> empty .)
    DOUBLE_EQUALS   reduce using rule 130 (seen_cte_i -> empty .)
    NOT_EQUALS      reduce using rule 130 (seen_cte_i -> empty .)
    AND             reduce using rule 130 (seen_cte_i -> empty .)
    OR              reduce using rule 130 (seen_cte_i -> empty .)
    SEMI_COLON      reduce using rule 130 (seen_cte_i -> empty .)
    COMMA           reduce using rule 130 (seen_cte_i -> empty .)
    CLOSE_PARENTHESIS reduce using rule 130 (seen_cte_i -> empty .)


state 68

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (7) seen_main_kwd -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    READ_KWD        reduce using rule 214 (empty -> .)
    PRINT_KWD       reduce using rule 214 (empty -> .)
    PRINTLN_KWD     reduce using rule 214 (empty -> .)
    OPEN_KWD        reduce using rule 214 (empty -> .)
    WRITE_KWD       reduce using rule 214 (empty -> .)
    RETURN_KWD      reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    IF_KWD          reduce using rule 214 (empty -> .)
    WHILE_KWD       reduce using rule 214 (empty -> .)
    FOR_KWD         reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    seen_main_kwd                  shift and go to state 77
    empty                          shift and go to state 78

state 69

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR . seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (12) seen_class_attr -> . empty
    (214) empty -> .

    TYPE_I          reduce using rule 214 (empty -> .)
    TYPE_F          reduce using rule 214 (empty -> .)
    TYPE_S          reduce using rule 214 (empty -> .)
    TYPE_B          reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    TYPE_V          reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    seen_class_attr                shift and go to state 79
    empty                          shift and go to state 80

state 70

    (13) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 81


state 71

    (38) ARG_DECLARATION -> ID . COLON TYPE

    COLON           shift and go to state 82


state 72

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 83


state 73

    (34) FUNC_PARAM -> ARG_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA ARG_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 85
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 84
    empty                          shift and go to state 86

state 74

    (35) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 35 (FUNC_PARAM -> empty .)


state 75

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_BRACKET   shift and go to state 87


state 76

    (162) seen_array_def_dim -> empty .

    CLOSE_BRACKET   reduce using rule 162 (seen_array_def_dim -> empty .)


state 77

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (186) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 88
    READ_KWD        shift and go to state 103
    PRINT_KWD       shift and go to state 104
    PRINTLN_KWD     shift and go to state 105
    OPEN_KWD        shift and go to state 106
    WRITE_KWD       shift and go to state 107
    RETURN_KWD      shift and go to state 110
    THIS_KWD        shift and go to state 112
    IF_KWD          shift and go to state 113
    WHILE_KWD       shift and go to state 116
    FOR_KWD         shift and go to state 117

    STATEMENT_STAR                 shift and go to state 89
    STATEMENT                      shift and go to state 90
    empty                          shift and go to state 91
    ASSIGN                         shift and go to state 92
    FUNC_CALL                      shift and go to state 93
    READ                           shift and go to state 94
    PRINT                          shift and go to state 95
    PRINTLN                        shift and go to state 96
    OPEN                           shift and go to state 97
    WRITE                          shift and go to state 98
    FLOW_CONTROL                   shift and go to state 99
    FUNC_RETURN                    shift and go to state 100
    VAR                            shift and go to state 101
    CLASS_REFERENCE                shift and go to state 102
    DECISION                       shift and go to state 108
    REPETITION                     shift and go to state 109
    ARRAY                          shift and go to state 111
    CONDITIONAL_REP                shift and go to state 114
    UNCONDITIONAL_REP              shift and go to state 115

state 78

    (7) seen_main_kwd -> empty .

    ID              reduce using rule 7 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    PRINT_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    PRINTLN_KWD     reduce using rule 7 (seen_main_kwd -> empty .)
    OPEN_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    WRITE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    RETURN_KWD      reduce using rule 7 (seen_main_kwd -> empty .)
    THIS_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 7 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 7 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 7 (seen_main_kwd -> empty .)


state 79

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr . FUNC_DEF_STAR CLOSE_CURLY
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (214) empty -> .
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    ID              shift and go to state 39
    TYPE_V          shift and go to state 24

    FUNC_DEF_STAR                  shift and go to state 118
    FUNC_DEF                       shift and go to state 15
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 80

    (12) seen_class_attr -> empty .

    TYPE_I          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_F          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_S          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_B          reduce using rule 12 (seen_class_attr -> empty .)
    ID              reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_V          reduce using rule 12 (seen_class_attr -> empty .)
    CLOSE_CURLY     reduce using rule 12 (seen_class_attr -> empty .)


state 81

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (214) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 42

    VAR_LIST_STAR                  shift and go to state 119
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 41
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 25

state 82

    (38) ARG_DECLARATION -> ID COLON . TYPE
    (207) TYPE -> . TYPE_I
    (208) TYPE -> . TYPE_F
    (209) TYPE -> . TYPE_S
    (210) TYPE -> . TYPE_B
    (211) TYPE -> . ID seen_id_as_class_name
    (212) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    ID              shift and go to state 39
    TYPE_V          shift and go to state 24

    TYPE                           shift and go to state 120

state 83

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (32) seen_func_params -> . empty
    (214) empty -> .

    VARS_KWD        reduce using rule 214 (empty -> .)

    seen_func_params               shift and go to state 121
    empty                          shift and go to state 122

state 84

    (34) FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 34 (FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P .)


state 85

    (36) FUNC_PARAM_P -> COMMA . ARG_DECLARATION FUNC_PARAM_P
    (38) ARG_DECLARATION -> . ID COLON TYPE

    ID              shift and go to state 71

    ARG_DECLARATION                shift and go to state 123

state 86

    (37) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 37 (FUNC_PARAM_P -> empty .)


state 87

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DECLARATION_P
    (159) ARRAY_DECLARATION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (160) ARRAY_DECLARATION_P -> . empty
    (214) empty -> .

    OPEN_BRACKET    shift and go to state 124
    COMMA           reduce using rule 214 (empty -> .)
    COLON           reduce using rule 214 (empty -> .)

    ARRAY_DECLARATION_P            shift and go to state 125
    empty                          shift and go to state 126

state 88

    (169) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (145) VAR -> ID .
    (141) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (152) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (171) seen_func_call_id -> . empty
    (155) seen_array_id -> . empty
    (214) empty -> .

    EQUALS          reduce using rule 145 (VAR -> ID .)
    PLUS_EQUALS     reduce using rule 145 (VAR -> ID .)
    MINUS_EQUALS    reduce using rule 145 (VAR -> ID .)
    TIMES_EQUALS    reduce using rule 145 (VAR -> ID .)
    OVER_EQUALS     reduce using rule 145 (VAR -> ID .)
    PLUS_PLUS       reduce using rule 145 (VAR -> ID .)
    MINUS_MINUS     reduce using rule 145 (VAR -> ID .)
    STAR            reduce using rule 145 (VAR -> ID .)
    FWD_SLASH       reduce using rule 145 (VAR -> ID .)
    PLUS            reduce using rule 145 (VAR -> ID .)
    MINUS           reduce using rule 145 (VAR -> ID .)
    BIGGER          reduce using rule 145 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 145 (VAR -> ID .)
    SMALLER         reduce using rule 145 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 145 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 145 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 145 (VAR -> ID .)
    AND             reduce using rule 145 (VAR -> ID .)
    OR              reduce using rule 145 (VAR -> ID .)
    SEMI_COLON      reduce using rule 145 (VAR -> ID .)
    COMMA           reduce using rule 145 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 145 (VAR -> ID .)
    CLOSE_BRACKET   reduce using rule 145 (VAR -> ID .)
    DOT             shift and go to state 128
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    seen_func_call_id              shift and go to state 127
    seen_array_id                  shift and go to state 129
    empty                          shift and go to state 130

state 89

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 131


state 90

    (40) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (186) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 88
    READ_KWD        shift and go to state 103
    PRINT_KWD       shift and go to state 104
    PRINTLN_KWD     shift and go to state 105
    OPEN_KWD        shift and go to state 106
    WRITE_KWD       shift and go to state 107
    RETURN_KWD      shift and go to state 110
    THIS_KWD        shift and go to state 112
    IF_KWD          shift and go to state 113
    WHILE_KWD       shift and go to state 116
    FOR_KWD         shift and go to state 117

    STATEMENT                      shift and go to state 90
    STATEMENT_STAR                 shift and go to state 132
    empty                          shift and go to state 91
    ASSIGN                         shift and go to state 92
    FUNC_CALL                      shift and go to state 93
    READ                           shift and go to state 94
    PRINT                          shift and go to state 95
    PRINTLN                        shift and go to state 96
    OPEN                           shift and go to state 97
    WRITE                          shift and go to state 98
    FLOW_CONTROL                   shift and go to state 99
    FUNC_RETURN                    shift and go to state 100
    VAR                            shift and go to state 101
    CLASS_REFERENCE                shift and go to state 102
    DECISION                       shift and go to state 108
    REPETITION                     shift and go to state 109
    ARRAY                          shift and go to state 111
    CONDITIONAL_REP                shift and go to state 114
    UNCONDITIONAL_REP              shift and go to state 115

state 91

    (41) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 41 (STATEMENT_STAR -> empty .)


state 92

    (42) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 133


state 93

    (43) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 134


state 94

    (44) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 135


state 95

    (45) STATEMENT -> PRINT . SEMI_COLON

    SEMI_COLON      shift and go to state 136


state 96

    (46) STATEMENT -> PRINTLN . SEMI_COLON

    SEMI_COLON      shift and go to state 137


state 97

    (47) STATEMENT -> OPEN . SEMI_COLON

    SEMI_COLON      shift and go to state 138


state 98

    (48) STATEMENT -> WRITE . SEMI_COLON

    SEMI_COLON      shift and go to state 139


state 99

    (49) STATEMENT -> FLOW_CONTROL .

    ID              reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    READ_KWD        reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    PRINT_KWD       reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    PRINTLN_KWD     reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    OPEN_KWD        reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    WRITE_KWD       reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    RETURN_KWD      reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    THIS_KWD        reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    IF_KWD          reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    WHILE_KWD       reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    FOR_KWD         reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    CLOSE_CURLY     reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)


state 100

    (50) STATEMENT -> FUNC_RETURN .

    ID              reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    READ_KWD        reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    PRINT_KWD       reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    PRINTLN_KWD     reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    OPEN_KWD        reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    WRITE_KWD       reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    RETURN_KWD      reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    THIS_KWD        reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    IF_KWD          reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    WHILE_KWD       reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    FOR_KWD         reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    CLOSE_CURLY     reduce using rule 50 (STATEMENT -> FUNC_RETURN .)


state 101

    (64) ASSIGN -> VAR . seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> VAR . seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> VAR . seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> VAR . seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> VAR . seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> VAR . seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> VAR . seen_var_in_assign MINUS_MINUS seen_minus_minus
    (127) seen_var_in_assign -> . empty
    (214) empty -> .

    EQUALS          reduce using rule 214 (empty -> .)
    PLUS_EQUALS     reduce using rule 214 (empty -> .)
    MINUS_EQUALS    reduce using rule 214 (empty -> .)
    TIMES_EQUALS    reduce using rule 214 (empty -> .)
    OVER_EQUALS     reduce using rule 214 (empty -> .)
    PLUS_PLUS       reduce using rule 214 (empty -> .)
    MINUS_MINUS     reduce using rule 214 (empty -> .)

    seen_var_in_assign             shift and go to state 140
    empty                          shift and go to state 141

state 102

    (170) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (147) VAR -> CLASS_REFERENCE . VAR
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 88
    THIS_KWD        shift and go to state 112

    CLASS_REFERENCE                shift and go to state 102
    FUNC_CALL                      shift and go to state 142
    VAR                            shift and go to state 143
    ARRAY                          shift and go to state 111

state 103

    (184) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 144


state 104

    (185) PRINT -> PRINT_KWD . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 145


state 105

    (186) PRINTLN -> PRINTLN_KWD . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 146


state 106

    (51) OPEN -> OPEN_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 147


state 107

    (53) WRITE -> WRITE_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 148


state 108

    (57) FLOW_CONTROL -> DECISION .

    ID              reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    READ_KWD        reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    PRINT_KWD       reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    PRINTLN_KWD     reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    OPEN_KWD        reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    WRITE_KWD       reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    RETURN_KWD      reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    THIS_KWD        reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    IF_KWD          reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    WHILE_KWD       reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    FOR_KWD         reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    CLOSE_CURLY     reduce using rule 57 (FLOW_CONTROL -> DECISION .)


state 109

    (58) FLOW_CONTROL -> REPETITION .

    ID              reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    READ_KWD        reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    PRINT_KWD       reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    PRINTLN_KWD     reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    OPEN_KWD        reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    WRITE_KWD       reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    RETURN_KWD      reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    THIS_KWD        reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    IF_KWD          reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    WHILE_KWD       reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    FOR_KWD         reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    CLOSE_CURLY     reduce using rule 58 (FLOW_CONTROL -> REPETITION .)


state 110

    (181) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> RETURN_KWD . SEMI_COLON
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (163) TERM -> . FACTOR seen_factor TERM_P
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    SEMI_COLON      shift and go to state 150
    ID              shift and go to state 153
    MINUS           shift and go to state 156
    THIS_KWD        shift and go to state 112
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 149
    FUNC_CALL                      shift and go to state 151
    EXP                            shift and go to state 152
    CLASS_REFERENCE                shift and go to state 102
    TERM                           shift and go to state 155
    ARRAY                          shift and go to state 157
    FACTOR                         shift and go to state 158
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CTE_B                          shift and go to state 173

state 111

    (146) VAR -> ARRAY .
    (142) CLASS_REFERENCE -> ARRAY . seen_var_in_assign DOT seen_dot_operator
    (127) seen_var_in_assign -> . empty
    (214) empty -> .

    EQUALS          reduce using rule 146 (VAR -> ARRAY .)
    PLUS_EQUALS     reduce using rule 146 (VAR -> ARRAY .)
    MINUS_EQUALS    reduce using rule 146 (VAR -> ARRAY .)
    TIMES_EQUALS    reduce using rule 146 (VAR -> ARRAY .)
    OVER_EQUALS     reduce using rule 146 (VAR -> ARRAY .)
    PLUS_PLUS       reduce using rule 146 (VAR -> ARRAY .)
    MINUS_MINUS     reduce using rule 146 (VAR -> ARRAY .)
    STAR            reduce using rule 146 (VAR -> ARRAY .)
    FWD_SLASH       reduce using rule 146 (VAR -> ARRAY .)
    PLUS            reduce using rule 146 (VAR -> ARRAY .)
    MINUS           reduce using rule 146 (VAR -> ARRAY .)
    BIGGER          reduce using rule 146 (VAR -> ARRAY .)
    BIGGER_EQ       reduce using rule 146 (VAR -> ARRAY .)
    SMALLER         reduce using rule 146 (VAR -> ARRAY .)
    SMALLER_EQ      reduce using rule 146 (VAR -> ARRAY .)
    DOUBLE_EQUALS   reduce using rule 146 (VAR -> ARRAY .)
    NOT_EQUALS      reduce using rule 146 (VAR -> ARRAY .)
    AND             reduce using rule 146 (VAR -> ARRAY .)
    OR              reduce using rule 146 (VAR -> ARRAY .)
    SEMI_COLON      reduce using rule 146 (VAR -> ARRAY .)
    COMMA           reduce using rule 146 (VAR -> ARRAY .)
    CLOSE_PARENTHESIS reduce using rule 146 (VAR -> ARRAY .)
    CLOSE_BRACKET   reduce using rule 146 (VAR -> ARRAY .)
    DOT             reduce using rule 214 (empty -> .)

    seen_var_in_assign             shift and go to state 176
    empty                          shift and go to state 141

state 112

    (143) CLASS_REFERENCE -> THIS_KWD . seen_this_kwd DOT seen_this_dot_operator
    (144) seen_this_kwd -> . empty
    (214) empty -> .

    DOT             reduce using rule 214 (empty -> .)

    seen_this_kwd                  shift and go to state 177
    empty                          shift and go to state 178

state 113

    (191) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 179


state 114

    (197) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    THIS_KWD        reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 197 (REPETITION -> CONDITIONAL_REP .)


state 115

    (198) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    THIS_KWD        reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 198 (REPETITION -> UNCONDITIONAL_REP .)


state 116

    (199) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (200) seen_while_kwd -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_while_kwd                 shift and go to state 180
    empty                          shift and go to state 181

state 117

    (202) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 182


state 118

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 183


state 119

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 184


state 120

    (38) ARG_DECLARATION -> ID COLON TYPE .

    COMMA           reduce using rule 38 (ARG_DECLARATION -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 38 (ARG_DECLARATION -> ID COLON TYPE .)


state 121

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (39) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 186

    VARS                           shift and go to state 185

state 122

    (32) seen_func_params -> empty .

    VARS_KWD        reduce using rule 32 (seen_func_params -> empty .)


state 123

    (36) FUNC_PARAM_P -> COMMA ARG_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA ARG_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 85
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 187
    empty                          shift and go to state 86

state 124

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CTE_I           shift and go to state 188


state 125

    (158) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .

    COMMA           reduce using rule 158 (ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)
    COLON           reduce using rule 158 (ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)


state 126

    (160) ARRAY_DECLARATION_P -> empty .

    COMMA           reduce using rule 160 (ARRAY_DECLARATION_P -> empty .)
    COLON           reduce using rule 160 (ARRAY_DECLARATION_P -> empty .)


state 127

    (169) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 189


state 128

    (141) CLASS_REFERENCE -> ID DOT . seen_dot_operator
    (150) seen_dot_operator -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)

    seen_dot_operator              shift and go to state 190
    empty                          shift and go to state 191

state 129

    (152) ARRAY -> ID seen_array_id . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_BRACKET    shift and go to state 192


state 130

    (171) seen_func_call_id -> empty .
    (155) seen_array_id -> empty .

    OPEN_PARENTHESIS reduce using rule 171 (seen_func_call_id -> empty .)
    OPEN_BRACKET    reduce using rule 155 (seen_array_id -> empty .)


state 131

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 132

    (40) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 40 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 133

    (42) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINT_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    OPEN_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WRITE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    RETURN_KWD      reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    THIS_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)


state 134

    (43) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 135

    (44) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINT_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    OPEN_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WRITE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    RETURN_KWD      reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    THIS_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)


state 136

    (45) STATEMENT -> PRINT SEMI_COLON .

    ID              reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    READ_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINT_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    OPEN_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WRITE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    RETURN_KWD      reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    THIS_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    IF_KWD          reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WHILE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    FOR_KWD         reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)


state 137

    (46) STATEMENT -> PRINTLN SEMI_COLON .

    ID              reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    READ_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINT_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    OPEN_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WRITE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    RETURN_KWD      reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    THIS_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    IF_KWD          reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WHILE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    FOR_KWD         reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)


state 138

    (47) STATEMENT -> OPEN SEMI_COLON .

    ID              reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    READ_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINT_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    OPEN_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    WRITE_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    RETURN_KWD      reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    THIS_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    IF_KWD          reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    WHILE_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    FOR_KWD         reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)


state 139

    (48) STATEMENT -> WRITE SEMI_COLON .

    ID              reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    READ_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    PRINT_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    OPEN_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    WRITE_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    RETURN_KWD      reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    THIS_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    IF_KWD          reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    WHILE_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    FOR_KWD         reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)


state 140

    (64) ASSIGN -> VAR seen_var_in_assign . EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> VAR seen_var_in_assign . PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> VAR seen_var_in_assign . MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> VAR seen_var_in_assign . TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> VAR seen_var_in_assign . OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> VAR seen_var_in_assign . PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> VAR seen_var_in_assign . MINUS_MINUS seen_minus_minus

    EQUALS          shift and go to state 193
    PLUS_EQUALS     shift and go to state 194
    MINUS_EQUALS    shift and go to state 195
    TIMES_EQUALS    shift and go to state 196
    OVER_EQUALS     shift and go to state 197
    PLUS_PLUS       shift and go to state 198
    MINUS_MINUS     shift and go to state 199


state 141

    (127) seen_var_in_assign -> empty .

    EQUALS          reduce using rule 127 (seen_var_in_assign -> empty .)
    PLUS_EQUALS     reduce using rule 127 (seen_var_in_assign -> empty .)
    MINUS_EQUALS    reduce using rule 127 (seen_var_in_assign -> empty .)
    TIMES_EQUALS    reduce using rule 127 (seen_var_in_assign -> empty .)
    OVER_EQUALS     reduce using rule 127 (seen_var_in_assign -> empty .)
    PLUS_PLUS       reduce using rule 127 (seen_var_in_assign -> empty .)
    MINUS_MINUS     reduce using rule 127 (seen_var_in_assign -> empty .)
    DOT             reduce using rule 127 (seen_var_in_assign -> empty .)
    COMMA           reduce using rule 127 (seen_var_in_assign -> empty .)
    CLOSE_PARENTHESIS reduce using rule 127 (seen_var_in_assign -> empty .)


state 142

    (170) FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .

    SEMI_COLON      reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    STAR            reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    FWD_SLASH       reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    PLUS            reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    MINUS           reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER          reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER_EQ       reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER         reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER_EQ      reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    NOT_EQUALS      reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    AND             reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    OR              reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    COMMA           reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 170 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)


state 143

    (147) VAR -> CLASS_REFERENCE VAR .

    EQUALS          reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    PLUS_EQUALS     reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    MINUS_EQUALS    reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    TIMES_EQUALS    reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    OVER_EQUALS     reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    PLUS_PLUS       reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    MINUS_MINUS     reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    STAR            reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    FWD_SLASH       reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    PLUS            reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    MINUS           reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER          reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER_EQ       reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER         reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER_EQ      reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    DOUBLE_EQUALS   reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    NOT_EQUALS      reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    AND             reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    OR              reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    SEMI_COLON      reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    COMMA           reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_PARENTHESIS reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_BRACKET   reduce using rule 147 (VAR -> CLASS_REFERENCE VAR .)


state 144

    (184) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (23) READABLE_LIST -> . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 202
    THIS_KWD        shift and go to state 112

    READABLE_LIST                  shift and go to state 200
    VAR                            shift and go to state 201
    ARRAY                          shift and go to state 111
    CLASS_REFERENCE                shift and go to state 203

state 145

    (185) PRINT -> PRINT_KWD OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (187) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    PRINTABLE                      shift and go to state 204
    EXPRESSION                     shift and go to state 205
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 146

    (186) PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (187) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    PRINTABLE                      shift and go to state 207
    EXPRESSION                     shift and go to state 205
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 147

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 202
    THIS_KWD        shift and go to state 112

    VAR                            shift and go to state 208
    ARRAY                          shift and go to state 111
    CLASS_REFERENCE                shift and go to state 203

state 148

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 202
    THIS_KWD        shift and go to state 112

    VAR                            shift and go to state 209
    ARRAY                          shift and go to state 111
    CLASS_REFERENCE                shift and go to state 203

state 149

    (181) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 210


state 150

    (183) FUNC_RETURN -> RETURN_KWD SEMI_COLON .

    ID              reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    READ_KWD        reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINT_KWD       reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    OPEN_KWD        reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WRITE_KWD       reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    RETURN_KWD      reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    THIS_KWD        reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    IF_KWD          reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WHILE_KWD       reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    FOR_KWD         reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 183 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)


state 151

    (182) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (106) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 211
    STAR            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 106 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 106 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 106 (FACTOR -> FUNC_CALL .) ]


state 152

    (85) EXPRESSION -> EXP .
    (86) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (89) COMP -> . BIGGER
    (90) COMP -> . BIGGER_EQ
    (91) COMP -> . SMALLER
    (92) COMP -> . SMALLER_EQ
    (93) COMP -> . DOUBLE_EQUALS
    (94) COMP -> . NOT_EQUALS
    (95) COMP -> . AND
    (96) COMP -> . OR

    SEMI_COLON      reduce using rule 85 (EXPRESSION -> EXP .)
    COMMA           reduce using rule 85 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 85 (EXPRESSION -> EXP .)
    CLOSE_BRACKET   reduce using rule 85 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 213
    BIGGER_EQ       shift and go to state 214
    SMALLER         shift and go to state 215
    SMALLER_EQ      shift and go to state 216
    DOUBLE_EQUALS   shift and go to state 217
    NOT_EQUALS      shift and go to state 218
    AND             shift and go to state 219
    OR              shift and go to state 220

    COMP                           shift and go to state 212

state 153

    (169) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (141) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (152) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (145) VAR -> ID .
    (171) seen_func_call_id -> . empty
    (155) seen_array_id -> . empty
    (214) empty -> .

    DOT             shift and go to state 128
    STAR            reduce using rule 145 (VAR -> ID .)
    FWD_SLASH       reduce using rule 145 (VAR -> ID .)
    PLUS            reduce using rule 145 (VAR -> ID .)
    MINUS           reduce using rule 145 (VAR -> ID .)
    BIGGER          reduce using rule 145 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 145 (VAR -> ID .)
    SMALLER         reduce using rule 145 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 145 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 145 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 145 (VAR -> ID .)
    AND             reduce using rule 145 (VAR -> ID .)
    OR              reduce using rule 145 (VAR -> ID .)
    SEMI_COLON      reduce using rule 145 (VAR -> ID .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    seen_func_call_id              shift and go to state 127
    seen_array_id                  shift and go to state 129
    empty                          shift and go to state 130

state 154

    (97) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (125) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 221
    empty                          shift and go to state 222

state 155

    (78) EXP -> TERM . seen_term EXP_P
    (80) seen_term -> .

    PLUS            reduce using rule 80 (seen_term -> .)
    MINUS           reduce using rule 80 (seen_term -> .)
    BIGGER          reduce using rule 80 (seen_term -> .)
    BIGGER_EQ       reduce using rule 80 (seen_term -> .)
    SMALLER         reduce using rule 80 (seen_term -> .)
    SMALLER_EQ      reduce using rule 80 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 80 (seen_term -> .)
    NOT_EQUALS      reduce using rule 80 (seen_term -> .)
    AND             reduce using rule 80 (seen_term -> .)
    OR              reduce using rule 80 (seen_term -> .)
    SEMI_COLON      reduce using rule 80 (seen_term -> .)
    COMMA           reduce using rule 80 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 80 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 80 (seen_term -> .)

    seen_term                      shift and go to state 223

state 156

    (79) EXP -> MINUS . seen_unary_minus EXP pop_unary_minus
    (99) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (124) seen_unary_minus -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_unary_minus               shift and go to state 224
    empty                          shift and go to state 225

state 157

    (142) CLASS_REFERENCE -> ARRAY . seen_var_in_assign DOT seen_dot_operator
    (146) VAR -> ARRAY .
    (127) seen_var_in_assign -> . empty
    (214) empty -> .

    STAR            reduce using rule 146 (VAR -> ARRAY .)
    FWD_SLASH       reduce using rule 146 (VAR -> ARRAY .)
    PLUS            reduce using rule 146 (VAR -> ARRAY .)
    MINUS           reduce using rule 146 (VAR -> ARRAY .)
    BIGGER          reduce using rule 146 (VAR -> ARRAY .)
    BIGGER_EQ       reduce using rule 146 (VAR -> ARRAY .)
    SMALLER         reduce using rule 146 (VAR -> ARRAY .)
    SMALLER_EQ      reduce using rule 146 (VAR -> ARRAY .)
    DOUBLE_EQUALS   reduce using rule 146 (VAR -> ARRAY .)
    NOT_EQUALS      reduce using rule 146 (VAR -> ARRAY .)
    AND             reduce using rule 146 (VAR -> ARRAY .)
    OR              reduce using rule 146 (VAR -> ARRAY .)
    SEMI_COLON      reduce using rule 146 (VAR -> ARRAY .)
    DOT             reduce using rule 214 (empty -> .)

    seen_var_in_assign             shift and go to state 176
    empty                          shift and go to state 141

state 158

    (163) TERM -> FACTOR . seen_factor TERM_P
    (167) seen_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_factor                    shift and go to state 226
    empty                          shift and go to state 227

state 159

    (98) FACTOR -> NOT . seen_not FACTOR pop_not
    (122) seen_not -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_not                       shift and go to state 228
    empty                          shift and go to state 229

state 160

    (100) FACTOR -> STOI_KWD . seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (118) seen_stoi_kwd -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_stoi_kwd                  shift and go to state 230
    empty                          shift and go to state 231

state 161

    (101) FACTOR -> STOF_KWD . seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (119) seen_stof_kwd -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_stof_kwd                  shift and go to state 232
    empty                          shift and go to state 233

state 162

    (102) FACTOR -> STOB_KWD . seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (120) seen_stob_kwd -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_stob_kwd                  shift and go to state 234
    empty                          shift and go to state 235

state 163

    (103) FACTOR -> SUBSTR_KWD . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    OPEN_PARENTHESIS shift and go to state 236


state 164

    (104) FACTOR -> STRLEN_KWD . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis

    OPEN_PARENTHESIS shift and go to state 237


state 165

    (105) FACTOR -> RANDINT_KWD . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis

    OPEN_PARENTHESIS shift and go to state 238


state 166

    (107) FACTOR -> CLASS_INSTANCE .

    STAR            reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    FWD_SLASH       reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    PLUS            reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    MINUS           reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    BIGGER          reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    BIGGER_EQ       reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    SMALLER         reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    SMALLER_EQ      reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    DOUBLE_EQUALS   reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    NOT_EQUALS      reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    AND             reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    OR              reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    SEMI_COLON      reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    COMMA           reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_PARENTHESIS reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_BRACKET   reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)


state 167

    (108) FACTOR -> VAR . seen_var_as_factor
    (128) seen_var_as_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_var_as_factor             shift and go to state 239
    empty                          shift and go to state 240

state 168

    (109) FACTOR -> CONSTANT .

    STAR            reduce using rule 109 (FACTOR -> CONSTANT .)
    FWD_SLASH       reduce using rule 109 (FACTOR -> CONSTANT .)
    PLUS            reduce using rule 109 (FACTOR -> CONSTANT .)
    MINUS           reduce using rule 109 (FACTOR -> CONSTANT .)
    BIGGER          reduce using rule 109 (FACTOR -> CONSTANT .)
    BIGGER_EQ       reduce using rule 109 (FACTOR -> CONSTANT .)
    SMALLER         reduce using rule 109 (FACTOR -> CONSTANT .)
    SMALLER_EQ      reduce using rule 109 (FACTOR -> CONSTANT .)
    DOUBLE_EQUALS   reduce using rule 109 (FACTOR -> CONSTANT .)
    NOT_EQUALS      reduce using rule 109 (FACTOR -> CONSTANT .)
    AND             reduce using rule 109 (FACTOR -> CONSTANT .)
    OR              reduce using rule 109 (FACTOR -> CONSTANT .)
    SEMI_COLON      reduce using rule 109 (FACTOR -> CONSTANT .)
    COMMA           reduce using rule 109 (FACTOR -> CONSTANT .)
    CLOSE_PARENTHESIS reduce using rule 109 (FACTOR -> CONSTANT .)
    CLOSE_BRACKET   reduce using rule 109 (FACTOR -> CONSTANT .)


state 169

    (148) CLASS_INSTANCE -> NEW_KWD . ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS

    ID              shift and go to state 241


state 170

    (135) CONSTANT -> CTE_I . seen_cte_i
    (130) seen_cte_i -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_i                     shift and go to state 242
    empty                          shift and go to state 67

state 171

    (136) CONSTANT -> CTE_F . seen_cte_f
    (131) seen_cte_f -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_f                     shift and go to state 243
    empty                          shift and go to state 244

state 172

    (137) CONSTANT -> CTE_S . seen_cte_s
    (132) seen_cte_s -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_s                     shift and go to state 245
    empty                          shift and go to state 246

state 173

    (138) CONSTANT -> CTE_B .

    STAR            reduce using rule 138 (CONSTANT -> CTE_B .)
    FWD_SLASH       reduce using rule 138 (CONSTANT -> CTE_B .)
    PLUS            reduce using rule 138 (CONSTANT -> CTE_B .)
    MINUS           reduce using rule 138 (CONSTANT -> CTE_B .)
    BIGGER          reduce using rule 138 (CONSTANT -> CTE_B .)
    BIGGER_EQ       reduce using rule 138 (CONSTANT -> CTE_B .)
    SMALLER         reduce using rule 138 (CONSTANT -> CTE_B .)
    SMALLER_EQ      reduce using rule 138 (CONSTANT -> CTE_B .)
    DOUBLE_EQUALS   reduce using rule 138 (CONSTANT -> CTE_B .)
    NOT_EQUALS      reduce using rule 138 (CONSTANT -> CTE_B .)
    AND             reduce using rule 138 (CONSTANT -> CTE_B .)
    OR              reduce using rule 138 (CONSTANT -> CTE_B .)
    SEMI_COLON      reduce using rule 138 (CONSTANT -> CTE_B .)
    COMMA           reduce using rule 138 (CONSTANT -> CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 138 (CONSTANT -> CTE_B .)
    CLOSE_BRACKET   reduce using rule 138 (CONSTANT -> CTE_B .)


state 174

    (139) CTE_B -> CTE_TRUE . seen_cte_true
    (134) seen_cte_true -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_true                  shift and go to state 247
    empty                          shift and go to state 248

state 175

    (140) CTE_B -> CTE_FALSE . seen_cte_false
    (133) seen_cte_false -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_false                 shift and go to state 249
    empty                          shift and go to state 250

state 176

    (142) CLASS_REFERENCE -> ARRAY seen_var_in_assign . DOT seen_dot_operator

    DOT             shift and go to state 251


state 177

    (143) CLASS_REFERENCE -> THIS_KWD seen_this_kwd . DOT seen_this_dot_operator

    DOT             shift and go to state 252


state 178

    (144) seen_this_kwd -> empty .

    DOT             reduce using rule 144 (seen_this_kwd -> empty .)


state 179

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 253
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 180

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 254


state 181

    (200) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 200 (seen_while_kwd -> empty .)


state 182

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 202
    THIS_KWD        shift and go to state 112

    VAR                            shift and go to state 255
    ARRAY                          shift and go to state 111
    CLASS_REFERENCE                shift and go to state 203

state 183

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_I          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)


state 184

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    ID              reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 185

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (33) seen_func_vars -> . empty
    (214) empty -> .

    OPEN_CURLY      reduce using rule 214 (empty -> .)

    seen_func_vars                 shift and go to state 256
    empty                          shift and go to state 257

state 186

    (39) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 258


state 187

    (36) FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 36 (FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P .)


state 188

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (130) seen_cte_i -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_cte_i                     shift and go to state 259
    empty                          shift and go to state 67

state 189

    (169) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (172) ARG_LIST -> . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (173) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (174) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (175) ARG_LIST -> . empty
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (214) empty -> .
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    ID              shift and go to state 260
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    THIS_KWD        shift and go to state 112
    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    ARG_LIST                       shift and go to state 261
    VAR                            shift and go to state 262
    EXPRESSION                     shift and go to state 263
    FUNC_CALL                      shift and go to state 264
    empty                          shift and go to state 265
    ARRAY                          shift and go to state 111
    CLASS_REFERENCE                shift and go to state 266
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CTE_B                          shift and go to state 173

state 190

    (141) CLASS_REFERENCE -> ID DOT seen_dot_operator .

    ID              reduce using rule 141 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)
    THIS_KWD        reduce using rule 141 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)


state 191

    (150) seen_dot_operator -> empty .

    ID              reduce using rule 150 (seen_dot_operator -> empty .)
    THIS_KWD        reduce using rule 150 (seen_dot_operator -> empty .)


state 192

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (156) seen_open_bracket -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_bracket              shift and go to state 267
    empty                          shift and go to state 268

state 193

    (64) ASSIGN -> VAR seen_var_in_assign EQUALS . seen_equals EXPRESSION
    (71) seen_equals -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_equals                    shift and go to state 269
    empty                          shift and go to state 270

state 194

    (65) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS . seen_plus_equals EXPRESSION
    (72) seen_plus_equals -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_plus_equals               shift and go to state 271
    empty                          shift and go to state 272

state 195

    (66) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS . seen_minus_equals EXPRESSION
    (73) seen_minus_equals -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_minus_equals              shift and go to state 273
    empty                          shift and go to state 274

state 196

    (67) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS . seen_times_equals EXPRESSION
    (74) seen_times_equals -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_times_equals              shift and go to state 275
    empty                          shift and go to state 276

state 197

    (68) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS . seen_over_equals EXPRESSION
    (75) seen_over_equals -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_over_equals               shift and go to state 277
    empty                          shift and go to state 278

state 198

    (69) ASSIGN -> VAR seen_var_in_assign PLUS_PLUS . seen_plus_plus
    (76) seen_plus_plus -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_plus_plus                 shift and go to state 279
    empty                          shift and go to state 280

state 199

    (70) ASSIGN -> VAR seen_var_in_assign MINUS_MINUS . seen_minus_minus
    (77) seen_minus_minus -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_minus_minus               shift and go to state 281
    empty                          shift and go to state 282

state 200

    (184) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 283


state 201

    (23) READABLE_LIST -> VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (127) seen_var_in_assign -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_var_in_assign             shift and go to state 284
    empty                          shift and go to state 141

state 202

    (145) VAR -> ID .
    (152) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (141) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (155) seen_array_id -> . empty
    (214) empty -> .

    COMMA           reduce using rule 145 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 145 (VAR -> ID .)
    EQUALS          reduce using rule 145 (VAR -> ID .)
    DOT             shift and go to state 128
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    seen_array_id                  shift and go to state 129
    empty                          shift and go to state 285

state 203

    (147) VAR -> CLASS_REFERENCE . VAR
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 202
    THIS_KWD        shift and go to state 112

    CLASS_REFERENCE                shift and go to state 203
    VAR                            shift and go to state 143
    ARRAY                          shift and go to state 111

state 204

    (185) PRINT -> PRINT_KWD OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 286


state 205

    (187) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (190) seen_printable -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_printable                 shift and go to state 287
    empty                          shift and go to state 288

state 206

    (106) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 106 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 106 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 106 (FACTOR -> FUNC_CALL .)


state 207

    (186) PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 289


state 208

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (129) seen_var_in_io -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_var_in_io                 shift and go to state 290
    empty                          shift and go to state 291

state 209

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (129) seen_var_in_io -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_var_in_io                 shift and go to state 292
    empty                          shift and go to state 291

state 210

    (181) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINT_KWD       reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    OPEN_KWD        reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    THIS_KWD        reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 181 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 211

    (182) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    ID              reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 182 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 212

    (86) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (88) seen_comp_op -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_comp_op                   shift and go to state 293
    empty                          shift and go to state 294

state 213

    (89) COMP -> BIGGER .

    MINUS           reduce using rule 89 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 89 (COMP -> BIGGER .)
    NOT             reduce using rule 89 (COMP -> BIGGER .)
    STOI_KWD        reduce using rule 89 (COMP -> BIGGER .)
    STOF_KWD        reduce using rule 89 (COMP -> BIGGER .)
    STOB_KWD        reduce using rule 89 (COMP -> BIGGER .)
    SUBSTR_KWD      reduce using rule 89 (COMP -> BIGGER .)
    STRLEN_KWD      reduce using rule 89 (COMP -> BIGGER .)
    RANDINT_KWD     reduce using rule 89 (COMP -> BIGGER .)
    ID              reduce using rule 89 (COMP -> BIGGER .)
    NEW_KWD         reduce using rule 89 (COMP -> BIGGER .)
    CTE_I           reduce using rule 89 (COMP -> BIGGER .)
    CTE_F           reduce using rule 89 (COMP -> BIGGER .)
    CTE_S           reduce using rule 89 (COMP -> BIGGER .)
    THIS_KWD        reduce using rule 89 (COMP -> BIGGER .)
    CTE_TRUE        reduce using rule 89 (COMP -> BIGGER .)
    CTE_FALSE       reduce using rule 89 (COMP -> BIGGER .)


state 214

    (90) COMP -> BIGGER_EQ .

    MINUS           reduce using rule 90 (COMP -> BIGGER_EQ .)
    OPEN_PARENTHESIS reduce using rule 90 (COMP -> BIGGER_EQ .)
    NOT             reduce using rule 90 (COMP -> BIGGER_EQ .)
    STOI_KWD        reduce using rule 90 (COMP -> BIGGER_EQ .)
    STOF_KWD        reduce using rule 90 (COMP -> BIGGER_EQ .)
    STOB_KWD        reduce using rule 90 (COMP -> BIGGER_EQ .)
    SUBSTR_KWD      reduce using rule 90 (COMP -> BIGGER_EQ .)
    STRLEN_KWD      reduce using rule 90 (COMP -> BIGGER_EQ .)
    RANDINT_KWD     reduce using rule 90 (COMP -> BIGGER_EQ .)
    ID              reduce using rule 90 (COMP -> BIGGER_EQ .)
    NEW_KWD         reduce using rule 90 (COMP -> BIGGER_EQ .)
    CTE_I           reduce using rule 90 (COMP -> BIGGER_EQ .)
    CTE_F           reduce using rule 90 (COMP -> BIGGER_EQ .)
    CTE_S           reduce using rule 90 (COMP -> BIGGER_EQ .)
    THIS_KWD        reduce using rule 90 (COMP -> BIGGER_EQ .)
    CTE_TRUE        reduce using rule 90 (COMP -> BIGGER_EQ .)
    CTE_FALSE       reduce using rule 90 (COMP -> BIGGER_EQ .)


state 215

    (91) COMP -> SMALLER .

    MINUS           reduce using rule 91 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 91 (COMP -> SMALLER .)
    NOT             reduce using rule 91 (COMP -> SMALLER .)
    STOI_KWD        reduce using rule 91 (COMP -> SMALLER .)
    STOF_KWD        reduce using rule 91 (COMP -> SMALLER .)
    STOB_KWD        reduce using rule 91 (COMP -> SMALLER .)
    SUBSTR_KWD      reduce using rule 91 (COMP -> SMALLER .)
    STRLEN_KWD      reduce using rule 91 (COMP -> SMALLER .)
    RANDINT_KWD     reduce using rule 91 (COMP -> SMALLER .)
    ID              reduce using rule 91 (COMP -> SMALLER .)
    NEW_KWD         reduce using rule 91 (COMP -> SMALLER .)
    CTE_I           reduce using rule 91 (COMP -> SMALLER .)
    CTE_F           reduce using rule 91 (COMP -> SMALLER .)
    CTE_S           reduce using rule 91 (COMP -> SMALLER .)
    THIS_KWD        reduce using rule 91 (COMP -> SMALLER .)
    CTE_TRUE        reduce using rule 91 (COMP -> SMALLER .)
    CTE_FALSE       reduce using rule 91 (COMP -> SMALLER .)


state 216

    (92) COMP -> SMALLER_EQ .

    MINUS           reduce using rule 92 (COMP -> SMALLER_EQ .)
    OPEN_PARENTHESIS reduce using rule 92 (COMP -> SMALLER_EQ .)
    NOT             reduce using rule 92 (COMP -> SMALLER_EQ .)
    STOI_KWD        reduce using rule 92 (COMP -> SMALLER_EQ .)
    STOF_KWD        reduce using rule 92 (COMP -> SMALLER_EQ .)
    STOB_KWD        reduce using rule 92 (COMP -> SMALLER_EQ .)
    SUBSTR_KWD      reduce using rule 92 (COMP -> SMALLER_EQ .)
    STRLEN_KWD      reduce using rule 92 (COMP -> SMALLER_EQ .)
    RANDINT_KWD     reduce using rule 92 (COMP -> SMALLER_EQ .)
    ID              reduce using rule 92 (COMP -> SMALLER_EQ .)
    NEW_KWD         reduce using rule 92 (COMP -> SMALLER_EQ .)
    CTE_I           reduce using rule 92 (COMP -> SMALLER_EQ .)
    CTE_F           reduce using rule 92 (COMP -> SMALLER_EQ .)
    CTE_S           reduce using rule 92 (COMP -> SMALLER_EQ .)
    THIS_KWD        reduce using rule 92 (COMP -> SMALLER_EQ .)
    CTE_TRUE        reduce using rule 92 (COMP -> SMALLER_EQ .)
    CTE_FALSE       reduce using rule 92 (COMP -> SMALLER_EQ .)


state 217

    (93) COMP -> DOUBLE_EQUALS .

    MINUS           reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    NOT             reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    STOI_KWD        reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    STOF_KWD        reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    STOB_KWD        reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    SUBSTR_KWD      reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    STRLEN_KWD      reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    RANDINT_KWD     reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    NEW_KWD         reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    THIS_KWD        reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    CTE_TRUE        reduce using rule 93 (COMP -> DOUBLE_EQUALS .)
    CTE_FALSE       reduce using rule 93 (COMP -> DOUBLE_EQUALS .)


state 218

    (94) COMP -> NOT_EQUALS .

    MINUS           reduce using rule 94 (COMP -> NOT_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 94 (COMP -> NOT_EQUALS .)
    NOT             reduce using rule 94 (COMP -> NOT_EQUALS .)
    STOI_KWD        reduce using rule 94 (COMP -> NOT_EQUALS .)
    STOF_KWD        reduce using rule 94 (COMP -> NOT_EQUALS .)
    STOB_KWD        reduce using rule 94 (COMP -> NOT_EQUALS .)
    SUBSTR_KWD      reduce using rule 94 (COMP -> NOT_EQUALS .)
    STRLEN_KWD      reduce using rule 94 (COMP -> NOT_EQUALS .)
    RANDINT_KWD     reduce using rule 94 (COMP -> NOT_EQUALS .)
    ID              reduce using rule 94 (COMP -> NOT_EQUALS .)
    NEW_KWD         reduce using rule 94 (COMP -> NOT_EQUALS .)
    CTE_I           reduce using rule 94 (COMP -> NOT_EQUALS .)
    CTE_F           reduce using rule 94 (COMP -> NOT_EQUALS .)
    CTE_S           reduce using rule 94 (COMP -> NOT_EQUALS .)
    THIS_KWD        reduce using rule 94 (COMP -> NOT_EQUALS .)
    CTE_TRUE        reduce using rule 94 (COMP -> NOT_EQUALS .)
    CTE_FALSE       reduce using rule 94 (COMP -> NOT_EQUALS .)


state 219

    (95) COMP -> AND .

    MINUS           reduce using rule 95 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 95 (COMP -> AND .)
    NOT             reduce using rule 95 (COMP -> AND .)
    STOI_KWD        reduce using rule 95 (COMP -> AND .)
    STOF_KWD        reduce using rule 95 (COMP -> AND .)
    STOB_KWD        reduce using rule 95 (COMP -> AND .)
    SUBSTR_KWD      reduce using rule 95 (COMP -> AND .)
    STRLEN_KWD      reduce using rule 95 (COMP -> AND .)
    RANDINT_KWD     reduce using rule 95 (COMP -> AND .)
    ID              reduce using rule 95 (COMP -> AND .)
    NEW_KWD         reduce using rule 95 (COMP -> AND .)
    CTE_I           reduce using rule 95 (COMP -> AND .)
    CTE_F           reduce using rule 95 (COMP -> AND .)
    CTE_S           reduce using rule 95 (COMP -> AND .)
    THIS_KWD        reduce using rule 95 (COMP -> AND .)
    CTE_TRUE        reduce using rule 95 (COMP -> AND .)
    CTE_FALSE       reduce using rule 95 (COMP -> AND .)


state 220

    (96) COMP -> OR .

    MINUS           reduce using rule 96 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 96 (COMP -> OR .)
    NOT             reduce using rule 96 (COMP -> OR .)
    STOI_KWD        reduce using rule 96 (COMP -> OR .)
    STOF_KWD        reduce using rule 96 (COMP -> OR .)
    STOB_KWD        reduce using rule 96 (COMP -> OR .)
    SUBSTR_KWD      reduce using rule 96 (COMP -> OR .)
    STRLEN_KWD      reduce using rule 96 (COMP -> OR .)
    RANDINT_KWD     reduce using rule 96 (COMP -> OR .)
    ID              reduce using rule 96 (COMP -> OR .)
    NEW_KWD         reduce using rule 96 (COMP -> OR .)
    CTE_I           reduce using rule 96 (COMP -> OR .)
    CTE_F           reduce using rule 96 (COMP -> OR .)
    CTE_S           reduce using rule 96 (COMP -> OR .)
    THIS_KWD        reduce using rule 96 (COMP -> OR .)
    CTE_TRUE        reduce using rule 96 (COMP -> OR .)
    CTE_FALSE       reduce using rule 96 (COMP -> OR .)


state 221

    (97) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 295
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 222

    (125) seen_open_parenthesis -> empty .

    MINUS           reduce using rule 125 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 125 (seen_open_parenthesis -> empty .)
    NOT             reduce using rule 125 (seen_open_parenthesis -> empty .)
    STOI_KWD        reduce using rule 125 (seen_open_parenthesis -> empty .)
    STOF_KWD        reduce using rule 125 (seen_open_parenthesis -> empty .)
    STOB_KWD        reduce using rule 125 (seen_open_parenthesis -> empty .)
    SUBSTR_KWD      reduce using rule 125 (seen_open_parenthesis -> empty .)
    STRLEN_KWD      reduce using rule 125 (seen_open_parenthesis -> empty .)
    RANDINT_KWD     reduce using rule 125 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 125 (seen_open_parenthesis -> empty .)
    NEW_KWD         reduce using rule 125 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 125 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 125 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 125 (seen_open_parenthesis -> empty .)
    THIS_KWD        reduce using rule 125 (seen_open_parenthesis -> empty .)
    CTE_TRUE        reduce using rule 125 (seen_open_parenthesis -> empty .)
    CTE_FALSE       reduce using rule 125 (seen_open_parenthesis -> empty .)


state 223

    (78) EXP -> TERM seen_term . EXP_P
    (81) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (82) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (83) EXP_P -> . empty
    (214) empty -> .

    PLUS            shift and go to state 297
    MINUS           shift and go to state 298
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    EXP_P                          shift and go to state 296
    empty                          shift and go to state 299

state 224

    (79) EXP -> MINUS seen_unary_minus . EXP pop_unary_minus
    (99) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (163) TERM -> . FACTOR seen_factor TERM_P
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXP                            shift and go to state 300
    FACTOR                         shift and go to state 301
    TERM                           shift and go to state 155
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 225

    (124) seen_unary_minus -> empty .

    MINUS           reduce using rule 124 (seen_unary_minus -> empty .)
    OPEN_PARENTHESIS reduce using rule 124 (seen_unary_minus -> empty .)
    NOT             reduce using rule 124 (seen_unary_minus -> empty .)
    STOI_KWD        reduce using rule 124 (seen_unary_minus -> empty .)
    STOF_KWD        reduce using rule 124 (seen_unary_minus -> empty .)
    STOB_KWD        reduce using rule 124 (seen_unary_minus -> empty .)
    SUBSTR_KWD      reduce using rule 124 (seen_unary_minus -> empty .)
    STRLEN_KWD      reduce using rule 124 (seen_unary_minus -> empty .)
    RANDINT_KWD     reduce using rule 124 (seen_unary_minus -> empty .)
    ID              reduce using rule 124 (seen_unary_minus -> empty .)
    NEW_KWD         reduce using rule 124 (seen_unary_minus -> empty .)
    CTE_I           reduce using rule 124 (seen_unary_minus -> empty .)
    CTE_F           reduce using rule 124 (seen_unary_minus -> empty .)
    CTE_S           reduce using rule 124 (seen_unary_minus -> empty .)
    THIS_KWD        reduce using rule 124 (seen_unary_minus -> empty .)
    CTE_TRUE        reduce using rule 124 (seen_unary_minus -> empty .)
    CTE_FALSE       reduce using rule 124 (seen_unary_minus -> empty .)


state 226

    (163) TERM -> FACTOR seen_factor . TERM_P
    (164) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (165) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (166) TERM_P -> . empty
    (214) empty -> .

    STAR            shift and go to state 303
    FWD_SLASH       shift and go to state 304
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    TERM_P                         shift and go to state 302
    empty                          shift and go to state 305

state 227

    (167) seen_factor -> empty .

    STAR            reduce using rule 167 (seen_factor -> empty .)
    FWD_SLASH       reduce using rule 167 (seen_factor -> empty .)
    PLUS            reduce using rule 167 (seen_factor -> empty .)
    MINUS           reduce using rule 167 (seen_factor -> empty .)
    BIGGER          reduce using rule 167 (seen_factor -> empty .)
    BIGGER_EQ       reduce using rule 167 (seen_factor -> empty .)
    SMALLER         reduce using rule 167 (seen_factor -> empty .)
    SMALLER_EQ      reduce using rule 167 (seen_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 167 (seen_factor -> empty .)
    NOT_EQUALS      reduce using rule 167 (seen_factor -> empty .)
    AND             reduce using rule 167 (seen_factor -> empty .)
    OR              reduce using rule 167 (seen_factor -> empty .)
    SEMI_COLON      reduce using rule 167 (seen_factor -> empty .)
    COMMA           reduce using rule 167 (seen_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 167 (seen_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 167 (seen_factor -> empty .)


state 228

    (98) FACTOR -> NOT seen_not . FACTOR pop_not
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    FACTOR                         shift and go to state 306
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 229

    (122) seen_not -> empty .

    OPEN_PARENTHESIS reduce using rule 122 (seen_not -> empty .)
    NOT             reduce using rule 122 (seen_not -> empty .)
    MINUS           reduce using rule 122 (seen_not -> empty .)
    STOI_KWD        reduce using rule 122 (seen_not -> empty .)
    STOF_KWD        reduce using rule 122 (seen_not -> empty .)
    STOB_KWD        reduce using rule 122 (seen_not -> empty .)
    SUBSTR_KWD      reduce using rule 122 (seen_not -> empty .)
    STRLEN_KWD      reduce using rule 122 (seen_not -> empty .)
    RANDINT_KWD     reduce using rule 122 (seen_not -> empty .)
    ID              reduce using rule 122 (seen_not -> empty .)
    NEW_KWD         reduce using rule 122 (seen_not -> empty .)
    CTE_I           reduce using rule 122 (seen_not -> empty .)
    CTE_F           reduce using rule 122 (seen_not -> empty .)
    CTE_S           reduce using rule 122 (seen_not -> empty .)
    THIS_KWD        reduce using rule 122 (seen_not -> empty .)
    CTE_TRUE        reduce using rule 122 (seen_not -> empty .)
    CTE_FALSE       reduce using rule 122 (seen_not -> empty .)


state 230

    (100) FACTOR -> STOI_KWD seen_stoi_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 308


state 231

    (118) seen_stoi_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 118 (seen_stoi_kwd -> empty .)


state 232

    (101) FACTOR -> STOF_KWD seen_stof_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 309


state 233

    (119) seen_stof_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 119 (seen_stof_kwd -> empty .)


state 234

    (102) FACTOR -> STOB_KWD seen_stob_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 310


state 235

    (120) seen_stob_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 120 (seen_stob_kwd -> empty .)


state 236

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (125) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 311
    empty                          shift and go to state 222

state 237

    (104) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (125) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 312
    empty                          shift and go to state 222

state 238

    (105) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (125) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 313
    empty                          shift and go to state 222

state 239

    (108) FACTOR -> VAR seen_var_as_factor .

    STAR            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SEMI_COLON      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_BRACKET   reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)


state 240

    (128) seen_var_as_factor -> empty .

    STAR            reduce using rule 128 (seen_var_as_factor -> empty .)
    FWD_SLASH       reduce using rule 128 (seen_var_as_factor -> empty .)
    PLUS            reduce using rule 128 (seen_var_as_factor -> empty .)
    MINUS           reduce using rule 128 (seen_var_as_factor -> empty .)
    BIGGER          reduce using rule 128 (seen_var_as_factor -> empty .)
    BIGGER_EQ       reduce using rule 128 (seen_var_as_factor -> empty .)
    SMALLER         reduce using rule 128 (seen_var_as_factor -> empty .)
    SMALLER_EQ      reduce using rule 128 (seen_var_as_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 128 (seen_var_as_factor -> empty .)
    NOT_EQUALS      reduce using rule 128 (seen_var_as_factor -> empty .)
    AND             reduce using rule 128 (seen_var_as_factor -> empty .)
    OR              reduce using rule 128 (seen_var_as_factor -> empty .)
    SEMI_COLON      reduce using rule 128 (seen_var_as_factor -> empty .)
    COMMA           reduce using rule 128 (seen_var_as_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 128 (seen_var_as_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 128 (seen_var_as_factor -> empty .)


state 241

    (148) CLASS_INSTANCE -> NEW_KWD ID . seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (149) seen_class_id_instance -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_class_id_instance         shift and go to state 314
    empty                          shift and go to state 315

state 242

    (135) CONSTANT -> CTE_I seen_cte_i .

    STAR            reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    BIGGER_EQ       reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    SMALLER_EQ      reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    NOT_EQUALS      reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    AND             reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    OR              reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)
    CLOSE_BRACKET   reduce using rule 135 (CONSTANT -> CTE_I seen_cte_i .)


state 243

    (136) CONSTANT -> CTE_F seen_cte_f .

    STAR            reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    BIGGER_EQ       reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    SMALLER_EQ      reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    NOT_EQUALS      reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    AND             reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    OR              reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)
    CLOSE_BRACKET   reduce using rule 136 (CONSTANT -> CTE_F seen_cte_f .)


state 244

    (131) seen_cte_f -> empty .

    STAR            reduce using rule 131 (seen_cte_f -> empty .)
    FWD_SLASH       reduce using rule 131 (seen_cte_f -> empty .)
    PLUS            reduce using rule 131 (seen_cte_f -> empty .)
    MINUS           reduce using rule 131 (seen_cte_f -> empty .)
    BIGGER          reduce using rule 131 (seen_cte_f -> empty .)
    BIGGER_EQ       reduce using rule 131 (seen_cte_f -> empty .)
    SMALLER         reduce using rule 131 (seen_cte_f -> empty .)
    SMALLER_EQ      reduce using rule 131 (seen_cte_f -> empty .)
    DOUBLE_EQUALS   reduce using rule 131 (seen_cte_f -> empty .)
    NOT_EQUALS      reduce using rule 131 (seen_cte_f -> empty .)
    AND             reduce using rule 131 (seen_cte_f -> empty .)
    OR              reduce using rule 131 (seen_cte_f -> empty .)
    SEMI_COLON      reduce using rule 131 (seen_cte_f -> empty .)
    COMMA           reduce using rule 131 (seen_cte_f -> empty .)
    CLOSE_PARENTHESIS reduce using rule 131 (seen_cte_f -> empty .)
    CLOSE_BRACKET   reduce using rule 131 (seen_cte_f -> empty .)


state 245

    (137) CONSTANT -> CTE_S seen_cte_s .

    STAR            reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    BIGGER_EQ       reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    SMALLER_EQ      reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    NOT_EQUALS      reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    AND             reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    OR              reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)
    CLOSE_BRACKET   reduce using rule 137 (CONSTANT -> CTE_S seen_cte_s .)


state 246

    (132) seen_cte_s -> empty .

    STAR            reduce using rule 132 (seen_cte_s -> empty .)
    FWD_SLASH       reduce using rule 132 (seen_cte_s -> empty .)
    PLUS            reduce using rule 132 (seen_cte_s -> empty .)
    MINUS           reduce using rule 132 (seen_cte_s -> empty .)
    BIGGER          reduce using rule 132 (seen_cte_s -> empty .)
    BIGGER_EQ       reduce using rule 132 (seen_cte_s -> empty .)
    SMALLER         reduce using rule 132 (seen_cte_s -> empty .)
    SMALLER_EQ      reduce using rule 132 (seen_cte_s -> empty .)
    DOUBLE_EQUALS   reduce using rule 132 (seen_cte_s -> empty .)
    NOT_EQUALS      reduce using rule 132 (seen_cte_s -> empty .)
    AND             reduce using rule 132 (seen_cte_s -> empty .)
    OR              reduce using rule 132 (seen_cte_s -> empty .)
    SEMI_COLON      reduce using rule 132 (seen_cte_s -> empty .)
    COMMA           reduce using rule 132 (seen_cte_s -> empty .)
    CLOSE_PARENTHESIS reduce using rule 132 (seen_cte_s -> empty .)
    CLOSE_BRACKET   reduce using rule 132 (seen_cte_s -> empty .)


state 247

    (139) CTE_B -> CTE_TRUE seen_cte_true .

    STAR            reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    FWD_SLASH       reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    PLUS            reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    MINUS           reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    BIGGER          reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    BIGGER_EQ       reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    SMALLER         reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    SMALLER_EQ      reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    DOUBLE_EQUALS   reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    NOT_EQUALS      reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    AND             reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    OR              reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    SEMI_COLON      reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    COMMA           reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    CLOSE_PARENTHESIS reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)
    CLOSE_BRACKET   reduce using rule 139 (CTE_B -> CTE_TRUE seen_cte_true .)


state 248

    (134) seen_cte_true -> empty .

    STAR            reduce using rule 134 (seen_cte_true -> empty .)
    FWD_SLASH       reduce using rule 134 (seen_cte_true -> empty .)
    PLUS            reduce using rule 134 (seen_cte_true -> empty .)
    MINUS           reduce using rule 134 (seen_cte_true -> empty .)
    BIGGER          reduce using rule 134 (seen_cte_true -> empty .)
    BIGGER_EQ       reduce using rule 134 (seen_cte_true -> empty .)
    SMALLER         reduce using rule 134 (seen_cte_true -> empty .)
    SMALLER_EQ      reduce using rule 134 (seen_cte_true -> empty .)
    DOUBLE_EQUALS   reduce using rule 134 (seen_cte_true -> empty .)
    NOT_EQUALS      reduce using rule 134 (seen_cte_true -> empty .)
    AND             reduce using rule 134 (seen_cte_true -> empty .)
    OR              reduce using rule 134 (seen_cte_true -> empty .)
    SEMI_COLON      reduce using rule 134 (seen_cte_true -> empty .)
    COMMA           reduce using rule 134 (seen_cte_true -> empty .)
    CLOSE_PARENTHESIS reduce using rule 134 (seen_cte_true -> empty .)
    CLOSE_BRACKET   reduce using rule 134 (seen_cte_true -> empty .)


state 249

    (140) CTE_B -> CTE_FALSE seen_cte_false .

    STAR            reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    FWD_SLASH       reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    PLUS            reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    MINUS           reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    BIGGER          reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    BIGGER_EQ       reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    SMALLER         reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    SMALLER_EQ      reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    DOUBLE_EQUALS   reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    NOT_EQUALS      reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    AND             reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    OR              reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    SEMI_COLON      reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    COMMA           reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    CLOSE_PARENTHESIS reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)
    CLOSE_BRACKET   reduce using rule 140 (CTE_B -> CTE_FALSE seen_cte_false .)


state 250

    (133) seen_cte_false -> empty .

    STAR            reduce using rule 133 (seen_cte_false -> empty .)
    FWD_SLASH       reduce using rule 133 (seen_cte_false -> empty .)
    PLUS            reduce using rule 133 (seen_cte_false -> empty .)
    MINUS           reduce using rule 133 (seen_cte_false -> empty .)
    BIGGER          reduce using rule 133 (seen_cte_false -> empty .)
    BIGGER_EQ       reduce using rule 133 (seen_cte_false -> empty .)
    SMALLER         reduce using rule 133 (seen_cte_false -> empty .)
    SMALLER_EQ      reduce using rule 133 (seen_cte_false -> empty .)
    DOUBLE_EQUALS   reduce using rule 133 (seen_cte_false -> empty .)
    NOT_EQUALS      reduce using rule 133 (seen_cte_false -> empty .)
    AND             reduce using rule 133 (seen_cte_false -> empty .)
    OR              reduce using rule 133 (seen_cte_false -> empty .)
    SEMI_COLON      reduce using rule 133 (seen_cte_false -> empty .)
    COMMA           reduce using rule 133 (seen_cte_false -> empty .)
    CLOSE_PARENTHESIS reduce using rule 133 (seen_cte_false -> empty .)
    CLOSE_BRACKET   reduce using rule 133 (seen_cte_false -> empty .)


state 251

    (142) CLASS_REFERENCE -> ARRAY seen_var_in_assign DOT . seen_dot_operator
    (150) seen_dot_operator -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)

    seen_dot_operator              shift and go to state 316
    empty                          shift and go to state 191

state 252

    (143) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT . seen_this_dot_operator
    (151) seen_this_dot_operator -> . empty
    (214) empty -> .

    ID              reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)

    seen_this_dot_operator         shift and go to state 317
    empty                          shift and go to state 318

state 253

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 319


state 254

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 320
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 255

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (203) seen_for_kwd -> . empty
    (214) empty -> .

    EQUALS          reduce using rule 214 (empty -> .)

    seen_for_kwd                   shift and go to state 321
    empty                          shift and go to state 322

state 256

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 323


state 257

    (33) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 33 (seen_func_vars -> empty .)


state 258

    (39) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (214) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (158) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 42

    VAR_LIST_STAR                  shift and go to state 324
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 41
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 25

state 259

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (162) seen_array_def_dim -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_array_def_dim             shift and go to state 325
    empty                          shift and go to state 76

state 260

    (145) VAR -> ID .
    (169) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (152) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (141) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (171) seen_func_call_id -> . empty
    (155) seen_array_id -> . empty
    (214) empty -> .

    COMMA           reduce using rule 145 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 145 (VAR -> ID .)
    STAR            reduce using rule 145 (VAR -> ID .)
    FWD_SLASH       reduce using rule 145 (VAR -> ID .)
    PLUS            reduce using rule 145 (VAR -> ID .)
    MINUS           reduce using rule 145 (VAR -> ID .)
    BIGGER          reduce using rule 145 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 145 (VAR -> ID .)
    SMALLER         reduce using rule 145 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 145 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 145 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 145 (VAR -> ID .)
    AND             reduce using rule 145 (VAR -> ID .)
    OR              reduce using rule 145 (VAR -> ID .)
    DOT             shift and go to state 128
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    OPEN_BRACKET    reduce using rule 214 (empty -> .)

    seen_func_call_id              shift and go to state 127
    seen_array_id                  shift and go to state 129
    empty                          shift and go to state 130

state 261

    (169) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 326


state 262

    (172) ARG_LIST -> VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (108) FACTOR -> VAR . seen_var_as_factor
    (128) seen_var_as_factor -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)

    seen_var_as_factor             shift and go to state 327
    empty                          shift and go to state 240

state 263

    (173) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (180) seen_arg -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_arg                       shift and go to state 328
    empty                          shift and go to state 329

state 264

    (174) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (106) FACTOR -> FUNC_CALL .
    (180) seen_arg -> . empty
    (214) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 106 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 106 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 106 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 106 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 106 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 214 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 214 (empty -> .) ]

    seen_arg                       shift and go to state 330
    empty                          shift and go to state 329

state 265

    (175) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 175 (ARG_LIST -> empty .)


state 266

    (147) VAR -> CLASS_REFERENCE . VAR
    (170) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 260
    THIS_KWD        shift and go to state 112

    CLASS_REFERENCE                shift and go to state 266
    VAR                            shift and go to state 143
    FUNC_CALL                      shift and go to state 142
    ARRAY                          shift and go to state 111

state 267

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 331
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 268

    (156) seen_open_bracket -> empty .

    MINUS           reduce using rule 156 (seen_open_bracket -> empty .)
    OPEN_PARENTHESIS reduce using rule 156 (seen_open_bracket -> empty .)
    NOT             reduce using rule 156 (seen_open_bracket -> empty .)
    STOI_KWD        reduce using rule 156 (seen_open_bracket -> empty .)
    STOF_KWD        reduce using rule 156 (seen_open_bracket -> empty .)
    STOB_KWD        reduce using rule 156 (seen_open_bracket -> empty .)
    SUBSTR_KWD      reduce using rule 156 (seen_open_bracket -> empty .)
    STRLEN_KWD      reduce using rule 156 (seen_open_bracket -> empty .)
    RANDINT_KWD     reduce using rule 156 (seen_open_bracket -> empty .)
    ID              reduce using rule 156 (seen_open_bracket -> empty .)
    NEW_KWD         reduce using rule 156 (seen_open_bracket -> empty .)
    CTE_I           reduce using rule 156 (seen_open_bracket -> empty .)
    CTE_F           reduce using rule 156 (seen_open_bracket -> empty .)
    CTE_S           reduce using rule 156 (seen_open_bracket -> empty .)
    THIS_KWD        reduce using rule 156 (seen_open_bracket -> empty .)
    CTE_TRUE        reduce using rule 156 (seen_open_bracket -> empty .)
    CTE_FALSE       reduce using rule 156 (seen_open_bracket -> empty .)


state 269

    (64) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals . EXPRESSION
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 332
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 270

    (71) seen_equals -> empty .

    MINUS           reduce using rule 71 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 71 (seen_equals -> empty .)
    NOT             reduce using rule 71 (seen_equals -> empty .)
    STOI_KWD        reduce using rule 71 (seen_equals -> empty .)
    STOF_KWD        reduce using rule 71 (seen_equals -> empty .)
    STOB_KWD        reduce using rule 71 (seen_equals -> empty .)
    SUBSTR_KWD      reduce using rule 71 (seen_equals -> empty .)
    STRLEN_KWD      reduce using rule 71 (seen_equals -> empty .)
    RANDINT_KWD     reduce using rule 71 (seen_equals -> empty .)
    ID              reduce using rule 71 (seen_equals -> empty .)
    NEW_KWD         reduce using rule 71 (seen_equals -> empty .)
    CTE_I           reduce using rule 71 (seen_equals -> empty .)
    CTE_F           reduce using rule 71 (seen_equals -> empty .)
    CTE_S           reduce using rule 71 (seen_equals -> empty .)
    THIS_KWD        reduce using rule 71 (seen_equals -> empty .)
    CTE_TRUE        reduce using rule 71 (seen_equals -> empty .)
    CTE_FALSE       reduce using rule 71 (seen_equals -> empty .)


state 271

    (65) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals . EXPRESSION
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 333
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 272

    (72) seen_plus_equals -> empty .

    MINUS           reduce using rule 72 (seen_plus_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 72 (seen_plus_equals -> empty .)
    NOT             reduce using rule 72 (seen_plus_equals -> empty .)
    STOI_KWD        reduce using rule 72 (seen_plus_equals -> empty .)
    STOF_KWD        reduce using rule 72 (seen_plus_equals -> empty .)
    STOB_KWD        reduce using rule 72 (seen_plus_equals -> empty .)
    SUBSTR_KWD      reduce using rule 72 (seen_plus_equals -> empty .)
    STRLEN_KWD      reduce using rule 72 (seen_plus_equals -> empty .)
    RANDINT_KWD     reduce using rule 72 (seen_plus_equals -> empty .)
    ID              reduce using rule 72 (seen_plus_equals -> empty .)
    NEW_KWD         reduce using rule 72 (seen_plus_equals -> empty .)
    CTE_I           reduce using rule 72 (seen_plus_equals -> empty .)
    CTE_F           reduce using rule 72 (seen_plus_equals -> empty .)
    CTE_S           reduce using rule 72 (seen_plus_equals -> empty .)
    THIS_KWD        reduce using rule 72 (seen_plus_equals -> empty .)
    CTE_TRUE        reduce using rule 72 (seen_plus_equals -> empty .)
    CTE_FALSE       reduce using rule 72 (seen_plus_equals -> empty .)


state 273

    (66) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals . EXPRESSION
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 334
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 274

    (73) seen_minus_equals -> empty .

    MINUS           reduce using rule 73 (seen_minus_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 73 (seen_minus_equals -> empty .)
    NOT             reduce using rule 73 (seen_minus_equals -> empty .)
    STOI_KWD        reduce using rule 73 (seen_minus_equals -> empty .)
    STOF_KWD        reduce using rule 73 (seen_minus_equals -> empty .)
    STOB_KWD        reduce using rule 73 (seen_minus_equals -> empty .)
    SUBSTR_KWD      reduce using rule 73 (seen_minus_equals -> empty .)
    STRLEN_KWD      reduce using rule 73 (seen_minus_equals -> empty .)
    RANDINT_KWD     reduce using rule 73 (seen_minus_equals -> empty .)
    ID              reduce using rule 73 (seen_minus_equals -> empty .)
    NEW_KWD         reduce using rule 73 (seen_minus_equals -> empty .)
    CTE_I           reduce using rule 73 (seen_minus_equals -> empty .)
    CTE_F           reduce using rule 73 (seen_minus_equals -> empty .)
    CTE_S           reduce using rule 73 (seen_minus_equals -> empty .)
    THIS_KWD        reduce using rule 73 (seen_minus_equals -> empty .)
    CTE_TRUE        reduce using rule 73 (seen_minus_equals -> empty .)
    CTE_FALSE       reduce using rule 73 (seen_minus_equals -> empty .)


state 275

    (67) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals . EXPRESSION
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 335
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 276

    (74) seen_times_equals -> empty .

    MINUS           reduce using rule 74 (seen_times_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 74 (seen_times_equals -> empty .)
    NOT             reduce using rule 74 (seen_times_equals -> empty .)
    STOI_KWD        reduce using rule 74 (seen_times_equals -> empty .)
    STOF_KWD        reduce using rule 74 (seen_times_equals -> empty .)
    STOB_KWD        reduce using rule 74 (seen_times_equals -> empty .)
    SUBSTR_KWD      reduce using rule 74 (seen_times_equals -> empty .)
    STRLEN_KWD      reduce using rule 74 (seen_times_equals -> empty .)
    RANDINT_KWD     reduce using rule 74 (seen_times_equals -> empty .)
    ID              reduce using rule 74 (seen_times_equals -> empty .)
    NEW_KWD         reduce using rule 74 (seen_times_equals -> empty .)
    CTE_I           reduce using rule 74 (seen_times_equals -> empty .)
    CTE_F           reduce using rule 74 (seen_times_equals -> empty .)
    CTE_S           reduce using rule 74 (seen_times_equals -> empty .)
    THIS_KWD        reduce using rule 74 (seen_times_equals -> empty .)
    CTE_TRUE        reduce using rule 74 (seen_times_equals -> empty .)
    CTE_FALSE       reduce using rule 74 (seen_times_equals -> empty .)


state 277

    (68) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals . EXPRESSION
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 336
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 278

    (75) seen_over_equals -> empty .

    MINUS           reduce using rule 75 (seen_over_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 75 (seen_over_equals -> empty .)
    NOT             reduce using rule 75 (seen_over_equals -> empty .)
    STOI_KWD        reduce using rule 75 (seen_over_equals -> empty .)
    STOF_KWD        reduce using rule 75 (seen_over_equals -> empty .)
    STOB_KWD        reduce using rule 75 (seen_over_equals -> empty .)
    SUBSTR_KWD      reduce using rule 75 (seen_over_equals -> empty .)
    STRLEN_KWD      reduce using rule 75 (seen_over_equals -> empty .)
    RANDINT_KWD     reduce using rule 75 (seen_over_equals -> empty .)
    ID              reduce using rule 75 (seen_over_equals -> empty .)
    NEW_KWD         reduce using rule 75 (seen_over_equals -> empty .)
    CTE_I           reduce using rule 75 (seen_over_equals -> empty .)
    CTE_F           reduce using rule 75 (seen_over_equals -> empty .)
    CTE_S           reduce using rule 75 (seen_over_equals -> empty .)
    THIS_KWD        reduce using rule 75 (seen_over_equals -> empty .)
    CTE_TRUE        reduce using rule 75 (seen_over_equals -> empty .)
    CTE_FALSE       reduce using rule 75 (seen_over_equals -> empty .)


state 279

    (69) ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .

    SEMI_COLON      reduce using rule 69 (ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .)
    CLOSE_PARENTHESIS reduce using rule 69 (ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .)


state 280

    (76) seen_plus_plus -> empty .

    SEMI_COLON      reduce using rule 76 (seen_plus_plus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 76 (seen_plus_plus -> empty .)


state 281

    (70) ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .

    SEMI_COLON      reduce using rule 70 (ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .)
    CLOSE_PARENTHESIS reduce using rule 70 (ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .)


state 282

    (77) seen_minus_minus -> empty .

    SEMI_COLON      reduce using rule 77 (seen_minus_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 77 (seen_minus_minus -> empty .)


state 283

    (184) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 184 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 184 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 284

    (23) READABLE_LIST -> VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_readable                  shift and go to state 337
    empty                          shift and go to state 338

state 285

    (155) seen_array_id -> empty .

    OPEN_BRACKET    reduce using rule 155 (seen_array_id -> empty .)


state 286

    (185) PRINT -> PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 185 (PRINT -> PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 185 (PRINT -> PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 287

    (187) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (188) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (189) PRINTABLE_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 340
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    PRINTABLE_P                    shift and go to state 339
    empty                          shift and go to state 341

state 288

    (190) seen_printable -> empty .

    COMMA           reduce using rule 190 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 190 (seen_printable -> empty .)


state 289

    (186) PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 186 (PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 186 (PRINTLN -> PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 290

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (52) seen_open_buffer -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_open_buffer               shift and go to state 342
    empty                          shift and go to state 343

state 291

    (129) seen_var_in_io -> empty .

    COMMA           reduce using rule 129 (seen_var_in_io -> empty .)


state 292

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (54) seen_write_buffer -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_write_buffer              shift and go to state 344
    empty                          shift and go to state 345

state 293

    (86) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXP                            shift and go to state 152
    EXPRESSION                     shift and go to state 346
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 294

    (88) seen_comp_op -> empty .

    MINUS           reduce using rule 88 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 88 (seen_comp_op -> empty .)
    NOT             reduce using rule 88 (seen_comp_op -> empty .)
    STOI_KWD        reduce using rule 88 (seen_comp_op -> empty .)
    STOF_KWD        reduce using rule 88 (seen_comp_op -> empty .)
    STOB_KWD        reduce using rule 88 (seen_comp_op -> empty .)
    SUBSTR_KWD      reduce using rule 88 (seen_comp_op -> empty .)
    STRLEN_KWD      reduce using rule 88 (seen_comp_op -> empty .)
    RANDINT_KWD     reduce using rule 88 (seen_comp_op -> empty .)
    ID              reduce using rule 88 (seen_comp_op -> empty .)
    NEW_KWD         reduce using rule 88 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 88 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 88 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 88 (seen_comp_op -> empty .)
    THIS_KWD        reduce using rule 88 (seen_comp_op -> empty .)
    CTE_TRUE        reduce using rule 88 (seen_comp_op -> empty .)
    CTE_FALSE       reduce using rule 88 (seen_comp_op -> empty .)


state 295

    (97) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 347


state 296

    (78) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 78 (EXP -> TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 78 (EXP -> TERM seen_term EXP_P .)


state 297

    (81) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (84) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 84 (seen_term_op -> .)
    NOT             reduce using rule 84 (seen_term_op -> .)
    MINUS           reduce using rule 84 (seen_term_op -> .)
    STOI_KWD        reduce using rule 84 (seen_term_op -> .)
    STOF_KWD        reduce using rule 84 (seen_term_op -> .)
    STOB_KWD        reduce using rule 84 (seen_term_op -> .)
    SUBSTR_KWD      reduce using rule 84 (seen_term_op -> .)
    STRLEN_KWD      reduce using rule 84 (seen_term_op -> .)
    RANDINT_KWD     reduce using rule 84 (seen_term_op -> .)
    ID              reduce using rule 84 (seen_term_op -> .)
    NEW_KWD         reduce using rule 84 (seen_term_op -> .)
    CTE_I           reduce using rule 84 (seen_term_op -> .)
    CTE_F           reduce using rule 84 (seen_term_op -> .)
    CTE_S           reduce using rule 84 (seen_term_op -> .)
    THIS_KWD        reduce using rule 84 (seen_term_op -> .)
    CTE_TRUE        reduce using rule 84 (seen_term_op -> .)
    CTE_FALSE       reduce using rule 84 (seen_term_op -> .)

    seen_term_op                   shift and go to state 348

state 298

    (82) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (84) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 84 (seen_term_op -> .)
    NOT             reduce using rule 84 (seen_term_op -> .)
    MINUS           reduce using rule 84 (seen_term_op -> .)
    STOI_KWD        reduce using rule 84 (seen_term_op -> .)
    STOF_KWD        reduce using rule 84 (seen_term_op -> .)
    STOB_KWD        reduce using rule 84 (seen_term_op -> .)
    SUBSTR_KWD      reduce using rule 84 (seen_term_op -> .)
    STRLEN_KWD      reduce using rule 84 (seen_term_op -> .)
    RANDINT_KWD     reduce using rule 84 (seen_term_op -> .)
    ID              reduce using rule 84 (seen_term_op -> .)
    NEW_KWD         reduce using rule 84 (seen_term_op -> .)
    CTE_I           reduce using rule 84 (seen_term_op -> .)
    CTE_F           reduce using rule 84 (seen_term_op -> .)
    CTE_S           reduce using rule 84 (seen_term_op -> .)
    THIS_KWD        reduce using rule 84 (seen_term_op -> .)
    CTE_TRUE        reduce using rule 84 (seen_term_op -> .)
    CTE_FALSE       reduce using rule 84 (seen_term_op -> .)

    seen_term_op                   shift and go to state 349

state 299

    (83) EXP_P -> empty .

    BIGGER          reduce using rule 83 (EXP_P -> empty .)
    BIGGER_EQ       reduce using rule 83 (EXP_P -> empty .)
    SMALLER         reduce using rule 83 (EXP_P -> empty .)
    SMALLER_EQ      reduce using rule 83 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 83 (EXP_P -> empty .)
    NOT_EQUALS      reduce using rule 83 (EXP_P -> empty .)
    AND             reduce using rule 83 (EXP_P -> empty .)
    OR              reduce using rule 83 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 83 (EXP_P -> empty .)
    COMMA           reduce using rule 83 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 83 (EXP_P -> empty .)
    CLOSE_BRACKET   reduce using rule 83 (EXP_P -> empty .)


state 300

    (79) EXP -> MINUS seen_unary_minus EXP . pop_unary_minus
    (123) pop_unary_minus -> . empty
    (214) empty -> .

    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    pop_unary_minus                shift and go to state 350
    empty                          shift and go to state 351

state 301

    (99) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (163) TERM -> FACTOR . seen_factor TERM_P
    (123) pop_unary_minus -> . empty
    (167) seen_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    pop_unary_minus                shift and go to state 352
    seen_factor                    shift and go to state 226
    empty                          shift and go to state 353

state 302

    (163) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 163 (TERM -> FACTOR seen_factor TERM_P .)


state 303

    (164) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (168) seen_factor_op -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_factor_op                 shift and go to state 354
    empty                          shift and go to state 355

state 304

    (165) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (168) seen_factor_op -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_factor_op                 shift and go to state 356
    empty                          shift and go to state 355

state 305

    (166) TERM_P -> empty .

    PLUS            reduce using rule 166 (TERM_P -> empty .)
    MINUS           reduce using rule 166 (TERM_P -> empty .)
    BIGGER          reduce using rule 166 (TERM_P -> empty .)
    BIGGER_EQ       reduce using rule 166 (TERM_P -> empty .)
    SMALLER         reduce using rule 166 (TERM_P -> empty .)
    SMALLER_EQ      reduce using rule 166 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 166 (TERM_P -> empty .)
    NOT_EQUALS      reduce using rule 166 (TERM_P -> empty .)
    AND             reduce using rule 166 (TERM_P -> empty .)
    OR              reduce using rule 166 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 166 (TERM_P -> empty .)
    COMMA           reduce using rule 166 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 166 (TERM_P -> empty .)
    CLOSE_BRACKET   reduce using rule 166 (TERM_P -> empty .)


state 306

    (98) FACTOR -> NOT seen_not FACTOR . pop_not
    (121) pop_not -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    pop_not                        shift and go to state 357
    empty                          shift and go to state 358

state 307

    (99) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (124) seen_unary_minus -> . empty
    (214) empty -> .

    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_unary_minus               shift and go to state 359
    empty                          shift and go to state 225

state 308

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (125) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 360
    empty                          shift and go to state 222

state 309

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (125) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 361
    empty                          shift and go to state 222

state 310

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (125) seen_open_parenthesis -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_parenthesis          shift and go to state 362
    empty                          shift and go to state 222

state 311

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 363
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 312

    (104) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 364
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 313

    (105) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 365
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 314

    (148) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 366


state 315

    (149) seen_class_id_instance -> empty .

    OPEN_PARENTHESIS reduce using rule 149 (seen_class_id_instance -> empty .)


state 316

    (142) CLASS_REFERENCE -> ARRAY seen_var_in_assign DOT seen_dot_operator .

    ID              reduce using rule 142 (CLASS_REFERENCE -> ARRAY seen_var_in_assign DOT seen_dot_operator .)
    THIS_KWD        reduce using rule 142 (CLASS_REFERENCE -> ARRAY seen_var_in_assign DOT seen_dot_operator .)


state 317

    (143) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .

    ID              reduce using rule 143 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)
    THIS_KWD        reduce using rule 143 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)


state 318

    (151) seen_this_dot_operator -> empty .

    ID              reduce using rule 151 (seen_this_dot_operator -> empty .)
    THIS_KWD        reduce using rule 151 (seen_this_dot_operator -> empty .)


state 319

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (195) seen_if_kwd -> . empty
    (214) empty -> .

    OPEN_CURLY      reduce using rule 214 (empty -> .)

    seen_if_kwd                    shift and go to state 367
    empty                          shift and go to state 368

state 320

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 369


state 321

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 370


state 322

    (203) seen_for_kwd -> empty .

    EQUALS          reduce using rule 203 (seen_for_kwd -> empty .)


state 323

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (186) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 88
    READ_KWD        shift and go to state 103
    PRINT_KWD       shift and go to state 104
    PRINTLN_KWD     shift and go to state 105
    OPEN_KWD        shift and go to state 106
    WRITE_KWD       shift and go to state 107
    RETURN_KWD      shift and go to state 110
    THIS_KWD        shift and go to state 112
    IF_KWD          shift and go to state 113
    WHILE_KWD       shift and go to state 116
    FOR_KWD         shift and go to state 117

    STATEMENT_STAR                 shift and go to state 371
    STATEMENT                      shift and go to state 90
    empty                          shift and go to state 91
    ASSIGN                         shift and go to state 92
    FUNC_CALL                      shift and go to state 93
    READ                           shift and go to state 94
    PRINT                          shift and go to state 95
    PRINTLN                        shift and go to state 96
    OPEN                           shift and go to state 97
    WRITE                          shift and go to state 98
    FLOW_CONTROL                   shift and go to state 99
    FUNC_RETURN                    shift and go to state 100
    VAR                            shift and go to state 101
    CLASS_REFERENCE                shift and go to state 102
    DECISION                       shift and go to state 108
    REPETITION                     shift and go to state 109
    ARRAY                          shift and go to state 111
    CONDITIONAL_REP                shift and go to state 114
    UNCONDITIONAL_REP              shift and go to state 115

state 324

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 372


state 325

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_BRACKET   shift and go to state 373


state 326

    (169) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 169 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 327

    (172) ARG_LIST -> VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (108) FACTOR -> VAR seen_var_as_factor .
    (180) seen_arg -> . empty
    (214) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 108 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 214 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 214 (empty -> .) ]

    seen_arg                       shift and go to state 374
    empty                          shift and go to state 329

state 328

    (173) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 376
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 375
    empty                          shift and go to state 377

state 329

    (180) seen_arg -> empty .

    COMMA           reduce using rule 180 (seen_arg -> empty .)
    CLOSE_PARENTHESIS reduce using rule 180 (seen_arg -> empty .)


state 330

    (174) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 376
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 378
    empty                          shift and go to state 377

state 331

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (157) seen_array_access -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_array_access              shift and go to state 379
    empty                          shift and go to state 380

state 332

    (64) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 64 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 64 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)


state 333

    (65) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .

    SEMI_COLON      reduce using rule 65 (ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 65 (ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .)


state 334

    (66) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .

    SEMI_COLON      reduce using rule 66 (ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 66 (ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .)


state 335

    (67) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .

    SEMI_COLON      reduce using rule 67 (ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 67 (ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .)


state 336

    (68) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .

    SEMI_COLON      reduce using rule 68 (ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 68 (ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .)


state 337

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 382
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    READABLE_LIST_P                shift and go to state 381
    empty                          shift and go to state 383

state 338

    (26) seen_readable -> empty .

    COMMA           reduce using rule 26 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 26 (seen_readable -> empty .)


state 339

    (187) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 187 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 340

    (188) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 384
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 341

    (189) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 189 (PRINTABLE_P -> empty .)


state 342

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 385


state 343

    (52) seen_open_buffer -> empty .

    COMMA           reduce using rule 52 (seen_open_buffer -> empty .)


state 344

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 386


state 345

    (54) seen_write_buffer -> empty .

    COMMA           reduce using rule 54 (seen_write_buffer -> empty .)


state 346

    (86) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (87) seen_comp -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_comp                      shift and go to state 387
    empty                          shift and go to state 388

state 347

    (97) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (126) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 389
    empty                          shift and go to state 390

state 348

    (81) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    TERM                           shift and go to state 391
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 349

    (82) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    TERM                           shift and go to state 392
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 350

    (79) EXP -> MINUS seen_unary_minus EXP pop_unary_minus .

    BIGGER          reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    BIGGER_EQ       reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER         reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER_EQ      reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    NOT_EQUALS      reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    AND             reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    OR              reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SEMI_COLON      reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    COMMA           reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 79 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)


state 351

    (123) pop_unary_minus -> empty .

    BIGGER          reduce using rule 123 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 123 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 123 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 123 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 123 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 123 (pop_unary_minus -> empty .)
    AND             reduce using rule 123 (pop_unary_minus -> empty .)
    OR              reduce using rule 123 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 123 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 123 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 123 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 123 (pop_unary_minus -> empty .)
    STAR            reduce using rule 123 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 123 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 123 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 123 (pop_unary_minus -> empty .)


state 352

    (99) FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .

    STAR            reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    FWD_SLASH       reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    PLUS            reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    MINUS           reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER          reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER_EQ       reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER         reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER_EQ      reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    NOT_EQUALS      reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    AND             reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    OR              reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SEMI_COLON      reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    COMMA           reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 99 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)


state 353

    (123) pop_unary_minus -> empty .
    (167) seen_factor -> empty .

  ! reduce/reduce conflict for STAR resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 123 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 123 (pop_unary_minus -> empty .)
    STAR            reduce using rule 123 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 123 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 123 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 123 (pop_unary_minus -> empty .)
    BIGGER          reduce using rule 123 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 123 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 123 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 123 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 123 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 123 (pop_unary_minus -> empty .)
    AND             reduce using rule 123 (pop_unary_minus -> empty .)
    OR              reduce using rule 123 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 123 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 123 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 123 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 123 (pop_unary_minus -> empty .)

  ! STAR            [ reduce using rule 167 (seen_factor -> empty .) ]
  ! FWD_SLASH       [ reduce using rule 167 (seen_factor -> empty .) ]
  ! PLUS            [ reduce using rule 167 (seen_factor -> empty .) ]
  ! MINUS           [ reduce using rule 167 (seen_factor -> empty .) ]
  ! BIGGER          [ reduce using rule 167 (seen_factor -> empty .) ]
  ! BIGGER_EQ       [ reduce using rule 167 (seen_factor -> empty .) ]
  ! SMALLER         [ reduce using rule 167 (seen_factor -> empty .) ]
  ! SMALLER_EQ      [ reduce using rule 167 (seen_factor -> empty .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 167 (seen_factor -> empty .) ]
  ! NOT_EQUALS      [ reduce using rule 167 (seen_factor -> empty .) ]
  ! AND             [ reduce using rule 167 (seen_factor -> empty .) ]
  ! OR              [ reduce using rule 167 (seen_factor -> empty .) ]
  ! SEMI_COLON      [ reduce using rule 167 (seen_factor -> empty .) ]
  ! COMMA           [ reduce using rule 167 (seen_factor -> empty .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 167 (seen_factor -> empty .) ]
  ! CLOSE_BRACKET   [ reduce using rule 167 (seen_factor -> empty .) ]


state 354

    (164) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    FACTOR                         shift and go to state 393
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 355

    (168) seen_factor_op -> empty .

    OPEN_PARENTHESIS reduce using rule 168 (seen_factor_op -> empty .)
    NOT             reduce using rule 168 (seen_factor_op -> empty .)
    MINUS           reduce using rule 168 (seen_factor_op -> empty .)
    STOI_KWD        reduce using rule 168 (seen_factor_op -> empty .)
    STOF_KWD        reduce using rule 168 (seen_factor_op -> empty .)
    STOB_KWD        reduce using rule 168 (seen_factor_op -> empty .)
    SUBSTR_KWD      reduce using rule 168 (seen_factor_op -> empty .)
    STRLEN_KWD      reduce using rule 168 (seen_factor_op -> empty .)
    RANDINT_KWD     reduce using rule 168 (seen_factor_op -> empty .)
    ID              reduce using rule 168 (seen_factor_op -> empty .)
    NEW_KWD         reduce using rule 168 (seen_factor_op -> empty .)
    CTE_I           reduce using rule 168 (seen_factor_op -> empty .)
    CTE_F           reduce using rule 168 (seen_factor_op -> empty .)
    CTE_S           reduce using rule 168 (seen_factor_op -> empty .)
    THIS_KWD        reduce using rule 168 (seen_factor_op -> empty .)
    CTE_TRUE        reduce using rule 168 (seen_factor_op -> empty .)
    CTE_FALSE       reduce using rule 168 (seen_factor_op -> empty .)


state 356

    (165) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    FACTOR                         shift and go to state 394
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 357

    (98) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER_EQ       reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER_EQ      reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    NOT_EQUALS      reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_BRACKET   reduce using rule 98 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 358

    (121) pop_not -> empty .

    STAR            reduce using rule 121 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 121 (pop_not -> empty .)
    PLUS            reduce using rule 121 (pop_not -> empty .)
    MINUS           reduce using rule 121 (pop_not -> empty .)
    BIGGER          reduce using rule 121 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 121 (pop_not -> empty .)
    SMALLER         reduce using rule 121 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 121 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 121 (pop_not -> empty .)
    NOT_EQUALS      reduce using rule 121 (pop_not -> empty .)
    AND             reduce using rule 121 (pop_not -> empty .)
    OR              reduce using rule 121 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 121 (pop_not -> empty .)
    COMMA           reduce using rule 121 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 121 (pop_not -> empty .)
    CLOSE_BRACKET   reduce using rule 121 (pop_not -> empty .)


state 359

    (99) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    MINUS           shift and go to state 307
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    FACTOR                         shift and go to state 395
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 360

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 396
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 361

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 397
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 362

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 398
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 363

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (113) seen_substr_str -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_substr_str                shift and go to state 399
    empty                          shift and go to state 400

state 364

    (104) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (112) seen_strlen -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_strlen                    shift and go to state 401
    empty                          shift and go to state 402

state 365

    (105) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (111) seen_randint_arg -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_randint_arg               shift and go to state 403
    empty                          shift and go to state 404

state 366

    (148) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 405


state 367

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 406


state 368

    (195) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 195 (seen_if_kwd -> empty .)


state 369

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (201) seen_while_exp -> . empty
    (214) empty -> .

    OPEN_CURLY      reduce using rule 214 (empty -> .)

    seen_while_exp                 shift and go to state 407
    empty                          shift and go to state 408

state 370

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 409
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 371

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 410


state 372

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 39 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 373

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DECLARATION_P
    (159) ARRAY_DECLARATION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (160) ARRAY_DECLARATION_P -> . empty
    (214) empty -> .

    OPEN_BRACKET    shift and go to state 124
    COMMA           reduce using rule 214 (empty -> .)
    COLON           reduce using rule 214 (empty -> .)

    ARRAY_DECLARATION_P            shift and go to state 411
    empty                          shift and go to state 126

state 374

    (172) ARG_LIST -> VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 376
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 412
    empty                          shift and go to state 377

state 375

    (173) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 173 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 376

    (176) ARG_LIST_P -> COMMA . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    ID              shift and go to state 260
    THIS_KWD        shift and go to state 112
    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 413
    EXPRESSION                     shift and go to state 414
    FUNC_CALL                      shift and go to state 415
    ARRAY                          shift and go to state 111
    CLASS_REFERENCE                shift and go to state 266
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CTE_B                          shift and go to state 173

state 377

    (179) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 179 (ARG_LIST_P -> empty .)


state 378

    (174) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 174 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 379

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 416


state 380

    (157) seen_array_access -> empty .

    CLOSE_BRACKET   reduce using rule 157 (seen_array_access -> empty .)


state 381

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 23 (READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 382

    (24) READABLE_LIST_P -> COMMA . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 202
    THIS_KWD        shift and go to state 112

    VAR                            shift and go to state 417
    ARRAY                          shift and go to state 111
    CLASS_REFERENCE                shift and go to state 203

state 383

    (25) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 25 (READABLE_LIST_P -> empty .)


state 384

    (188) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (190) seen_printable -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_printable                 shift and go to state 418
    empty                          shift and go to state 288

state 385

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 419
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 386

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 420
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 387

    (86) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    SEMI_COLON      reduce using rule 86 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    COMMA           reduce using rule 86 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 86 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_BRACKET   reduce using rule 86 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 388

    (87) seen_comp -> empty .

    SEMI_COLON      reduce using rule 87 (seen_comp -> empty .)
    COMMA           reduce using rule 87 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 87 (seen_comp -> empty .)
    CLOSE_BRACKET   reduce using rule 87 (seen_comp -> empty .)


state 389

    (97) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    NOT_EQUALS      reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 97 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 390

    (126) seen_close_parenthesis -> empty .

    STAR            reduce using rule 126 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 126 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 126 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 126 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 126 (seen_close_parenthesis -> empty .)
    BIGGER_EQ       reduce using rule 126 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 126 (seen_close_parenthesis -> empty .)
    SMALLER_EQ      reduce using rule 126 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 126 (seen_close_parenthesis -> empty .)
    NOT_EQUALS      reduce using rule 126 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 126 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 126 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 126 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 126 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 126 (seen_close_parenthesis -> empty .)
    CLOSE_BRACKET   reduce using rule 126 (seen_close_parenthesis -> empty .)


state 391

    (81) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (80) seen_term -> .

    PLUS            reduce using rule 80 (seen_term -> .)
    MINUS           reduce using rule 80 (seen_term -> .)
    BIGGER          reduce using rule 80 (seen_term -> .)
    BIGGER_EQ       reduce using rule 80 (seen_term -> .)
    SMALLER         reduce using rule 80 (seen_term -> .)
    SMALLER_EQ      reduce using rule 80 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 80 (seen_term -> .)
    NOT_EQUALS      reduce using rule 80 (seen_term -> .)
    AND             reduce using rule 80 (seen_term -> .)
    OR              reduce using rule 80 (seen_term -> .)
    SEMI_COLON      reduce using rule 80 (seen_term -> .)
    COMMA           reduce using rule 80 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 80 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 80 (seen_term -> .)

    seen_term                      shift and go to state 421

state 392

    (82) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (80) seen_term -> .

    PLUS            reduce using rule 80 (seen_term -> .)
    MINUS           reduce using rule 80 (seen_term -> .)
    BIGGER          reduce using rule 80 (seen_term -> .)
    BIGGER_EQ       reduce using rule 80 (seen_term -> .)
    SMALLER         reduce using rule 80 (seen_term -> .)
    SMALLER_EQ      reduce using rule 80 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 80 (seen_term -> .)
    NOT_EQUALS      reduce using rule 80 (seen_term -> .)
    AND             reduce using rule 80 (seen_term -> .)
    OR              reduce using rule 80 (seen_term -> .)
    SEMI_COLON      reduce using rule 80 (seen_term -> .)
    COMMA           reduce using rule 80 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 80 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 80 (seen_term -> .)

    seen_term                      shift and go to state 422

state 393

    (164) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (167) seen_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_factor                    shift and go to state 423
    empty                          shift and go to state 227

state 394

    (165) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (167) seen_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_factor                    shift and go to state 424
    empty                          shift and go to state 227

state 395

    (99) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (123) pop_unary_minus -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    pop_unary_minus                shift and go to state 352
    empty                          shift and go to state 351

state 396

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 425


state 397

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 426


state 398

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 427


state 399

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str . COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    COMMA           shift and go to state 428


state 400

    (113) seen_substr_str -> empty .

    COMMA           reduce using rule 113 (seen_substr_str -> empty .)


state 401

    (104) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 429


state 402

    (112) seen_strlen -> empty .

    CLOSE_PARENTHESIS reduce using rule 112 (seen_strlen -> empty .)


state 403

    (105) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg . COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis

    COMMA           shift and go to state 430


state 404

    (111) seen_randint_arg -> empty .

    COMMA           reduce using rule 111 (seen_randint_arg -> empty .)
    CLOSE_PARENTHESIS reduce using rule 111 (seen_randint_arg -> empty .)


state 405

    (148) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    STAR            reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    AND             reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OR              reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMI_COLON      reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 148 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 406

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (186) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 88
    READ_KWD        shift and go to state 103
    PRINT_KWD       shift and go to state 104
    PRINTLN_KWD     shift and go to state 105
    OPEN_KWD        shift and go to state 106
    WRITE_KWD       shift and go to state 107
    RETURN_KWD      shift and go to state 110
    THIS_KWD        shift and go to state 112
    IF_KWD          shift and go to state 113
    WHILE_KWD       shift and go to state 116
    FOR_KWD         shift and go to state 117

    STATEMENT_STAR                 shift and go to state 431
    STATEMENT                      shift and go to state 90
    empty                          shift and go to state 91
    ASSIGN                         shift and go to state 92
    FUNC_CALL                      shift and go to state 93
    READ                           shift and go to state 94
    PRINT                          shift and go to state 95
    PRINTLN                        shift and go to state 96
    OPEN                           shift and go to state 97
    WRITE                          shift and go to state 98
    FLOW_CONTROL                   shift and go to state 99
    FUNC_RETURN                    shift and go to state 100
    VAR                            shift and go to state 101
    CLASS_REFERENCE                shift and go to state 102
    DECISION                       shift and go to state 108
    REPETITION                     shift and go to state 109
    ARRAY                          shift and go to state 111
    CONDITIONAL_REP                shift and go to state 114
    UNCONDITIONAL_REP              shift and go to state 115

state 407

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 432


state 408

    (201) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 201 (seen_while_exp -> empty .)


state 409

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (205) seen_for_start_exp -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)

    seen_for_start_exp             shift and go to state 433
    empty                          shift and go to state 434

state 410

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    ID              reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLASS_KWD       reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 411

    (159) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .

    COMMA           reduce using rule 159 (ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)
    COLON           reduce using rule 159 (ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)


state 412

    (172) ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 172 (ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 413

    (176) ARG_LIST_P -> COMMA VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (108) FACTOR -> VAR . seen_var_as_factor
    (128) seen_var_as_factor -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)

    seen_var_as_factor             shift and go to state 435
    empty                          shift and go to state 240

state 414

    (177) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (180) seen_arg -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_arg                       shift and go to state 436
    empty                          shift and go to state 329

state 415

    (178) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (106) FACTOR -> FUNC_CALL .
    (180) seen_arg -> . empty
    (214) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 106 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 106 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 106 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 106 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 106 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 214 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 214 (empty -> .) ]

    seen_arg                       shift and go to state 437
    empty                          shift and go to state 329

state 416

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (153) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (154) ARRAY_P -> . empty
    (214) empty -> .

    OPEN_BRACKET    shift and go to state 438
    DOT             reduce using rule 214 (empty -> .)
    EQUALS          reduce using rule 214 (empty -> .)
    PLUS_EQUALS     reduce using rule 214 (empty -> .)
    MINUS_EQUALS    reduce using rule 214 (empty -> .)
    TIMES_EQUALS    reduce using rule 214 (empty -> .)
    OVER_EQUALS     reduce using rule 214 (empty -> .)
    PLUS_PLUS       reduce using rule 214 (empty -> .)
    MINUS_MINUS     reduce using rule 214 (empty -> .)
    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    ARRAY_P                        shift and go to state 439
    empty                          shift and go to state 440

state 417

    (24) READABLE_LIST_P -> COMMA VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (127) seen_var_in_assign -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_var_in_assign             shift and go to state 441
    empty                          shift and go to state 141

state 418

    (188) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (188) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (189) PRINTABLE_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 340
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    PRINTABLE_P                    shift and go to state 442
    empty                          shift and go to state 341

state 419

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) seen_file_path -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_file_path                 shift and go to state 443
    empty                          shift and go to state 444

state 420

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) seen_file_path -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_file_path                 shift and go to state 445
    empty                          shift and go to state 444

state 421

    (81) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (81) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (82) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (83) EXP_P -> . empty
    (214) empty -> .

    PLUS            shift and go to state 297
    MINUS           shift and go to state 298
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    EXP_P                          shift and go to state 446
    empty                          shift and go to state 299

state 422

    (82) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (81) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (82) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (83) EXP_P -> . empty
    (214) empty -> .

    PLUS            shift and go to state 297
    MINUS           shift and go to state 298
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    EXP_P                          shift and go to state 447
    empty                          shift and go to state 299

state 423

    (164) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (164) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (165) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (166) TERM_P -> . empty
    (214) empty -> .

    STAR            shift and go to state 303
    FWD_SLASH       shift and go to state 304
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    TERM_P                         shift and go to state 448
    empty                          shift and go to state 305

state 424

    (165) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (164) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (165) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (166) TERM_P -> . empty
    (214) empty -> .

    STAR            shift and go to state 303
    FWD_SLASH       shift and go to state 304
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    TERM_P                         shift and go to state 449
    empty                          shift and go to state 305

state 425

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (126) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 450
    empty                          shift and go to state 390

state 426

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (126) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 451
    empty                          shift and go to state 390

state 427

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (126) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 452
    empty                          shift and go to state 390

state 428

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA . EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 453
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 429

    (104) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS . seen_close_parenthesis
    (126) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 454
    empty                          shift and go to state 390

state 430

    (105) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA . EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 455
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 431

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 456


state 432

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (186) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 88
    READ_KWD        shift and go to state 103
    PRINT_KWD       shift and go to state 104
    PRINTLN_KWD     shift and go to state 105
    OPEN_KWD        shift and go to state 106
    WRITE_KWD       shift and go to state 107
    RETURN_KWD      shift and go to state 110
    THIS_KWD        shift and go to state 112
    IF_KWD          shift and go to state 113
    WHILE_KWD       shift and go to state 116
    FOR_KWD         shift and go to state 117

    STATEMENT_STAR                 shift and go to state 457
    STATEMENT                      shift and go to state 90
    empty                          shift and go to state 91
    ASSIGN                         shift and go to state 92
    FUNC_CALL                      shift and go to state 93
    READ                           shift and go to state 94
    PRINT                          shift and go to state 95
    PRINTLN                        shift and go to state 96
    OPEN                           shift and go to state 97
    WRITE                          shift and go to state 98
    FLOW_CONTROL                   shift and go to state 99
    FUNC_RETURN                    shift and go to state 100
    VAR                            shift and go to state 101
    CLASS_REFERENCE                shift and go to state 102
    DECISION                       shift and go to state 108
    REPETITION                     shift and go to state 109
    ARRAY                          shift and go to state 111
    CONDITIONAL_REP                shift and go to state 114
    UNCONDITIONAL_REP              shift and go to state 115

state 433

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 458


state 434

    (205) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 205 (seen_for_start_exp -> empty .)


state 435

    (176) ARG_LIST_P -> COMMA VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (108) FACTOR -> VAR seen_var_as_factor .
    (180) seen_arg -> . empty
    (214) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 108 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 214 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 214 (empty -> .) ]

    seen_arg                       shift and go to state 459
    empty                          shift and go to state 329

state 436

    (177) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 376
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 460
    empty                          shift and go to state 377

state 437

    (178) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 376
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 461
    empty                          shift and go to state 377

state 438

    (153) ARRAY_P -> OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (156) seen_open_bracket -> . empty
    (214) empty -> .

    MINUS           reduce using rule 214 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 214 (empty -> .)
    NOT             reduce using rule 214 (empty -> .)
    STOI_KWD        reduce using rule 214 (empty -> .)
    STOF_KWD        reduce using rule 214 (empty -> .)
    STOB_KWD        reduce using rule 214 (empty -> .)
    SUBSTR_KWD      reduce using rule 214 (empty -> .)
    STRLEN_KWD      reduce using rule 214 (empty -> .)
    RANDINT_KWD     reduce using rule 214 (empty -> .)
    ID              reduce using rule 214 (empty -> .)
    NEW_KWD         reduce using rule 214 (empty -> .)
    CTE_I           reduce using rule 214 (empty -> .)
    CTE_F           reduce using rule 214 (empty -> .)
    CTE_S           reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    CTE_TRUE        reduce using rule 214 (empty -> .)
    CTE_FALSE       reduce using rule 214 (empty -> .)

    seen_open_bracket              shift and go to state 462
    empty                          shift and go to state 268

state 439

    (152) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    DOT             reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    EQUALS          reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_EQUALS     reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_EQUALS    reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    TIMES_EQUALS    reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OVER_EQUALS     reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_PLUS       reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_MINUS     reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 152 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 440

    (154) ARRAY_P -> empty .

    DOT             reduce using rule 154 (ARRAY_P -> empty .)
    EQUALS          reduce using rule 154 (ARRAY_P -> empty .)
    PLUS_EQUALS     reduce using rule 154 (ARRAY_P -> empty .)
    MINUS_EQUALS    reduce using rule 154 (ARRAY_P -> empty .)
    TIMES_EQUALS    reduce using rule 154 (ARRAY_P -> empty .)
    OVER_EQUALS     reduce using rule 154 (ARRAY_P -> empty .)
    PLUS_PLUS       reduce using rule 154 (ARRAY_P -> empty .)
    MINUS_MINUS     reduce using rule 154 (ARRAY_P -> empty .)
    STAR            reduce using rule 154 (ARRAY_P -> empty .)
    FWD_SLASH       reduce using rule 154 (ARRAY_P -> empty .)
    PLUS            reduce using rule 154 (ARRAY_P -> empty .)
    MINUS           reduce using rule 154 (ARRAY_P -> empty .)
    BIGGER          reduce using rule 154 (ARRAY_P -> empty .)
    BIGGER_EQ       reduce using rule 154 (ARRAY_P -> empty .)
    SMALLER         reduce using rule 154 (ARRAY_P -> empty .)
    SMALLER_EQ      reduce using rule 154 (ARRAY_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 154 (ARRAY_P -> empty .)
    NOT_EQUALS      reduce using rule 154 (ARRAY_P -> empty .)
    AND             reduce using rule 154 (ARRAY_P -> empty .)
    OR              reduce using rule 154 (ARRAY_P -> empty .)
    SEMI_COLON      reduce using rule 154 (ARRAY_P -> empty .)
    COMMA           reduce using rule 154 (ARRAY_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 154 (ARRAY_P -> empty .)
    CLOSE_BRACKET   reduce using rule 154 (ARRAY_P -> empty .)


state 441

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_readable                  shift and go to state 463
    empty                          shift and go to state 338

state 442

    (188) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 188 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 443

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 464


state 444

    (55) seen_file_path -> empty .

    COMMA           reduce using rule 55 (seen_file_path -> empty .)


state 445

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 465


state 446

    (81) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 81 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 447

    (82) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 82 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 448

    (164) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 164 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 449

    (165) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 165 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 450

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (117) seen_stox_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_stox_factor               shift and go to state 466
    empty                          shift and go to state 467

state 451

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (117) seen_stox_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_stox_factor               shift and go to state 468
    empty                          shift and go to state 467

state 452

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (117) seen_stox_factor -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_stox_factor               shift and go to state 469
    empty                          shift and go to state 467

state 453

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION . seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (114) seen_substr_idx -> . empty
    (214) empty -> .

    COMMA           reduce using rule 214 (empty -> .)

    seen_substr_idx                shift and go to state 470
    empty                          shift and go to state 471

state 454

    (104) FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    NOT_EQUALS      reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 104 (FACTOR -> STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis .)


state 455

    (105) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION . seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (111) seen_randint_arg -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_randint_arg               shift and go to state 472
    empty                          shift and go to state 404

state 456

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (192) DECISION_P -> . ELSE_KWD seen_else_kwd DECISION
    (193) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (194) DECISION_P -> . empty
    (214) empty -> .

    ELSE_KWD        shift and go to state 474
    ID              reduce using rule 214 (empty -> .)
    READ_KWD        reduce using rule 214 (empty -> .)
    PRINT_KWD       reduce using rule 214 (empty -> .)
    PRINTLN_KWD     reduce using rule 214 (empty -> .)
    OPEN_KWD        reduce using rule 214 (empty -> .)
    WRITE_KWD       reduce using rule 214 (empty -> .)
    RETURN_KWD      reduce using rule 214 (empty -> .)
    THIS_KWD        reduce using rule 214 (empty -> .)
    IF_KWD          reduce using rule 214 (empty -> .)
    WHILE_KWD       reduce using rule 214 (empty -> .)
    FOR_KWD         reduce using rule 214 (empty -> .)
    CLOSE_CURLY     reduce using rule 214 (empty -> .)

    DECISION_P                     shift and go to state 473
    empty                          shift and go to state 475

state 457

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 476


state 458

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 477
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 459

    (176) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (176) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (177) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (178) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (179) ARG_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 376
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    ARG_LIST_P                     shift and go to state 478
    empty                          shift and go to state 377

state 460

    (177) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 177 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 461

    (178) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 178 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 462

    (153) ARRAY_P -> OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 479
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 463

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (214) empty -> .

    COMMA           shift and go to state 382
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    READABLE_LIST_P                shift and go to state 480
    empty                          shift and go to state 383

state 464

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 481
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 465

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    VAR                            shift and go to state 167
    EXPRESSION                     shift and go to state 482
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 466

    (100) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 100 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 467

    (117) seen_stox_factor -> empty .

    STAR            reduce using rule 117 (seen_stox_factor -> empty .)
    FWD_SLASH       reduce using rule 117 (seen_stox_factor -> empty .)
    PLUS            reduce using rule 117 (seen_stox_factor -> empty .)
    MINUS           reduce using rule 117 (seen_stox_factor -> empty .)
    BIGGER          reduce using rule 117 (seen_stox_factor -> empty .)
    BIGGER_EQ       reduce using rule 117 (seen_stox_factor -> empty .)
    SMALLER         reduce using rule 117 (seen_stox_factor -> empty .)
    SMALLER_EQ      reduce using rule 117 (seen_stox_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 117 (seen_stox_factor -> empty .)
    NOT_EQUALS      reduce using rule 117 (seen_stox_factor -> empty .)
    AND             reduce using rule 117 (seen_stox_factor -> empty .)
    OR              reduce using rule 117 (seen_stox_factor -> empty .)
    SEMI_COLON      reduce using rule 117 (seen_stox_factor -> empty .)
    COMMA           reduce using rule 117 (seen_stox_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 117 (seen_stox_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 117 (seen_stox_factor -> empty .)


state 468

    (101) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 101 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 469

    (102) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 102 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 470

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx . COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    COMMA           shift and go to state 483


state 471

    (114) seen_substr_idx -> empty .

    COMMA           reduce using rule 114 (seen_substr_idx -> empty .)


state 472

    (105) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg . seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (110) seen_randint -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_randint                   shift and go to state 484
    empty                          shift and go to state 485

state 473

    (191) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINT_KWD       reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINTLN_KWD     reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    OPEN_KWD        reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    RETURN_KWD      reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    THIS_KWD        reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 191 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 474

    (192) DECISION_P -> ELSE_KWD . seen_else_kwd DECISION
    (193) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (196) seen_else_kwd -> . empty
    (214) empty -> .

    OPEN_CURLY      reduce using rule 214 (empty -> .)
    IF_KWD          reduce using rule 214 (empty -> .)

    seen_else_kwd                  shift and go to state 486
    empty                          shift and go to state 487

state 475

    (194) DECISION_P -> empty .

    ID              reduce using rule 194 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 194 (DECISION_P -> empty .)
    PRINT_KWD       reduce using rule 194 (DECISION_P -> empty .)
    PRINTLN_KWD     reduce using rule 194 (DECISION_P -> empty .)
    OPEN_KWD        reduce using rule 194 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 194 (DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 194 (DECISION_P -> empty .)
    THIS_KWD        reduce using rule 194 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 194 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 194 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 194 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 194 (DECISION_P -> empty .)


state 476

    (199) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 199 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 477

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (206) seen_for_end_exp -> . empty
    (214) empty -> .

    SEMI_COLON      reduce using rule 214 (empty -> .)

    seen_for_end_exp               shift and go to state 488
    empty                          shift and go to state 489

state 478

    (176) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 176 (ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 479

    (153) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (157) seen_array_access -> . empty
    (214) empty -> .

    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_array_access              shift and go to state 490
    empty                          shift and go to state 380

state 480

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 24 (READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 481

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (56) seen_separator -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_separator                 shift and go to state 491
    empty                          shift and go to state 492

state 482

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (56) seen_separator -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_separator                 shift and go to state 493
    empty                          shift and go to state 492

state 483

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA . EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (85) EXPRESSION -> . EXP
    (86) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (78) EXP -> . TERM seen_term EXP_P
    (79) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (163) TERM -> . FACTOR seen_factor TERM_P
    (97) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (98) FACTOR -> . NOT seen_not FACTOR pop_not
    (99) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (100) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (101) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (102) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (104) FACTOR -> . STRLEN_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_strlen CLOSE_PARENTHESIS seen_close_parenthesis
    (105) FACTOR -> . RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (135) CONSTANT -> . CTE_I seen_cte_i
    (136) CONSTANT -> . CTE_F seen_cte_f
    (137) CONSTANT -> . CTE_S seen_cte_s
    (138) CONSTANT -> . CTE_B
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (139) CTE_B -> . CTE_TRUE seen_cte_true
    (140) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 156
    OPEN_PARENTHESIS shift and go to state 154
    NOT             shift and go to state 159
    STOI_KWD        shift and go to state 160
    STOF_KWD        shift and go to state 161
    STOB_KWD        shift and go to state 162
    SUBSTR_KWD      shift and go to state 163
    STRLEN_KWD      shift and go to state 164
    RANDINT_KWD     shift and go to state 165
    ID              shift and go to state 88
    NEW_KWD         shift and go to state 169
    CTE_I           shift and go to state 170
    CTE_F           shift and go to state 171
    CTE_S           shift and go to state 172
    THIS_KWD        shift and go to state 112
    CTE_TRUE        shift and go to state 174
    CTE_FALSE       shift and go to state 175

    EXPRESSION                     shift and go to state 494
    EXP                            shift and go to state 152
    TERM                           shift and go to state 155
    FACTOR                         shift and go to state 158
    FUNC_CALL                      shift and go to state 206
    CLASS_INSTANCE                 shift and go to state 166
    VAR                            shift and go to state 167
    CONSTANT                       shift and go to state 168
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111
    CTE_B                          shift and go to state 173

state 484

    (105) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 495


state 485

    (110) seen_randint -> empty .

    CLOSE_PARENTHESIS reduce using rule 110 (seen_randint -> empty .)


state 486

    (192) DECISION_P -> ELSE_KWD seen_else_kwd . DECISION
    (193) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 497
    IF_KWD          shift and go to state 113

    DECISION                       shift and go to state 496

state 487

    (196) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 196 (seen_else_kwd -> empty .)
    IF_KWD          reduce using rule 196 (seen_else_kwd -> empty .)


state 488

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 498


state 489

    (206) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 206 (seen_for_end_exp -> empty .)


state 490

    (153) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 499


state 491

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 500


state 492

    (56) seen_separator -> empty .

    CLOSE_PARENTHESIS reduce using rule 56 (seen_separator -> empty .)


state 493

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 501


state 494

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION . seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (115) seen_substr_size -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_substr_size               shift and go to state 502
    empty                          shift and go to state 503

state 495

    (105) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS . seen_close_parenthesis
    (126) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 504
    empty                          shift and go to state 390

state 496

    (192) DECISION_P -> ELSE_KWD seen_else_kwd DECISION .

    ID              reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    READ_KWD        reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    PRINT_KWD       reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    PRINTLN_KWD     reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    OPEN_KWD        reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    WRITE_KWD       reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    RETURN_KWD      reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    THIS_KWD        reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    IF_KWD          reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    WHILE_KWD       reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    FOR_KWD         reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    CLOSE_CURLY     reduce using rule 192 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)


state 497

    (193) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (186) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 88
    READ_KWD        shift and go to state 103
    PRINT_KWD       shift and go to state 104
    PRINTLN_KWD     shift and go to state 105
    OPEN_KWD        shift and go to state 106
    WRITE_KWD       shift and go to state 107
    RETURN_KWD      shift and go to state 110
    THIS_KWD        shift and go to state 112
    IF_KWD          shift and go to state 113
    WHILE_KWD       shift and go to state 116
    FOR_KWD         shift and go to state 117

    STATEMENT_STAR                 shift and go to state 505
    STATEMENT                      shift and go to state 90
    empty                          shift and go to state 91
    ASSIGN                         shift and go to state 92
    FUNC_CALL                      shift and go to state 93
    READ                           shift and go to state 94
    PRINT                          shift and go to state 95
    PRINTLN                        shift and go to state 96
    OPEN                           shift and go to state 97
    WRITE                          shift and go to state 98
    FLOW_CONTROL                   shift and go to state 99
    FUNC_RETURN                    shift and go to state 100
    VAR                            shift and go to state 101
    CLASS_REFERENCE                shift and go to state 102
    DECISION                       shift and go to state 108
    REPETITION                     shift and go to state 109
    ARRAY                          shift and go to state 111
    CONDITIONAL_REP                shift and go to state 114
    UNCONDITIONAL_REP              shift and go to state 115

state 498

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (59) FOR_INCR_STATEMENT -> . ASSIGN
    (60) FOR_INCR_STATEMENT -> . FUNC_CALL
    (61) FOR_INCR_STATEMENT -> . READ
    (62) FOR_INCR_STATEMENT -> . PRINT
    (63) FOR_INCR_STATEMENT -> . PRINTLN
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (186) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 88
    READ_KWD        shift and go to state 103
    PRINT_KWD       shift and go to state 104
    PRINTLN_KWD     shift and go to state 105
    THIS_KWD        shift and go to state 112

    VAR                            shift and go to state 101
    FOR_INCR_STATEMENT             shift and go to state 506
    ASSIGN                         shift and go to state 507
    FUNC_CALL                      shift and go to state 508
    READ                           shift and go to state 509
    PRINT                          shift and go to state 510
    PRINTLN                        shift and go to state 511
    CLASS_REFERENCE                shift and go to state 102
    ARRAY                          shift and go to state 111

state 499

    (153) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (153) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (154) ARRAY_P -> . empty
    (214) empty -> .

    OPEN_BRACKET    shift and go to state 438
    DOT             reduce using rule 214 (empty -> .)
    EQUALS          reduce using rule 214 (empty -> .)
    PLUS_EQUALS     reduce using rule 214 (empty -> .)
    MINUS_EQUALS    reduce using rule 214 (empty -> .)
    TIMES_EQUALS    reduce using rule 214 (empty -> .)
    OVER_EQUALS     reduce using rule 214 (empty -> .)
    PLUS_PLUS       reduce using rule 214 (empty -> .)
    MINUS_MINUS     reduce using rule 214 (empty -> .)
    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    ARRAY_P                        shift and go to state 512
    empty                          shift and go to state 440

state 500

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 51 (OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 501

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 53 (WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 502

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size . CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    CLOSE_PARENTHESIS shift and go to state 513


state 503

    (115) seen_substr_size -> empty .

    CLOSE_PARENTHESIS reduce using rule 115 (seen_substr_size -> empty .)


state 504

    (105) FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    NOT_EQUALS      reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 105 (FACTOR -> RANDINT_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_randint_arg COMMA EXPRESSION seen_randint_arg seen_randint CLOSE_PARENTHESIS seen_close_parenthesis .)


state 505

    (193) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 514


state 506

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (204) seen_for_incr_exp -> . empty
    (214) empty -> .

    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)

    seen_for_incr_exp              shift and go to state 515
    empty                          shift and go to state 516

state 507

    (59) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 59 (FOR_INCR_STATEMENT -> ASSIGN .)


state 508

    (60) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 60 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 509

    (61) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 61 (FOR_INCR_STATEMENT -> READ .)


state 510

    (62) FOR_INCR_STATEMENT -> PRINT .

    CLOSE_PARENTHESIS reduce using rule 62 (FOR_INCR_STATEMENT -> PRINT .)


state 511

    (63) FOR_INCR_STATEMENT -> PRINTLN .

    CLOSE_PARENTHESIS reduce using rule 63 (FOR_INCR_STATEMENT -> PRINTLN .)


state 512

    (153) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    DOT             reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    EQUALS          reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_EQUALS     reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_EQUALS    reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    TIMES_EQUALS    reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OVER_EQUALS     reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_PLUS       reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_MINUS     reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 153 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 513

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS . seen_close_parenthesis seen_substr
    (126) seen_close_parenthesis -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_close_parenthesis         shift and go to state 517
    empty                          shift and go to state 390

state 514

    (193) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 193 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 515

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 518


state 516

    (204) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 204 (seen_for_incr_exp -> empty .)


state 517

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis . seen_substr
    (116) seen_substr -> . empty
    (214) empty -> .

    STAR            reduce using rule 214 (empty -> .)
    FWD_SLASH       reduce using rule 214 (empty -> .)
    PLUS            reduce using rule 214 (empty -> .)
    MINUS           reduce using rule 214 (empty -> .)
    BIGGER          reduce using rule 214 (empty -> .)
    BIGGER_EQ       reduce using rule 214 (empty -> .)
    SMALLER         reduce using rule 214 (empty -> .)
    SMALLER_EQ      reduce using rule 214 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 214 (empty -> .)
    NOT_EQUALS      reduce using rule 214 (empty -> .)
    AND             reduce using rule 214 (empty -> .)
    OR              reduce using rule 214 (empty -> .)
    SEMI_COLON      reduce using rule 214 (empty -> .)
    COMMA           reduce using rule 214 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 214 (empty -> .)
    CLOSE_BRACKET   reduce using rule 214 (empty -> .)

    seen_substr                    shift and go to state 519
    empty                          shift and go to state 520

state 518

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 521


state 519

    (103) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .

    STAR            reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    FWD_SLASH       reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    PLUS            reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    MINUS           reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    BIGGER          reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    BIGGER_EQ       reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SMALLER         reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SMALLER_EQ      reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    DOUBLE_EQUALS   reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    NOT_EQUALS      reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    AND             reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    OR              reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SEMI_COLON      reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    COMMA           reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    CLOSE_PARENTHESIS reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    CLOSE_BRACKET   reduce using rule 103 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)


state 520

    (116) seen_substr -> empty .

    STAR            reduce using rule 116 (seen_substr -> empty .)
    FWD_SLASH       reduce using rule 116 (seen_substr -> empty .)
    PLUS            reduce using rule 116 (seen_substr -> empty .)
    MINUS           reduce using rule 116 (seen_substr -> empty .)
    BIGGER          reduce using rule 116 (seen_substr -> empty .)
    BIGGER_EQ       reduce using rule 116 (seen_substr -> empty .)
    SMALLER         reduce using rule 116 (seen_substr -> empty .)
    SMALLER_EQ      reduce using rule 116 (seen_substr -> empty .)
    DOUBLE_EQUALS   reduce using rule 116 (seen_substr -> empty .)
    NOT_EQUALS      reduce using rule 116 (seen_substr -> empty .)
    AND             reduce using rule 116 (seen_substr -> empty .)
    OR              reduce using rule 116 (seen_substr -> empty .)
    SEMI_COLON      reduce using rule 116 (seen_substr -> empty .)
    COMMA           reduce using rule 116 (seen_substr -> empty .)
    CLOSE_PARENTHESIS reduce using rule 116 (seen_substr -> empty .)
    CLOSE_BRACKET   reduce using rule 116 (seen_substr -> empty .)


state 521

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (214) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (65) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (66) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (70) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (169) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (170) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (184) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (185) PRINT -> . PRINT_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (186) PRINTLN -> . PRINTLN_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (181) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (182) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (183) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (145) VAR -> . ID
    (146) VAR -> . ARRAY
    (147) VAR -> . CLASS_REFERENCE VAR
    (141) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (142) CLASS_REFERENCE -> . ARRAY seen_var_in_assign DOT seen_dot_operator
    (143) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (191) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (197) REPETITION -> . CONDITIONAL_REP
    (198) REPETITION -> . UNCONDITIONAL_REP
    (152) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (199) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (202) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 214 (empty -> .)
    ID              shift and go to state 88
    READ_KWD        shift and go to state 103
    PRINT_KWD       shift and go to state 104
    PRINTLN_KWD     shift and go to state 105
    OPEN_KWD        shift and go to state 106
    WRITE_KWD       shift and go to state 107
    RETURN_KWD      shift and go to state 110
    THIS_KWD        shift and go to state 112
    IF_KWD          shift and go to state 113
    WHILE_KWD       shift and go to state 116
    FOR_KWD         shift and go to state 117

    VAR                            shift and go to state 101
    STATEMENT_STAR                 shift and go to state 522
    STATEMENT                      shift and go to state 90
    empty                          shift and go to state 91
    ASSIGN                         shift and go to state 92
    FUNC_CALL                      shift and go to state 93
    READ                           shift and go to state 94
    PRINT                          shift and go to state 95
    PRINTLN                        shift and go to state 96
    OPEN                           shift and go to state 97
    WRITE                          shift and go to state 98
    FLOW_CONTROL                   shift and go to state 99
    FUNC_RETURN                    shift and go to state 100
    CLASS_REFERENCE                shift and go to state 102
    DECISION                       shift and go to state 108
    REPETITION                     shift and go to state 109
    ARRAY                          shift and go to state 111
    CONDITIONAL_REP                shift and go to state 114
    UNCONDITIONAL_REP              shift and go to state 115

state 522

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 523


state 523

    (202) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 202 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLASS_KWD in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 6 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 9 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 10 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 11 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 14 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SEMI_COLON in state 151 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (CLASS_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 264 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 264
WARNING: reduce/reduce conflict in state 327 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 327
WARNING: reduce/reduce conflict in state 353 resolved using rule (pop_unary_minus -> empty)
WARNING: rejected rule (seen_factor -> empty) in state 353
WARNING: reduce/reduce conflict in state 415 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 415
WARNING: reduce/reduce conflict in state 435 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 435
