Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 2     CLASS_STAR -> CLASS CLASS_STAR
Rule 3     CLASS_STAR -> empty
Rule 4     CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
Rule 5     CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 6     VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 7     VAR_LIST_STAR -> empty
Rule 8     VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON
Rule 9     ID_LIST -> ID ID_LIST_P
Rule 10    ID_LIST_P -> COMMA ID ID_LIST_P
Rule 11    ID_LIST_P -> empty
Rule 12    READABLE_LIST -> ID seen_readable READABLE_LIST_P
Rule 13    READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P
Rule 14    READABLE_LIST_P -> empty
Rule 15    seen_readable -> <empty>
Rule 16    GLOBAL_VAR -> VAR_LIST_STAR
Rule 17    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 18    FUNC_DEF_STAR -> empty
Rule 19    FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 20    FUNC_PARAM -> VAR FUNC_PARAM_P
Rule 21    FUNC_PARAM -> empty
Rule 22    FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P
Rule 23    FUNC_PARAM_P -> empty
Rule 24    VAR -> ID COLON TYPE
Rule 25    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 26    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 27    STATEMENT_STAR -> empty
Rule 28    STATEMENT -> ASSIGN
Rule 29    STATEMENT -> FUNC_RETURN
Rule 30    STATEMENT -> READ
Rule 31    STATEMENT -> WRITE
Rule 32    STATEMENT -> DECISION
Rule 33    STATEMENT -> REPETITION
Rule 34    ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
Rule 35    seen_equals -> <empty>
Rule 36    EXP -> TERM seen_term EXP_P
Rule 37    seen_term -> <empty>
Rule 38    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 39    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 40    EXP_P -> empty
Rule 41    seen_term_op -> <empty>
Rule 42    EXPRESSION -> EXP
Rule 43    EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp
Rule 44    seen_comp -> <empty>
Rule 45    seen_comp_op -> <empty>
Rule 46    COMP -> BIGGER
Rule 47    COMP -> SMALLER
Rule 48    COMP -> DOUBLE_EQUALS
Rule 49    COMP -> DIFFERENT
Rule 50    COMP -> AND
Rule 51    COMP -> OR
Rule 52    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 53    FACTOR -> FUNC_CALL
Rule 54    FACTOR -> ID seen_id
Rule 55    FACTOR -> CNST
Rule 56    seen_open_parenthesis -> <empty>
Rule 57    seen_close_parenthesis -> <empty>
Rule 58    seen_id -> <empty>
Rule 59    seen_cte_i -> <empty>
Rule 60    seen_cte_f -> <empty>
Rule 61    seen_cte_s -> <empty>
Rule 62    CNST -> CTE_S seen_cte_s
Rule 63    CNST -> CTE_F seen_cte_f
Rule 64    CNST -> CTE_I seen_cte_i
Rule 65    TERM -> FACTOR seen_factor TERM_P
Rule 66    TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 67    TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 68    TERM_P -> empty
Rule 69    seen_factor -> <empty>
Rule 70    seen_factor_op -> <empty>
Rule 71    FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 72    ARG_LIST -> ID_LIST ARG_LIST_P
Rule 73    ARG_LIST -> EXPRESSION ARG_LIST_P
Rule 74    ARG_LIST_P -> COMMA ID_LIST ARG_LIST_P
Rule 75    ARG_LIST_P -> COMMA EXPRESSION ARG_LIST_P
Rule 76    ARG_LIST_P -> empty
Rule 77    FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 78    READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
Rule 79    WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
Rule 80    PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 81    PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 82    PRINTABLE_P -> empty
Rule 83    seen_printable -> <empty>
Rule 84    DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 85    DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 86    DECISION_P -> empty
Rule 87    REPETITION -> CONDITIONAL_REP
Rule 88    REPETITION -> UNCONDITIONAL_REP
Rule 89    CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 90    UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 91    empty -> <empty>

Terminals, with rules where they appear

AND                  : 50
ATTR_KWD             : 5
BIGGER               : 4 46
CLASS_KWD            : 4
CLOSE_CURLY          : 1 4 5 19 25 84 85 89 90
CLOSE_PARENTHESIS    : 1 19 52 71 78 79 84 89
COLON                : 8 24
COMMA                : 10 13 22 74 75 81
CTE_F                : 63
CTE_I                : 64
CTE_S                : 62
DERIVES_KWD          : 4
DIFFERENT            : 49
DOUBLE_EQUALS        : 48
ELSE_KWD             : 85
EQUALS               : 34 90
FROM_KWD             : 90
FWD_SLASH            : 67
ID                   : 1 4 9 10 12 13 19 24 34 54 71 90
IF_KWD               : 84
MAIN_KWD             : 1
MINUS                : 39
OPEN_CURLY           : 1 4 5 19 25 84 85 89 90
OPEN_PARENTHESIS     : 1 19 52 71 78 79 84 89
OR                   : 51
PLUS                 : 38
PROGRAM_KWD          : 1
READ_KWD             : 78
RETURN_KWD           : 77
SEMI_COLON           : 1 8 34 77 78 79
SMALLER              : 4 47
STAR                 : 66
THEN_KWD             : 84
TYPE                 : 4 8 19 24
UNTIL_KWD            : 90
VARS_KWD             : 25
WHILE_KWD            : 89
WRITE_KWD            : 79
error                : 

Nonterminals, with rules where they appear

ARG_LIST             : 71
ARG_LIST_P           : 72 73 74 75
ASSIGN               : 28
CLASS                : 2
CLASS_ATTR           : 4
CLASS_STAR           : 1 2
CNST                 : 55
COMP                 : 43
CONDITIONAL_REP      : 87
DECISION             : 32
DECISION_P           : 84 85
EXP                  : 42 43 43
EXPRESSION           : 34 52 73 75 77 80 81 84 89 90 90
EXP_P                : 36 38 39
FACTOR               : 65 66 67
FUNC_CALL            : 53
FUNC_DEF             : 17
FUNC_DEF_STAR        : 1 4 17
FUNC_PARAM           : 19
FUNC_PARAM_P         : 20 22
FUNC_RETURN          : 29
GLOBAL_VAR           : 1
ID_LIST              : 8 72 74
ID_LIST_P            : 9 10
PRINTABLE            : 79
PRINTABLE_P          : 80 81
PROGRAM              : 0
READ                 : 30
READABLE_LIST        : 78
READABLE_LIST_P      : 12 13
REPETITION           : 33
STATEMENT            : 26
STATEMENT_STAR       : 1 19 26 84 85 89 90
TERM                 : 36 38 39
TERM_P               : 65 66 67
UNCONDITIONAL_REP    : 88
VAR                  : 20 22
VARS                 : 19
VAR_LIST             : 6
VAR_LIST_STAR        : 5 6 16 25
WRITE                : 31
empty                : 3 7 11 14 18 21 23 27 40 68 76 82 86
seen_close_parenthesis : 52
seen_comp            : 43
seen_comp_op         : 43
seen_cte_f           : 63
seen_cte_i           : 64
seen_cte_s           : 62
seen_equals          : 34
seen_factor          : 65 66 67
seen_factor_op       : 66 67
seen_id              : 34 54
seen_open_parenthesis : 52
seen_printable       : 80 81
seen_readable        : 12 13
seen_term            : 36 38 39
seen_term_op         : 38 39

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 4


state 4

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON . CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (2) CLASS_STAR -> . CLASS CLASS_STAR
    (3) CLASS_STAR -> . empty
    (4) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (91) empty -> .

    CLASS_KWD       shift and go to state 8
    ID              reduce using rule 91 (empty -> .)
    TYPE            reduce using rule 91 (empty -> .)
    MAIN_KWD        reduce using rule 91 (empty -> .)

    CLASS_STAR                     shift and go to state 5
    CLASS                          shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR . GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) GLOBAL_VAR -> . VAR_LIST_STAR
    (6) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (7) VAR_LIST_STAR -> . empty
    (8) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (91) empty -> .
    (9) ID_LIST -> . ID ID_LIST_P

    TYPE            reduce using rule 91 (empty -> .)
    MAIN_KWD        reduce using rule 91 (empty -> .)
    ID              shift and go to state 9

    GLOBAL_VAR                     shift and go to state 10
    VAR_LIST_STAR                  shift and go to state 11
    VAR_LIST                       shift and go to state 12
    empty                          shift and go to state 13
    ID_LIST                        shift and go to state 14

state 6

    (2) CLASS_STAR -> CLASS . CLASS_STAR
    (2) CLASS_STAR -> . CLASS CLASS_STAR
    (3) CLASS_STAR -> . empty
    (4) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (91) empty -> .

    CLASS_KWD       shift and go to state 8
    ID              reduce using rule 91 (empty -> .)
    TYPE            reduce using rule 91 (empty -> .)
    MAIN_KWD        reduce using rule 91 (empty -> .)

    CLASS                          shift and go to state 6
    CLASS_STAR                     shift and go to state 15
    empty                          shift and go to state 7

state 7

    (3) CLASS_STAR -> empty .

    ID              reduce using rule 3 (CLASS_STAR -> empty .)
    TYPE            reduce using rule 3 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 3 (CLASS_STAR -> empty .)


state 8

    (4) CLASS -> CLASS_KWD . ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 16


state 9

    (9) ID_LIST -> ID . ID_LIST_P
    (10) ID_LIST_P -> . COMMA ID ID_LIST_P
    (11) ID_LIST_P -> . empty
    (91) empty -> .

    COMMA           shift and go to state 18
    COLON           reduce using rule 91 (empty -> .)

    ID_LIST_P                      shift and go to state 17
    empty                          shift and go to state 19

state 10

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR . FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (17) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (18) FUNC_DEF_STAR -> . empty
    (19) FUNC_DEF -> . TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (91) empty -> .

    TYPE            shift and go to state 23
    MAIN_KWD        reduce using rule 91 (empty -> .)

    FUNC_DEF_STAR                  shift and go to state 20
    FUNC_DEF                       shift and go to state 21
    empty                          shift and go to state 22

state 11

    (16) GLOBAL_VAR -> VAR_LIST_STAR .

    TYPE            reduce using rule 16 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 16 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 12

    (6) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (6) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (7) VAR_LIST_STAR -> . empty
    (8) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (91) empty -> .
    (9) ID_LIST -> . ID ID_LIST_P

    TYPE            reduce using rule 91 (empty -> .)
    MAIN_KWD        reduce using rule 91 (empty -> .)
    CLOSE_CURLY     reduce using rule 91 (empty -> .)
    ID              shift and go to state 9

    VAR_LIST                       shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 24
    empty                          shift and go to state 13
    ID_LIST                        shift and go to state 14

state 13

    (7) VAR_LIST_STAR -> empty .

    TYPE            reduce using rule 7 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 7 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 7 (VAR_LIST_STAR -> empty .)


state 14

    (8) VAR_LIST -> ID_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 25


state 15

    (2) CLASS_STAR -> CLASS CLASS_STAR .

    ID              reduce using rule 2 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE            reduce using rule 2 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 2 (CLASS_STAR -> CLASS CLASS_STAR .)


state 16

    (4) CLASS -> CLASS_KWD ID . SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    SMALLER         shift and go to state 26


state 17

    (9) ID_LIST -> ID ID_LIST_P .

    COLON           reduce using rule 9 (ID_LIST -> ID ID_LIST_P .)
    COMMA           reduce using rule 9 (ID_LIST -> ID ID_LIST_P .)
    CLOSE_PARENTHESIS reduce using rule 9 (ID_LIST -> ID ID_LIST_P .)


state 18

    (10) ID_LIST_P -> COMMA . ID ID_LIST_P

    ID              shift and go to state 27


state 19

    (11) ID_LIST_P -> empty .

    COLON           reduce using rule 11 (ID_LIST_P -> empty .)
    COMMA           reduce using rule 11 (ID_LIST_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 11 (ID_LIST_P -> empty .)


state 20

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 28


state 21

    (17) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (17) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (18) FUNC_DEF_STAR -> . empty
    (19) FUNC_DEF -> . TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (91) empty -> .

    TYPE            shift and go to state 23
    MAIN_KWD        reduce using rule 91 (empty -> .)
    CLOSE_CURLY     reduce using rule 91 (empty -> .)

    FUNC_DEF                       shift and go to state 21
    FUNC_DEF_STAR                  shift and go to state 29
    empty                          shift and go to state 22

state 22

    (18) FUNC_DEF_STAR -> empty .

    MAIN_KWD        reduce using rule 18 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 18 (FUNC_DEF_STAR -> empty .)


state 23

    (19) FUNC_DEF -> TYPE . ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 30


state 24

    (6) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    TYPE            reduce using rule 6 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 6 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 6 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 25

    (8) VAR_LIST -> ID_LIST COLON . TYPE SEMI_COLON

    TYPE            shift and go to state 31


state 26

    (4) CLASS -> CLASS_KWD ID SMALLER . DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    DERIVES_KWD     shift and go to state 32


state 27

    (10) ID_LIST_P -> COMMA ID . ID_LIST_P
    (10) ID_LIST_P -> . COMMA ID ID_LIST_P
    (11) ID_LIST_P -> . empty
    (91) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 18
    COLON           reduce using rule 91 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

  ! COMMA           [ reduce using rule 91 (empty -> .) ]

    ID_LIST_P                      shift and go to state 33
    empty                          shift and go to state 19

state 28

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 34


state 29

    (17) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    MAIN_KWD        reduce using rule 17 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 17 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 30

    (19) FUNC_DEF -> TYPE ID . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 35


state 31

    (8) VAR_LIST -> ID_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 36


state 32

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD . TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    TYPE            shift and go to state 37


state 33

    (10) ID_LIST_P -> COMMA ID ID_LIST_P .

    COLON           reduce using rule 10 (ID_LIST_P -> COMMA ID ID_LIST_P .)
    COMMA           reduce using rule 10 (ID_LIST_P -> COMMA ID ID_LIST_P .)
    CLOSE_PARENTHESIS reduce using rule 10 (ID_LIST_P -> COMMA ID ID_LIST_P .)


state 34

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 38


state 35

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (20) FUNC_PARAM -> . VAR FUNC_PARAM_P
    (21) FUNC_PARAM -> . empty
    (24) VAR -> . ID COLON TYPE
    (91) empty -> .

    ID              shift and go to state 39
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

    FUNC_PARAM                     shift and go to state 40
    VAR                            shift and go to state 41
    empty                          shift and go to state 42

state 36

    (8) VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 8 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE            reduce using rule 8 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 8 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 8 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)


state 37

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE . BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    BIGGER          shift and go to state 43


state 38

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 44


state 39

    (24) VAR -> ID . COLON TYPE

    COLON           shift and go to state 45


state 40

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 46


state 41

    (20) FUNC_PARAM -> VAR . FUNC_PARAM_P
    (22) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (23) FUNC_PARAM_P -> . empty
    (91) empty -> .

    COMMA           shift and go to state 48
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 47
    empty                          shift and go to state 49

state 42

    (21) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 21 (FUNC_PARAM -> empty .)


state 43

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER . OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 50


state 44

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . REPETITION
    (91) empty -> .
    (34) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (77) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (78) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (79) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (84) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (87) REPETITION -> . CONDITIONAL_REP
    (88) REPETITION -> . UNCONDITIONAL_REP
    (89) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (90) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 91 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 61
    READ_KWD        shift and go to state 62
    WRITE_KWD       shift and go to state 63
    IF_KWD          shift and go to state 64
    WHILE_KWD       shift and go to state 67
    FROM_KWD        shift and go to state 68

    STATEMENT_STAR                 shift and go to state 52
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 60
    CONDITIONAL_REP                shift and go to state 65
    UNCONDITIONAL_REP              shift and go to state 66

state 45

    (24) VAR -> ID COLON . TYPE

    TYPE            shift and go to state 69


state 46

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (25) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 71

    VARS                           shift and go to state 70

state 47

    (20) FUNC_PARAM -> VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 20 (FUNC_PARAM -> VAR FUNC_PARAM_P .)


state 48

    (22) FUNC_PARAM_P -> COMMA . VAR FUNC_PARAM_P
    (24) VAR -> . ID COLON TYPE

    ID              shift and go to state 39

    VAR                            shift and go to state 72

state 49

    (23) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 23 (FUNC_PARAM_P -> empty .)


state 50

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY . CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (5) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 74

    CLASS_ATTR                     shift and go to state 73

state 51

    (34) ASSIGN -> ID . seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (58) seen_id -> .

    EQUALS          reduce using rule 58 (seen_id -> .)

    seen_id                        shift and go to state 75

state 52

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 76


state 53

    (26) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . REPETITION
    (91) empty -> .
    (34) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (77) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (78) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (79) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (84) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (87) REPETITION -> . CONDITIONAL_REP
    (88) REPETITION -> . UNCONDITIONAL_REP
    (89) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (90) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 91 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 61
    READ_KWD        shift and go to state 62
    WRITE_KWD       shift and go to state 63
    IF_KWD          shift and go to state 64
    WHILE_KWD       shift and go to state 67
    FROM_KWD        shift and go to state 68

    STATEMENT                      shift and go to state 53
    STATEMENT_STAR                 shift and go to state 77
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 60
    CONDITIONAL_REP                shift and go to state 65
    UNCONDITIONAL_REP              shift and go to state 66

state 54

    (27) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 27 (STATEMENT_STAR -> empty .)


state 55

    (28) STATEMENT -> ASSIGN .

    ID              reduce using rule 28 (STATEMENT -> ASSIGN .)
    RETURN_KWD      reduce using rule 28 (STATEMENT -> ASSIGN .)
    READ_KWD        reduce using rule 28 (STATEMENT -> ASSIGN .)
    WRITE_KWD       reduce using rule 28 (STATEMENT -> ASSIGN .)
    IF_KWD          reduce using rule 28 (STATEMENT -> ASSIGN .)
    WHILE_KWD       reduce using rule 28 (STATEMENT -> ASSIGN .)
    FROM_KWD        reduce using rule 28 (STATEMENT -> ASSIGN .)
    CLOSE_CURLY     reduce using rule 28 (STATEMENT -> ASSIGN .)


state 56

    (29) STATEMENT -> FUNC_RETURN .

    ID              reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    RETURN_KWD      reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    READ_KWD        reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    WRITE_KWD       reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    IF_KWD          reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    WHILE_KWD       reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    FROM_KWD        reduce using rule 29 (STATEMENT -> FUNC_RETURN .)
    CLOSE_CURLY     reduce using rule 29 (STATEMENT -> FUNC_RETURN .)


state 57

    (30) STATEMENT -> READ .

    ID              reduce using rule 30 (STATEMENT -> READ .)
    RETURN_KWD      reduce using rule 30 (STATEMENT -> READ .)
    READ_KWD        reduce using rule 30 (STATEMENT -> READ .)
    WRITE_KWD       reduce using rule 30 (STATEMENT -> READ .)
    IF_KWD          reduce using rule 30 (STATEMENT -> READ .)
    WHILE_KWD       reduce using rule 30 (STATEMENT -> READ .)
    FROM_KWD        reduce using rule 30 (STATEMENT -> READ .)
    CLOSE_CURLY     reduce using rule 30 (STATEMENT -> READ .)


state 58

    (31) STATEMENT -> WRITE .

    ID              reduce using rule 31 (STATEMENT -> WRITE .)
    RETURN_KWD      reduce using rule 31 (STATEMENT -> WRITE .)
    READ_KWD        reduce using rule 31 (STATEMENT -> WRITE .)
    WRITE_KWD       reduce using rule 31 (STATEMENT -> WRITE .)
    IF_KWD          reduce using rule 31 (STATEMENT -> WRITE .)
    WHILE_KWD       reduce using rule 31 (STATEMENT -> WRITE .)
    FROM_KWD        reduce using rule 31 (STATEMENT -> WRITE .)
    CLOSE_CURLY     reduce using rule 31 (STATEMENT -> WRITE .)


state 59

    (32) STATEMENT -> DECISION .

    ID              reduce using rule 32 (STATEMENT -> DECISION .)
    RETURN_KWD      reduce using rule 32 (STATEMENT -> DECISION .)
    READ_KWD        reduce using rule 32 (STATEMENT -> DECISION .)
    WRITE_KWD       reduce using rule 32 (STATEMENT -> DECISION .)
    IF_KWD          reduce using rule 32 (STATEMENT -> DECISION .)
    WHILE_KWD       reduce using rule 32 (STATEMENT -> DECISION .)
    FROM_KWD        reduce using rule 32 (STATEMENT -> DECISION .)
    CLOSE_CURLY     reduce using rule 32 (STATEMENT -> DECISION .)


state 60

    (33) STATEMENT -> REPETITION .

    ID              reduce using rule 33 (STATEMENT -> REPETITION .)
    RETURN_KWD      reduce using rule 33 (STATEMENT -> REPETITION .)
    READ_KWD        reduce using rule 33 (STATEMENT -> REPETITION .)
    WRITE_KWD       reduce using rule 33 (STATEMENT -> REPETITION .)
    IF_KWD          reduce using rule 33 (STATEMENT -> REPETITION .)
    WHILE_KWD       reduce using rule 33 (STATEMENT -> REPETITION .)
    FROM_KWD        reduce using rule 33 (STATEMENT -> REPETITION .)
    CLOSE_CURLY     reduce using rule 33 (STATEMENT -> REPETITION .)


state 61

    (77) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (42) EXPRESSION -> . EXP
    (43) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    EXPRESSION                     shift and go to state 78
    EXP                            shift and go to state 79
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 62

    (78) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON

    OPEN_PARENTHESIS shift and go to state 89


state 63

    (79) WRITE -> WRITE_KWD . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON

    OPEN_PARENTHESIS shift and go to state 90


state 64

    (84) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 91


state 65

    (87) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 87 (REPETITION -> CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 87 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 87 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 87 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 87 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 87 (REPETITION -> CONDITIONAL_REP .)
    FROM_KWD        reduce using rule 87 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 87 (REPETITION -> CONDITIONAL_REP .)


state 66

    (88) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 88 (REPETITION -> UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 88 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 88 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 88 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 88 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 88 (REPETITION -> UNCONDITIONAL_REP .)
    FROM_KWD        reduce using rule 88 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 88 (REPETITION -> UNCONDITIONAL_REP .)


state 67

    (89) CONDITIONAL_REP -> WHILE_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 92


state 68

    (90) UNCONDITIONAL_REP -> FROM_KWD . ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 93


state 69

    (24) VAR -> ID COLON TYPE .

    COMMA           reduce using rule 24 (VAR -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 24 (VAR -> ID COLON TYPE .)


state 70

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 94


state 71

    (25) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 95


state 72

    (22) FUNC_PARAM_P -> COMMA VAR . FUNC_PARAM_P
    (22) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (23) FUNC_PARAM_P -> . empty
    (91) empty -> .

    COMMA           shift and go to state 48
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 96
    empty                          shift and go to state 49

state 73

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR . FUNC_DEF_STAR CLOSE_CURLY
    (17) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (18) FUNC_DEF_STAR -> . empty
    (19) FUNC_DEF -> . TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (91) empty -> .

    TYPE            shift and go to state 23
    CLOSE_CURLY     reduce using rule 91 (empty -> .)

    FUNC_DEF_STAR                  shift and go to state 97
    FUNC_DEF                       shift and go to state 21
    empty                          shift and go to state 22

state 74

    (5) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 98


state 75

    (34) ASSIGN -> ID seen_id . EQUALS seen_equals EXPRESSION SEMI_COLON

    EQUALS          shift and go to state 99


state 76

    (1) PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 77

    (26) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 26 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 78

    (77) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 100


state 79

    (42) EXPRESSION -> EXP .
    (43) EXPRESSION -> EXP . COMP seen_comp_op EXP seen_comp
    (46) COMP -> . BIGGER
    (47) COMP -> . SMALLER
    (48) COMP -> . DOUBLE_EQUALS
    (49) COMP -> . DIFFERENT
    (50) COMP -> . AND
    (51) COMP -> . OR

    SEMI_COLON      reduce using rule 42 (EXPRESSION -> EXP .)
    COMMA           reduce using rule 42 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 42 (EXPRESSION -> EXP .)
    UNTIL_KWD       reduce using rule 42 (EXPRESSION -> EXP .)
    OPEN_CURLY      reduce using rule 42 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 102
    SMALLER         shift and go to state 103
    DOUBLE_EQUALS   shift and go to state 104
    DIFFERENT       shift and go to state 105
    AND             shift and go to state 106
    OR              shift and go to state 107

    COMP                           shift and go to state 101

state 80

    (36) EXP -> TERM . seen_term EXP_P
    (37) seen_term -> .

    PLUS            reduce using rule 37 (seen_term -> .)
    MINUS           reduce using rule 37 (seen_term -> .)
    BIGGER          reduce using rule 37 (seen_term -> .)
    SMALLER         reduce using rule 37 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 37 (seen_term -> .)
    DIFFERENT       reduce using rule 37 (seen_term -> .)
    AND             reduce using rule 37 (seen_term -> .)
    OR              reduce using rule 37 (seen_term -> .)
    SEMI_COLON      reduce using rule 37 (seen_term -> .)
    COMMA           reduce using rule 37 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 37 (seen_term -> .)
    UNTIL_KWD       reduce using rule 37 (seen_term -> .)
    OPEN_CURLY      reduce using rule 37 (seen_term -> .)

    seen_term                      shift and go to state 108

state 81

    (65) TERM -> FACTOR . seen_factor TERM_P
    (69) seen_factor -> .

    STAR            reduce using rule 69 (seen_factor -> .)
    FWD_SLASH       reduce using rule 69 (seen_factor -> .)
    PLUS            reduce using rule 69 (seen_factor -> .)
    MINUS           reduce using rule 69 (seen_factor -> .)
    BIGGER          reduce using rule 69 (seen_factor -> .)
    SMALLER         reduce using rule 69 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 69 (seen_factor -> .)
    DIFFERENT       reduce using rule 69 (seen_factor -> .)
    AND             reduce using rule 69 (seen_factor -> .)
    OR              reduce using rule 69 (seen_factor -> .)
    SEMI_COLON      reduce using rule 69 (seen_factor -> .)
    COMMA           reduce using rule 69 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 69 (seen_factor -> .)
    UNTIL_KWD       reduce using rule 69 (seen_factor -> .)
    OPEN_CURLY      reduce using rule 69 (seen_factor -> .)

    seen_factor                    shift and go to state 109

state 82

    (52) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (56) seen_open_parenthesis -> .

    OPEN_PARENTHESIS reduce using rule 56 (seen_open_parenthesis -> .)
    ID              reduce using rule 56 (seen_open_parenthesis -> .)
    CTE_S           reduce using rule 56 (seen_open_parenthesis -> .)
    CTE_F           reduce using rule 56 (seen_open_parenthesis -> .)
    CTE_I           reduce using rule 56 (seen_open_parenthesis -> .)

    seen_open_parenthesis          shift and go to state 110

state 83

    (53) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 53 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 53 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 53 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 53 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 53 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 53 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 53 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 53 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 53 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 53 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 53 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 53 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 53 (FACTOR -> FUNC_CALL .)
    UNTIL_KWD       reduce using rule 53 (FACTOR -> FUNC_CALL .)
    OPEN_CURLY      reduce using rule 53 (FACTOR -> FUNC_CALL .)


state 84

    (54) FACTOR -> ID . seen_id
    (71) FUNC_CALL -> ID . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (58) seen_id -> .

    OPEN_PARENTHESIS shift and go to state 112
    STAR            reduce using rule 58 (seen_id -> .)
    FWD_SLASH       reduce using rule 58 (seen_id -> .)
    PLUS            reduce using rule 58 (seen_id -> .)
    MINUS           reduce using rule 58 (seen_id -> .)
    BIGGER          reduce using rule 58 (seen_id -> .)
    SMALLER         reduce using rule 58 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 58 (seen_id -> .)
    DIFFERENT       reduce using rule 58 (seen_id -> .)
    AND             reduce using rule 58 (seen_id -> .)
    OR              reduce using rule 58 (seen_id -> .)
    SEMI_COLON      reduce using rule 58 (seen_id -> .)
    COMMA           reduce using rule 58 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 58 (seen_id -> .)
    UNTIL_KWD       reduce using rule 58 (seen_id -> .)
    OPEN_CURLY      reduce using rule 58 (seen_id -> .)

    seen_id                        shift and go to state 111

state 85

    (55) FACTOR -> CNST .

    STAR            reduce using rule 55 (FACTOR -> CNST .)
    FWD_SLASH       reduce using rule 55 (FACTOR -> CNST .)
    PLUS            reduce using rule 55 (FACTOR -> CNST .)
    MINUS           reduce using rule 55 (FACTOR -> CNST .)
    BIGGER          reduce using rule 55 (FACTOR -> CNST .)
    SMALLER         reduce using rule 55 (FACTOR -> CNST .)
    DOUBLE_EQUALS   reduce using rule 55 (FACTOR -> CNST .)
    DIFFERENT       reduce using rule 55 (FACTOR -> CNST .)
    AND             reduce using rule 55 (FACTOR -> CNST .)
    OR              reduce using rule 55 (FACTOR -> CNST .)
    SEMI_COLON      reduce using rule 55 (FACTOR -> CNST .)
    COMMA           reduce using rule 55 (FACTOR -> CNST .)
    CLOSE_PARENTHESIS reduce using rule 55 (FACTOR -> CNST .)
    UNTIL_KWD       reduce using rule 55 (FACTOR -> CNST .)
    OPEN_CURLY      reduce using rule 55 (FACTOR -> CNST .)


state 86

    (62) CNST -> CTE_S . seen_cte_s
    (61) seen_cte_s -> .

    STAR            reduce using rule 61 (seen_cte_s -> .)
    FWD_SLASH       reduce using rule 61 (seen_cte_s -> .)
    PLUS            reduce using rule 61 (seen_cte_s -> .)
    MINUS           reduce using rule 61 (seen_cte_s -> .)
    BIGGER          reduce using rule 61 (seen_cte_s -> .)
    SMALLER         reduce using rule 61 (seen_cte_s -> .)
    DOUBLE_EQUALS   reduce using rule 61 (seen_cte_s -> .)
    DIFFERENT       reduce using rule 61 (seen_cte_s -> .)
    AND             reduce using rule 61 (seen_cte_s -> .)
    OR              reduce using rule 61 (seen_cte_s -> .)
    SEMI_COLON      reduce using rule 61 (seen_cte_s -> .)
    COMMA           reduce using rule 61 (seen_cte_s -> .)
    CLOSE_PARENTHESIS reduce using rule 61 (seen_cte_s -> .)
    UNTIL_KWD       reduce using rule 61 (seen_cte_s -> .)
    OPEN_CURLY      reduce using rule 61 (seen_cte_s -> .)

    seen_cte_s                     shift and go to state 113

state 87

    (63) CNST -> CTE_F . seen_cte_f
    (60) seen_cte_f -> .

    STAR            reduce using rule 60 (seen_cte_f -> .)
    FWD_SLASH       reduce using rule 60 (seen_cte_f -> .)
    PLUS            reduce using rule 60 (seen_cte_f -> .)
    MINUS           reduce using rule 60 (seen_cte_f -> .)
    BIGGER          reduce using rule 60 (seen_cte_f -> .)
    SMALLER         reduce using rule 60 (seen_cte_f -> .)
    DOUBLE_EQUALS   reduce using rule 60 (seen_cte_f -> .)
    DIFFERENT       reduce using rule 60 (seen_cte_f -> .)
    AND             reduce using rule 60 (seen_cte_f -> .)
    OR              reduce using rule 60 (seen_cte_f -> .)
    SEMI_COLON      reduce using rule 60 (seen_cte_f -> .)
    COMMA           reduce using rule 60 (seen_cte_f -> .)
    CLOSE_PARENTHESIS reduce using rule 60 (seen_cte_f -> .)
    UNTIL_KWD       reduce using rule 60 (seen_cte_f -> .)
    OPEN_CURLY      reduce using rule 60 (seen_cte_f -> .)

    seen_cte_f                     shift and go to state 114

state 88

    (64) CNST -> CTE_I . seen_cte_i
    (59) seen_cte_i -> .

    STAR            reduce using rule 59 (seen_cte_i -> .)
    FWD_SLASH       reduce using rule 59 (seen_cte_i -> .)
    PLUS            reduce using rule 59 (seen_cte_i -> .)
    MINUS           reduce using rule 59 (seen_cte_i -> .)
    BIGGER          reduce using rule 59 (seen_cte_i -> .)
    SMALLER         reduce using rule 59 (seen_cte_i -> .)
    DOUBLE_EQUALS   reduce using rule 59 (seen_cte_i -> .)
    DIFFERENT       reduce using rule 59 (seen_cte_i -> .)
    AND             reduce using rule 59 (seen_cte_i -> .)
    OR              reduce using rule 59 (seen_cte_i -> .)
    SEMI_COLON      reduce using rule 59 (seen_cte_i -> .)
    COMMA           reduce using rule 59 (seen_cte_i -> .)
    CLOSE_PARENTHESIS reduce using rule 59 (seen_cte_i -> .)
    UNTIL_KWD       reduce using rule 59 (seen_cte_i -> .)
    OPEN_CURLY      reduce using rule 59 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 115

state 89

    (78) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (12) READABLE_LIST -> . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 117

    READABLE_LIST                  shift and go to state 116

state 90

    (79) WRITE -> WRITE_KWD OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (80) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (42) EXPRESSION -> . EXP
    (43) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    PRINTABLE                      shift and go to state 118
    EXPRESSION                     shift and go to state 119
    EXP                            shift and go to state 79
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 91

    (84) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (42) EXPRESSION -> . EXP
    (43) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    EXPRESSION                     shift and go to state 120
    EXP                            shift and go to state 79
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 92

    (89) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (42) EXPRESSION -> . EXP
    (43) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    EXPRESSION                     shift and go to state 121
    EXP                            shift and go to state 79
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 93

    (90) UNCONDITIONAL_REP -> FROM_KWD ID . EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 122


state 94

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . REPETITION
    (91) empty -> .
    (34) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (77) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (78) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (79) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (84) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (87) REPETITION -> . CONDITIONAL_REP
    (88) REPETITION -> . UNCONDITIONAL_REP
    (89) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (90) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 91 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 61
    READ_KWD        shift and go to state 62
    WRITE_KWD       shift and go to state 63
    IF_KWD          shift and go to state 64
    WHILE_KWD       shift and go to state 67
    FROM_KWD        shift and go to state 68

    STATEMENT_STAR                 shift and go to state 123
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 60
    CONDITIONAL_REP                shift and go to state 65
    UNCONDITIONAL_REP              shift and go to state 66

state 95

    (25) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (6) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (7) VAR_LIST_STAR -> . empty
    (8) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (91) empty -> .
    (9) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 91 (empty -> .)
    ID              shift and go to state 9

    VAR_LIST_STAR                  shift and go to state 124
    VAR_LIST                       shift and go to state 12
    empty                          shift and go to state 13
    ID_LIST                        shift and go to state 14

state 96

    (22) FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 22 (FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .)


state 97

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 125


state 98

    (5) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (6) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (7) VAR_LIST_STAR -> . empty
    (8) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (91) empty -> .
    (9) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 91 (empty -> .)
    ID              shift and go to state 9

    VAR_LIST_STAR                  shift and go to state 126
    VAR_LIST                       shift and go to state 12
    empty                          shift and go to state 13
    ID_LIST                        shift and go to state 14

state 99

    (34) ASSIGN -> ID seen_id EQUALS . seen_equals EXPRESSION SEMI_COLON
    (35) seen_equals -> .

    OPEN_PARENTHESIS reduce using rule 35 (seen_equals -> .)
    ID              reduce using rule 35 (seen_equals -> .)
    CTE_S           reduce using rule 35 (seen_equals -> .)
    CTE_F           reduce using rule 35 (seen_equals -> .)
    CTE_I           reduce using rule 35 (seen_equals -> .)

    seen_equals                    shift and go to state 127

state 100

    (77) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 77 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 77 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 77 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 77 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 77 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 77 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FROM_KWD        reduce using rule 77 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 77 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 101

    (43) EXPRESSION -> EXP COMP . seen_comp_op EXP seen_comp
    (45) seen_comp_op -> .

    OPEN_PARENTHESIS reduce using rule 45 (seen_comp_op -> .)
    ID              reduce using rule 45 (seen_comp_op -> .)
    CTE_S           reduce using rule 45 (seen_comp_op -> .)
    CTE_F           reduce using rule 45 (seen_comp_op -> .)
    CTE_I           reduce using rule 45 (seen_comp_op -> .)

    seen_comp_op                   shift and go to state 128

state 102

    (46) COMP -> BIGGER .

    OPEN_PARENTHESIS reduce using rule 46 (COMP -> BIGGER .)
    ID              reduce using rule 46 (COMP -> BIGGER .)
    CTE_S           reduce using rule 46 (COMP -> BIGGER .)
    CTE_F           reduce using rule 46 (COMP -> BIGGER .)
    CTE_I           reduce using rule 46 (COMP -> BIGGER .)


state 103

    (47) COMP -> SMALLER .

    OPEN_PARENTHESIS reduce using rule 47 (COMP -> SMALLER .)
    ID              reduce using rule 47 (COMP -> SMALLER .)
    CTE_S           reduce using rule 47 (COMP -> SMALLER .)
    CTE_F           reduce using rule 47 (COMP -> SMALLER .)
    CTE_I           reduce using rule 47 (COMP -> SMALLER .)


state 104

    (48) COMP -> DOUBLE_EQUALS .

    OPEN_PARENTHESIS reduce using rule 48 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 48 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 48 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 48 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 48 (COMP -> DOUBLE_EQUALS .)


state 105

    (49) COMP -> DIFFERENT .

    OPEN_PARENTHESIS reduce using rule 49 (COMP -> DIFFERENT .)
    ID              reduce using rule 49 (COMP -> DIFFERENT .)
    CTE_S           reduce using rule 49 (COMP -> DIFFERENT .)
    CTE_F           reduce using rule 49 (COMP -> DIFFERENT .)
    CTE_I           reduce using rule 49 (COMP -> DIFFERENT .)


state 106

    (50) COMP -> AND .

    OPEN_PARENTHESIS reduce using rule 50 (COMP -> AND .)
    ID              reduce using rule 50 (COMP -> AND .)
    CTE_S           reduce using rule 50 (COMP -> AND .)
    CTE_F           reduce using rule 50 (COMP -> AND .)
    CTE_I           reduce using rule 50 (COMP -> AND .)


state 107

    (51) COMP -> OR .

    OPEN_PARENTHESIS reduce using rule 51 (COMP -> OR .)
    ID              reduce using rule 51 (COMP -> OR .)
    CTE_S           reduce using rule 51 (COMP -> OR .)
    CTE_F           reduce using rule 51 (COMP -> OR .)
    CTE_I           reduce using rule 51 (COMP -> OR .)


state 108

    (36) EXP -> TERM seen_term . EXP_P
    (38) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (39) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (40) EXP_P -> . empty
    (91) empty -> .

    PLUS            shift and go to state 130
    MINUS           shift and go to state 131
    BIGGER          reduce using rule 91 (empty -> .)
    SMALLER         reduce using rule 91 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 91 (empty -> .)
    DIFFERENT       reduce using rule 91 (empty -> .)
    AND             reduce using rule 91 (empty -> .)
    OR              reduce using rule 91 (empty -> .)
    SEMI_COLON      reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)
    UNTIL_KWD       reduce using rule 91 (empty -> .)
    OPEN_CURLY      reduce using rule 91 (empty -> .)

    EXP_P                          shift and go to state 129
    empty                          shift and go to state 132

state 109

    (65) TERM -> FACTOR seen_factor . TERM_P
    (66) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (67) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (68) TERM_P -> . empty
    (91) empty -> .

    STAR            shift and go to state 134
    FWD_SLASH       shift and go to state 135
    PLUS            reduce using rule 91 (empty -> .)
    MINUS           reduce using rule 91 (empty -> .)
    BIGGER          reduce using rule 91 (empty -> .)
    SMALLER         reduce using rule 91 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 91 (empty -> .)
    DIFFERENT       reduce using rule 91 (empty -> .)
    AND             reduce using rule 91 (empty -> .)
    OR              reduce using rule 91 (empty -> .)
    SEMI_COLON      reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)
    UNTIL_KWD       reduce using rule 91 (empty -> .)
    OPEN_CURLY      reduce using rule 91 (empty -> .)

    TERM_P                         shift and go to state 133
    empty                          shift and go to state 136

state 110

    (52) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (42) EXPRESSION -> . EXP
    (43) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    EXPRESSION                     shift and go to state 137
    EXP                            shift and go to state 79
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 111

    (54) FACTOR -> ID seen_id .

    STAR            reduce using rule 54 (FACTOR -> ID seen_id .)
    FWD_SLASH       reduce using rule 54 (FACTOR -> ID seen_id .)
    PLUS            reduce using rule 54 (FACTOR -> ID seen_id .)
    MINUS           reduce using rule 54 (FACTOR -> ID seen_id .)
    BIGGER          reduce using rule 54 (FACTOR -> ID seen_id .)
    SMALLER         reduce using rule 54 (FACTOR -> ID seen_id .)
    DOUBLE_EQUALS   reduce using rule 54 (FACTOR -> ID seen_id .)
    DIFFERENT       reduce using rule 54 (FACTOR -> ID seen_id .)
    AND             reduce using rule 54 (FACTOR -> ID seen_id .)
    OR              reduce using rule 54 (FACTOR -> ID seen_id .)
    SEMI_COLON      reduce using rule 54 (FACTOR -> ID seen_id .)
    COMMA           reduce using rule 54 (FACTOR -> ID seen_id .)
    CLOSE_PARENTHESIS reduce using rule 54 (FACTOR -> ID seen_id .)
    UNTIL_KWD       reduce using rule 54 (FACTOR -> ID seen_id .)
    OPEN_CURLY      reduce using rule 54 (FACTOR -> ID seen_id .)


state 112

    (71) FUNC_CALL -> ID OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (72) ARG_LIST -> . ID_LIST ARG_LIST_P
    (73) ARG_LIST -> . EXPRESSION ARG_LIST_P
    (9) ID_LIST -> . ID ID_LIST_P
    (42) EXPRESSION -> . EXP
    (43) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 138
    OPEN_PARENTHESIS shift and go to state 82
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    ARG_LIST                       shift and go to state 139
    ID_LIST                        shift and go to state 140
    EXPRESSION                     shift and go to state 141
    EXP                            shift and go to state 79
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 113

    (62) CNST -> CTE_S seen_cte_s .

    STAR            reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    DIFFERENT       reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    AND             reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    OR              reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    UNTIL_KWD       reduce using rule 62 (CNST -> CTE_S seen_cte_s .)
    OPEN_CURLY      reduce using rule 62 (CNST -> CTE_S seen_cte_s .)


state 114

    (63) CNST -> CTE_F seen_cte_f .

    STAR            reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    DIFFERENT       reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    AND             reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    OR              reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    UNTIL_KWD       reduce using rule 63 (CNST -> CTE_F seen_cte_f .)
    OPEN_CURLY      reduce using rule 63 (CNST -> CTE_F seen_cte_f .)


state 115

    (64) CNST -> CTE_I seen_cte_i .

    STAR            reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    DIFFERENT       reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    AND             reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    OR              reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    UNTIL_KWD       reduce using rule 64 (CNST -> CTE_I seen_cte_i .)
    OPEN_CURLY      reduce using rule 64 (CNST -> CTE_I seen_cte_i .)


state 116

    (78) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS SEMI_COLON

    CLOSE_PARENTHESIS shift and go to state 142


state 117

    (12) READABLE_LIST -> ID . seen_readable READABLE_LIST_P
    (15) seen_readable -> .

    COMMA           reduce using rule 15 (seen_readable -> .)
    CLOSE_PARENTHESIS reduce using rule 15 (seen_readable -> .)

    seen_readable                  shift and go to state 143

state 118

    (79) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS SEMI_COLON

    CLOSE_PARENTHESIS shift and go to state 144


state 119

    (80) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (83) seen_printable -> .

    COMMA           reduce using rule 83 (seen_printable -> .)
    CLOSE_PARENTHESIS reduce using rule 83 (seen_printable -> .)

    seen_printable                 shift and go to state 145

state 120

    (84) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 146


state 121

    (89) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 147


state 122

    (90) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS . EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (42) EXPRESSION -> . EXP
    (43) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    EXPRESSION                     shift and go to state 148
    EXP                            shift and go to state 79
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 123

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 149


state 124

    (25) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 150


state 125

    (4) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 4 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 4 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE            reduce using rule 4 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 4 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)


state 126

    (5) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 151


state 127

    (34) ASSIGN -> ID seen_id EQUALS seen_equals . EXPRESSION SEMI_COLON
    (42) EXPRESSION -> . EXP
    (43) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    EXPRESSION                     shift and go to state 152
    EXP                            shift and go to state 79
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 128

    (43) EXPRESSION -> EXP COMP seen_comp_op . EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    EXP                            shift and go to state 153
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 129

    (36) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 36 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 36 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 36 (EXP -> TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 36 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 36 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 36 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 36 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 36 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 36 (EXP -> TERM seen_term EXP_P .)
    UNTIL_KWD       reduce using rule 36 (EXP -> TERM seen_term EXP_P .)
    OPEN_CURLY      reduce using rule 36 (EXP -> TERM seen_term EXP_P .)


state 130

    (38) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (41) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 41 (seen_term_op -> .)
    ID              reduce using rule 41 (seen_term_op -> .)
    CTE_S           reduce using rule 41 (seen_term_op -> .)
    CTE_F           reduce using rule 41 (seen_term_op -> .)
    CTE_I           reduce using rule 41 (seen_term_op -> .)

    seen_term_op                   shift and go to state 154

state 131

    (39) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (41) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 41 (seen_term_op -> .)
    ID              reduce using rule 41 (seen_term_op -> .)
    CTE_S           reduce using rule 41 (seen_term_op -> .)
    CTE_F           reduce using rule 41 (seen_term_op -> .)
    CTE_I           reduce using rule 41 (seen_term_op -> .)

    seen_term_op                   shift and go to state 155

state 132

    (40) EXP_P -> empty .

    BIGGER          reduce using rule 40 (EXP_P -> empty .)
    SMALLER         reduce using rule 40 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 40 (EXP_P -> empty .)
    DIFFERENT       reduce using rule 40 (EXP_P -> empty .)
    AND             reduce using rule 40 (EXP_P -> empty .)
    OR              reduce using rule 40 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 40 (EXP_P -> empty .)
    COMMA           reduce using rule 40 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 40 (EXP_P -> empty .)
    UNTIL_KWD       reduce using rule 40 (EXP_P -> empty .)
    OPEN_CURLY      reduce using rule 40 (EXP_P -> empty .)


state 133

    (65) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    UNTIL_KWD       reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)
    OPEN_CURLY      reduce using rule 65 (TERM -> FACTOR seen_factor TERM_P .)


state 134

    (66) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (70) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 70 (seen_factor_op -> .)
    ID              reduce using rule 70 (seen_factor_op -> .)
    CTE_S           reduce using rule 70 (seen_factor_op -> .)
    CTE_F           reduce using rule 70 (seen_factor_op -> .)
    CTE_I           reduce using rule 70 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 156

state 135

    (67) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (70) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 70 (seen_factor_op -> .)
    ID              reduce using rule 70 (seen_factor_op -> .)
    CTE_S           reduce using rule 70 (seen_factor_op -> .)
    CTE_F           reduce using rule 70 (seen_factor_op -> .)
    CTE_I           reduce using rule 70 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 157

state 136

    (68) TERM_P -> empty .

    PLUS            reduce using rule 68 (TERM_P -> empty .)
    MINUS           reduce using rule 68 (TERM_P -> empty .)
    BIGGER          reduce using rule 68 (TERM_P -> empty .)
    SMALLER         reduce using rule 68 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 68 (TERM_P -> empty .)
    DIFFERENT       reduce using rule 68 (TERM_P -> empty .)
    AND             reduce using rule 68 (TERM_P -> empty .)
    OR              reduce using rule 68 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 68 (TERM_P -> empty .)
    COMMA           reduce using rule 68 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 68 (TERM_P -> empty .)
    UNTIL_KWD       reduce using rule 68 (TERM_P -> empty .)
    OPEN_CURLY      reduce using rule 68 (TERM_P -> empty .)


state 137

    (52) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 158


state 138

    (9) ID_LIST -> ID . ID_LIST_P
    (54) FACTOR -> ID . seen_id
    (71) FUNC_CALL -> ID . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (10) ID_LIST_P -> . COMMA ID ID_LIST_P
    (11) ID_LIST_P -> . empty
    (58) seen_id -> .
    (91) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 58 (seen_id -> .)
    OPEN_PARENTHESIS shift and go to state 112
    COMMA           shift and go to state 18
    STAR            reduce using rule 58 (seen_id -> .)
    FWD_SLASH       reduce using rule 58 (seen_id -> .)
    PLUS            reduce using rule 58 (seen_id -> .)
    MINUS           reduce using rule 58 (seen_id -> .)
    BIGGER          reduce using rule 58 (seen_id -> .)
    SMALLER         reduce using rule 58 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 58 (seen_id -> .)
    DIFFERENT       reduce using rule 58 (seen_id -> .)
    AND             reduce using rule 58 (seen_id -> .)
    OR              reduce using rule 58 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 58 (seen_id -> .)

  ! COMMA           [ reduce using rule 58 (seen_id -> .) ]
  ! COMMA           [ reduce using rule 91 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 91 (empty -> .) ]

    ID_LIST_P                      shift and go to state 17
    seen_id                        shift and go to state 111
    empty                          shift and go to state 19

state 139

    (71) FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 159


state 140

    (72) ARG_LIST -> ID_LIST . ARG_LIST_P
    (74) ARG_LIST_P -> . COMMA ID_LIST ARG_LIST_P
    (75) ARG_LIST_P -> . COMMA EXPRESSION ARG_LIST_P
    (76) ARG_LIST_P -> . empty
    (91) empty -> .

    COMMA           shift and go to state 161
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

    ARG_LIST_P                     shift and go to state 160
    empty                          shift and go to state 162

state 141

    (73) ARG_LIST -> EXPRESSION . ARG_LIST_P
    (74) ARG_LIST_P -> . COMMA ID_LIST ARG_LIST_P
    (75) ARG_LIST_P -> . COMMA EXPRESSION ARG_LIST_P
    (76) ARG_LIST_P -> . empty
    (91) empty -> .

    COMMA           shift and go to state 161
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

    ARG_LIST_P                     shift and go to state 163
    empty                          shift and go to state 162

state 142

    (78) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS . SEMI_COLON

    SEMI_COLON      shift and go to state 164


state 143

    (12) READABLE_LIST -> ID seen_readable . READABLE_LIST_P
    (13) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (14) READABLE_LIST_P -> . empty
    (91) empty -> .

    COMMA           shift and go to state 166
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

    READABLE_LIST_P                shift and go to state 165
    empty                          shift and go to state 167

state 144

    (79) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS . SEMI_COLON

    SEMI_COLON      shift and go to state 168


state 145

    (80) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (81) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (82) PRINTABLE_P -> . empty
    (91) empty -> .

    COMMA           shift and go to state 170
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

    PRINTABLE_P                    shift and go to state 169
    empty                          shift and go to state 171

state 146

    (84) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    THEN_KWD        shift and go to state 172


state 147

    (89) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 173


state 148

    (90) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION . UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    UNTIL_KWD       shift and go to state 174


state 149

    (19) FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    TYPE            reduce using rule 19 (FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 19 (FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 19 (FUNC_DEF -> TYPE ID OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS VARS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 150

    (25) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 25 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 151

    (5) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE            reduce using rule 5 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 5 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 152

    (34) ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 175


state 153

    (43) EXPRESSION -> EXP COMP seen_comp_op EXP . seen_comp
    (44) seen_comp -> .

    SEMI_COLON      reduce using rule 44 (seen_comp -> .)
    COMMA           reduce using rule 44 (seen_comp -> .)
    CLOSE_PARENTHESIS reduce using rule 44 (seen_comp -> .)
    UNTIL_KWD       reduce using rule 44 (seen_comp -> .)
    OPEN_CURLY      reduce using rule 44 (seen_comp -> .)

    seen_comp                      shift and go to state 176

state 154

    (38) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    TERM                           shift and go to state 177
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 155

    (39) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    TERM                           shift and go to state 178
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 156

    (66) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    FACTOR                         shift and go to state 179
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 157

    (67) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    FACTOR                         shift and go to state 180
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 158

    (52) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (57) seen_close_parenthesis -> .

    STAR            reduce using rule 57 (seen_close_parenthesis -> .)
    FWD_SLASH       reduce using rule 57 (seen_close_parenthesis -> .)
    PLUS            reduce using rule 57 (seen_close_parenthesis -> .)
    MINUS           reduce using rule 57 (seen_close_parenthesis -> .)
    BIGGER          reduce using rule 57 (seen_close_parenthesis -> .)
    SMALLER         reduce using rule 57 (seen_close_parenthesis -> .)
    DOUBLE_EQUALS   reduce using rule 57 (seen_close_parenthesis -> .)
    DIFFERENT       reduce using rule 57 (seen_close_parenthesis -> .)
    AND             reduce using rule 57 (seen_close_parenthesis -> .)
    OR              reduce using rule 57 (seen_close_parenthesis -> .)
    SEMI_COLON      reduce using rule 57 (seen_close_parenthesis -> .)
    COMMA           reduce using rule 57 (seen_close_parenthesis -> .)
    CLOSE_PARENTHESIS reduce using rule 57 (seen_close_parenthesis -> .)
    UNTIL_KWD       reduce using rule 57 (seen_close_parenthesis -> .)
    OPEN_CURLY      reduce using rule 57 (seen_close_parenthesis -> .)

    seen_close_parenthesis         shift and go to state 181

state 159

    (71) FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    STAR            reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DIFFERENT       reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SEMI_COLON      reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    UNTIL_KWD       reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OPEN_CURLY      reduce using rule 71 (FUNC_CALL -> ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 160

    (72) ARG_LIST -> ID_LIST ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 72 (ARG_LIST -> ID_LIST ARG_LIST_P .)


state 161

    (74) ARG_LIST_P -> COMMA . ID_LIST ARG_LIST_P
    (75) ARG_LIST_P -> COMMA . EXPRESSION ARG_LIST_P
    (9) ID_LIST -> . ID ID_LIST_P
    (42) EXPRESSION -> . EXP
    (43) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 138
    OPEN_PARENTHESIS shift and go to state 82
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    ID_LIST                        shift and go to state 182
    EXPRESSION                     shift and go to state 183
    EXP                            shift and go to state 79
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 162

    (76) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 76 (ARG_LIST_P -> empty .)


state 163

    (73) ARG_LIST -> EXPRESSION ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 73 (ARG_LIST -> EXPRESSION ARG_LIST_P .)


state 164

    (78) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .

    ID              reduce using rule 78 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    RETURN_KWD      reduce using rule 78 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    READ_KWD        reduce using rule 78 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    WRITE_KWD       reduce using rule 78 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    IF_KWD          reduce using rule 78 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    WHILE_KWD       reduce using rule 78 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    FROM_KWD        reduce using rule 78 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 78 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON .)


state 165

    (12) READABLE_LIST -> ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 12 (READABLE_LIST -> ID seen_readable READABLE_LIST_P .)


state 166

    (13) READABLE_LIST_P -> COMMA . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 184


state 167

    (14) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 14 (READABLE_LIST_P -> empty .)


state 168

    (79) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .

    ID              reduce using rule 79 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    RETURN_KWD      reduce using rule 79 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    READ_KWD        reduce using rule 79 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    WRITE_KWD       reduce using rule 79 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    IF_KWD          reduce using rule 79 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    WHILE_KWD       reduce using rule 79 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    FROM_KWD        reduce using rule 79 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 79 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON .)


state 169

    (80) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 80 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 170

    (81) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (42) EXPRESSION -> . EXP
    (43) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    EXPRESSION                     shift and go to state 185
    EXP                            shift and go to state 79
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 171

    (82) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 82 (PRINTABLE_P -> empty .)


state 172

    (84) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 186


state 173

    (89) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . REPETITION
    (91) empty -> .
    (34) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (77) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (78) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (79) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (84) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (87) REPETITION -> . CONDITIONAL_REP
    (88) REPETITION -> . UNCONDITIONAL_REP
    (89) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (90) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 91 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 61
    READ_KWD        shift and go to state 62
    WRITE_KWD       shift and go to state 63
    IF_KWD          shift and go to state 64
    WHILE_KWD       shift and go to state 67
    FROM_KWD        shift and go to state 68

    STATEMENT_STAR                 shift and go to state 187
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 60
    CONDITIONAL_REP                shift and go to state 65
    UNCONDITIONAL_REP              shift and go to state 66

state 174

    (90) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD . EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (42) EXPRESSION -> . EXP
    (43) EXPRESSION -> . EXP COMP seen_comp_op EXP seen_comp
    (36) EXP -> . TERM seen_term EXP_P
    (65) TERM -> . FACTOR seen_factor TERM_P
    (52) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (53) FACTOR -> . FUNC_CALL
    (54) FACTOR -> . ID seen_id
    (55) FACTOR -> . CNST
    (71) FUNC_CALL -> . ID OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (62) CNST -> . CTE_S seen_cte_s
    (63) CNST -> . CTE_F seen_cte_f
    (64) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 82
    ID              shift and go to state 84
    CTE_S           shift and go to state 86
    CTE_F           shift and go to state 87
    CTE_I           shift and go to state 88

    EXPRESSION                     shift and go to state 188
    EXP                            shift and go to state 79
    TERM                           shift and go to state 80
    FACTOR                         shift and go to state 81
    FUNC_CALL                      shift and go to state 83
    CNST                           shift and go to state 85

state 175

    (34) ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .

    ID              reduce using rule 34 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 34 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 34 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 34 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 34 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 34 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    FROM_KWD        reduce using rule 34 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 34 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON .)


state 176

    (43) EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .

    SEMI_COLON      reduce using rule 43 (EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .)
    COMMA           reduce using rule 43 (EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 43 (EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .)
    UNTIL_KWD       reduce using rule 43 (EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .)
    OPEN_CURLY      reduce using rule 43 (EXPRESSION -> EXP COMP seen_comp_op EXP seen_comp .)


state 177

    (38) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (37) seen_term -> .

    PLUS            reduce using rule 37 (seen_term -> .)
    MINUS           reduce using rule 37 (seen_term -> .)
    BIGGER          reduce using rule 37 (seen_term -> .)
    SMALLER         reduce using rule 37 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 37 (seen_term -> .)
    DIFFERENT       reduce using rule 37 (seen_term -> .)
    AND             reduce using rule 37 (seen_term -> .)
    OR              reduce using rule 37 (seen_term -> .)
    SEMI_COLON      reduce using rule 37 (seen_term -> .)
    COMMA           reduce using rule 37 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 37 (seen_term -> .)
    UNTIL_KWD       reduce using rule 37 (seen_term -> .)
    OPEN_CURLY      reduce using rule 37 (seen_term -> .)

    seen_term                      shift and go to state 189

state 178

    (39) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (37) seen_term -> .

    PLUS            reduce using rule 37 (seen_term -> .)
    MINUS           reduce using rule 37 (seen_term -> .)
    BIGGER          reduce using rule 37 (seen_term -> .)
    SMALLER         reduce using rule 37 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 37 (seen_term -> .)
    DIFFERENT       reduce using rule 37 (seen_term -> .)
    AND             reduce using rule 37 (seen_term -> .)
    OR              reduce using rule 37 (seen_term -> .)
    SEMI_COLON      reduce using rule 37 (seen_term -> .)
    COMMA           reduce using rule 37 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 37 (seen_term -> .)
    UNTIL_KWD       reduce using rule 37 (seen_term -> .)
    OPEN_CURLY      reduce using rule 37 (seen_term -> .)

    seen_term                      shift and go to state 190

state 179

    (66) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (69) seen_factor -> .

    STAR            reduce using rule 69 (seen_factor -> .)
    FWD_SLASH       reduce using rule 69 (seen_factor -> .)
    PLUS            reduce using rule 69 (seen_factor -> .)
    MINUS           reduce using rule 69 (seen_factor -> .)
    BIGGER          reduce using rule 69 (seen_factor -> .)
    SMALLER         reduce using rule 69 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 69 (seen_factor -> .)
    DIFFERENT       reduce using rule 69 (seen_factor -> .)
    AND             reduce using rule 69 (seen_factor -> .)
    OR              reduce using rule 69 (seen_factor -> .)
    SEMI_COLON      reduce using rule 69 (seen_factor -> .)
    COMMA           reduce using rule 69 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 69 (seen_factor -> .)
    UNTIL_KWD       reduce using rule 69 (seen_factor -> .)
    OPEN_CURLY      reduce using rule 69 (seen_factor -> .)

    seen_factor                    shift and go to state 191

state 180

    (67) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (69) seen_factor -> .

    STAR            reduce using rule 69 (seen_factor -> .)
    FWD_SLASH       reduce using rule 69 (seen_factor -> .)
    PLUS            reduce using rule 69 (seen_factor -> .)
    MINUS           reduce using rule 69 (seen_factor -> .)
    BIGGER          reduce using rule 69 (seen_factor -> .)
    SMALLER         reduce using rule 69 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 69 (seen_factor -> .)
    DIFFERENT       reduce using rule 69 (seen_factor -> .)
    AND             reduce using rule 69 (seen_factor -> .)
    OR              reduce using rule 69 (seen_factor -> .)
    SEMI_COLON      reduce using rule 69 (seen_factor -> .)
    COMMA           reduce using rule 69 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 69 (seen_factor -> .)
    UNTIL_KWD       reduce using rule 69 (seen_factor -> .)
    OPEN_CURLY      reduce using rule 69 (seen_factor -> .)

    seen_factor                    shift and go to state 192

state 181

    (52) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DIFFERENT       reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    UNTIL_KWD       reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OPEN_CURLY      reduce using rule 52 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 182

    (74) ARG_LIST_P -> COMMA ID_LIST . ARG_LIST_P
    (74) ARG_LIST_P -> . COMMA ID_LIST ARG_LIST_P
    (75) ARG_LIST_P -> . COMMA EXPRESSION ARG_LIST_P
    (76) ARG_LIST_P -> . empty
    (91) empty -> .

    COMMA           shift and go to state 161
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

    ARG_LIST_P                     shift and go to state 193
    empty                          shift and go to state 162

state 183

    (75) ARG_LIST_P -> COMMA EXPRESSION . ARG_LIST_P
    (74) ARG_LIST_P -> . COMMA ID_LIST ARG_LIST_P
    (75) ARG_LIST_P -> . COMMA EXPRESSION ARG_LIST_P
    (76) ARG_LIST_P -> . empty
    (91) empty -> .

    COMMA           shift and go to state 161
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

    ARG_LIST_P                     shift and go to state 194
    empty                          shift and go to state 162

state 184

    (13) READABLE_LIST_P -> COMMA ID . seen_readable READABLE_LIST_P
    (15) seen_readable -> .

    COMMA           reduce using rule 15 (seen_readable -> .)
    CLOSE_PARENTHESIS reduce using rule 15 (seen_readable -> .)

    seen_readable                  shift and go to state 195

state 185

    (81) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (83) seen_printable -> .

    COMMA           reduce using rule 83 (seen_printable -> .)
    CLOSE_PARENTHESIS reduce using rule 83 (seen_printable -> .)

    seen_printable                 shift and go to state 196

state 186

    (84) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . REPETITION
    (91) empty -> .
    (34) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (77) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (78) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (79) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (84) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (87) REPETITION -> . CONDITIONAL_REP
    (88) REPETITION -> . UNCONDITIONAL_REP
    (89) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (90) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 91 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 61
    READ_KWD        shift and go to state 62
    WRITE_KWD       shift and go to state 63
    IF_KWD          shift and go to state 64
    WHILE_KWD       shift and go to state 67
    FROM_KWD        shift and go to state 68

    STATEMENT_STAR                 shift and go to state 197
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 60
    CONDITIONAL_REP                shift and go to state 65
    UNCONDITIONAL_REP              shift and go to state 66

state 187

    (89) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 198


state 188

    (90) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 199


state 189

    (38) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (38) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (39) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (40) EXP_P -> . empty
    (91) empty -> .

    PLUS            shift and go to state 130
    MINUS           shift and go to state 131
    BIGGER          reduce using rule 91 (empty -> .)
    SMALLER         reduce using rule 91 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 91 (empty -> .)
    DIFFERENT       reduce using rule 91 (empty -> .)
    AND             reduce using rule 91 (empty -> .)
    OR              reduce using rule 91 (empty -> .)
    SEMI_COLON      reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)
    UNTIL_KWD       reduce using rule 91 (empty -> .)
    OPEN_CURLY      reduce using rule 91 (empty -> .)

    EXP_P                          shift and go to state 200
    empty                          shift and go to state 132

state 190

    (39) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (38) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (39) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (40) EXP_P -> . empty
    (91) empty -> .

    PLUS            shift and go to state 130
    MINUS           shift and go to state 131
    BIGGER          reduce using rule 91 (empty -> .)
    SMALLER         reduce using rule 91 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 91 (empty -> .)
    DIFFERENT       reduce using rule 91 (empty -> .)
    AND             reduce using rule 91 (empty -> .)
    OR              reduce using rule 91 (empty -> .)
    SEMI_COLON      reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)
    UNTIL_KWD       reduce using rule 91 (empty -> .)
    OPEN_CURLY      reduce using rule 91 (empty -> .)

    EXP_P                          shift and go to state 201
    empty                          shift and go to state 132

state 191

    (66) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (66) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (67) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (68) TERM_P -> . empty
    (91) empty -> .

    STAR            shift and go to state 134
    FWD_SLASH       shift and go to state 135
    PLUS            reduce using rule 91 (empty -> .)
    MINUS           reduce using rule 91 (empty -> .)
    BIGGER          reduce using rule 91 (empty -> .)
    SMALLER         reduce using rule 91 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 91 (empty -> .)
    DIFFERENT       reduce using rule 91 (empty -> .)
    AND             reduce using rule 91 (empty -> .)
    OR              reduce using rule 91 (empty -> .)
    SEMI_COLON      reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)
    UNTIL_KWD       reduce using rule 91 (empty -> .)
    OPEN_CURLY      reduce using rule 91 (empty -> .)

    TERM_P                         shift and go to state 202
    empty                          shift and go to state 136

state 192

    (67) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (66) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (67) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (68) TERM_P -> . empty
    (91) empty -> .

    STAR            shift and go to state 134
    FWD_SLASH       shift and go to state 135
    PLUS            reduce using rule 91 (empty -> .)
    MINUS           reduce using rule 91 (empty -> .)
    BIGGER          reduce using rule 91 (empty -> .)
    SMALLER         reduce using rule 91 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 91 (empty -> .)
    DIFFERENT       reduce using rule 91 (empty -> .)
    AND             reduce using rule 91 (empty -> .)
    OR              reduce using rule 91 (empty -> .)
    SEMI_COLON      reduce using rule 91 (empty -> .)
    COMMA           reduce using rule 91 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)
    UNTIL_KWD       reduce using rule 91 (empty -> .)
    OPEN_CURLY      reduce using rule 91 (empty -> .)

    TERM_P                         shift and go to state 203
    empty                          shift and go to state 136

state 193

    (74) ARG_LIST_P -> COMMA ID_LIST ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 74 (ARG_LIST_P -> COMMA ID_LIST ARG_LIST_P .)


state 194

    (75) ARG_LIST_P -> COMMA EXPRESSION ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 75 (ARG_LIST_P -> COMMA EXPRESSION ARG_LIST_P .)


state 195

    (13) READABLE_LIST_P -> COMMA ID seen_readable . READABLE_LIST_P
    (13) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (14) READABLE_LIST_P -> . empty
    (91) empty -> .

    COMMA           shift and go to state 166
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

    READABLE_LIST_P                shift and go to state 204
    empty                          shift and go to state 167

state 196

    (81) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (81) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (82) PRINTABLE_P -> . empty
    (91) empty -> .

    COMMA           shift and go to state 170
    CLOSE_PARENTHESIS reduce using rule 91 (empty -> .)

    PRINTABLE_P                    shift and go to state 205
    empty                          shift and go to state 171

state 197

    (84) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 206


state 198

    (89) CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 89 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 89 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 89 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 89 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 89 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 89 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FROM_KWD        reduce using rule 89 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 89 (CONDITIONAL_REP -> WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 199

    (90) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . REPETITION
    (91) empty -> .
    (34) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (77) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (78) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (79) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (84) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (87) REPETITION -> . CONDITIONAL_REP
    (88) REPETITION -> . UNCONDITIONAL_REP
    (89) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (90) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 91 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 61
    READ_KWD        shift and go to state 62
    WRITE_KWD       shift and go to state 63
    IF_KWD          shift and go to state 64
    WHILE_KWD       shift and go to state 67
    FROM_KWD        shift and go to state 68

    STATEMENT_STAR                 shift and go to state 207
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 60
    CONDITIONAL_REP                shift and go to state 65
    UNCONDITIONAL_REP              shift and go to state 66

state 200

    (38) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 38 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 38 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 38 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 38 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 38 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 38 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 38 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 38 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 38 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    UNTIL_KWD       reduce using rule 38 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OPEN_CURLY      reduce using rule 38 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 201

    (39) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 39 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 39 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 39 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 39 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 39 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 39 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 39 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 39 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 39 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    UNTIL_KWD       reduce using rule 39 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OPEN_CURLY      reduce using rule 39 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 202

    (66) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    UNTIL_KWD       reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OPEN_CURLY      reduce using rule 66 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 203

    (67) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    UNTIL_KWD       reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OPEN_CURLY      reduce using rule 67 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 204

    (13) READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 13 (READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .)


state 205

    (81) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 81 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 206

    (84) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (85) DECISION_P -> . ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (86) DECISION_P -> . empty
    (91) empty -> .

    ELSE_KWD        shift and go to state 209
    ID              reduce using rule 91 (empty -> .)
    RETURN_KWD      reduce using rule 91 (empty -> .)
    READ_KWD        reduce using rule 91 (empty -> .)
    WRITE_KWD       reduce using rule 91 (empty -> .)
    IF_KWD          reduce using rule 91 (empty -> .)
    WHILE_KWD       reduce using rule 91 (empty -> .)
    FROM_KWD        reduce using rule 91 (empty -> .)
    CLOSE_CURLY     reduce using rule 91 (empty -> .)

    DECISION_P                     shift and go to state 208
    empty                          shift and go to state 210

state 207

    (90) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 211


state 208

    (84) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 84 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    RETURN_KWD      reduce using rule 84 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 84 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 84 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 84 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 84 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FROM_KWD        reduce using rule 84 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 84 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 209

    (85) DECISION_P -> ELSE_KWD . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 212


state 210

    (86) DECISION_P -> empty .

    ID              reduce using rule 86 (DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 86 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 86 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 86 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 86 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 86 (DECISION_P -> empty .)
    FROM_KWD        reduce using rule 86 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 86 (DECISION_P -> empty .)


state 211

    (90) UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 90 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 90 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 90 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 90 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 90 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 90 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FROM_KWD        reduce using rule 90 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 90 (UNCONDITIONAL_REP -> FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 212

    (85) DECISION_P -> ELSE_KWD OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (26) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (27) STATEMENT_STAR -> . empty
    (28) STATEMENT -> . ASSIGN
    (29) STATEMENT -> . FUNC_RETURN
    (30) STATEMENT -> . READ
    (31) STATEMENT -> . WRITE
    (32) STATEMENT -> . DECISION
    (33) STATEMENT -> . REPETITION
    (91) empty -> .
    (34) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION SEMI_COLON
    (77) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (78) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS SEMI_COLON
    (79) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS SEMI_COLON
    (84) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS THEN_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (87) REPETITION -> . CONDITIONAL_REP
    (88) REPETITION -> . UNCONDITIONAL_REP
    (89) CONDITIONAL_REP -> . WHILE_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (90) UNCONDITIONAL_REP -> . FROM_KWD ID EQUALS EXPRESSION UNTIL_KWD EXPRESSION OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 91 (empty -> .)
    ID              shift and go to state 51
    RETURN_KWD      shift and go to state 61
    READ_KWD        shift and go to state 62
    WRITE_KWD       shift and go to state 63
    IF_KWD          shift and go to state 64
    WHILE_KWD       shift and go to state 67
    FROM_KWD        shift and go to state 68

    STATEMENT_STAR                 shift and go to state 213
    STATEMENT                      shift and go to state 53
    empty                          shift and go to state 54
    ASSIGN                         shift and go to state 55
    FUNC_RETURN                    shift and go to state 56
    READ                           shift and go to state 57
    WRITE                          shift and go to state 58
    DECISION                       shift and go to state 59
    REPETITION                     shift and go to state 60
    CONDITIONAL_REP                shift and go to state 65
    UNCONDITIONAL_REP              shift and go to state 66

state 213

    (85) DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 214


state 214

    (85) DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (85) DECISION_P -> . ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (86) DECISION_P -> . empty
    (91) empty -> .

    ELSE_KWD        shift and go to state 209
    ID              reduce using rule 91 (empty -> .)
    RETURN_KWD      reduce using rule 91 (empty -> .)
    READ_KWD        reduce using rule 91 (empty -> .)
    WRITE_KWD       reduce using rule 91 (empty -> .)
    IF_KWD          reduce using rule 91 (empty -> .)
    WHILE_KWD       reduce using rule 91 (empty -> .)
    FROM_KWD        reduce using rule 91 (empty -> .)
    CLOSE_CURLY     reduce using rule 91 (empty -> .)

    DECISION_P                     shift and go to state 215
    empty                          shift and go to state 210

state 215

    (85) DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 85 (DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    RETURN_KWD      reduce using rule 85 (DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 85 (DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 85 (DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 85 (DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 85 (DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FROM_KWD        reduce using rule 85 (DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 85 (DECISION_P -> ELSE_KWD OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 27 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 138 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 138 resolved as shift
WARNING: reduce/reduce conflict in state 138 resolved using rule (seen_id -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 138
