Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION
Rule 3     STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION
Rule 4     STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION
Rule 5     STRUCTURE_DEFINITION -> empty
Rule 6     seen_program_id -> empty
Rule 7     seen_main_kwd -> empty
Rule 8     CLASS_STAR -> CLASS CLASS_STAR
Rule 9     CLASS_STAR -> empty
Rule 10    CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
Rule 11    seen_class_id_declaration -> empty
Rule 12    seen_class_attr -> empty
Rule 13    CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 14    VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 15    VAR_LIST_STAR -> empty
Rule 16    VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON
Rule 17    SYMBOL_LIST -> ID SYMBOL_LIST_P
Rule 18    SYMBOL_LIST -> ARRAY_DEFINITION SYMBOL_LIST_P
Rule 19    SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P
Rule 20    SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION SYMBOL_LIST_P
Rule 21    SYMBOL_LIST_P -> COMMA
Rule 22    SYMBOL_LIST_P -> empty
Rule 23    READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 24    READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 25    READABLE_LIST_P -> empty
Rule 26    seen_readable -> empty
Rule 27    GLOBAL_VAR -> VAR_LIST_STAR
Rule 28    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 29    FUNC_DEF_STAR -> empty
Rule 30    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 31    seen_func_id -> empty
Rule 32    seen_func_params -> empty
Rule 33    seen_func_vars -> empty
Rule 34    FUNC_PARAM -> VAR_DECLARATION FUNC_PARAM_P
Rule 35    FUNC_PARAM -> empty
Rule 36    FUNC_PARAM_P -> COMMA VAR_DECLARATION FUNC_PARAM_P
Rule 37    FUNC_PARAM_P -> empty
Rule 38    VAR_DECLARATION -> ID COLON TYPE
Rule 39    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 40    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 41    STATEMENT_STAR -> empty
Rule 42    STATEMENT -> ASSIGN SEMI_COLON
Rule 43    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 44    STATEMENT -> READ SEMI_COLON
Rule 45    STATEMENT -> PRINT SEMI_COLON
Rule 46    STATEMENT -> PRINTLN SEMI_COLON
Rule 47    STATEMENT -> OPEN SEMI_COLON
Rule 48    STATEMENT -> WRITE SEMI_COLON
Rule 49    STATEMENT -> FLOW_CONTROL
Rule 50    STATEMENT -> FUNC_RETURN
Rule 51    OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 52    seen_open_buffer -> empty
Rule 53    WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 54    seen_write_buffer -> empty
Rule 55    seen_file_path -> empty
Rule 56    seen_separator -> empty
Rule 57    FLOW_CONTROL -> DECISION
Rule 58    FLOW_CONTROL -> REPETITION
Rule 59    FOR_INCR_STATEMENT -> ASSIGN
Rule 60    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 61    FOR_INCR_STATEMENT -> READ
Rule 62    FOR_INCR_STATEMENT -> PRINT
Rule 63    FOR_INCR_STATEMENT -> PRINTLN
Rule 64    ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
Rule 65    seen_equals -> empty
Rule 66    EXP -> TERM seen_term EXP_P
Rule 67    EXP -> MINUS seen_unary_minus EXP pop_unary_minus
Rule 68    EXP -> NOT seen_not EXP pop_not
Rule 69    seen_term -> <empty>
Rule 70    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 71    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 72    EXP_P -> empty
Rule 73    seen_term_op -> <empty>
Rule 74    EXPRESSION -> EXP
Rule 75    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 76    seen_comp -> empty
Rule 77    seen_comp_op -> empty
Rule 78    COMP -> BIGGER
Rule 79    COMP -> BIGGER_EQ
Rule 80    COMP -> SMALLER
Rule 81    COMP -> SMALLER_EQ
Rule 82    COMP -> DOUBLE_EQUALS
Rule 83    COMP -> NOT_EQUALS
Rule 84    COMP -> AND
Rule 85    COMP -> OR
Rule 86    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 87    FACTOR -> NOT seen_not FACTOR pop_not
Rule 88    FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus
Rule 89    FACTOR -> FUNC_CALL
Rule 90    FACTOR -> CLASS_INSTANCE
Rule 91    FACTOR -> VAR seen_var_as_factor
Rule 92    FACTOR -> CNST
Rule 93    pop_not -> empty
Rule 94    seen_not -> empty
Rule 95    pop_unary_minus -> empty
Rule 96    seen_unary_minus -> empty
Rule 97    seen_open_parenthesis -> empty
Rule 98    seen_close_parenthesis -> empty
Rule 99    seen_var_in_assign -> empty
Rule 100   seen_var_as_factor -> empty
Rule 101   seen_var_in_io -> empty
Rule 102   seen_cte_i -> <empty>
Rule 103   seen_cte_f -> <empty>
Rule 104   seen_cte_s -> <empty>
Rule 105   CNST -> CTE_S seen_cte_s
Rule 106   CNST -> CTE_F seen_cte_f
Rule 107   CNST -> CTE_I seen_cte_i
Rule 108   CLASS_REFERENCE -> ID DOT seen_dot_operator
Rule 109   CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator
Rule 110   seen_this_kwd -> empty
Rule 111   VAR -> ID
Rule 112   VAR -> ARRAY
Rule 113   VAR -> CLASS_REFERENCE VAR
Rule 114   CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 115   seen_class_id_instance -> empty
Rule 116   seen_dot_operator -> empty
Rule 117   seen_this_dot_operator -> empty
Rule 118   ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 119   ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 120   ARRAY_P -> empty
Rule 121   seen_array_id -> empty
Rule 122   seen_open_bracket -> empty
Rule 123   seen_array_access -> empty
Rule 124   ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
Rule 125   ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
Rule 126   ARRAY_DEFINITION_P -> empty
Rule 127   seen_array_def_id -> empty
Rule 128   seen_array_def_dim -> empty
Rule 129   TERM -> FACTOR seen_factor TERM_P
Rule 130   TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 131   TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 132   TERM_P -> empty
Rule 133   seen_factor -> empty
Rule 134   seen_factor_op -> empty
Rule 135   FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 136   FUNC_CALL -> CLASS_REFERENCE FUNC_CALL
Rule 137   seen_func_call_id -> empty
Rule 138   ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 139   ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 140   ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 141   ARG_LIST -> empty
Rule 142   ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 143   ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 144   ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 145   ARG_LIST_P -> empty
Rule 146   seen_arg -> empty
Rule 147   FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 148   FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 149   FUNC_RETURN -> RETURN_KWD SEMI_COLON
Rule 150   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 151   PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 152   seen_print_kwd -> empty
Rule 153   PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 154   seen_println_kwd -> empty
Rule 155   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 156   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 157   PRINTABLE_P -> empty
Rule 158   seen_printable -> empty
Rule 159   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 160   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 161   DECISION_P -> empty
Rule 162   seen_if_kwd -> empty
Rule 163   seen_else_kwd -> empty
Rule 164   REPETITION -> CONDITIONAL_REP
Rule 165   REPETITION -> UNCONDITIONAL_REP
Rule 166   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 167   seen_while_kwd -> empty
Rule 168   seen_while_exp -> empty
Rule 169   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 170   seen_for_kwd -> empty
Rule 171   seen_for_incr_exp -> empty
Rule 172   seen_for_start_exp -> empty
Rule 173   seen_for_end_exp -> empty
Rule 174   TYPE -> TYPE_I
Rule 175   TYPE -> TYPE_F
Rule 176   TYPE -> TYPE_S
Rule 177   TYPE -> TYPE_B
Rule 178   TYPE -> TYPE_O
Rule 179   TYPE -> TYPE_V
Rule 180   empty -> <empty>

Terminals, with rules where they appear

AND                  : 84
ATTR_KWD             : 13
BIGGER               : 78
BIGGER_EQ            : 79
CLASS_KWD            : 10
CLOSE_BRACKET        : 118 119 124 125
CLOSE_CURLY          : 1 10 13 30 39 159 160 166 169
CLOSE_PARENTHESIS    : 1 30 51 53 86 114 135 150 151 153 159 166 169
COLON                : 16 38
COMMA                : 19 20 21 24 36 51 51 53 53 142 143 144 156
CTE_F                : 106
CTE_I                : 107 124 125
CTE_S                : 105
DOT                  : 108 109
DOUBLE_EQUALS        : 82
ELSE_KWD             : 160
EQUALS               : 64 169
FOR_KWD              : 169
FWD_SLASH            : 131
ID                   : 1 10 17 19 30 38 108 111 114 118 124 135
IF_KWD               : 159
MAIN_KWD             : 1
MINUS                : 67 71 88
NEW_KWD              : 114
NOT                  : 68 87
NOT_EQUALS           : 83
OPEN_BRACKET         : 118 119 124 125
OPEN_CURLY           : 1 10 13 30 39 159 160 166 169
OPEN_KWD             : 51
OPEN_PARENTHESIS     : 1 30 51 53 86 114 135 150 151 153 159 166 169
OR                   : 85
PLUS                 : 70
PRINTLN_KWD          : 153
PRINT_KWD            : 151
PROGRAM_KWD          : 1
READ_KWD             : 150
RETURN_KWD           : 147 148 149
SEMI_COLON           : 1 16 42 43 44 45 46 47 48 147 148 149 169 169
SMALLER              : 80
SMALLER_EQ           : 81
STAR                 : 130
THIS_KWD             : 109
TYPE_B               : 177
TYPE_F               : 175
TYPE_I               : 174
TYPE_O               : 178
TYPE_S               : 176
TYPE_V               : 179
VARS_KWD             : 39
WHILE_KWD            : 166
WRITE_KWD            : 53
error                : 

Nonterminals, with rules where they appear

ARG_LIST             : 135
ARG_LIST_P           : 138 139 140 142 143 144
ARRAY                : 112
ARRAY_DEFINITION     : 18 20
ARRAY_DEFINITION_P   : 124 125
ARRAY_P              : 118 119
ASSIGN               : 42 59
CLASS                : 8
CLASS_ATTR           : 10
CLASS_INSTANCE       : 90
CLASS_REFERENCE      : 113 136
CLASS_STAR           : 3 8
CNST                 : 92
COMP                 : 75
CONDITIONAL_REP      : 164
DECISION             : 57
DECISION_P           : 159
EXP                  : 67 68 74 75
EXPRESSION           : 51 51 53 53 64 75 86 118 119 139 143 147 155 156 159 166 169 169
EXP_P                : 66 70 71
FACTOR               : 87 88 129 130 131
FLOW_CONTROL         : 49
FOR_INCR_STATEMENT   : 169
FUNC_CALL            : 43 60 89 136 140 144 148
FUNC_DEF             : 28
FUNC_DEF_STAR        : 4 10 28
FUNC_PARAM           : 30
FUNC_PARAM_P         : 34 36
FUNC_RETURN          : 50
GLOBAL_VAR           : 2
OPEN                 : 47
PRINT                : 45 62
PRINTABLE            : 151 153
PRINTABLE_P          : 155 156
PRINTLN              : 46 63
PROGRAM              : 0
READ                 : 44 61
READABLE_LIST        : 150
READABLE_LIST_P      : 23 24
REPETITION           : 58
STATEMENT            : 40
STATEMENT_STAR       : 1 30 40 159 160 166 169
STRUCTURE_DEFINITION : 1 2 3 4
SYMBOL_LIST          : 16
SYMBOL_LIST_P        : 17 18 19 20
TERM                 : 66 70 71
TERM_P               : 129 130 131
TYPE                 : 16 30 38
UNCONDITIONAL_REP    : 165
VAR                  : 23 24 51 53 64 91 113 138 142 169
VARS                 : 30
VAR_DECLARATION      : 34 36
VAR_LIST             : 14
VAR_LIST_STAR        : 13 14 27 39
WRITE                : 48
empty                : 5 6 7 9 11 12 15 22 25 26 29 31 32 33 35 37 41 52 54 55 56 65 72 76 77 93 94 95 96 97 98 99 100 101 110 115 116 117 120 121 122 123 126 127 128 132 133 134 137 141 145 146 152 154 157 158 161 162 163 167 168 170 171 172 173
pop_not              : 68 87
pop_unary_minus      : 67 88
seen_arg             : 138 139 140 142 143 144
seen_array_access    : 118 119
seen_array_def_dim   : 124 125
seen_array_def_id    : 124
seen_array_id        : 118
seen_class_attr      : 10
seen_class_id_declaration : 10
seen_class_id_instance : 114
seen_close_parenthesis : 86
seen_comp            : 75
seen_comp_op         : 75
seen_cte_f           : 106
seen_cte_i           : 107 124 125
seen_cte_s           : 105
seen_dot_operator    : 108
seen_else_kwd        : 160
seen_equals          : 64
seen_factor          : 129 130 131
seen_factor_op       : 130 131
seen_file_path       : 51 53
seen_for_end_exp     : 169
seen_for_incr_exp    : 169
seen_for_kwd         : 169
seen_for_start_exp   : 169
seen_func_call_id    : 135
seen_func_id         : 30
seen_func_params     : 30
seen_func_vars       : 30
seen_if_kwd          : 159
seen_main_kwd        : 1
seen_not             : 68 87
seen_open_bracket    : 118 119
seen_open_buffer     : 51
seen_open_parenthesis : 86
seen_print_kwd       : 151
seen_printable       : 155 156
seen_println_kwd     : 153
seen_program_id      : 1
seen_readable        : 23 24
seen_separator       : 51 53
seen_term            : 66 70 71
seen_term_op         : 70 71
seen_this_dot_operator : 109
seen_this_kwd        : 109
seen_unary_minus     : 67 88
seen_var_as_factor   : 91 138 142
seen_var_in_assign   : 23 24 64
seen_var_in_io       : 51 53
seen_while_exp       : 166
seen_while_kwd       : 166
seen_write_buffer    : 53

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (6) seen_program_id -> . empty
    (180) empty -> .

    SEMI_COLON      reduce using rule 180 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (6) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 6 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (180) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (174) TYPE -> . TYPE_I
    (175) TYPE -> . TYPE_F
    (176) TYPE -> . TYPE_S
    (177) TYPE -> . TYPE_B
    (178) TYPE -> . TYPE_O
    (179) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (124) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 180 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 180 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 180 (empty -> .) ]
  ! ID              [ reduce using rule 180 (empty -> .) ]

    STRUCTURE_DEFINITION           shift and go to state 8
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 7

    (17) SYMBOL_LIST -> ID . SYMBOL_LIST_P
    (124) ARRAY_DEFINITION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (127) seen_array_def_id -> . empty
    (180) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 180 (empty -> .)
    OPEN_BRACKET    reduce using rule 180 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 27
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 8

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 31


state 9

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (180) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (174) TYPE -> . TYPE_I
    (175) TYPE -> . TYPE_F
    (176) TYPE -> . TYPE_S
    (177) TYPE -> . TYPE_B
    (178) TYPE -> . TYPE_O
    (179) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (124) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 180 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 180 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 180 (empty -> .) ]
  ! ID              [ reduce using rule 180 (empty -> .) ]

    GLOBAL_VAR                     shift and go to state 9
    STRUCTURE_DEFINITION           shift and go to state 32
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 10

    (3) STRUCTURE_DEFINITION -> CLASS_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (180) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (174) TYPE -> . TYPE_I
    (175) TYPE -> . TYPE_F
    (176) TYPE -> . TYPE_S
    (177) TYPE -> . TYPE_B
    (178) TYPE -> . TYPE_O
    (179) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (124) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 180 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 180 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 180 (empty -> .) ]
  ! ID              [ reduce using rule 180 (empty -> .) ]

    CLASS_STAR                     shift and go to state 10
    STRUCTURE_DEFINITION           shift and go to state 33
    GLOBAL_VAR                     shift and go to state 9
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 11

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (180) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (174) TYPE -> . TYPE_I
    (175) TYPE -> . TYPE_F
    (176) TYPE -> . TYPE_S
    (177) TYPE -> . TYPE_B
    (178) TYPE -> . TYPE_O
    (179) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (124) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 180 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 180 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 180 (empty -> .) ]
  ! ID              [ reduce using rule 180 (empty -> .) ]

    FUNC_DEF_STAR                  shift and go to state 11
    STRUCTURE_DEFINITION           shift and go to state 34
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 12

    (5) STRUCTURE_DEFINITION -> empty .
    (9) CLASS_STAR -> empty .
    (29) FUNC_DEF_STAR -> empty .
    (15) VAR_LIST_STAR -> empty .

  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
    MAIN_KWD        reduce using rule 5 (STRUCTURE_DEFINITION -> empty .)
    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)

  ! MAIN_KWD        [ reduce using rule 9 (CLASS_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! ID              [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! ID              [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]


state 13

    (27) GLOBAL_VAR -> VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_I          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_F          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_S          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_B          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_O          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_V          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    ID              reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) CLASS_STAR -> CLASS . CLASS_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (180) empty -> .

  ! shift/reduce conflict for CLASS_KWD resolved as shift
    CLASS_KWD       shift and go to state 17
    TYPE_I          reduce using rule 180 (empty -> .)
    TYPE_F          reduce using rule 180 (empty -> .)
    TYPE_S          reduce using rule 180 (empty -> .)
    TYPE_B          reduce using rule 180 (empty -> .)
    TYPE_O          reduce using rule 180 (empty -> .)
    TYPE_V          reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    MAIN_KWD        reduce using rule 180 (empty -> .)

  ! CLASS_KWD       [ reduce using rule 180 (empty -> .) ]

    CLASS                          shift and go to state 14
    CLASS_STAR                     shift and go to state 35
    empty                          shift and go to state 36

state 15

    (28) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (180) empty -> .
    (174) TYPE -> . TYPE_I
    (175) TYPE -> . TYPE_F
    (176) TYPE -> . TYPE_S
    (177) TYPE -> . TYPE_B
    (178) TYPE -> . TYPE_O
    (179) TYPE -> . TYPE_V

  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    CLASS_KWD       reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    MAIN_KWD        reduce using rule 180 (empty -> .)
    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

  ! TYPE_I          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 180 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 180 (empty -> .) ]

    FUNC_DEF                       shift and go to state 15
    FUNC_DEF_STAR                  shift and go to state 37
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 16

    (14) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (180) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (124) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

  ! shift/reduce conflict for ID resolved as shift
    CLASS_KWD       reduce using rule 180 (empty -> .)
    TYPE_I          reduce using rule 180 (empty -> .)
    TYPE_F          reduce using rule 180 (empty -> .)
    TYPE_S          reduce using rule 180 (empty -> .)
    TYPE_B          reduce using rule 180 (empty -> .)
    TYPE_O          reduce using rule 180 (empty -> .)
    TYPE_V          reduce using rule 180 (empty -> .)
    MAIN_KWD        reduce using rule 180 (empty -> .)
    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    ID              shift and go to state 7

  ! ID              [ reduce using rule 180 (empty -> .) ]

    VAR_LIST                       shift and go to state 16
    VAR_LIST_STAR                  shift and go to state 39
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 17

    (10) CLASS -> CLASS_KWD . ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 41


state 18

    (30) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 42


state 19

    (16) VAR_LIST -> SYMBOL_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 43


state 20

    (174) TYPE -> TYPE_I .

    ID              reduce using rule 174 (TYPE -> TYPE_I .)
    SEMI_COLON      reduce using rule 174 (TYPE -> TYPE_I .)
    COMMA           reduce using rule 174 (TYPE -> TYPE_I .)
    CLOSE_PARENTHESIS reduce using rule 174 (TYPE -> TYPE_I .)


state 21

    (175) TYPE -> TYPE_F .

    ID              reduce using rule 175 (TYPE -> TYPE_F .)
    SEMI_COLON      reduce using rule 175 (TYPE -> TYPE_F .)
    COMMA           reduce using rule 175 (TYPE -> TYPE_F .)
    CLOSE_PARENTHESIS reduce using rule 175 (TYPE -> TYPE_F .)


state 22

    (176) TYPE -> TYPE_S .

    ID              reduce using rule 176 (TYPE -> TYPE_S .)
    SEMI_COLON      reduce using rule 176 (TYPE -> TYPE_S .)
    COMMA           reduce using rule 176 (TYPE -> TYPE_S .)
    CLOSE_PARENTHESIS reduce using rule 176 (TYPE -> TYPE_S .)


state 23

    (177) TYPE -> TYPE_B .

    ID              reduce using rule 177 (TYPE -> TYPE_B .)
    SEMI_COLON      reduce using rule 177 (TYPE -> TYPE_B .)
    COMMA           reduce using rule 177 (TYPE -> TYPE_B .)
    CLOSE_PARENTHESIS reduce using rule 177 (TYPE -> TYPE_B .)


state 24

    (178) TYPE -> TYPE_O .

    ID              reduce using rule 178 (TYPE -> TYPE_O .)
    SEMI_COLON      reduce using rule 178 (TYPE -> TYPE_O .)
    COMMA           reduce using rule 178 (TYPE -> TYPE_O .)
    CLOSE_PARENTHESIS reduce using rule 178 (TYPE -> TYPE_O .)


state 25

    (179) TYPE -> TYPE_V .

    ID              reduce using rule 179 (TYPE -> TYPE_V .)
    SEMI_COLON      reduce using rule 179 (TYPE -> TYPE_V .)
    COMMA           reduce using rule 179 (TYPE -> TYPE_V .)
    CLOSE_PARENTHESIS reduce using rule 179 (TYPE -> TYPE_V .)


state 26

    (18) SYMBOL_LIST -> ARRAY_DEFINITION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 180 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 44
    empty                          shift and go to state 45

state 27

    (17) SYMBOL_LIST -> ID SYMBOL_LIST_P .

    COLON           reduce using rule 17 (SYMBOL_LIST -> ID SYMBOL_LIST_P .)


state 28

    (124) ARRAY_DEFINITION -> ID seen_array_def_id . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    OPEN_BRACKET    shift and go to state 46


state 29

    (19) SYMBOL_LIST_P -> COMMA . ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> COMMA . ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> COMMA .
    (124) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    ID              shift and go to state 47
    COLON           reduce using rule 21 (SYMBOL_LIST_P -> COMMA .)

    ARRAY_DEFINITION               shift and go to state 48

state 30

    (22) SYMBOL_LIST_P -> empty .
    (127) seen_array_def_id -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)
    OPEN_BRACKET    reduce using rule 127 (seen_array_def_id -> empty .)


state 31

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 49


state 32

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 2 (STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .)


state 33

    (3) STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 3 (STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .)


state 34

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 4 (STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .)


state 35

    (8) CLASS_STAR -> CLASS CLASS_STAR .

    CLASS_KWD       reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_I          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_F          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_S          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_B          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_O          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_V          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    ID              reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)


state 36

    (9) CLASS_STAR -> empty .

    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 9 (CLASS_STAR -> empty .)


state 37

    (28) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    CLASS_KWD       reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_I          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_F          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_S          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_B          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_O          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_V          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    ID              reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    MAIN_KWD        reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 38

    (29) FUNC_DEF_STAR -> empty .

    CLASS_KWD       reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_I          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_F          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_S          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_B          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_O          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_V          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    ID              reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    MAIN_KWD        reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 29 (FUNC_DEF_STAR -> empty .)


state 39

    (14) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_I          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_F          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_S          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_B          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_O          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_V          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    ID              reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 40

    (15) VAR_LIST_STAR -> empty .

    CLASS_KWD       reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_I          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_F          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_S          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_B          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_O          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_V          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    ID              reduce using rule 15 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 15 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 15 (VAR_LIST_STAR -> empty .)


state 41

    (10) CLASS -> CLASS_KWD ID . seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (11) seen_class_id_declaration -> . empty
    (180) empty -> .

    OPEN_CURLY      reduce using rule 180 (empty -> .)

    seen_class_id_declaration      shift and go to state 50
    empty                          shift and go to state 51

state 42

    (30) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (31) seen_func_id -> . empty
    (180) empty -> .

    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_func_id                   shift and go to state 52
    empty                          shift and go to state 53

state 43

    (16) VAR_LIST -> SYMBOL_LIST COLON . TYPE SEMI_COLON
    (174) TYPE -> . TYPE_I
    (175) TYPE -> . TYPE_F
    (176) TYPE -> . TYPE_S
    (177) TYPE -> . TYPE_B
    (178) TYPE -> . TYPE_O
    (179) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 54

state 44

    (18) SYMBOL_LIST -> ARRAY_DEFINITION SYMBOL_LIST_P .

    COLON           reduce using rule 18 (SYMBOL_LIST -> ARRAY_DEFINITION SYMBOL_LIST_P .)


state 45

    (22) SYMBOL_LIST_P -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)


state 46

    (124) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CTE_I           shift and go to state 55


state 47

    (19) SYMBOL_LIST_P -> COMMA ID . SYMBOL_LIST_P
    (124) ARRAY_DEFINITION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (127) seen_array_def_id -> . empty
    (180) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 180 (empty -> .)
    OPEN_BRACKET    reduce using rule 180 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 56
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 48

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DEFINITION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 180 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 57
    empty                          shift and go to state 45

state 49

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 58


state 50

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration . OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 59


state 51

    (11) seen_class_id_declaration -> empty .

    OPEN_CURLY      reduce using rule 11 (seen_class_id_declaration -> empty .)


state 52

    (30) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 60


state 53

    (31) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 31 (seen_func_id -> empty .)


state 54

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 61


state 55

    (124) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (102) seen_cte_i -> .

    CLOSE_BRACKET   reduce using rule 102 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 62

state 56

    (19) SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .

    COLON           reduce using rule 19 (SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .)


state 57

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION SYMBOL_LIST_P .

    COLON           reduce using rule 20 (SYMBOL_LIST_P -> COMMA ARRAY_DEFINITION SYMBOL_LIST_P .)


state 58

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 63


state 59

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY . CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (13) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 65

    CLASS_ATTR                     shift and go to state 64

state 60

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (34) FUNC_PARAM -> . VAR_DECLARATION FUNC_PARAM_P
    (35) FUNC_PARAM -> . empty
    (38) VAR_DECLARATION -> . ID COLON TYPE
    (180) empty -> .

    ID              shift and go to state 66
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    FUNC_PARAM                     shift and go to state 67
    VAR_DECLARATION                shift and go to state 68
    empty                          shift and go to state 69

state 61

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLASS_KWD       reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_I          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_F          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_S          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_B          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_O          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_V          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)


state 62

    (124) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (128) seen_array_def_dim -> . empty
    (180) empty -> .

    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    seen_array_def_dim             shift and go to state 70
    empty                          shift and go to state 71

state 63

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (7) seen_main_kwd -> . empty
    (180) empty -> .

    ID              reduce using rule 180 (empty -> .)
    READ_KWD        reduce using rule 180 (empty -> .)
    PRINT_KWD       reduce using rule 180 (empty -> .)
    PRINTLN_KWD     reduce using rule 180 (empty -> .)
    OPEN_KWD        reduce using rule 180 (empty -> .)
    WRITE_KWD       reduce using rule 180 (empty -> .)
    RETURN_KWD      reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)
    IF_KWD          reduce using rule 180 (empty -> .)
    WHILE_KWD       reduce using rule 180 (empty -> .)
    FOR_KWD         reduce using rule 180 (empty -> .)
    CLOSE_CURLY     reduce using rule 180 (empty -> .)

    seen_main_kwd                  shift and go to state 72
    empty                          shift and go to state 73

state 64

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR . seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (12) seen_class_attr -> . empty
    (180) empty -> .

    TYPE_I          reduce using rule 180 (empty -> .)
    TYPE_F          reduce using rule 180 (empty -> .)
    TYPE_S          reduce using rule 180 (empty -> .)
    TYPE_B          reduce using rule 180 (empty -> .)
    TYPE_O          reduce using rule 180 (empty -> .)
    TYPE_V          reduce using rule 180 (empty -> .)
    CLOSE_CURLY     reduce using rule 180 (empty -> .)

    seen_class_attr                shift and go to state 74
    empty                          shift and go to state 75

state 65

    (13) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 76


state 66

    (38) VAR_DECLARATION -> ID . COLON TYPE

    COLON           shift and go to state 77


state 67

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 78


state 68

    (34) FUNC_PARAM -> VAR_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA VAR_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 80
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 79
    empty                          shift and go to state 81

state 69

    (35) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 35 (FUNC_PARAM -> empty .)


state 70

    (124) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_BRACKET   shift and go to state 82


state 71

    (128) seen_array_def_dim -> empty .

    CLOSE_BRACKET   reduce using rule 128 (seen_array_def_dim -> empty .)


state 72

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (180) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (150) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (151) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (153) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (147) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (148) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (149) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (159) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (164) REPETITION -> . CONDITIONAL_REP
    (165) REPETITION -> . UNCONDITIONAL_REP
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (166) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (169) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 98
    PRINT_KWD       shift and go to state 99
    PRINTLN_KWD     shift and go to state 100
    OPEN_KWD        shift and go to state 101
    WRITE_KWD       shift and go to state 102
    RETURN_KWD      shift and go to state 105
    THIS_KWD        shift and go to state 107
    IF_KWD          shift and go to state 108
    WHILE_KWD       shift and go to state 111
    FOR_KWD         shift and go to state 112

    STATEMENT_STAR                 shift and go to state 84
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    WRITE                          shift and go to state 93
    FLOW_CONTROL                   shift and go to state 94
    FUNC_RETURN                    shift and go to state 95
    VAR                            shift and go to state 96
    CLASS_REFERENCE                shift and go to state 97
    DECISION                       shift and go to state 103
    REPETITION                     shift and go to state 104
    ARRAY                          shift and go to state 106
    CONDITIONAL_REP                shift and go to state 109
    UNCONDITIONAL_REP              shift and go to state 110

state 73

    (7) seen_main_kwd -> empty .

    ID              reduce using rule 7 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    PRINT_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    PRINTLN_KWD     reduce using rule 7 (seen_main_kwd -> empty .)
    OPEN_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    WRITE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    RETURN_KWD      reduce using rule 7 (seen_main_kwd -> empty .)
    THIS_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 7 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 7 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 7 (seen_main_kwd -> empty .)


state 74

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr . FUNC_DEF_STAR CLOSE_CURLY
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (180) empty -> .
    (174) TYPE -> . TYPE_I
    (175) TYPE -> . TYPE_F
    (176) TYPE -> . TYPE_S
    (177) TYPE -> . TYPE_B
    (178) TYPE -> . TYPE_O
    (179) TYPE -> . TYPE_V

    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    FUNC_DEF_STAR                  shift and go to state 113
    FUNC_DEF                       shift and go to state 15
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 75

    (12) seen_class_attr -> empty .

    TYPE_I          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_F          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_S          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_B          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_O          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_V          reduce using rule 12 (seen_class_attr -> empty .)
    CLOSE_CURLY     reduce using rule 12 (seen_class_attr -> empty .)


state 76

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (180) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (124) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 114
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 77

    (38) VAR_DECLARATION -> ID COLON . TYPE
    (174) TYPE -> . TYPE_I
    (175) TYPE -> . TYPE_F
    (176) TYPE -> . TYPE_S
    (177) TYPE -> . TYPE_B
    (178) TYPE -> . TYPE_O
    (179) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 115

state 78

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (32) seen_func_params -> . empty
    (180) empty -> .

    VARS_KWD        reduce using rule 180 (empty -> .)

    seen_func_params               shift and go to state 116
    empty                          shift and go to state 117

state 79

    (34) FUNC_PARAM -> VAR_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 34 (FUNC_PARAM -> VAR_DECLARATION FUNC_PARAM_P .)


state 80

    (36) FUNC_PARAM_P -> COMMA . VAR_DECLARATION FUNC_PARAM_P
    (38) VAR_DECLARATION -> . ID COLON TYPE

    ID              shift and go to state 66

    VAR_DECLARATION                shift and go to state 118

state 81

    (37) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 37 (FUNC_PARAM_P -> empty .)


state 82

    (124) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DEFINITION_P
    (125) ARRAY_DEFINITION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (126) ARRAY_DEFINITION_P -> . empty
    (180) empty -> .

    OPEN_BRACKET    shift and go to state 119
    COMMA           reduce using rule 180 (empty -> .)
    COLON           reduce using rule 180 (empty -> .)

    ARRAY_DEFINITION_P             shift and go to state 120
    empty                          shift and go to state 121

state 83

    (135) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (111) VAR -> ID .
    (108) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (118) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) seen_func_call_id -> . empty
    (121) seen_array_id -> . empty
    (180) empty -> .

    EQUALS          reduce using rule 111 (VAR -> ID .)
    STAR            reduce using rule 111 (VAR -> ID .)
    FWD_SLASH       reduce using rule 111 (VAR -> ID .)
    PLUS            reduce using rule 111 (VAR -> ID .)
    MINUS           reduce using rule 111 (VAR -> ID .)
    BIGGER          reduce using rule 111 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 111 (VAR -> ID .)
    SMALLER         reduce using rule 111 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 111 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 111 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 111 (VAR -> ID .)
    AND             reduce using rule 111 (VAR -> ID .)
    OR              reduce using rule 111 (VAR -> ID .)
    SEMI_COLON      reduce using rule 111 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 111 (VAR -> ID .)
    COMMA           reduce using rule 111 (VAR -> ID .)
    CLOSE_BRACKET   reduce using rule 111 (VAR -> ID .)
    DOT             shift and go to state 123
    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    OPEN_BRACKET    reduce using rule 180 (empty -> .)

    seen_func_call_id              shift and go to state 122
    seen_array_id                  shift and go to state 124
    empty                          shift and go to state 125

state 84

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 126


state 85

    (40) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (180) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (150) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (151) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (153) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (147) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (148) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (149) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (159) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (164) REPETITION -> . CONDITIONAL_REP
    (165) REPETITION -> . UNCONDITIONAL_REP
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (166) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (169) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 98
    PRINT_KWD       shift and go to state 99
    PRINTLN_KWD     shift and go to state 100
    OPEN_KWD        shift and go to state 101
    WRITE_KWD       shift and go to state 102
    RETURN_KWD      shift and go to state 105
    THIS_KWD        shift and go to state 107
    IF_KWD          shift and go to state 108
    WHILE_KWD       shift and go to state 111
    FOR_KWD         shift and go to state 112

    STATEMENT                      shift and go to state 85
    STATEMENT_STAR                 shift and go to state 127
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    WRITE                          shift and go to state 93
    FLOW_CONTROL                   shift and go to state 94
    FUNC_RETURN                    shift and go to state 95
    VAR                            shift and go to state 96
    CLASS_REFERENCE                shift and go to state 97
    DECISION                       shift and go to state 103
    REPETITION                     shift and go to state 104
    ARRAY                          shift and go to state 106
    CONDITIONAL_REP                shift and go to state 109
    UNCONDITIONAL_REP              shift and go to state 110

state 86

    (41) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 41 (STATEMENT_STAR -> empty .)


state 87

    (42) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 128


state 88

    (43) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 129


state 89

    (44) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 130


state 90

    (45) STATEMENT -> PRINT . SEMI_COLON

    SEMI_COLON      shift and go to state 131


state 91

    (46) STATEMENT -> PRINTLN . SEMI_COLON

    SEMI_COLON      shift and go to state 132


state 92

    (47) STATEMENT -> OPEN . SEMI_COLON

    SEMI_COLON      shift and go to state 133


state 93

    (48) STATEMENT -> WRITE . SEMI_COLON

    SEMI_COLON      shift and go to state 134


state 94

    (49) STATEMENT -> FLOW_CONTROL .

    ID              reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    READ_KWD        reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    PRINT_KWD       reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    PRINTLN_KWD     reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    OPEN_KWD        reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    WRITE_KWD       reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    RETURN_KWD      reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    THIS_KWD        reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    IF_KWD          reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    WHILE_KWD       reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    FOR_KWD         reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)
    CLOSE_CURLY     reduce using rule 49 (STATEMENT -> FLOW_CONTROL .)


state 95

    (50) STATEMENT -> FUNC_RETURN .

    ID              reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    READ_KWD        reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    PRINT_KWD       reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    PRINTLN_KWD     reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    OPEN_KWD        reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    WRITE_KWD       reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    RETURN_KWD      reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    THIS_KWD        reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    IF_KWD          reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    WHILE_KWD       reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    FOR_KWD         reduce using rule 50 (STATEMENT -> FUNC_RETURN .)
    CLOSE_CURLY     reduce using rule 50 (STATEMENT -> FUNC_RETURN .)


state 96

    (64) ASSIGN -> VAR . seen_var_in_assign EQUALS seen_equals EXPRESSION
    (99) seen_var_in_assign -> . empty
    (180) empty -> .

    EQUALS          reduce using rule 180 (empty -> .)

    seen_var_in_assign             shift and go to state 135
    empty                          shift and go to state 136

state 97

    (136) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (113) VAR -> CLASS_REFERENCE . VAR
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 83
    THIS_KWD        shift and go to state 107

    CLASS_REFERENCE                shift and go to state 97
    FUNC_CALL                      shift and go to state 137
    VAR                            shift and go to state 138
    ARRAY                          shift and go to state 106

state 98

    (150) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 139


state 99

    (151) PRINT -> PRINT_KWD . seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (152) seen_print_kwd -> . empty
    (180) empty -> .

    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_print_kwd                 shift and go to state 140
    empty                          shift and go to state 141

state 100

    (153) PRINTLN -> PRINTLN_KWD . seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (154) seen_println_kwd -> . empty
    (180) empty -> .

    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_println_kwd               shift and go to state 142
    empty                          shift and go to state 143

state 101

    (51) OPEN -> OPEN_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 144


state 102

    (53) WRITE -> WRITE_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 145


state 103

    (57) FLOW_CONTROL -> DECISION .

    ID              reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    READ_KWD        reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    PRINT_KWD       reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    PRINTLN_KWD     reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    OPEN_KWD        reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    WRITE_KWD       reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    RETURN_KWD      reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    THIS_KWD        reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    IF_KWD          reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    WHILE_KWD       reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    FOR_KWD         reduce using rule 57 (FLOW_CONTROL -> DECISION .)
    CLOSE_CURLY     reduce using rule 57 (FLOW_CONTROL -> DECISION .)


state 104

    (58) FLOW_CONTROL -> REPETITION .

    ID              reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    READ_KWD        reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    PRINT_KWD       reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    PRINTLN_KWD     reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    OPEN_KWD        reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    WRITE_KWD       reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    RETURN_KWD      reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    THIS_KWD        reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    IF_KWD          reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    WHILE_KWD       reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    FOR_KWD         reduce using rule 58 (FLOW_CONTROL -> REPETITION .)
    CLOSE_CURLY     reduce using rule 58 (FLOW_CONTROL -> REPETITION .)


state 105

    (147) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (148) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (149) FUNC_RETURN -> RETURN_KWD . SEMI_COLON
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    SEMI_COLON      shift and go to state 147
    ID              shift and go to state 150
    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    THIS_KWD        shift and go to state 107
    OPEN_PARENTHESIS shift and go to state 151
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162

    EXPRESSION                     shift and go to state 146
    FUNC_CALL                      shift and go to state 148
    EXP                            shift and go to state 149
    CLASS_REFERENCE                shift and go to state 97
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    ARRAY                          shift and go to state 106

state 106

    (112) VAR -> ARRAY .

    EQUALS          reduce using rule 112 (VAR -> ARRAY .)
    STAR            reduce using rule 112 (VAR -> ARRAY .)
    FWD_SLASH       reduce using rule 112 (VAR -> ARRAY .)
    PLUS            reduce using rule 112 (VAR -> ARRAY .)
    MINUS           reduce using rule 112 (VAR -> ARRAY .)
    BIGGER          reduce using rule 112 (VAR -> ARRAY .)
    BIGGER_EQ       reduce using rule 112 (VAR -> ARRAY .)
    SMALLER         reduce using rule 112 (VAR -> ARRAY .)
    SMALLER_EQ      reduce using rule 112 (VAR -> ARRAY .)
    DOUBLE_EQUALS   reduce using rule 112 (VAR -> ARRAY .)
    NOT_EQUALS      reduce using rule 112 (VAR -> ARRAY .)
    AND             reduce using rule 112 (VAR -> ARRAY .)
    OR              reduce using rule 112 (VAR -> ARRAY .)
    SEMI_COLON      reduce using rule 112 (VAR -> ARRAY .)
    CLOSE_PARENTHESIS reduce using rule 112 (VAR -> ARRAY .)
    COMMA           reduce using rule 112 (VAR -> ARRAY .)
    CLOSE_BRACKET   reduce using rule 112 (VAR -> ARRAY .)


state 107

    (109) CLASS_REFERENCE -> THIS_KWD . seen_this_kwd DOT seen_this_dot_operator
    (110) seen_this_kwd -> . empty
    (180) empty -> .

    DOT             reduce using rule 180 (empty -> .)

    seen_this_kwd                  shift and go to state 163
    empty                          shift and go to state 164

state 108

    (159) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 165


state 109

    (164) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)
    THIS_KWD        reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 164 (REPETITION -> CONDITIONAL_REP .)


state 110

    (165) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)
    THIS_KWD        reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 165 (REPETITION -> UNCONDITIONAL_REP .)


state 111

    (166) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (167) seen_while_kwd -> . empty
    (180) empty -> .

    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_while_kwd                 shift and go to state 166
    empty                          shift and go to state 167

state 112

    (169) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 168


state 113

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 169


state 114

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 170


state 115

    (38) VAR_DECLARATION -> ID COLON TYPE .

    COMMA           reduce using rule 38 (VAR_DECLARATION -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 38 (VAR_DECLARATION -> ID COLON TYPE .)


state 116

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (39) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 172

    VARS                           shift and go to state 171

state 117

    (32) seen_func_params -> empty .

    VARS_KWD        reduce using rule 32 (seen_func_params -> empty .)


state 118

    (36) FUNC_PARAM_P -> COMMA VAR_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA VAR_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 80
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 173
    empty                          shift and go to state 81

state 119

    (125) ARRAY_DEFINITION_P -> OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CTE_I           shift and go to state 174


state 120

    (124) ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .

    COMMA           reduce using rule 124 (ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)
    COLON           reduce using rule 124 (ARRAY_DEFINITION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)


state 121

    (126) ARRAY_DEFINITION_P -> empty .

    COMMA           reduce using rule 126 (ARRAY_DEFINITION_P -> empty .)
    COLON           reduce using rule 126 (ARRAY_DEFINITION_P -> empty .)


state 122

    (135) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 175


state 123

    (108) CLASS_REFERENCE -> ID DOT . seen_dot_operator
    (116) seen_dot_operator -> . empty
    (180) empty -> .

    ID              reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_dot_operator              shift and go to state 176
    empty                          shift and go to state 177

state 124

    (118) ARRAY -> ID seen_array_id . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_BRACKET    shift and go to state 178


state 125

    (137) seen_func_call_id -> empty .
    (121) seen_array_id -> empty .

    OPEN_PARENTHESIS reduce using rule 137 (seen_func_call_id -> empty .)
    OPEN_BRACKET    reduce using rule 121 (seen_array_id -> empty .)


state 126

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 127

    (40) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 40 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 128

    (42) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINT_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    OPEN_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WRITE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    RETURN_KWD      reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    THIS_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)


state 129

    (43) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 130

    (44) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINT_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    OPEN_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WRITE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    RETURN_KWD      reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    THIS_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)


state 131

    (45) STATEMENT -> PRINT SEMI_COLON .

    ID              reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    READ_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINT_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    OPEN_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WRITE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    RETURN_KWD      reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    THIS_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    IF_KWD          reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WHILE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    FOR_KWD         reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)


state 132

    (46) STATEMENT -> PRINTLN SEMI_COLON .

    ID              reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    READ_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINT_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    OPEN_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WRITE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    RETURN_KWD      reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    THIS_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    IF_KWD          reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WHILE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    FOR_KWD         reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)


state 133

    (47) STATEMENT -> OPEN SEMI_COLON .

    ID              reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    READ_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINT_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    OPEN_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    WRITE_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    RETURN_KWD      reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    THIS_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    IF_KWD          reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    WHILE_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    FOR_KWD         reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)


state 134

    (48) STATEMENT -> WRITE SEMI_COLON .

    ID              reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    READ_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    PRINT_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    OPEN_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    WRITE_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    RETURN_KWD      reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    THIS_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    IF_KWD          reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    WHILE_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    FOR_KWD         reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)


state 135

    (64) ASSIGN -> VAR seen_var_in_assign . EQUALS seen_equals EXPRESSION

    EQUALS          shift and go to state 179


state 136

    (99) seen_var_in_assign -> empty .

    EQUALS          reduce using rule 99 (seen_var_in_assign -> empty .)
    COMMA           reduce using rule 99 (seen_var_in_assign -> empty .)
    CLOSE_PARENTHESIS reduce using rule 99 (seen_var_in_assign -> empty .)


state 137

    (136) FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .

    SEMI_COLON      reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    STAR            reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    FWD_SLASH       reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    PLUS            reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    MINUS           reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER          reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER_EQ       reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER         reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER_EQ      reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    NOT_EQUALS      reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    AND             reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    OR              reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    COMMA           reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 136 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)


state 138

    (113) VAR -> CLASS_REFERENCE VAR .

    EQUALS          reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    STAR            reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    FWD_SLASH       reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    PLUS            reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    MINUS           reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER          reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER_EQ       reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER         reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER_EQ      reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    DOUBLE_EQUALS   reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    NOT_EQUALS      reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    AND             reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    OR              reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    SEMI_COLON      reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_PARENTHESIS reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    COMMA           reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_BRACKET   reduce using rule 113 (VAR -> CLASS_REFERENCE VAR .)


state 139

    (150) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (23) READABLE_LIST -> . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 182
    THIS_KWD        shift and go to state 107

    READABLE_LIST                  shift and go to state 180
    VAR                            shift and go to state 181
    ARRAY                          shift and go to state 106
    CLASS_REFERENCE                shift and go to state 183

state 140

    (151) PRINT -> PRINT_KWD seen_print_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 184


state 141

    (152) seen_print_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 152 (seen_print_kwd -> empty .)


state 142

    (153) PRINTLN -> PRINTLN_KWD seen_println_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 185


state 143

    (154) seen_println_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 154 (seen_println_kwd -> empty .)


state 144

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 182
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 186
    ARRAY                          shift and go to state 106
    CLASS_REFERENCE                shift and go to state 183

state 145

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 182
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 187
    ARRAY                          shift and go to state 106
    CLASS_REFERENCE                shift and go to state 183

state 146

    (147) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 188


state 147

    (149) FUNC_RETURN -> RETURN_KWD SEMI_COLON .

    ID              reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    READ_KWD        reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINT_KWD       reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    OPEN_KWD        reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WRITE_KWD       reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    RETURN_KWD      reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    THIS_KWD        reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    IF_KWD          reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WHILE_KWD       reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    FOR_KWD         reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 149 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)


state 148

    (148) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (89) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 189
    STAR            reduce using rule 89 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 89 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 89 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 89 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 89 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 89 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 89 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 89 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 89 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 89 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 89 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 89 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 89 (FACTOR -> FUNC_CALL .) ]


state 149

    (74) EXPRESSION -> EXP .
    (75) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (78) COMP -> . BIGGER
    (79) COMP -> . BIGGER_EQ
    (80) COMP -> . SMALLER
    (81) COMP -> . SMALLER_EQ
    (82) COMP -> . DOUBLE_EQUALS
    (83) COMP -> . NOT_EQUALS
    (84) COMP -> . AND
    (85) COMP -> . OR

    SEMI_COLON      reduce using rule 74 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 74 (EXPRESSION -> EXP .)
    COMMA           reduce using rule 74 (EXPRESSION -> EXP .)
    CLOSE_BRACKET   reduce using rule 74 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 191
    BIGGER_EQ       shift and go to state 192
    SMALLER         shift and go to state 193
    SMALLER_EQ      shift and go to state 194
    DOUBLE_EQUALS   shift and go to state 195
    NOT_EQUALS      shift and go to state 196
    AND             shift and go to state 197
    OR              shift and go to state 198

    COMP                           shift and go to state 190

state 150

    (135) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (108) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (111) VAR -> ID .
    (118) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (137) seen_func_call_id -> . empty
    (121) seen_array_id -> . empty
    (180) empty -> .

    DOT             shift and go to state 123
    STAR            reduce using rule 111 (VAR -> ID .)
    FWD_SLASH       reduce using rule 111 (VAR -> ID .)
    PLUS            reduce using rule 111 (VAR -> ID .)
    MINUS           reduce using rule 111 (VAR -> ID .)
    BIGGER          reduce using rule 111 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 111 (VAR -> ID .)
    SMALLER         reduce using rule 111 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 111 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 111 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 111 (VAR -> ID .)
    AND             reduce using rule 111 (VAR -> ID .)
    OR              reduce using rule 111 (VAR -> ID .)
    SEMI_COLON      reduce using rule 111 (VAR -> ID .)
    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    OPEN_BRACKET    reduce using rule 180 (empty -> .)

    seen_func_call_id              shift and go to state 122
    seen_array_id                  shift and go to state 124
    empty                          shift and go to state 125

state 151

    (86) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (97) seen_open_parenthesis -> . empty
    (180) empty -> .

    MINUS           reduce using rule 180 (empty -> .)
    NOT             reduce using rule 180 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    NEW_KWD         reduce using rule 180 (empty -> .)
    CTE_S           reduce using rule 180 (empty -> .)
    CTE_F           reduce using rule 180 (empty -> .)
    CTE_I           reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_open_parenthesis          shift and go to state 199
    empty                          shift and go to state 200

state 152

    (66) EXP -> TERM . seen_term EXP_P
    (69) seen_term -> .

    PLUS            reduce using rule 69 (seen_term -> .)
    MINUS           reduce using rule 69 (seen_term -> .)
    BIGGER          reduce using rule 69 (seen_term -> .)
    BIGGER_EQ       reduce using rule 69 (seen_term -> .)
    SMALLER         reduce using rule 69 (seen_term -> .)
    SMALLER_EQ      reduce using rule 69 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 69 (seen_term -> .)
    NOT_EQUALS      reduce using rule 69 (seen_term -> .)
    AND             reduce using rule 69 (seen_term -> .)
    OR              reduce using rule 69 (seen_term -> .)
    SEMI_COLON      reduce using rule 69 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 69 (seen_term -> .)
    COMMA           reduce using rule 69 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 69 (seen_term -> .)

    seen_term                      shift and go to state 201

state 153

    (67) EXP -> MINUS . seen_unary_minus EXP pop_unary_minus
    (88) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (96) seen_unary_minus -> . empty
    (180) empty -> .

    MINUS           reduce using rule 180 (empty -> .)
    NOT             reduce using rule 180 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    NEW_KWD         reduce using rule 180 (empty -> .)
    CTE_S           reduce using rule 180 (empty -> .)
    CTE_F           reduce using rule 180 (empty -> .)
    CTE_I           reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_unary_minus               shift and go to state 202
    empty                          shift and go to state 203

state 154

    (68) EXP -> NOT . seen_not EXP pop_not
    (87) FACTOR -> NOT . seen_not FACTOR pop_not
    (94) seen_not -> . empty
    (180) empty -> .

    MINUS           reduce using rule 180 (empty -> .)
    NOT             reduce using rule 180 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    NEW_KWD         reduce using rule 180 (empty -> .)
    CTE_S           reduce using rule 180 (empty -> .)
    CTE_F           reduce using rule 180 (empty -> .)
    CTE_I           reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_not                       shift and go to state 204
    empty                          shift and go to state 205

state 155

    (129) TERM -> FACTOR . seen_factor TERM_P
    (133) seen_factor -> . empty
    (180) empty -> .

    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    seen_factor                    shift and go to state 206
    empty                          shift and go to state 207

state 156

    (90) FACTOR -> CLASS_INSTANCE .

    STAR            reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    FWD_SLASH       reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    PLUS            reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    MINUS           reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    BIGGER          reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    BIGGER_EQ       reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    SMALLER         reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    SMALLER_EQ      reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    DOUBLE_EQUALS   reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    NOT_EQUALS      reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    AND             reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    OR              reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    SEMI_COLON      reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_PARENTHESIS reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    COMMA           reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_BRACKET   reduce using rule 90 (FACTOR -> CLASS_INSTANCE .)


state 157

    (91) FACTOR -> VAR . seen_var_as_factor
    (100) seen_var_as_factor -> . empty
    (180) empty -> .

    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    seen_var_as_factor             shift and go to state 208
    empty                          shift and go to state 209

state 158

    (92) FACTOR -> CNST .

    STAR            reduce using rule 92 (FACTOR -> CNST .)
    FWD_SLASH       reduce using rule 92 (FACTOR -> CNST .)
    PLUS            reduce using rule 92 (FACTOR -> CNST .)
    MINUS           reduce using rule 92 (FACTOR -> CNST .)
    BIGGER          reduce using rule 92 (FACTOR -> CNST .)
    BIGGER_EQ       reduce using rule 92 (FACTOR -> CNST .)
    SMALLER         reduce using rule 92 (FACTOR -> CNST .)
    SMALLER_EQ      reduce using rule 92 (FACTOR -> CNST .)
    DOUBLE_EQUALS   reduce using rule 92 (FACTOR -> CNST .)
    NOT_EQUALS      reduce using rule 92 (FACTOR -> CNST .)
    AND             reduce using rule 92 (FACTOR -> CNST .)
    OR              reduce using rule 92 (FACTOR -> CNST .)
    SEMI_COLON      reduce using rule 92 (FACTOR -> CNST .)
    CLOSE_PARENTHESIS reduce using rule 92 (FACTOR -> CNST .)
    COMMA           reduce using rule 92 (FACTOR -> CNST .)
    CLOSE_BRACKET   reduce using rule 92 (FACTOR -> CNST .)


state 159

    (114) CLASS_INSTANCE -> NEW_KWD . ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS

    ID              shift and go to state 210


state 160

    (105) CNST -> CTE_S . seen_cte_s
    (104) seen_cte_s -> .

    STAR            reduce using rule 104 (seen_cte_s -> .)
    FWD_SLASH       reduce using rule 104 (seen_cte_s -> .)
    PLUS            reduce using rule 104 (seen_cte_s -> .)
    MINUS           reduce using rule 104 (seen_cte_s -> .)
    BIGGER          reduce using rule 104 (seen_cte_s -> .)
    BIGGER_EQ       reduce using rule 104 (seen_cte_s -> .)
    SMALLER         reduce using rule 104 (seen_cte_s -> .)
    SMALLER_EQ      reduce using rule 104 (seen_cte_s -> .)
    DOUBLE_EQUALS   reduce using rule 104 (seen_cte_s -> .)
    NOT_EQUALS      reduce using rule 104 (seen_cte_s -> .)
    AND             reduce using rule 104 (seen_cte_s -> .)
    OR              reduce using rule 104 (seen_cte_s -> .)
    SEMI_COLON      reduce using rule 104 (seen_cte_s -> .)
    CLOSE_PARENTHESIS reduce using rule 104 (seen_cte_s -> .)
    COMMA           reduce using rule 104 (seen_cte_s -> .)
    CLOSE_BRACKET   reduce using rule 104 (seen_cte_s -> .)

    seen_cte_s                     shift and go to state 211

state 161

    (106) CNST -> CTE_F . seen_cte_f
    (103) seen_cte_f -> .

    STAR            reduce using rule 103 (seen_cte_f -> .)
    FWD_SLASH       reduce using rule 103 (seen_cte_f -> .)
    PLUS            reduce using rule 103 (seen_cte_f -> .)
    MINUS           reduce using rule 103 (seen_cte_f -> .)
    BIGGER          reduce using rule 103 (seen_cte_f -> .)
    BIGGER_EQ       reduce using rule 103 (seen_cte_f -> .)
    SMALLER         reduce using rule 103 (seen_cte_f -> .)
    SMALLER_EQ      reduce using rule 103 (seen_cte_f -> .)
    DOUBLE_EQUALS   reduce using rule 103 (seen_cte_f -> .)
    NOT_EQUALS      reduce using rule 103 (seen_cte_f -> .)
    AND             reduce using rule 103 (seen_cte_f -> .)
    OR              reduce using rule 103 (seen_cte_f -> .)
    SEMI_COLON      reduce using rule 103 (seen_cte_f -> .)
    CLOSE_PARENTHESIS reduce using rule 103 (seen_cte_f -> .)
    COMMA           reduce using rule 103 (seen_cte_f -> .)
    CLOSE_BRACKET   reduce using rule 103 (seen_cte_f -> .)

    seen_cte_f                     shift and go to state 212

state 162

    (107) CNST -> CTE_I . seen_cte_i
    (102) seen_cte_i -> .

    STAR            reduce using rule 102 (seen_cte_i -> .)
    FWD_SLASH       reduce using rule 102 (seen_cte_i -> .)
    PLUS            reduce using rule 102 (seen_cte_i -> .)
    MINUS           reduce using rule 102 (seen_cte_i -> .)
    BIGGER          reduce using rule 102 (seen_cte_i -> .)
    BIGGER_EQ       reduce using rule 102 (seen_cte_i -> .)
    SMALLER         reduce using rule 102 (seen_cte_i -> .)
    SMALLER_EQ      reduce using rule 102 (seen_cte_i -> .)
    DOUBLE_EQUALS   reduce using rule 102 (seen_cte_i -> .)
    NOT_EQUALS      reduce using rule 102 (seen_cte_i -> .)
    AND             reduce using rule 102 (seen_cte_i -> .)
    OR              reduce using rule 102 (seen_cte_i -> .)
    SEMI_COLON      reduce using rule 102 (seen_cte_i -> .)
    CLOSE_PARENTHESIS reduce using rule 102 (seen_cte_i -> .)
    COMMA           reduce using rule 102 (seen_cte_i -> .)
    CLOSE_BRACKET   reduce using rule 102 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 213

state 163

    (109) CLASS_REFERENCE -> THIS_KWD seen_this_kwd . DOT seen_this_dot_operator

    DOT             shift and go to state 214


state 164

    (110) seen_this_kwd -> empty .

    DOT             reduce using rule 110 (seen_this_kwd -> empty .)


state 165

    (159) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    EXPRESSION                     shift and go to state 215
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 166

    (166) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 217


state 167

    (167) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 167 (seen_while_kwd -> empty .)


state 168

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 182
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 218
    ARRAY                          shift and go to state 106
    CLASS_REFERENCE                shift and go to state 183

state 169

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_I          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)


state 170

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 171

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (33) seen_func_vars -> . empty
    (180) empty -> .

    OPEN_CURLY      reduce using rule 180 (empty -> .)

    seen_func_vars                 shift and go to state 219
    empty                          shift and go to state 220

state 172

    (39) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 221


state 173

    (36) FUNC_PARAM_P -> COMMA VAR_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 36 (FUNC_PARAM_P -> COMMA VAR_DECLARATION FUNC_PARAM_P .)


state 174

    (125) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (102) seen_cte_i -> .

    CLOSE_BRACKET   reduce using rule 102 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 222

state 175

    (135) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (138) ARG_LIST -> . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (139) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (140) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (141) ARG_LIST -> . empty
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (180) empty -> .
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 223
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    THIS_KWD        shift and go to state 107
    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162

    ARG_LIST                       shift and go to state 224
    VAR                            shift and go to state 225
    EXPRESSION                     shift and go to state 226
    FUNC_CALL                      shift and go to state 227
    empty                          shift and go to state 228
    ARRAY                          shift and go to state 106
    CLASS_REFERENCE                shift and go to state 229
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    CLASS_INSTANCE                 shift and go to state 156
    CNST                           shift and go to state 158

state 176

    (108) CLASS_REFERENCE -> ID DOT seen_dot_operator .

    ID              reduce using rule 108 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)
    THIS_KWD        reduce using rule 108 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)


state 177

    (116) seen_dot_operator -> empty .

    ID              reduce using rule 116 (seen_dot_operator -> empty .)
    THIS_KWD        reduce using rule 116 (seen_dot_operator -> empty .)


state 178

    (118) ARRAY -> ID seen_array_id OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (122) seen_open_bracket -> . empty
    (180) empty -> .

    MINUS           reduce using rule 180 (empty -> .)
    NOT             reduce using rule 180 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    NEW_KWD         reduce using rule 180 (empty -> .)
    CTE_S           reduce using rule 180 (empty -> .)
    CTE_F           reduce using rule 180 (empty -> .)
    CTE_I           reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_open_bracket              shift and go to state 230
    empty                          shift and go to state 231

state 179

    (64) ASSIGN -> VAR seen_var_in_assign EQUALS . seen_equals EXPRESSION
    (65) seen_equals -> . empty
    (180) empty -> .

    MINUS           reduce using rule 180 (empty -> .)
    NOT             reduce using rule 180 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    NEW_KWD         reduce using rule 180 (empty -> .)
    CTE_S           reduce using rule 180 (empty -> .)
    CTE_F           reduce using rule 180 (empty -> .)
    CTE_I           reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_equals                    shift and go to state 232
    empty                          shift and go to state 233

state 180

    (150) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 234


state 181

    (23) READABLE_LIST -> VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (99) seen_var_in_assign -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_var_in_assign             shift and go to state 235
    empty                          shift and go to state 136

state 182

    (111) VAR -> ID .
    (118) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (108) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (121) seen_array_id -> . empty
    (180) empty -> .

    COMMA           reduce using rule 111 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 111 (VAR -> ID .)
    EQUALS          reduce using rule 111 (VAR -> ID .)
    DOT             shift and go to state 123
    OPEN_BRACKET    reduce using rule 180 (empty -> .)

    seen_array_id                  shift and go to state 124
    empty                          shift and go to state 236

state 183

    (113) VAR -> CLASS_REFERENCE . VAR
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 182
    THIS_KWD        shift and go to state 107

    CLASS_REFERENCE                shift and go to state 183
    VAR                            shift and go to state 138
    ARRAY                          shift and go to state 106

state 184

    (151) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (155) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    PRINTABLE                      shift and go to state 237
    EXPRESSION                     shift and go to state 238
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 185

    (153) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (155) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    PRINTABLE                      shift and go to state 239
    EXPRESSION                     shift and go to state 238
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 186

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (101) seen_var_in_io -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)

    seen_var_in_io                 shift and go to state 240
    empty                          shift and go to state 241

state 187

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (101) seen_var_in_io -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)

    seen_var_in_io                 shift and go to state 242
    empty                          shift and go to state 241

state 188

    (147) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINT_KWD       reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    OPEN_KWD        reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    THIS_KWD        reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 147 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 189

    (148) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    ID              reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 148 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 190

    (75) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (77) seen_comp_op -> . empty
    (180) empty -> .

    MINUS           reduce using rule 180 (empty -> .)
    NOT             reduce using rule 180 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    NEW_KWD         reduce using rule 180 (empty -> .)
    CTE_S           reduce using rule 180 (empty -> .)
    CTE_F           reduce using rule 180 (empty -> .)
    CTE_I           reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_comp_op                   shift and go to state 243
    empty                          shift and go to state 244

state 191

    (78) COMP -> BIGGER .

    MINUS           reduce using rule 78 (COMP -> BIGGER .)
    NOT             reduce using rule 78 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 78 (COMP -> BIGGER .)
    ID              reduce using rule 78 (COMP -> BIGGER .)
    NEW_KWD         reduce using rule 78 (COMP -> BIGGER .)
    CTE_S           reduce using rule 78 (COMP -> BIGGER .)
    CTE_F           reduce using rule 78 (COMP -> BIGGER .)
    CTE_I           reduce using rule 78 (COMP -> BIGGER .)
    THIS_KWD        reduce using rule 78 (COMP -> BIGGER .)


state 192

    (79) COMP -> BIGGER_EQ .

    MINUS           reduce using rule 79 (COMP -> BIGGER_EQ .)
    NOT             reduce using rule 79 (COMP -> BIGGER_EQ .)
    OPEN_PARENTHESIS reduce using rule 79 (COMP -> BIGGER_EQ .)
    ID              reduce using rule 79 (COMP -> BIGGER_EQ .)
    NEW_KWD         reduce using rule 79 (COMP -> BIGGER_EQ .)
    CTE_S           reduce using rule 79 (COMP -> BIGGER_EQ .)
    CTE_F           reduce using rule 79 (COMP -> BIGGER_EQ .)
    CTE_I           reduce using rule 79 (COMP -> BIGGER_EQ .)
    THIS_KWD        reduce using rule 79 (COMP -> BIGGER_EQ .)


state 193

    (80) COMP -> SMALLER .

    MINUS           reduce using rule 80 (COMP -> SMALLER .)
    NOT             reduce using rule 80 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 80 (COMP -> SMALLER .)
    ID              reduce using rule 80 (COMP -> SMALLER .)
    NEW_KWD         reduce using rule 80 (COMP -> SMALLER .)
    CTE_S           reduce using rule 80 (COMP -> SMALLER .)
    CTE_F           reduce using rule 80 (COMP -> SMALLER .)
    CTE_I           reduce using rule 80 (COMP -> SMALLER .)
    THIS_KWD        reduce using rule 80 (COMP -> SMALLER .)


state 194

    (81) COMP -> SMALLER_EQ .

    MINUS           reduce using rule 81 (COMP -> SMALLER_EQ .)
    NOT             reduce using rule 81 (COMP -> SMALLER_EQ .)
    OPEN_PARENTHESIS reduce using rule 81 (COMP -> SMALLER_EQ .)
    ID              reduce using rule 81 (COMP -> SMALLER_EQ .)
    NEW_KWD         reduce using rule 81 (COMP -> SMALLER_EQ .)
    CTE_S           reduce using rule 81 (COMP -> SMALLER_EQ .)
    CTE_F           reduce using rule 81 (COMP -> SMALLER_EQ .)
    CTE_I           reduce using rule 81 (COMP -> SMALLER_EQ .)
    THIS_KWD        reduce using rule 81 (COMP -> SMALLER_EQ .)


state 195

    (82) COMP -> DOUBLE_EQUALS .

    MINUS           reduce using rule 82 (COMP -> DOUBLE_EQUALS .)
    NOT             reduce using rule 82 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 82 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 82 (COMP -> DOUBLE_EQUALS .)
    NEW_KWD         reduce using rule 82 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 82 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 82 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 82 (COMP -> DOUBLE_EQUALS .)
    THIS_KWD        reduce using rule 82 (COMP -> DOUBLE_EQUALS .)


state 196

    (83) COMP -> NOT_EQUALS .

    MINUS           reduce using rule 83 (COMP -> NOT_EQUALS .)
    NOT             reduce using rule 83 (COMP -> NOT_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 83 (COMP -> NOT_EQUALS .)
    ID              reduce using rule 83 (COMP -> NOT_EQUALS .)
    NEW_KWD         reduce using rule 83 (COMP -> NOT_EQUALS .)
    CTE_S           reduce using rule 83 (COMP -> NOT_EQUALS .)
    CTE_F           reduce using rule 83 (COMP -> NOT_EQUALS .)
    CTE_I           reduce using rule 83 (COMP -> NOT_EQUALS .)
    THIS_KWD        reduce using rule 83 (COMP -> NOT_EQUALS .)


state 197

    (84) COMP -> AND .

    MINUS           reduce using rule 84 (COMP -> AND .)
    NOT             reduce using rule 84 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 84 (COMP -> AND .)
    ID              reduce using rule 84 (COMP -> AND .)
    NEW_KWD         reduce using rule 84 (COMP -> AND .)
    CTE_S           reduce using rule 84 (COMP -> AND .)
    CTE_F           reduce using rule 84 (COMP -> AND .)
    CTE_I           reduce using rule 84 (COMP -> AND .)
    THIS_KWD        reduce using rule 84 (COMP -> AND .)


state 198

    (85) COMP -> OR .

    MINUS           reduce using rule 85 (COMP -> OR .)
    NOT             reduce using rule 85 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 85 (COMP -> OR .)
    ID              reduce using rule 85 (COMP -> OR .)
    NEW_KWD         reduce using rule 85 (COMP -> OR .)
    CTE_S           reduce using rule 85 (COMP -> OR .)
    CTE_F           reduce using rule 85 (COMP -> OR .)
    CTE_I           reduce using rule 85 (COMP -> OR .)
    THIS_KWD        reduce using rule 85 (COMP -> OR .)


state 199

    (86) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    EXPRESSION                     shift and go to state 245
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 200

    (97) seen_open_parenthesis -> empty .

    MINUS           reduce using rule 97 (seen_open_parenthesis -> empty .)
    NOT             reduce using rule 97 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 97 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 97 (seen_open_parenthesis -> empty .)
    NEW_KWD         reduce using rule 97 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 97 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 97 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 97 (seen_open_parenthesis -> empty .)
    THIS_KWD        reduce using rule 97 (seen_open_parenthesis -> empty .)


state 201

    (66) EXP -> TERM seen_term . EXP_P
    (70) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (71) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (72) EXP_P -> . empty
    (180) empty -> .

    PLUS            shift and go to state 247
    MINUS           shift and go to state 248
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    EXP_P                          shift and go to state 246
    empty                          shift and go to state 249

state 202

    (67) EXP -> MINUS seen_unary_minus . EXP pop_unary_minus
    (88) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (129) TERM -> . FACTOR seen_factor TERM_P
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    EXP                            shift and go to state 250
    FACTOR                         shift and go to state 251
    TERM                           shift and go to state 152
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 203

    (96) seen_unary_minus -> empty .

    MINUS           reduce using rule 96 (seen_unary_minus -> empty .)
    NOT             reduce using rule 96 (seen_unary_minus -> empty .)
    OPEN_PARENTHESIS reduce using rule 96 (seen_unary_minus -> empty .)
    ID              reduce using rule 96 (seen_unary_minus -> empty .)
    NEW_KWD         reduce using rule 96 (seen_unary_minus -> empty .)
    CTE_S           reduce using rule 96 (seen_unary_minus -> empty .)
    CTE_F           reduce using rule 96 (seen_unary_minus -> empty .)
    CTE_I           reduce using rule 96 (seen_unary_minus -> empty .)
    THIS_KWD        reduce using rule 96 (seen_unary_minus -> empty .)


state 204

    (68) EXP -> NOT seen_not . EXP pop_not
    (87) FACTOR -> NOT seen_not . FACTOR pop_not
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (129) TERM -> . FACTOR seen_factor TERM_P
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    EXP                            shift and go to state 252
    FACTOR                         shift and go to state 253
    TERM                           shift and go to state 152
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 205

    (94) seen_not -> empty .

    MINUS           reduce using rule 94 (seen_not -> empty .)
    NOT             reduce using rule 94 (seen_not -> empty .)
    OPEN_PARENTHESIS reduce using rule 94 (seen_not -> empty .)
    ID              reduce using rule 94 (seen_not -> empty .)
    NEW_KWD         reduce using rule 94 (seen_not -> empty .)
    CTE_S           reduce using rule 94 (seen_not -> empty .)
    CTE_F           reduce using rule 94 (seen_not -> empty .)
    CTE_I           reduce using rule 94 (seen_not -> empty .)
    THIS_KWD        reduce using rule 94 (seen_not -> empty .)


state 206

    (129) TERM -> FACTOR seen_factor . TERM_P
    (130) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (131) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (132) TERM_P -> . empty
    (180) empty -> .

    STAR            shift and go to state 255
    FWD_SLASH       shift and go to state 256
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    TERM_P                         shift and go to state 254
    empty                          shift and go to state 257

state 207

    (133) seen_factor -> empty .

    STAR            reduce using rule 133 (seen_factor -> empty .)
    FWD_SLASH       reduce using rule 133 (seen_factor -> empty .)
    PLUS            reduce using rule 133 (seen_factor -> empty .)
    MINUS           reduce using rule 133 (seen_factor -> empty .)
    BIGGER          reduce using rule 133 (seen_factor -> empty .)
    BIGGER_EQ       reduce using rule 133 (seen_factor -> empty .)
    SMALLER         reduce using rule 133 (seen_factor -> empty .)
    SMALLER_EQ      reduce using rule 133 (seen_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 133 (seen_factor -> empty .)
    NOT_EQUALS      reduce using rule 133 (seen_factor -> empty .)
    AND             reduce using rule 133 (seen_factor -> empty .)
    OR              reduce using rule 133 (seen_factor -> empty .)
    SEMI_COLON      reduce using rule 133 (seen_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 133 (seen_factor -> empty .)
    COMMA           reduce using rule 133 (seen_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 133 (seen_factor -> empty .)


state 208

    (91) FACTOR -> VAR seen_var_as_factor .

    STAR            reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    SEMI_COLON      reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_BRACKET   reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)


state 209

    (100) seen_var_as_factor -> empty .

    STAR            reduce using rule 100 (seen_var_as_factor -> empty .)
    FWD_SLASH       reduce using rule 100 (seen_var_as_factor -> empty .)
    PLUS            reduce using rule 100 (seen_var_as_factor -> empty .)
    MINUS           reduce using rule 100 (seen_var_as_factor -> empty .)
    BIGGER          reduce using rule 100 (seen_var_as_factor -> empty .)
    BIGGER_EQ       reduce using rule 100 (seen_var_as_factor -> empty .)
    SMALLER         reduce using rule 100 (seen_var_as_factor -> empty .)
    SMALLER_EQ      reduce using rule 100 (seen_var_as_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 100 (seen_var_as_factor -> empty .)
    NOT_EQUALS      reduce using rule 100 (seen_var_as_factor -> empty .)
    AND             reduce using rule 100 (seen_var_as_factor -> empty .)
    OR              reduce using rule 100 (seen_var_as_factor -> empty .)
    SEMI_COLON      reduce using rule 100 (seen_var_as_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 100 (seen_var_as_factor -> empty .)
    COMMA           reduce using rule 100 (seen_var_as_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 100 (seen_var_as_factor -> empty .)


state 210

    (114) CLASS_INSTANCE -> NEW_KWD ID . seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (115) seen_class_id_instance -> . empty
    (180) empty -> .

    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_class_id_instance         shift and go to state 258
    empty                          shift and go to state 259

state 211

    (105) CNST -> CTE_S seen_cte_s .

    STAR            reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    BIGGER_EQ       reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    SMALLER_EQ      reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    NOT_EQUALS      reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    AND             reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    OR              reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 105 (CNST -> CTE_S seen_cte_s .)
    CLOSE_BRACKET   reduce using rule 105 (CNST -> CTE_S seen_cte_s .)


state 212

    (106) CNST -> CTE_F seen_cte_f .

    STAR            reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    BIGGER_EQ       reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    SMALLER_EQ      reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    NOT_EQUALS      reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    AND             reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    OR              reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 106 (CNST -> CTE_F seen_cte_f .)
    CLOSE_BRACKET   reduce using rule 106 (CNST -> CTE_F seen_cte_f .)


state 213

    (107) CNST -> CTE_I seen_cte_i .

    STAR            reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    BIGGER_EQ       reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    SMALLER_EQ      reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    NOT_EQUALS      reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    AND             reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    OR              reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 107 (CNST -> CTE_I seen_cte_i .)
    CLOSE_BRACKET   reduce using rule 107 (CNST -> CTE_I seen_cte_i .)


state 214

    (109) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT . seen_this_dot_operator
    (117) seen_this_dot_operator -> . empty
    (180) empty -> .

    ID              reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_this_dot_operator         shift and go to state 260
    empty                          shift and go to state 261

state 215

    (159) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 262


state 216

    (89) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 89 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 89 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 89 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 89 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 89 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 89 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 89 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 89 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 89 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 89 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 89 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 89 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 89 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 89 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 89 (FACTOR -> FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 89 (FACTOR -> FUNC_CALL .)


state 217

    (166) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    EXPRESSION                     shift and go to state 263
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 218

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (170) seen_for_kwd -> . empty
    (180) empty -> .

    EQUALS          reduce using rule 180 (empty -> .)

    seen_for_kwd                   shift and go to state 264
    empty                          shift and go to state 265

state 219

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 266


state 220

    (33) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 33 (seen_func_vars -> empty .)


state 221

    (39) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (180) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DEFINITION SYMBOL_LIST_P
    (124) ARRAY_DEFINITION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 267
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DEFINITION               shift and go to state 26

state 222

    (125) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (128) seen_array_def_dim -> . empty
    (180) empty -> .

    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    seen_array_def_dim             shift and go to state 268
    empty                          shift and go to state 71

state 223

    (111) VAR -> ID .
    (135) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (118) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (108) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (137) seen_func_call_id -> . empty
    (121) seen_array_id -> . empty
    (180) empty -> .

    COMMA           reduce using rule 111 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 111 (VAR -> ID .)
    STAR            reduce using rule 111 (VAR -> ID .)
    FWD_SLASH       reduce using rule 111 (VAR -> ID .)
    PLUS            reduce using rule 111 (VAR -> ID .)
    MINUS           reduce using rule 111 (VAR -> ID .)
    BIGGER          reduce using rule 111 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 111 (VAR -> ID .)
    SMALLER         reduce using rule 111 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 111 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 111 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 111 (VAR -> ID .)
    AND             reduce using rule 111 (VAR -> ID .)
    OR              reduce using rule 111 (VAR -> ID .)
    DOT             shift and go to state 123
    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    OPEN_BRACKET    reduce using rule 180 (empty -> .)

    seen_func_call_id              shift and go to state 122
    seen_array_id                  shift and go to state 124
    empty                          shift and go to state 125

state 224

    (135) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 269


state 225

    (138) ARG_LIST -> VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (91) FACTOR -> VAR . seen_var_as_factor
    (100) seen_var_as_factor -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)

    seen_var_as_factor             shift and go to state 270
    empty                          shift and go to state 209

state 226

    (139) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (146) seen_arg -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_arg                       shift and go to state 271
    empty                          shift and go to state 272

state 227

    (140) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (89) FACTOR -> FUNC_CALL .
    (146) seen_arg -> . empty
    (180) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 89 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 89 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 89 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 89 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 89 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 89 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 89 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 89 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 89 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 89 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 89 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 89 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 89 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 89 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 89 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 89 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 180 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 180 (empty -> .) ]

    seen_arg                       shift and go to state 273
    empty                          shift and go to state 272

state 228

    (141) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 141 (ARG_LIST -> empty .)


state 229

    (113) VAR -> CLASS_REFERENCE . VAR
    (136) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 223
    THIS_KWD        shift and go to state 107

    CLASS_REFERENCE                shift and go to state 229
    VAR                            shift and go to state 138
    FUNC_CALL                      shift and go to state 137
    ARRAY                          shift and go to state 106

state 230

    (118) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    EXPRESSION                     shift and go to state 274
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 231

    (122) seen_open_bracket -> empty .

    MINUS           reduce using rule 122 (seen_open_bracket -> empty .)
    NOT             reduce using rule 122 (seen_open_bracket -> empty .)
    OPEN_PARENTHESIS reduce using rule 122 (seen_open_bracket -> empty .)
    ID              reduce using rule 122 (seen_open_bracket -> empty .)
    NEW_KWD         reduce using rule 122 (seen_open_bracket -> empty .)
    CTE_S           reduce using rule 122 (seen_open_bracket -> empty .)
    CTE_F           reduce using rule 122 (seen_open_bracket -> empty .)
    CTE_I           reduce using rule 122 (seen_open_bracket -> empty .)
    THIS_KWD        reduce using rule 122 (seen_open_bracket -> empty .)


state 232

    (64) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals . EXPRESSION
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 157
    EXPRESSION                     shift and go to state 275
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 233

    (65) seen_equals -> empty .

    MINUS           reduce using rule 65 (seen_equals -> empty .)
    NOT             reduce using rule 65 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 65 (seen_equals -> empty .)
    ID              reduce using rule 65 (seen_equals -> empty .)
    NEW_KWD         reduce using rule 65 (seen_equals -> empty .)
    CTE_S           reduce using rule 65 (seen_equals -> empty .)
    CTE_F           reduce using rule 65 (seen_equals -> empty .)
    CTE_I           reduce using rule 65 (seen_equals -> empty .)
    THIS_KWD        reduce using rule 65 (seen_equals -> empty .)


state 234

    (150) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 150 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 150 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 235

    (23) READABLE_LIST -> VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_readable                  shift and go to state 276
    empty                          shift and go to state 277

state 236

    (121) seen_array_id -> empty .

    OPEN_BRACKET    reduce using rule 121 (seen_array_id -> empty .)


state 237

    (151) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 278


state 238

    (155) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (158) seen_printable -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_printable                 shift and go to state 279
    empty                          shift and go to state 280

state 239

    (153) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 281


state 240

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (52) seen_open_buffer -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)

    seen_open_buffer               shift and go to state 282
    empty                          shift and go to state 283

state 241

    (101) seen_var_in_io -> empty .

    COMMA           reduce using rule 101 (seen_var_in_io -> empty .)


state 242

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (54) seen_write_buffer -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)

    seen_write_buffer              shift and go to state 284
    empty                          shift and go to state 285

state 243

    (75) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    EXP                            shift and go to state 149
    EXPRESSION                     shift and go to state 286
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 244

    (77) seen_comp_op -> empty .

    MINUS           reduce using rule 77 (seen_comp_op -> empty .)
    NOT             reduce using rule 77 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 77 (seen_comp_op -> empty .)
    ID              reduce using rule 77 (seen_comp_op -> empty .)
    NEW_KWD         reduce using rule 77 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 77 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 77 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 77 (seen_comp_op -> empty .)
    THIS_KWD        reduce using rule 77 (seen_comp_op -> empty .)


state 245

    (86) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 287


state 246

    (66) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 66 (EXP -> TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 66 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 66 (EXP -> TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 66 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 66 (EXP -> TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 66 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 66 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 66 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 66 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 66 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 66 (EXP -> TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 66 (EXP -> TERM seen_term EXP_P .)


state 247

    (70) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (73) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 73 (seen_term_op -> .)
    NOT             reduce using rule 73 (seen_term_op -> .)
    MINUS           reduce using rule 73 (seen_term_op -> .)
    ID              reduce using rule 73 (seen_term_op -> .)
    NEW_KWD         reduce using rule 73 (seen_term_op -> .)
    CTE_S           reduce using rule 73 (seen_term_op -> .)
    CTE_F           reduce using rule 73 (seen_term_op -> .)
    CTE_I           reduce using rule 73 (seen_term_op -> .)
    THIS_KWD        reduce using rule 73 (seen_term_op -> .)

    seen_term_op                   shift and go to state 288

state 248

    (71) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (73) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 73 (seen_term_op -> .)
    NOT             reduce using rule 73 (seen_term_op -> .)
    MINUS           reduce using rule 73 (seen_term_op -> .)
    ID              reduce using rule 73 (seen_term_op -> .)
    NEW_KWD         reduce using rule 73 (seen_term_op -> .)
    CTE_S           reduce using rule 73 (seen_term_op -> .)
    CTE_F           reduce using rule 73 (seen_term_op -> .)
    CTE_I           reduce using rule 73 (seen_term_op -> .)
    THIS_KWD        reduce using rule 73 (seen_term_op -> .)

    seen_term_op                   shift and go to state 289

state 249

    (72) EXP_P -> empty .

    BIGGER          reduce using rule 72 (EXP_P -> empty .)
    BIGGER_EQ       reduce using rule 72 (EXP_P -> empty .)
    SMALLER         reduce using rule 72 (EXP_P -> empty .)
    SMALLER_EQ      reduce using rule 72 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 72 (EXP_P -> empty .)
    NOT_EQUALS      reduce using rule 72 (EXP_P -> empty .)
    AND             reduce using rule 72 (EXP_P -> empty .)
    OR              reduce using rule 72 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 72 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 72 (EXP_P -> empty .)
    COMMA           reduce using rule 72 (EXP_P -> empty .)
    CLOSE_BRACKET   reduce using rule 72 (EXP_P -> empty .)


state 250

    (67) EXP -> MINUS seen_unary_minus EXP . pop_unary_minus
    (95) pop_unary_minus -> . empty
    (180) empty -> .

    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    pop_unary_minus                shift and go to state 290
    empty                          shift and go to state 291

state 251

    (88) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (129) TERM -> FACTOR . seen_factor TERM_P
    (95) pop_unary_minus -> . empty
    (133) seen_factor -> . empty
    (180) empty -> .

    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    pop_unary_minus                shift and go to state 292
    seen_factor                    shift and go to state 206
    empty                          shift and go to state 293

state 252

    (68) EXP -> NOT seen_not EXP . pop_not
    (93) pop_not -> . empty
    (180) empty -> .

    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    pop_not                        shift and go to state 294
    empty                          shift and go to state 295

state 253

    (87) FACTOR -> NOT seen_not FACTOR . pop_not
    (129) TERM -> FACTOR . seen_factor TERM_P
    (93) pop_not -> . empty
    (133) seen_factor -> . empty
    (180) empty -> .

    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    pop_not                        shift and go to state 296
    seen_factor                    shift and go to state 206
    empty                          shift and go to state 297

state 254

    (129) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 129 (TERM -> FACTOR seen_factor TERM_P .)


state 255

    (130) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (134) seen_factor_op -> . empty
    (180) empty -> .

    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    NOT             reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    NEW_KWD         reduce using rule 180 (empty -> .)
    CTE_S           reduce using rule 180 (empty -> .)
    CTE_F           reduce using rule 180 (empty -> .)
    CTE_I           reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_factor_op                 shift and go to state 298
    empty                          shift and go to state 299

state 256

    (131) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (134) seen_factor_op -> . empty
    (180) empty -> .

    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    NOT             reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    NEW_KWD         reduce using rule 180 (empty -> .)
    CTE_S           reduce using rule 180 (empty -> .)
    CTE_F           reduce using rule 180 (empty -> .)
    CTE_I           reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_factor_op                 shift and go to state 300
    empty                          shift and go to state 299

state 257

    (132) TERM_P -> empty .

    PLUS            reduce using rule 132 (TERM_P -> empty .)
    MINUS           reduce using rule 132 (TERM_P -> empty .)
    BIGGER          reduce using rule 132 (TERM_P -> empty .)
    BIGGER_EQ       reduce using rule 132 (TERM_P -> empty .)
    SMALLER         reduce using rule 132 (TERM_P -> empty .)
    SMALLER_EQ      reduce using rule 132 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 132 (TERM_P -> empty .)
    NOT_EQUALS      reduce using rule 132 (TERM_P -> empty .)
    AND             reduce using rule 132 (TERM_P -> empty .)
    OR              reduce using rule 132 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 132 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 132 (TERM_P -> empty .)
    COMMA           reduce using rule 132 (TERM_P -> empty .)
    CLOSE_BRACKET   reduce using rule 132 (TERM_P -> empty .)


state 258

    (114) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 301


state 259

    (115) seen_class_id_instance -> empty .

    OPEN_PARENTHESIS reduce using rule 115 (seen_class_id_instance -> empty .)


state 260

    (109) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .

    ID              reduce using rule 109 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)
    THIS_KWD        reduce using rule 109 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)


state 261

    (117) seen_this_dot_operator -> empty .

    ID              reduce using rule 117 (seen_this_dot_operator -> empty .)
    THIS_KWD        reduce using rule 117 (seen_this_dot_operator -> empty .)


state 262

    (159) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (162) seen_if_kwd -> . empty
    (180) empty -> .

    OPEN_CURLY      reduce using rule 180 (empty -> .)

    seen_if_kwd                    shift and go to state 302
    empty                          shift and go to state 303

state 263

    (166) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 304


state 264

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 305


state 265

    (170) seen_for_kwd -> empty .

    EQUALS          reduce using rule 170 (seen_for_kwd -> empty .)


state 266

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (180) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (150) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (151) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (153) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (147) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (148) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (149) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (159) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (164) REPETITION -> . CONDITIONAL_REP
    (165) REPETITION -> . UNCONDITIONAL_REP
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (166) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (169) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 98
    PRINT_KWD       shift and go to state 99
    PRINTLN_KWD     shift and go to state 100
    OPEN_KWD        shift and go to state 101
    WRITE_KWD       shift and go to state 102
    RETURN_KWD      shift and go to state 105
    THIS_KWD        shift and go to state 107
    IF_KWD          shift and go to state 108
    WHILE_KWD       shift and go to state 111
    FOR_KWD         shift and go to state 112

    STATEMENT_STAR                 shift and go to state 306
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    WRITE                          shift and go to state 93
    FLOW_CONTROL                   shift and go to state 94
    FUNC_RETURN                    shift and go to state 95
    VAR                            shift and go to state 96
    CLASS_REFERENCE                shift and go to state 97
    DECISION                       shift and go to state 103
    REPETITION                     shift and go to state 104
    ARRAY                          shift and go to state 106
    CONDITIONAL_REP                shift and go to state 109
    UNCONDITIONAL_REP              shift and go to state 110

state 267

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 307


state 268

    (125) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DEFINITION_P

    CLOSE_BRACKET   shift and go to state 308


state 269

    (135) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 135 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 270

    (138) ARG_LIST -> VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (91) FACTOR -> VAR seen_var_as_factor .
    (146) seen_arg -> . empty
    (180) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 91 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 180 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 180 (empty -> .) ]

    seen_arg                       shift and go to state 309
    empty                          shift and go to state 272

state 271

    (139) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (142) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (143) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (144) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (145) ARG_LIST_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 311
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    ARG_LIST_P                     shift and go to state 310
    empty                          shift and go to state 312

state 272

    (146) seen_arg -> empty .

    COMMA           reduce using rule 146 (seen_arg -> empty .)
    CLOSE_PARENTHESIS reduce using rule 146 (seen_arg -> empty .)


state 273

    (140) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (142) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (143) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (144) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (145) ARG_LIST_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 311
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    ARG_LIST_P                     shift and go to state 313
    empty                          shift and go to state 312

state 274

    (118) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (123) seen_array_access -> . empty
    (180) empty -> .

    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    seen_array_access              shift and go to state 314
    empty                          shift and go to state 315

state 275

    (64) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 64 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 64 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)


state 276

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 317
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    READABLE_LIST_P                shift and go to state 316
    empty                          shift and go to state 318

state 277

    (26) seen_readable -> empty .

    COMMA           reduce using rule 26 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 26 (seen_readable -> empty .)


state 278

    (151) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 151 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 151 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 279

    (155) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (156) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (157) PRINTABLE_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 320
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    PRINTABLE_P                    shift and go to state 319
    empty                          shift and go to state 321

state 280

    (158) seen_printable -> empty .

    COMMA           reduce using rule 158 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 158 (seen_printable -> empty .)


state 281

    (153) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 153 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 153 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 282

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 322


state 283

    (52) seen_open_buffer -> empty .

    COMMA           reduce using rule 52 (seen_open_buffer -> empty .)


state 284

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 323


state 285

    (54) seen_write_buffer -> empty .

    COMMA           reduce using rule 54 (seen_write_buffer -> empty .)


state 286

    (75) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (76) seen_comp -> . empty
    (180) empty -> .

    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    seen_comp                      shift and go to state 324
    empty                          shift and go to state 325

state 287

    (86) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (98) seen_close_parenthesis -> . empty
    (180) empty -> .

    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    seen_close_parenthesis         shift and go to state 326
    empty                          shift and go to state 327

state 288

    (70) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 151
    NOT             shift and go to state 329
    MINUS           shift and go to state 330
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    TERM                           shift and go to state 328
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 289

    (71) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 151
    NOT             shift and go to state 329
    MINUS           shift and go to state 330
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    TERM                           shift and go to state 331
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 290

    (67) EXP -> MINUS seen_unary_minus EXP pop_unary_minus .

    BIGGER          reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    BIGGER_EQ       reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER         reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER_EQ      reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    NOT_EQUALS      reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    AND             reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    OR              reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SEMI_COLON      reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    COMMA           reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 67 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)


state 291

    (95) pop_unary_minus -> empty .

    BIGGER          reduce using rule 95 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 95 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 95 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 95 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 95 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 95 (pop_unary_minus -> empty .)
    AND             reduce using rule 95 (pop_unary_minus -> empty .)
    OR              reduce using rule 95 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 95 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 95 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 95 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 95 (pop_unary_minus -> empty .)
    STAR            reduce using rule 95 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 95 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 95 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 95 (pop_unary_minus -> empty .)


state 292

    (88) FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .

    STAR            reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    FWD_SLASH       reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    PLUS            reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    MINUS           reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER          reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER_EQ       reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER         reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER_EQ      reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    NOT_EQUALS      reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    AND             reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    OR              reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SEMI_COLON      reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    COMMA           reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 88 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)


state 293

    (95) pop_unary_minus -> empty .
    (133) seen_factor -> empty .

  ! reduce/reduce conflict for STAR resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 95 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 95 (pop_unary_minus -> empty .)
    STAR            reduce using rule 95 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 95 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 95 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 95 (pop_unary_minus -> empty .)
    BIGGER          reduce using rule 95 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 95 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 95 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 95 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 95 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 95 (pop_unary_minus -> empty .)
    AND             reduce using rule 95 (pop_unary_minus -> empty .)
    OR              reduce using rule 95 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 95 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 95 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 95 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 95 (pop_unary_minus -> empty .)

  ! STAR            [ reduce using rule 133 (seen_factor -> empty .) ]
  ! FWD_SLASH       [ reduce using rule 133 (seen_factor -> empty .) ]
  ! PLUS            [ reduce using rule 133 (seen_factor -> empty .) ]
  ! MINUS           [ reduce using rule 133 (seen_factor -> empty .) ]
  ! BIGGER          [ reduce using rule 133 (seen_factor -> empty .) ]
  ! BIGGER_EQ       [ reduce using rule 133 (seen_factor -> empty .) ]
  ! SMALLER         [ reduce using rule 133 (seen_factor -> empty .) ]
  ! SMALLER_EQ      [ reduce using rule 133 (seen_factor -> empty .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 133 (seen_factor -> empty .) ]
  ! NOT_EQUALS      [ reduce using rule 133 (seen_factor -> empty .) ]
  ! AND             [ reduce using rule 133 (seen_factor -> empty .) ]
  ! OR              [ reduce using rule 133 (seen_factor -> empty .) ]
  ! SEMI_COLON      [ reduce using rule 133 (seen_factor -> empty .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 133 (seen_factor -> empty .) ]
  ! COMMA           [ reduce using rule 133 (seen_factor -> empty .) ]
  ! CLOSE_BRACKET   [ reduce using rule 133 (seen_factor -> empty .) ]


state 294

    (68) EXP -> NOT seen_not EXP pop_not .

    BIGGER          reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)
    BIGGER_EQ       reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER         reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER_EQ      reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)
    DOUBLE_EQUALS   reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)
    NOT_EQUALS      reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)
    AND             reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)
    OR              reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)
    SEMI_COLON      reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)
    CLOSE_PARENTHESIS reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)
    COMMA           reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)
    CLOSE_BRACKET   reduce using rule 68 (EXP -> NOT seen_not EXP pop_not .)


state 295

    (93) pop_not -> empty .

    BIGGER          reduce using rule 93 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 93 (pop_not -> empty .)
    SMALLER         reduce using rule 93 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 93 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 93 (pop_not -> empty .)
    NOT_EQUALS      reduce using rule 93 (pop_not -> empty .)
    AND             reduce using rule 93 (pop_not -> empty .)
    OR              reduce using rule 93 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 93 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 93 (pop_not -> empty .)
    COMMA           reduce using rule 93 (pop_not -> empty .)
    CLOSE_BRACKET   reduce using rule 93 (pop_not -> empty .)
    STAR            reduce using rule 93 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 93 (pop_not -> empty .)
    PLUS            reduce using rule 93 (pop_not -> empty .)
    MINUS           reduce using rule 93 (pop_not -> empty .)


state 296

    (87) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER_EQ       reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER_EQ      reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    NOT_EQUALS      reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_BRACKET   reduce using rule 87 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 297

    (93) pop_not -> empty .
    (133) seen_factor -> empty .

  ! reduce/reduce conflict for STAR resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for BIGGER resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for SMALLER resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 93 (pop_not -> empty .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 93 (pop_not -> empty .)
    STAR            reduce using rule 93 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 93 (pop_not -> empty .)
    PLUS            reduce using rule 93 (pop_not -> empty .)
    MINUS           reduce using rule 93 (pop_not -> empty .)
    BIGGER          reduce using rule 93 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 93 (pop_not -> empty .)
    SMALLER         reduce using rule 93 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 93 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 93 (pop_not -> empty .)
    NOT_EQUALS      reduce using rule 93 (pop_not -> empty .)
    AND             reduce using rule 93 (pop_not -> empty .)
    OR              reduce using rule 93 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 93 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 93 (pop_not -> empty .)
    COMMA           reduce using rule 93 (pop_not -> empty .)
    CLOSE_BRACKET   reduce using rule 93 (pop_not -> empty .)

  ! STAR            [ reduce using rule 133 (seen_factor -> empty .) ]
  ! FWD_SLASH       [ reduce using rule 133 (seen_factor -> empty .) ]
  ! PLUS            [ reduce using rule 133 (seen_factor -> empty .) ]
  ! MINUS           [ reduce using rule 133 (seen_factor -> empty .) ]
  ! BIGGER          [ reduce using rule 133 (seen_factor -> empty .) ]
  ! BIGGER_EQ       [ reduce using rule 133 (seen_factor -> empty .) ]
  ! SMALLER         [ reduce using rule 133 (seen_factor -> empty .) ]
  ! SMALLER_EQ      [ reduce using rule 133 (seen_factor -> empty .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 133 (seen_factor -> empty .) ]
  ! NOT_EQUALS      [ reduce using rule 133 (seen_factor -> empty .) ]
  ! AND             [ reduce using rule 133 (seen_factor -> empty .) ]
  ! OR              [ reduce using rule 133 (seen_factor -> empty .) ]
  ! SEMI_COLON      [ reduce using rule 133 (seen_factor -> empty .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 133 (seen_factor -> empty .) ]
  ! COMMA           [ reduce using rule 133 (seen_factor -> empty .) ]
  ! CLOSE_BRACKET   [ reduce using rule 133 (seen_factor -> empty .) ]


state 298

    (130) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 151
    NOT             shift and go to state 329
    MINUS           shift and go to state 330
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    FACTOR                         shift and go to state 332
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 299

    (134) seen_factor_op -> empty .

    OPEN_PARENTHESIS reduce using rule 134 (seen_factor_op -> empty .)
    NOT             reduce using rule 134 (seen_factor_op -> empty .)
    MINUS           reduce using rule 134 (seen_factor_op -> empty .)
    ID              reduce using rule 134 (seen_factor_op -> empty .)
    NEW_KWD         reduce using rule 134 (seen_factor_op -> empty .)
    CTE_S           reduce using rule 134 (seen_factor_op -> empty .)
    CTE_F           reduce using rule 134 (seen_factor_op -> empty .)
    CTE_I           reduce using rule 134 (seen_factor_op -> empty .)
    THIS_KWD        reduce using rule 134 (seen_factor_op -> empty .)


state 300

    (131) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 151
    NOT             shift and go to state 329
    MINUS           shift and go to state 330
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    FACTOR                         shift and go to state 333
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 301

    (114) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 334


state 302

    (159) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 335


state 303

    (162) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 162 (seen_if_kwd -> empty .)


state 304

    (166) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (168) seen_while_exp -> . empty
    (180) empty -> .

    OPEN_CURLY      reduce using rule 180 (empty -> .)

    seen_while_exp                 shift and go to state 336
    empty                          shift and go to state 337

state 305

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 157
    EXPRESSION                     shift and go to state 338
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 306

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 339


state 307

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 39 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 308

    (125) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DEFINITION_P
    (125) ARRAY_DEFINITION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P
    (126) ARRAY_DEFINITION_P -> . empty
    (180) empty -> .

    OPEN_BRACKET    shift and go to state 119
    COMMA           reduce using rule 180 (empty -> .)
    COLON           reduce using rule 180 (empty -> .)

    ARRAY_DEFINITION_P             shift and go to state 340
    empty                          shift and go to state 121

state 309

    (138) ARG_LIST -> VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (142) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (143) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (144) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (145) ARG_LIST_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 311
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    ARG_LIST_P                     shift and go to state 341
    empty                          shift and go to state 312

state 310

    (139) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 139 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 311

    (142) ARG_LIST_P -> COMMA . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (143) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (144) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 223
    THIS_KWD        shift and go to state 107
    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162

    VAR                            shift and go to state 342
    EXPRESSION                     shift and go to state 343
    FUNC_CALL                      shift and go to state 344
    ARRAY                          shift and go to state 106
    CLASS_REFERENCE                shift and go to state 229
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    CLASS_INSTANCE                 shift and go to state 156
    CNST                           shift and go to state 158

state 312

    (145) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 145 (ARG_LIST_P -> empty .)


state 313

    (140) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 140 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 314

    (118) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 345


state 315

    (123) seen_array_access -> empty .

    CLOSE_BRACKET   reduce using rule 123 (seen_array_access -> empty .)


state 316

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 23 (READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 317

    (24) READABLE_LIST_P -> COMMA . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 182
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 346
    ARRAY                          shift and go to state 106
    CLASS_REFERENCE                shift and go to state 183

state 318

    (25) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 25 (READABLE_LIST_P -> empty .)


state 319

    (155) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 155 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 320

    (156) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    EXPRESSION                     shift and go to state 347
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 321

    (157) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 157 (PRINTABLE_P -> empty .)


state 322

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 157
    EXPRESSION                     shift and go to state 348
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 323

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 157
    EXPRESSION                     shift and go to state 349
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 324

    (75) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    SEMI_COLON      reduce using rule 75 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 75 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    COMMA           reduce using rule 75 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_BRACKET   reduce using rule 75 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 325

    (76) seen_comp -> empty .

    SEMI_COLON      reduce using rule 76 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 76 (seen_comp -> empty .)
    COMMA           reduce using rule 76 (seen_comp -> empty .)
    CLOSE_BRACKET   reduce using rule 76 (seen_comp -> empty .)


state 326

    (86) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    NOT_EQUALS      reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 86 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 327

    (98) seen_close_parenthesis -> empty .

    STAR            reduce using rule 98 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 98 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 98 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 98 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 98 (seen_close_parenthesis -> empty .)
    BIGGER_EQ       reduce using rule 98 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 98 (seen_close_parenthesis -> empty .)
    SMALLER_EQ      reduce using rule 98 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 98 (seen_close_parenthesis -> empty .)
    NOT_EQUALS      reduce using rule 98 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 98 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 98 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 98 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 98 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 98 (seen_close_parenthesis -> empty .)
    CLOSE_BRACKET   reduce using rule 98 (seen_close_parenthesis -> empty .)


state 328

    (70) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (69) seen_term -> .

    PLUS            reduce using rule 69 (seen_term -> .)
    MINUS           reduce using rule 69 (seen_term -> .)
    BIGGER          reduce using rule 69 (seen_term -> .)
    BIGGER_EQ       reduce using rule 69 (seen_term -> .)
    SMALLER         reduce using rule 69 (seen_term -> .)
    SMALLER_EQ      reduce using rule 69 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 69 (seen_term -> .)
    NOT_EQUALS      reduce using rule 69 (seen_term -> .)
    AND             reduce using rule 69 (seen_term -> .)
    OR              reduce using rule 69 (seen_term -> .)
    SEMI_COLON      reduce using rule 69 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 69 (seen_term -> .)
    COMMA           reduce using rule 69 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 69 (seen_term -> .)

    seen_term                      shift and go to state 350

state 329

    (87) FACTOR -> NOT . seen_not FACTOR pop_not
    (94) seen_not -> . empty
    (180) empty -> .

    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    NOT             reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    NEW_KWD         reduce using rule 180 (empty -> .)
    CTE_S           reduce using rule 180 (empty -> .)
    CTE_F           reduce using rule 180 (empty -> .)
    CTE_I           reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_not                       shift and go to state 351
    empty                          shift and go to state 205

state 330

    (88) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (96) seen_unary_minus -> . empty
    (180) empty -> .

    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    NOT             reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    NEW_KWD         reduce using rule 180 (empty -> .)
    CTE_S           reduce using rule 180 (empty -> .)
    CTE_F           reduce using rule 180 (empty -> .)
    CTE_I           reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_unary_minus               shift and go to state 352
    empty                          shift and go to state 203

state 331

    (71) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (69) seen_term -> .

    PLUS            reduce using rule 69 (seen_term -> .)
    MINUS           reduce using rule 69 (seen_term -> .)
    BIGGER          reduce using rule 69 (seen_term -> .)
    BIGGER_EQ       reduce using rule 69 (seen_term -> .)
    SMALLER         reduce using rule 69 (seen_term -> .)
    SMALLER_EQ      reduce using rule 69 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 69 (seen_term -> .)
    NOT_EQUALS      reduce using rule 69 (seen_term -> .)
    AND             reduce using rule 69 (seen_term -> .)
    OR              reduce using rule 69 (seen_term -> .)
    SEMI_COLON      reduce using rule 69 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 69 (seen_term -> .)
    COMMA           reduce using rule 69 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 69 (seen_term -> .)

    seen_term                      shift and go to state 353

state 332

    (130) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (133) seen_factor -> . empty
    (180) empty -> .

    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    seen_factor                    shift and go to state 354
    empty                          shift and go to state 207

state 333

    (131) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (133) seen_factor -> . empty
    (180) empty -> .

    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    seen_factor                    shift and go to state 355
    empty                          shift and go to state 207

state 334

    (114) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    STAR            reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    AND             reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OR              reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMI_COLON      reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 114 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 335

    (159) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (180) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (150) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (151) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (153) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (147) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (148) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (149) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (159) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (164) REPETITION -> . CONDITIONAL_REP
    (165) REPETITION -> . UNCONDITIONAL_REP
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (166) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (169) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 98
    PRINT_KWD       shift and go to state 99
    PRINTLN_KWD     shift and go to state 100
    OPEN_KWD        shift and go to state 101
    WRITE_KWD       shift and go to state 102
    RETURN_KWD      shift and go to state 105
    THIS_KWD        shift and go to state 107
    IF_KWD          shift and go to state 108
    WHILE_KWD       shift and go to state 111
    FOR_KWD         shift and go to state 112

    STATEMENT_STAR                 shift and go to state 356
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    WRITE                          shift and go to state 93
    FLOW_CONTROL                   shift and go to state 94
    FUNC_RETURN                    shift and go to state 95
    VAR                            shift and go to state 96
    CLASS_REFERENCE                shift and go to state 97
    DECISION                       shift and go to state 103
    REPETITION                     shift and go to state 104
    ARRAY                          shift and go to state 106
    CONDITIONAL_REP                shift and go to state 109
    UNCONDITIONAL_REP              shift and go to state 110

state 336

    (166) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 357


state 337

    (168) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 168 (seen_while_exp -> empty .)


state 338

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (172) seen_for_start_exp -> . empty
    (180) empty -> .

    SEMI_COLON      reduce using rule 180 (empty -> .)

    seen_for_start_exp             shift and go to state 358
    empty                          shift and go to state 359

state 339

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLASS_KWD       reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    ID              reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 340

    (125) ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .

    COMMA           reduce using rule 125 (ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)
    COLON           reduce using rule 125 (ARRAY_DEFINITION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DEFINITION_P .)


state 341

    (138) ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 138 (ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 342

    (142) ARG_LIST_P -> COMMA VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (91) FACTOR -> VAR . seen_var_as_factor
    (100) seen_var_as_factor -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)

    seen_var_as_factor             shift and go to state 360
    empty                          shift and go to state 209

state 343

    (143) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (146) seen_arg -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_arg                       shift and go to state 361
    empty                          shift and go to state 272

state 344

    (144) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (89) FACTOR -> FUNC_CALL .
    (146) seen_arg -> . empty
    (180) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 89 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 89 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 89 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 89 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 89 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 89 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 89 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 89 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 89 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 89 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 89 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 89 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 89 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 89 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 89 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 89 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 180 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 180 (empty -> .) ]

    seen_arg                       shift and go to state 362
    empty                          shift and go to state 272

state 345

    (118) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (119) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (120) ARRAY_P -> . empty
    (180) empty -> .

    OPEN_BRACKET    shift and go to state 363
    EQUALS          reduce using rule 180 (empty -> .)
    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    ARRAY_P                        shift and go to state 364
    empty                          shift and go to state 365

state 346

    (24) READABLE_LIST_P -> COMMA VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (99) seen_var_in_assign -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_var_in_assign             shift and go to state 366
    empty                          shift and go to state 136

state 347

    (156) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (158) seen_printable -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_printable                 shift and go to state 367
    empty                          shift and go to state 280

state 348

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) seen_file_path -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)

    seen_file_path                 shift and go to state 368
    empty                          shift and go to state 369

state 349

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) seen_file_path -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)

    seen_file_path                 shift and go to state 370
    empty                          shift and go to state 369

state 350

    (70) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (70) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (71) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (72) EXP_P -> . empty
    (180) empty -> .

    PLUS            shift and go to state 247
    MINUS           shift and go to state 248
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    EXP_P                          shift and go to state 371
    empty                          shift and go to state 249

state 351

    (87) FACTOR -> NOT seen_not . FACTOR pop_not
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 151
    NOT             shift and go to state 329
    MINUS           shift and go to state 330
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    FACTOR                         shift and go to state 372
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 352

    (88) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_PARENTHESIS shift and go to state 151
    NOT             shift and go to state 329
    MINUS           shift and go to state 330
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    FACTOR                         shift and go to state 373
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 353

    (71) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (70) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (71) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (72) EXP_P -> . empty
    (180) empty -> .

    PLUS            shift and go to state 247
    MINUS           shift and go to state 248
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    EXP_P                          shift and go to state 374
    empty                          shift and go to state 249

state 354

    (130) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (130) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (131) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (132) TERM_P -> . empty
    (180) empty -> .

    STAR            shift and go to state 255
    FWD_SLASH       shift and go to state 256
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    TERM_P                         shift and go to state 375
    empty                          shift and go to state 257

state 355

    (131) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (130) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (131) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (132) TERM_P -> . empty
    (180) empty -> .

    STAR            shift and go to state 255
    FWD_SLASH       shift and go to state 256
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    TERM_P                         shift and go to state 376
    empty                          shift and go to state 257

state 356

    (159) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 377


state 357

    (166) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (180) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (150) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (151) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (153) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (147) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (148) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (149) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (159) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (164) REPETITION -> . CONDITIONAL_REP
    (165) REPETITION -> . UNCONDITIONAL_REP
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (166) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (169) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 98
    PRINT_KWD       shift and go to state 99
    PRINTLN_KWD     shift and go to state 100
    OPEN_KWD        shift and go to state 101
    WRITE_KWD       shift and go to state 102
    RETURN_KWD      shift and go to state 105
    THIS_KWD        shift and go to state 107
    IF_KWD          shift and go to state 108
    WHILE_KWD       shift and go to state 111
    FOR_KWD         shift and go to state 112

    STATEMENT_STAR                 shift and go to state 378
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    WRITE                          shift and go to state 93
    FLOW_CONTROL                   shift and go to state 94
    FUNC_RETURN                    shift and go to state 95
    VAR                            shift and go to state 96
    CLASS_REFERENCE                shift and go to state 97
    DECISION                       shift and go to state 103
    REPETITION                     shift and go to state 104
    ARRAY                          shift and go to state 106
    CONDITIONAL_REP                shift and go to state 109
    UNCONDITIONAL_REP              shift and go to state 110

state 358

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 379


state 359

    (172) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 172 (seen_for_start_exp -> empty .)


state 360

    (142) ARG_LIST_P -> COMMA VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (91) FACTOR -> VAR seen_var_as_factor .
    (146) seen_arg -> . empty
    (180) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 91 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 91 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 180 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 180 (empty -> .) ]

    seen_arg                       shift and go to state 380
    empty                          shift and go to state 272

state 361

    (143) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (142) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (143) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (144) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (145) ARG_LIST_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 311
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    ARG_LIST_P                     shift and go to state 381
    empty                          shift and go to state 312

state 362

    (144) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (142) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (143) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (144) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (145) ARG_LIST_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 311
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    ARG_LIST_P                     shift and go to state 382
    empty                          shift and go to state 312

state 363

    (119) ARRAY_P -> OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (122) seen_open_bracket -> . empty
    (180) empty -> .

    MINUS           reduce using rule 180 (empty -> .)
    NOT             reduce using rule 180 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 180 (empty -> .)
    ID              reduce using rule 180 (empty -> .)
    NEW_KWD         reduce using rule 180 (empty -> .)
    CTE_S           reduce using rule 180 (empty -> .)
    CTE_F           reduce using rule 180 (empty -> .)
    CTE_I           reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)

    seen_open_bracket              shift and go to state 383
    empty                          shift and go to state 231

state 364

    (118) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 118 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 365

    (120) ARRAY_P -> empty .

    EQUALS          reduce using rule 120 (ARRAY_P -> empty .)
    STAR            reduce using rule 120 (ARRAY_P -> empty .)
    FWD_SLASH       reduce using rule 120 (ARRAY_P -> empty .)
    PLUS            reduce using rule 120 (ARRAY_P -> empty .)
    MINUS           reduce using rule 120 (ARRAY_P -> empty .)
    BIGGER          reduce using rule 120 (ARRAY_P -> empty .)
    BIGGER_EQ       reduce using rule 120 (ARRAY_P -> empty .)
    SMALLER         reduce using rule 120 (ARRAY_P -> empty .)
    SMALLER_EQ      reduce using rule 120 (ARRAY_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 120 (ARRAY_P -> empty .)
    NOT_EQUALS      reduce using rule 120 (ARRAY_P -> empty .)
    AND             reduce using rule 120 (ARRAY_P -> empty .)
    OR              reduce using rule 120 (ARRAY_P -> empty .)
    SEMI_COLON      reduce using rule 120 (ARRAY_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 120 (ARRAY_P -> empty .)
    COMMA           reduce using rule 120 (ARRAY_P -> empty .)
    CLOSE_BRACKET   reduce using rule 120 (ARRAY_P -> empty .)


state 366

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (180) empty -> .

    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_readable                  shift and go to state 384
    empty                          shift and go to state 277

state 367

    (156) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (156) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (157) PRINTABLE_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 320
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    PRINTABLE_P                    shift and go to state 385
    empty                          shift and go to state 321

state 368

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 386


state 369

    (55) seen_file_path -> empty .

    COMMA           reduce using rule 55 (seen_file_path -> empty .)


state 370

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 387


state 371

    (70) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 70 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 372

    (87) FACTOR -> NOT seen_not FACTOR . pop_not
    (93) pop_not -> . empty
    (180) empty -> .

    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    pop_not                        shift and go to state 296
    empty                          shift and go to state 295

state 373

    (88) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (95) pop_unary_minus -> . empty
    (180) empty -> .

    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    pop_unary_minus                shift and go to state 292
    empty                          shift and go to state 291

state 374

    (71) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 71 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 375

    (130) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 130 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 376

    (131) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 131 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 377

    (159) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (160) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (161) DECISION_P -> . empty
    (180) empty -> .

    ELSE_KWD        shift and go to state 389
    ID              reduce using rule 180 (empty -> .)
    READ_KWD        reduce using rule 180 (empty -> .)
    PRINT_KWD       reduce using rule 180 (empty -> .)
    PRINTLN_KWD     reduce using rule 180 (empty -> .)
    OPEN_KWD        reduce using rule 180 (empty -> .)
    WRITE_KWD       reduce using rule 180 (empty -> .)
    RETURN_KWD      reduce using rule 180 (empty -> .)
    THIS_KWD        reduce using rule 180 (empty -> .)
    IF_KWD          reduce using rule 180 (empty -> .)
    WHILE_KWD       reduce using rule 180 (empty -> .)
    FOR_KWD         reduce using rule 180 (empty -> .)
    CLOSE_CURLY     reduce using rule 180 (empty -> .)

    DECISION_P                     shift and go to state 388
    empty                          shift and go to state 390

state 378

    (166) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 391


state 379

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 157
    EXPRESSION                     shift and go to state 392
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 380

    (142) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (142) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (143) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (144) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (145) ARG_LIST_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 311
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    ARG_LIST_P                     shift and go to state 393
    empty                          shift and go to state 312

state 381

    (143) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 143 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 382

    (144) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 144 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 383

    (119) ARRAY_P -> OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    EXPRESSION                     shift and go to state 394
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    VAR                            shift and go to state 157
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 384

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (180) empty -> .

    COMMA           shift and go to state 317
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    READABLE_LIST_P                shift and go to state 395
    empty                          shift and go to state 318

state 385

    (156) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 156 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 386

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 157
    EXPRESSION                     shift and go to state 396
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 387

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (74) EXPRESSION -> . EXP
    (75) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (66) EXP -> . TERM seen_term EXP_P
    (67) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (68) EXP -> . NOT seen_not EXP pop_not
    (129) TERM -> . FACTOR seen_factor TERM_P
    (86) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) FACTOR -> . NOT seen_not FACTOR pop_not
    (88) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (89) FACTOR -> . FUNC_CALL
    (90) FACTOR -> . CLASS_INSTANCE
    (91) FACTOR -> . VAR seen_var_as_factor
    (92) FACTOR -> . CNST
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (114) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (105) CNST -> . CTE_S seen_cte_s
    (106) CNST -> . CTE_F seen_cte_f
    (107) CNST -> . CTE_I seen_cte_i
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    MINUS           shift and go to state 153
    NOT             shift and go to state 154
    OPEN_PARENTHESIS shift and go to state 151
    ID              shift and go to state 83
    NEW_KWD         shift and go to state 159
    CTE_S           shift and go to state 160
    CTE_F           shift and go to state 161
    CTE_I           shift and go to state 162
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 157
    EXPRESSION                     shift and go to state 397
    EXP                            shift and go to state 149
    TERM                           shift and go to state 152
    FACTOR                         shift and go to state 155
    FUNC_CALL                      shift and go to state 216
    CLASS_INSTANCE                 shift and go to state 156
    CNST                           shift and go to state 158
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 388

    (159) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINT_KWD       reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINTLN_KWD     reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    OPEN_KWD        reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    RETURN_KWD      reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    THIS_KWD        reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 159 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 389

    (160) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (163) seen_else_kwd -> . empty
    (180) empty -> .

    OPEN_CURLY      reduce using rule 180 (empty -> .)

    seen_else_kwd                  shift and go to state 398
    empty                          shift and go to state 399

state 390

    (161) DECISION_P -> empty .

    ID              reduce using rule 161 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 161 (DECISION_P -> empty .)
    PRINT_KWD       reduce using rule 161 (DECISION_P -> empty .)
    PRINTLN_KWD     reduce using rule 161 (DECISION_P -> empty .)
    OPEN_KWD        reduce using rule 161 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 161 (DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 161 (DECISION_P -> empty .)
    THIS_KWD        reduce using rule 161 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 161 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 161 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 161 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 161 (DECISION_P -> empty .)


state 391

    (166) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 166 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 392

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (173) seen_for_end_exp -> . empty
    (180) empty -> .

    SEMI_COLON      reduce using rule 180 (empty -> .)

    seen_for_end_exp               shift and go to state 400
    empty                          shift and go to state 401

state 393

    (142) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 142 (ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 394

    (119) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (123) seen_array_access -> . empty
    (180) empty -> .

    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    seen_array_access              shift and go to state 402
    empty                          shift and go to state 315

state 395

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 24 (READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 396

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (56) seen_separator -> . empty
    (180) empty -> .

    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_separator                 shift and go to state 403
    empty                          shift and go to state 404

state 397

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (56) seen_separator -> . empty
    (180) empty -> .

    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_separator                 shift and go to state 405
    empty                          shift and go to state 404

state 398

    (160) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 406


state 399

    (163) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 163 (seen_else_kwd -> empty .)


state 400

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 407


state 401

    (173) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 173 (seen_for_end_exp -> empty .)


state 402

    (119) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 408


state 403

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 409


state 404

    (56) seen_separator -> empty .

    CLOSE_PARENTHESIS reduce using rule 56 (seen_separator -> empty .)


state 405

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 410


state 406

    (160) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (180) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (150) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (151) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (153) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (147) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (148) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (149) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (159) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (164) REPETITION -> . CONDITIONAL_REP
    (165) REPETITION -> . UNCONDITIONAL_REP
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (166) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (169) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 98
    PRINT_KWD       shift and go to state 99
    PRINTLN_KWD     shift and go to state 100
    OPEN_KWD        shift and go to state 101
    WRITE_KWD       shift and go to state 102
    RETURN_KWD      shift and go to state 105
    THIS_KWD        shift and go to state 107
    IF_KWD          shift and go to state 108
    WHILE_KWD       shift and go to state 111
    FOR_KWD         shift and go to state 112

    STATEMENT_STAR                 shift and go to state 411
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    WRITE                          shift and go to state 93
    FLOW_CONTROL                   shift and go to state 94
    FUNC_RETURN                    shift and go to state 95
    VAR                            shift and go to state 96
    CLASS_REFERENCE                shift and go to state 97
    DECISION                       shift and go to state 103
    REPETITION                     shift and go to state 104
    ARRAY                          shift and go to state 106
    CONDITIONAL_REP                shift and go to state 109
    UNCONDITIONAL_REP              shift and go to state 110

state 407

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (59) FOR_INCR_STATEMENT -> . ASSIGN
    (60) FOR_INCR_STATEMENT -> . FUNC_CALL
    (61) FOR_INCR_STATEMENT -> . READ
    (62) FOR_INCR_STATEMENT -> . PRINT
    (63) FOR_INCR_STATEMENT -> . PRINTLN
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (150) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (151) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (153) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 83
    READ_KWD        shift and go to state 98
    PRINT_KWD       shift and go to state 99
    PRINTLN_KWD     shift and go to state 100
    THIS_KWD        shift and go to state 107

    VAR                            shift and go to state 96
    FOR_INCR_STATEMENT             shift and go to state 412
    ASSIGN                         shift and go to state 413
    FUNC_CALL                      shift and go to state 414
    READ                           shift and go to state 415
    PRINT                          shift and go to state 416
    PRINTLN                        shift and go to state 417
    CLASS_REFERENCE                shift and go to state 97
    ARRAY                          shift and go to state 106

state 408

    (119) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (119) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (120) ARRAY_P -> . empty
    (180) empty -> .

    OPEN_BRACKET    shift and go to state 363
    EQUALS          reduce using rule 180 (empty -> .)
    STAR            reduce using rule 180 (empty -> .)
    FWD_SLASH       reduce using rule 180 (empty -> .)
    PLUS            reduce using rule 180 (empty -> .)
    MINUS           reduce using rule 180 (empty -> .)
    BIGGER          reduce using rule 180 (empty -> .)
    BIGGER_EQ       reduce using rule 180 (empty -> .)
    SMALLER         reduce using rule 180 (empty -> .)
    SMALLER_EQ      reduce using rule 180 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 180 (empty -> .)
    NOT_EQUALS      reduce using rule 180 (empty -> .)
    AND             reduce using rule 180 (empty -> .)
    OR              reduce using rule 180 (empty -> .)
    SEMI_COLON      reduce using rule 180 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)
    COMMA           reduce using rule 180 (empty -> .)
    CLOSE_BRACKET   reduce using rule 180 (empty -> .)

    ARRAY_P                        shift and go to state 418
    empty                          shift and go to state 365

state 409

    (51) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 51 (OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 410

    (53) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 53 (WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 411

    (160) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 419


state 412

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (171) seen_for_incr_exp -> . empty
    (180) empty -> .

    CLOSE_PARENTHESIS reduce using rule 180 (empty -> .)

    seen_for_incr_exp              shift and go to state 420
    empty                          shift and go to state 421

state 413

    (59) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 59 (FOR_INCR_STATEMENT -> ASSIGN .)


state 414

    (60) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 60 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 415

    (61) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 61 (FOR_INCR_STATEMENT -> READ .)


state 416

    (62) FOR_INCR_STATEMENT -> PRINT .

    CLOSE_PARENTHESIS reduce using rule 62 (FOR_INCR_STATEMENT -> PRINT .)


state 417

    (63) FOR_INCR_STATEMENT -> PRINTLN .

    CLOSE_PARENTHESIS reduce using rule 63 (FOR_INCR_STATEMENT -> PRINTLN .)


state 418

    (119) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 119 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 419

    (160) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 160 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 420

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 422


state 421

    (171) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 171 (seen_for_incr_exp -> empty .)


state 422

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 423


state 423

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . FLOW_CONTROL
    (50) STATEMENT -> . FUNC_RETURN
    (180) empty -> .
    (64) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (135) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (136) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (150) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (151) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (153) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (51) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (53) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) FLOW_CONTROL -> . DECISION
    (58) FLOW_CONTROL -> . REPETITION
    (147) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (148) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (149) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (111) VAR -> . ID
    (112) VAR -> . ARRAY
    (113) VAR -> . CLASS_REFERENCE VAR
    (108) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (109) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (159) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (164) REPETITION -> . CONDITIONAL_REP
    (165) REPETITION -> . UNCONDITIONAL_REP
    (118) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (166) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (169) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 180 (empty -> .)
    ID              shift and go to state 83
    READ_KWD        shift and go to state 98
    PRINT_KWD       shift and go to state 99
    PRINTLN_KWD     shift and go to state 100
    OPEN_KWD        shift and go to state 101
    WRITE_KWD       shift and go to state 102
    RETURN_KWD      shift and go to state 105
    THIS_KWD        shift and go to state 107
    IF_KWD          shift and go to state 108
    WHILE_KWD       shift and go to state 111
    FOR_KWD         shift and go to state 112

    VAR                            shift and go to state 96
    STATEMENT_STAR                 shift and go to state 424
    STATEMENT                      shift and go to state 85
    empty                          shift and go to state 86
    ASSIGN                         shift and go to state 87
    FUNC_CALL                      shift and go to state 88
    READ                           shift and go to state 89
    PRINT                          shift and go to state 90
    PRINTLN                        shift and go to state 91
    OPEN                           shift and go to state 92
    WRITE                          shift and go to state 93
    FLOW_CONTROL                   shift and go to state 94
    FUNC_RETURN                    shift and go to state 95
    CLASS_REFERENCE                shift and go to state 97
    DECISION                       shift and go to state 103
    REPETITION                     shift and go to state 104
    ARRAY                          shift and go to state 106
    CONDITIONAL_REP                shift and go to state 109
    UNCONDITIONAL_REP              shift and go to state 110

state 424

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 425


state 425

    (169) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 169 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLASS_KWD in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 14 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SEMI_COLON in state 148 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (CLASS_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 227 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 227
WARNING: reduce/reduce conflict in state 270 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 270
WARNING: reduce/reduce conflict in state 293 resolved using rule (pop_unary_minus -> empty)
WARNING: rejected rule (seen_factor -> empty) in state 293
WARNING: reduce/reduce conflict in state 297 resolved using rule (pop_not -> empty)
WARNING: rejected rule (seen_factor -> empty) in state 297
WARNING: reduce/reduce conflict in state 344 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 344
WARNING: reduce/reduce conflict in state 360 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 360
