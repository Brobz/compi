Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     seen_program_id -> empty
Rule 3     seen_main_kwd -> empty
Rule 4     CLASS_STAR -> CLASS CLASS_STAR
Rule 5     CLASS_STAR -> empty
Rule 6     CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
Rule 7     CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 8     VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 9     VAR_LIST_STAR -> empty
Rule 10    VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON
Rule 11    ID_LIST -> ID ID_LIST_P
Rule 12    ID_LIST_P -> COMMA ID ID_LIST_P
Rule 13    ID_LIST_P -> empty
Rule 14    READABLE_LIST -> ID seen_readable READABLE_LIST_P
Rule 15    READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P
Rule 16    READABLE_LIST_P -> empty
Rule 17    seen_readable -> empty
Rule 18    GLOBAL_VAR -> VAR_LIST_STAR
Rule 19    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 20    FUNC_DEF_STAR -> empty
Rule 21    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 22    seen_func_id -> empty
Rule 23    seen_func_params -> empty
Rule 24    seen_func_vars -> empty
Rule 25    FUNC_PARAM -> VAR FUNC_PARAM_P
Rule 26    FUNC_PARAM -> empty
Rule 27    FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P
Rule 28    FUNC_PARAM_P -> empty
Rule 29    VAR -> ID COLON TYPE
Rule 30    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 31    FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
Rule 32    FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
Rule 33    FUNC_STATEMENT_STAR -> READ SEMI_COLON FUNC_STATEMENT_STAR
Rule 34    FUNC_STATEMENT_STAR -> WRITE SEMI_COLON FUNC_STATEMENT_STAR
Rule 35    FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
Rule 36    FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR
Rule 37    FUNC_STATEMENT_STAR -> empty
Rule 38    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 39    STATEMENT_STAR -> empty
Rule 40    STATEMENT -> ASSIGN SEMI_COLON
Rule 41    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 42    STATEMENT -> READ SEMI_COLON
Rule 43    STATEMENT -> WRITE SEMI_COLON
Rule 44    STATEMENT -> FLOW_CONTROL
Rule 45    FLOW_CONTROL -> DECISION
Rule 46    FLOW_CONTROL -> REPETITION
Rule 47    FUNC_FLOW_CONTROL -> FUNC_DECISION
Rule 48    FUNC_FLOW_CONTROL -> FUNC_REPETITION
Rule 49    FOR_INCR_STATEMENT -> ASSIGN
Rule 50    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 51    FOR_INCR_STATEMENT -> READ
Rule 52    FOR_INCR_STATEMENT -> WRITE
Rule 53    ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION
Rule 54    seen_equals -> empty
Rule 55    EXP -> TERM seen_term EXP_P
Rule 56    EXP -> NOT seen_not EXP pop_not
Rule 57    seen_term -> <empty>
Rule 58    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 59    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 60    EXP_P -> empty
Rule 61    seen_term_op -> <empty>
Rule 62    EXPRESSION -> EXP
Rule 63    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 64    seen_comp -> empty
Rule 65    seen_comp_op -> empty
Rule 66    COMP -> BIGGER
Rule 67    COMP -> BIGGER_EQ
Rule 68    COMP -> SMALLER
Rule 69    COMP -> SMALLER_EQ
Rule 70    COMP -> DOUBLE_EQUALS
Rule 71    COMP -> DIFFERENT
Rule 72    COMP -> AND
Rule 73    COMP -> OR
Rule 74    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 75    FACTOR -> NOT seen_not FACTOR pop_not
Rule 76    FACTOR -> FUNC_CALL
Rule 77    FACTOR -> ID seen_id
Rule 78    FACTOR -> CNST
Rule 79    pop_not -> empty
Rule 80    seen_not -> empty
Rule 81    seen_open_parenthesis -> empty
Rule 82    seen_close_parenthesis -> empty
Rule 83    seen_id -> <empty>
Rule 84    seen_cte_i -> <empty>
Rule 85    seen_cte_f -> <empty>
Rule 86    seen_cte_s -> <empty>
Rule 87    CNST -> CTE_S seen_cte_s
Rule 88    CNST -> CTE_F seen_cte_f
Rule 89    CNST -> CTE_I seen_cte_i
Rule 90    TERM -> FACTOR seen_factor TERM_P
Rule 91    TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 92    TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 93    TERM_P -> empty
Rule 94    seen_factor -> <empty>
Rule 95    seen_factor_op -> <empty>
Rule 96    FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 97    seen_func_call_id -> empty
Rule 98    ARG_LIST -> ID seen_arg ARG_LIST_P
Rule 99    ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 100   ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 101   ARG_LIST -> empty
Rule 102   ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P
Rule 103   ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 104   ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 105   ARG_LIST_P -> empty
Rule 106   seen_arg -> <empty>
Rule 107   FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 108   FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 109   FUNC_RETURN -> RETURN_KWD SEMI_COLON
Rule 110   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 111   WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 112   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 113   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 114   PRINTABLE_P -> empty
Rule 115   seen_printable -> empty
Rule 116   FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
Rule 117   FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 118   FUNC_DECISION_P -> empty
Rule 119   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 120   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 121   DECISION_P -> empty
Rule 122   seen_if_kwd -> empty
Rule 123   seen_else_kwd -> empty
Rule 124   FUNC_REPETITION -> FUNC_CONDITIONAL_REP
Rule 125   FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP
Rule 126   FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 127   FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
Rule 128   REPETITION -> CONDITIONAL_REP
Rule 129   REPETITION -> UNCONDITIONAL_REP
Rule 130   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 131   seen_while_kwd -> empty
Rule 132   seen_while_exp -> empty
Rule 133   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 134   seen_for_kwd -> empty
Rule 135   seen_for_incr_exp -> empty
Rule 136   seen_for_start_exp -> empty
Rule 137   seen_for_end_exp -> empty
Rule 138   TYPE -> TYPE_I
Rule 139   TYPE -> TYPE_F
Rule 140   TYPE -> TYPE_S
Rule 141   TYPE -> TYPE_B
Rule 142   TYPE -> TYPE_V
Rule 143   empty -> <empty>

Terminals, with rules where they appear

AND                  : 72
ATTR_KWD             : 7
BIGGER               : 6 66
BIGGER_EQ            : 67
CLASS_KWD            : 6
CLOSE_CURLY          : 1 6 7 21 30 116 117 119 120 126 127 130 133
CLOSE_PARENTHESIS    : 1 21 74 96 110 111 116 119 126 127 130 133
COLON                : 10 29
COMMA                : 12 15 27 102 103 104 113
CTE_F                : 88
CTE_I                : 89
CTE_S                : 87
DERIVES_KWD          : 6
DIFFERENT            : 71
DOUBLE_EQUALS        : 70
ELSE_KWD             : 117 120
EQUALS               : 53 127 133
FOR_KWD              : 127 133
FWD_SLASH            : 92
ID                   : 1 6 11 12 14 15 21 29 53 77 96 98 102 127 133
IF_KWD               : 116 119
MAIN_KWD             : 1
MINUS                : 59
NOT                  : 56 75
OPEN_CURLY           : 1 6 7 21 30 116 117 119 120 126 127 130 133
OPEN_PARENTHESIS     : 1 21 74 96 110 111 116 119 126 127 130 133
OR                   : 73
PLUS                 : 58
PROGRAM_KWD          : 1
READ_KWD             : 110
RETURN_KWD           : 107 108 109
SEMI_COLON           : 1 10 31 32 33 34 40 41 42 43 107 108 109 127 127 133 133
SMALLER              : 6 68
SMALLER_EQ           : 69
STAR                 : 91
TYPE_B               : 141
TYPE_F               : 139
TYPE_I               : 138
TYPE_S               : 140
TYPE_V               : 142
VARS_KWD             : 30
WHILE_KWD            : 126 130
WRITE_KWD            : 111
error                : 

Nonterminals, with rules where they appear

ARG_LIST             : 96
ARG_LIST_P           : 98 99 100 102 103 104
ASSIGN               : 31 40 49
CLASS                : 4
CLASS_ATTR           : 6
CLASS_STAR           : 1 4
CNST                 : 78
COMP                 : 63
CONDITIONAL_REP      : 128
DECISION             : 45
DECISION_P           : 119
EXP                  : 56 62 63
EXPRESSION           : 53 63 74 99 103 107 112 113 116 119 126 127 127 130 133 133
EXP_P                : 55 58 59
FACTOR               : 75 90 91 92
FLOW_CONTROL         : 44
FOR_INCR_STATEMENT   : 127 133
FUNC_CALL            : 32 41 50 76 100 104 108
FUNC_CONDITIONAL_REP : 124
FUNC_DECISION        : 47
FUNC_DECISION_P      : 116
FUNC_DEF             : 19
FUNC_DEF_STAR        : 1 6 19
FUNC_FLOW_CONTROL    : 35
FUNC_PARAM           : 21
FUNC_PARAM_P         : 25 27
FUNC_REPETITION      : 48
FUNC_RETURN          : 36
FUNC_STATEMENT_STAR  : 21 31 32 33 34 35 36 116 117 126 127
FUNC_UNCONDITIONAL_REP : 125
GLOBAL_VAR           : 1
ID_LIST              : 10
ID_LIST_P            : 11 12
PRINTABLE            : 111
PRINTABLE_P          : 112 113
PROGRAM              : 0
READ                 : 33 42 51
READABLE_LIST        : 110
READABLE_LIST_P      : 14 15
REPETITION           : 46
STATEMENT            : 38
STATEMENT_STAR       : 1 38 119 120 130 133
TERM                 : 55 58 59
TERM_P               : 90 91 92
TYPE                 : 6 10 21 29
UNCONDITIONAL_REP    : 129
VAR                  : 25 27
VARS                 : 21
VAR_LIST             : 8
VAR_LIST_STAR        : 7 8 18 30
WRITE                : 34 43 52
empty                : 2 3 5 9 13 16 17 20 22 23 24 26 28 37 39 54 60 64 65 79 80 81 82 93 97 101 105 114 115 118 121 122 123 131 132 134 135 136 137
pop_not              : 56 75
seen_arg             : 98 99 100 102 103 104
seen_close_parenthesis : 74
seen_comp            : 63
seen_comp_op         : 63
seen_cte_f           : 88
seen_cte_i           : 89
seen_cte_s           : 87
seen_else_kwd        : 117 120
seen_equals          : 53
seen_factor          : 90 91 92
seen_factor_op       : 91 92
seen_for_end_exp     : 127 133
seen_for_incr_exp    : 127 133
seen_for_kwd         : 127 133
seen_for_start_exp   : 127 133
seen_func_call_id    : 96
seen_func_id         : 21
seen_func_params     : 21
seen_func_vars       : 21
seen_id              : 53 77
seen_if_kwd          : 116 119
seen_main_kwd        : 1
seen_not             : 56 75
seen_open_parenthesis : 74
seen_printable       : 112 113
seen_program_id      : 1
seen_readable        : 14 15
seen_term            : 55 58 59
seen_term_op         : 58 59
seen_while_exp       : 126 130
seen_while_kwd       : 126 130

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) seen_program_id -> . empty
    (143) empty -> .

    SEMI_COLON      reduce using rule 143 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (2) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 2 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (4) CLASS_STAR -> . CLASS CLASS_STAR
    (5) CLASS_STAR -> . empty
    (6) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (143) empty -> .

    CLASS_KWD       shift and go to state 10
    ID              reduce using rule 143 (empty -> .)
    TYPE_I          reduce using rule 143 (empty -> .)
    TYPE_F          reduce using rule 143 (empty -> .)
    TYPE_S          reduce using rule 143 (empty -> .)
    TYPE_B          reduce using rule 143 (empty -> .)
    TYPE_V          reduce using rule 143 (empty -> .)
    MAIN_KWD        reduce using rule 143 (empty -> .)

    CLASS_STAR                     shift and go to state 7
    CLASS                          shift and go to state 8
    empty                          shift and go to state 9

state 7

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR . GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (18) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (143) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    TYPE_I          reduce using rule 143 (empty -> .)
    TYPE_F          reduce using rule 143 (empty -> .)
    TYPE_S          reduce using rule 143 (empty -> .)
    TYPE_B          reduce using rule 143 (empty -> .)
    TYPE_V          reduce using rule 143 (empty -> .)
    MAIN_KWD        reduce using rule 143 (empty -> .)
    ID              shift and go to state 11

    GLOBAL_VAR                     shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 8

    (4) CLASS_STAR -> CLASS . CLASS_STAR
    (4) CLASS_STAR -> . CLASS CLASS_STAR
    (5) CLASS_STAR -> . empty
    (6) CLASS -> . CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (143) empty -> .

    CLASS_KWD       shift and go to state 10
    ID              reduce using rule 143 (empty -> .)
    TYPE_I          reduce using rule 143 (empty -> .)
    TYPE_F          reduce using rule 143 (empty -> .)
    TYPE_S          reduce using rule 143 (empty -> .)
    TYPE_B          reduce using rule 143 (empty -> .)
    TYPE_V          reduce using rule 143 (empty -> .)
    MAIN_KWD        reduce using rule 143 (empty -> .)

    CLASS                          shift and go to state 8
    CLASS_STAR                     shift and go to state 17
    empty                          shift and go to state 9

state 9

    (5) CLASS_STAR -> empty .

    ID              reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 5 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 5 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 5 (CLASS_STAR -> empty .)


state 10

    (6) CLASS -> CLASS_KWD . ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 18


state 11

    (11) ID_LIST -> ID . ID_LIST_P
    (12) ID_LIST_P -> . COMMA ID ID_LIST_P
    (13) ID_LIST_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 20
    COLON           reduce using rule 143 (empty -> .)

    ID_LIST_P                      shift and go to state 19
    empty                          shift and go to state 21

state 12

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR . FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (143) empty -> .
    (138) TYPE -> . TYPE_I
    (139) TYPE -> . TYPE_F
    (140) TYPE -> . TYPE_S
    (141) TYPE -> . TYPE_B
    (142) TYPE -> . TYPE_V

    MAIN_KWD        reduce using rule 143 (empty -> .)
    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    FUNC_DEF_STAR                  shift and go to state 22
    FUNC_DEF                       shift and go to state 23
    empty                          shift and go to state 24
    TYPE                           shift and go to state 25

state 13

    (18) GLOBAL_VAR -> VAR_LIST_STAR .

    TYPE_I          reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_F          reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_S          reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_B          reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_V          reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 18 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (143) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    TYPE_I          reduce using rule 143 (empty -> .)
    TYPE_F          reduce using rule 143 (empty -> .)
    TYPE_S          reduce using rule 143 (empty -> .)
    TYPE_B          reduce using rule 143 (empty -> .)
    TYPE_V          reduce using rule 143 (empty -> .)
    MAIN_KWD        reduce using rule 143 (empty -> .)
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST                       shift and go to state 14
    VAR_LIST_STAR                  shift and go to state 31
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 15

    (9) VAR_LIST_STAR -> empty .

    TYPE_I          reduce using rule 9 (VAR_LIST_STAR -> empty .)
    TYPE_F          reduce using rule 9 (VAR_LIST_STAR -> empty .)
    TYPE_S          reduce using rule 9 (VAR_LIST_STAR -> empty .)
    TYPE_B          reduce using rule 9 (VAR_LIST_STAR -> empty .)
    TYPE_V          reduce using rule 9 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 9 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 9 (VAR_LIST_STAR -> empty .)


state 16

    (10) VAR_LIST -> ID_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 32


state 17

    (4) CLASS_STAR -> CLASS CLASS_STAR .

    ID              reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_I          reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_F          reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_S          reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_B          reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_V          reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 4 (CLASS_STAR -> CLASS CLASS_STAR .)


state 18

    (6) CLASS -> CLASS_KWD ID . SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    SMALLER         shift and go to state 33


state 19

    (11) ID_LIST -> ID ID_LIST_P .

    COLON           reduce using rule 11 (ID_LIST -> ID ID_LIST_P .)


state 20

    (12) ID_LIST_P -> COMMA . ID ID_LIST_P

    ID              shift and go to state 34


state 21

    (13) ID_LIST_P -> empty .

    COLON           reduce using rule 13 (ID_LIST_P -> empty .)


state 22

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 35


state 23

    (19) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (143) empty -> .
    (138) TYPE -> . TYPE_I
    (139) TYPE -> . TYPE_F
    (140) TYPE -> . TYPE_S
    (141) TYPE -> . TYPE_B
    (142) TYPE -> . TYPE_V

    MAIN_KWD        reduce using rule 143 (empty -> .)
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    FUNC_DEF                       shift and go to state 23
    FUNC_DEF_STAR                  shift and go to state 36
    empty                          shift and go to state 24
    TYPE                           shift and go to state 25

state 24

    (20) FUNC_DEF_STAR -> empty .

    MAIN_KWD        reduce using rule 20 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 20 (FUNC_DEF_STAR -> empty .)


state 25

    (21) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 37


state 26

    (138) TYPE -> TYPE_I .

    ID              reduce using rule 138 (TYPE -> TYPE_I .)
    SEMI_COLON      reduce using rule 138 (TYPE -> TYPE_I .)
    BIGGER          reduce using rule 138 (TYPE -> TYPE_I .)
    COMMA           reduce using rule 138 (TYPE -> TYPE_I .)
    CLOSE_PARENTHESIS reduce using rule 138 (TYPE -> TYPE_I .)


state 27

    (139) TYPE -> TYPE_F .

    ID              reduce using rule 139 (TYPE -> TYPE_F .)
    SEMI_COLON      reduce using rule 139 (TYPE -> TYPE_F .)
    BIGGER          reduce using rule 139 (TYPE -> TYPE_F .)
    COMMA           reduce using rule 139 (TYPE -> TYPE_F .)
    CLOSE_PARENTHESIS reduce using rule 139 (TYPE -> TYPE_F .)


state 28

    (140) TYPE -> TYPE_S .

    ID              reduce using rule 140 (TYPE -> TYPE_S .)
    SEMI_COLON      reduce using rule 140 (TYPE -> TYPE_S .)
    BIGGER          reduce using rule 140 (TYPE -> TYPE_S .)
    COMMA           reduce using rule 140 (TYPE -> TYPE_S .)
    CLOSE_PARENTHESIS reduce using rule 140 (TYPE -> TYPE_S .)


state 29

    (141) TYPE -> TYPE_B .

    ID              reduce using rule 141 (TYPE -> TYPE_B .)
    SEMI_COLON      reduce using rule 141 (TYPE -> TYPE_B .)
    BIGGER          reduce using rule 141 (TYPE -> TYPE_B .)
    COMMA           reduce using rule 141 (TYPE -> TYPE_B .)
    CLOSE_PARENTHESIS reduce using rule 141 (TYPE -> TYPE_B .)


state 30

    (142) TYPE -> TYPE_V .

    ID              reduce using rule 142 (TYPE -> TYPE_V .)
    SEMI_COLON      reduce using rule 142 (TYPE -> TYPE_V .)
    BIGGER          reduce using rule 142 (TYPE -> TYPE_V .)
    COMMA           reduce using rule 142 (TYPE -> TYPE_V .)
    CLOSE_PARENTHESIS reduce using rule 142 (TYPE -> TYPE_V .)


state 31

    (8) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    TYPE_I          reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_F          reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_S          reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_B          reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_V          reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 8 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 32

    (10) VAR_LIST -> ID_LIST COLON . TYPE SEMI_COLON
    (138) TYPE -> . TYPE_I
    (139) TYPE -> . TYPE_F
    (140) TYPE -> . TYPE_S
    (141) TYPE -> . TYPE_B
    (142) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    TYPE                           shift and go to state 38

state 33

    (6) CLASS -> CLASS_KWD ID SMALLER . DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    DERIVES_KWD     shift and go to state 39


state 34

    (12) ID_LIST_P -> COMMA ID . ID_LIST_P
    (12) ID_LIST_P -> . COMMA ID ID_LIST_P
    (13) ID_LIST_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 20
    COLON           reduce using rule 143 (empty -> .)

    ID_LIST_P                      shift and go to state 40
    empty                          shift and go to state 21

state 35

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 41


state 36

    (19) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    MAIN_KWD        reduce using rule 19 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 19 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 37

    (21) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (22) seen_func_id -> . empty
    (143) empty -> .

    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_func_id                   shift and go to state 42
    empty                          shift and go to state 43

state 38

    (10) VAR_LIST -> ID_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 44


state 39

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD . TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (138) TYPE -> . TYPE_I
    (139) TYPE -> . TYPE_F
    (140) TYPE -> . TYPE_S
    (141) TYPE -> . TYPE_B
    (142) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    TYPE                           shift and go to state 45

state 40

    (12) ID_LIST_P -> COMMA ID ID_LIST_P .

    COLON           reduce using rule 12 (ID_LIST_P -> COMMA ID ID_LIST_P .)


state 41

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 46


state 42

    (21) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 47


state 43

    (22) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 22 (seen_func_id -> empty .)


state 44

    (10) VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE_I          reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE_F          reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE_S          reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE_B          reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    TYPE_V          reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 10 (VAR_LIST -> ID_LIST COLON TYPE SEMI_COLON .)


state 45

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE . BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    BIGGER          shift and go to state 48


state 46

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 49


state 47

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (25) FUNC_PARAM -> . VAR FUNC_PARAM_P
    (26) FUNC_PARAM -> . empty
    (29) VAR -> . ID COLON TYPE
    (143) empty -> .

    ID              shift and go to state 50
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    FUNC_PARAM                     shift and go to state 51
    VAR                            shift and go to state 52
    empty                          shift and go to state 53

state 48

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER . OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 54


state 49

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (3) seen_main_kwd -> . empty
    (143) empty -> .

    ID              reduce using rule 143 (empty -> .)
    READ_KWD        reduce using rule 143 (empty -> .)
    WRITE_KWD       reduce using rule 143 (empty -> .)
    IF_KWD          reduce using rule 143 (empty -> .)
    WHILE_KWD       reduce using rule 143 (empty -> .)
    FOR_KWD         reduce using rule 143 (empty -> .)
    CLOSE_CURLY     reduce using rule 143 (empty -> .)

    seen_main_kwd                  shift and go to state 55
    empty                          shift and go to state 56

state 50

    (29) VAR -> ID . COLON TYPE

    COLON           shift and go to state 57


state 51

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 58


state 52

    (25) FUNC_PARAM -> VAR . FUNC_PARAM_P
    (27) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (28) FUNC_PARAM_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 60
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 59
    empty                          shift and go to state 61

state 53

    (26) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 26 (FUNC_PARAM -> empty .)


state 54

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY . CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY
    (7) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 63

    CLASS_ATTR                     shift and go to state 62

state 55

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (143) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (119) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (128) REPETITION -> . CONDITIONAL_REP
    (129) REPETITION -> . UNCONDITIONAL_REP
    (130) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (133) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT_STAR                 shift and go to state 65
    STATEMENT                      shift and go to state 66
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 56

    (3) seen_main_kwd -> empty .

    ID              reduce using rule 3 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 3 (seen_main_kwd -> empty .)
    WRITE_KWD       reduce using rule 3 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 3 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 3 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 3 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 3 (seen_main_kwd -> empty .)


state 57

    (29) VAR -> ID COLON . TYPE
    (138) TYPE -> . TYPE_I
    (139) TYPE -> . TYPE_F
    (140) TYPE -> . TYPE_S
    (141) TYPE -> . TYPE_B
    (142) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    TYPE                           shift and go to state 82

state 58

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (23) seen_func_params -> . empty
    (143) empty -> .

    VARS_KWD        reduce using rule 143 (empty -> .)

    seen_func_params               shift and go to state 83
    empty                          shift and go to state 84

state 59

    (25) FUNC_PARAM -> VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 25 (FUNC_PARAM -> VAR FUNC_PARAM_P .)


state 60

    (27) FUNC_PARAM_P -> COMMA . VAR FUNC_PARAM_P
    (29) VAR -> . ID COLON TYPE

    ID              shift and go to state 50

    VAR                            shift and go to state 85

state 61

    (28) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 28 (FUNC_PARAM_P -> empty .)


state 62

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR . FUNC_DEF_STAR CLOSE_CURLY
    (19) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (20) FUNC_DEF_STAR -> . empty
    (21) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (143) empty -> .
    (138) TYPE -> . TYPE_I
    (139) TYPE -> . TYPE_F
    (140) TYPE -> . TYPE_S
    (141) TYPE -> . TYPE_B
    (142) TYPE -> . TYPE_V

    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    TYPE_I          shift and go to state 26
    TYPE_F          shift and go to state 27
    TYPE_S          shift and go to state 28
    TYPE_B          shift and go to state 29
    TYPE_V          shift and go to state 30

    TYPE                           shift and go to state 25
    FUNC_DEF_STAR                  shift and go to state 86
    FUNC_DEF                       shift and go to state 23
    empty                          shift and go to state 24

state 63

    (7) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 87


state 64

    (53) ASSIGN -> ID . seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (83) seen_id -> .
    (97) seen_func_call_id -> . empty
    (143) empty -> .

    EQUALS          reduce using rule 83 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_id                        shift and go to state 88
    seen_func_call_id              shift and go to state 89
    empty                          shift and go to state 90

state 65

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 91


state 66

    (38) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (143) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (119) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (128) REPETITION -> . CONDITIONAL_REP
    (129) REPETITION -> . UNCONDITIONAL_REP
    (130) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (133) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT                      shift and go to state 66
    STATEMENT_STAR                 shift and go to state 92
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 67

    (39) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 39 (STATEMENT_STAR -> empty .)


state 68

    (40) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 93


state 69

    (41) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 94


state 70

    (42) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 95


state 71

    (43) STATEMENT -> WRITE . SEMI_COLON

    SEMI_COLON      shift and go to state 96


state 72

    (44) STATEMENT -> FLOW_CONTROL .

    ID              reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    READ_KWD        reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    WRITE_KWD       reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    IF_KWD          reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    WHILE_KWD       reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    FOR_KWD         reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)
    CLOSE_CURLY     reduce using rule 44 (STATEMENT -> FLOW_CONTROL .)


state 73

    (110) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 97


state 74

    (111) WRITE -> WRITE_KWD . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 98


state 75

    (45) FLOW_CONTROL -> DECISION .

    ID              reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    READ_KWD        reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    WRITE_KWD       reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    IF_KWD          reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    WHILE_KWD       reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    FOR_KWD         reduce using rule 45 (FLOW_CONTROL -> DECISION .)
    CLOSE_CURLY     reduce using rule 45 (FLOW_CONTROL -> DECISION .)


state 76

    (46) FLOW_CONTROL -> REPETITION .

    ID              reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    READ_KWD        reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    WRITE_KWD       reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    IF_KWD          reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    WHILE_KWD       reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    FOR_KWD         reduce using rule 46 (FLOW_CONTROL -> REPETITION .)
    CLOSE_CURLY     reduce using rule 46 (FLOW_CONTROL -> REPETITION .)


state 77

    (119) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 99


state 78

    (128) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 128 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 128 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 128 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 128 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 128 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 128 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 128 (REPETITION -> CONDITIONAL_REP .)


state 79

    (129) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 129 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 129 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 129 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 129 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 129 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 129 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 129 (REPETITION -> UNCONDITIONAL_REP .)


state 80

    (130) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (131) seen_while_kwd -> . empty
    (143) empty -> .

    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_while_kwd                 shift and go to state 100
    empty                          shift and go to state 101

state 81

    (133) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 102


state 82

    (29) VAR -> ID COLON TYPE .

    COMMA           reduce using rule 29 (VAR -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 29 (VAR -> ID COLON TYPE .)


state 83

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (30) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 104

    VARS                           shift and go to state 103

state 84

    (23) seen_func_params -> empty .

    VARS_KWD        reduce using rule 23 (seen_func_params -> empty .)


state 85

    (27) FUNC_PARAM_P -> COMMA VAR . FUNC_PARAM_P
    (27) FUNC_PARAM_P -> . COMMA VAR FUNC_PARAM_P
    (28) FUNC_PARAM_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 60
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 105
    empty                          shift and go to state 61

state 86

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 106


state 87

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (143) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST_STAR                  shift and go to state 107
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 88

    (53) ASSIGN -> ID seen_id . EQUALS seen_equals EXPRESSION

    EQUALS          shift and go to state 108


state 89

    (96) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 109


state 90

    (97) seen_func_call_id -> empty .

    OPEN_PARENTHESIS reduce using rule 97 (seen_func_call_id -> empty .)


state 91

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON CLASS_STAR GLOBAL_VAR FUNC_DEF_STAR MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 92

    (38) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 38 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 93

    (40) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    WRITE_KWD       reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 40 (STATEMENT -> ASSIGN SEMI_COLON .)


state 94

    (41) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 41 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 95

    (42) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    WRITE_KWD       reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 42 (STATEMENT -> READ SEMI_COLON .)


state 96

    (43) STATEMENT -> WRITE SEMI_COLON .

    ID              reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    READ_KWD        reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    WRITE_KWD       reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    IF_KWD          reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    WHILE_KWD       reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    FOR_KWD         reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 43 (STATEMENT -> WRITE SEMI_COLON .)


state 97

    (110) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (14) READABLE_LIST -> . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 111

    READABLE_LIST                  shift and go to state 110

state 98

    (111) WRITE -> WRITE_KWD OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (112) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    PRINTABLE                      shift and go to state 113
    EXPRESSION                     shift and go to state 114
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 99

    (119) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 125
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 100

    (130) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 126


state 101

    (131) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 131 (seen_while_kwd -> empty .)


state 102

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 127


state 103

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (24) seen_func_vars -> . empty
    (143) empty -> .

    OPEN_CURLY      reduce using rule 143 (empty -> .)

    seen_func_vars                 shift and go to state 128
    empty                          shift and go to state 129

state 104

    (30) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 130


state 105

    (27) FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 27 (FUNC_PARAM_P -> COMMA VAR FUNC_PARAM_P .)


state 106

    (6) CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_I          reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 6 (CLASS -> CLASS_KWD ID SMALLER DERIVES_KWD TYPE BIGGER OPEN_CURLY CLASS_ATTR FUNC_DEF_STAR CLOSE_CURLY .)


state 107

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 131


state 108

    (53) ASSIGN -> ID seen_id EQUALS . seen_equals EXPRESSION
    (54) seen_equals -> . empty
    (143) empty -> .

    NOT             reduce using rule 143 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CTE_S           reduce using rule 143 (empty -> .)
    CTE_F           reduce using rule 143 (empty -> .)
    CTE_I           reduce using rule 143 (empty -> .)

    seen_equals                    shift and go to state 132
    empty                          shift and go to state 133

state 109

    (96) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (98) ARG_LIST -> . ID seen_arg ARG_LIST_P
    (99) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (100) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (101) ARG_LIST -> . empty
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (143) empty -> .
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 134
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)
    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    ARG_LIST                       shift and go to state 135
    EXPRESSION                     shift and go to state 136
    FUNC_CALL                      shift and go to state 137
    empty                          shift and go to state 138
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    CNST                           shift and go to state 121

state 110

    (110) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 139


state 111

    (14) READABLE_LIST -> ID . seen_readable READABLE_LIST_P
    (17) seen_readable -> . empty
    (143) empty -> .

    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_readable                  shift and go to state 140
    empty                          shift and go to state 141

state 112

    (74) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (81) seen_open_parenthesis -> . empty
    (143) empty -> .

    NOT             reduce using rule 143 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CTE_S           reduce using rule 143 (empty -> .)
    CTE_F           reduce using rule 143 (empty -> .)
    CTE_I           reduce using rule 143 (empty -> .)

    seen_open_parenthesis          shift and go to state 142
    empty                          shift and go to state 143

state 113

    (111) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 144


state 114

    (112) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (115) seen_printable -> . empty
    (143) empty -> .

    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_printable                 shift and go to state 145
    empty                          shift and go to state 146

state 115

    (62) EXPRESSION -> EXP .
    (63) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (66) COMP -> . BIGGER
    (67) COMP -> . BIGGER_EQ
    (68) COMP -> . SMALLER
    (69) COMP -> . SMALLER_EQ
    (70) COMP -> . DOUBLE_EQUALS
    (71) COMP -> . DIFFERENT
    (72) COMP -> . AND
    (73) COMP -> . OR

    COMMA           reduce using rule 62 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 62 (EXPRESSION -> EXP .)
    SEMI_COLON      reduce using rule 62 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 148
    BIGGER_EQ       shift and go to state 149
    SMALLER         shift and go to state 150
    SMALLER_EQ      shift and go to state 151
    DOUBLE_EQUALS   shift and go to state 152
    DIFFERENT       shift and go to state 153
    AND             shift and go to state 154
    OR              shift and go to state 155

    COMP                           shift and go to state 147

state 116

    (55) EXP -> TERM . seen_term EXP_P
    (57) seen_term -> .

    PLUS            reduce using rule 57 (seen_term -> .)
    MINUS           reduce using rule 57 (seen_term -> .)
    BIGGER          reduce using rule 57 (seen_term -> .)
    BIGGER_EQ       reduce using rule 57 (seen_term -> .)
    SMALLER         reduce using rule 57 (seen_term -> .)
    SMALLER_EQ      reduce using rule 57 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 57 (seen_term -> .)
    DIFFERENT       reduce using rule 57 (seen_term -> .)
    AND             reduce using rule 57 (seen_term -> .)
    OR              reduce using rule 57 (seen_term -> .)
    COMMA           reduce using rule 57 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 57 (seen_term -> .)
    SEMI_COLON      reduce using rule 57 (seen_term -> .)

    seen_term                      shift and go to state 156

state 117

    (56) EXP -> NOT . seen_not EXP pop_not
    (75) FACTOR -> NOT . seen_not FACTOR pop_not
    (80) seen_not -> . empty
    (143) empty -> .

    NOT             reduce using rule 143 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CTE_S           reduce using rule 143 (empty -> .)
    CTE_F           reduce using rule 143 (empty -> .)
    CTE_I           reduce using rule 143 (empty -> .)

    seen_not                       shift and go to state 157
    empty                          shift and go to state 158

state 118

    (90) TERM -> FACTOR . seen_factor TERM_P
    (94) seen_factor -> .

    STAR            reduce using rule 94 (seen_factor -> .)
    FWD_SLASH       reduce using rule 94 (seen_factor -> .)
    PLUS            reduce using rule 94 (seen_factor -> .)
    MINUS           reduce using rule 94 (seen_factor -> .)
    BIGGER          reduce using rule 94 (seen_factor -> .)
    BIGGER_EQ       reduce using rule 94 (seen_factor -> .)
    SMALLER         reduce using rule 94 (seen_factor -> .)
    SMALLER_EQ      reduce using rule 94 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 94 (seen_factor -> .)
    DIFFERENT       reduce using rule 94 (seen_factor -> .)
    AND             reduce using rule 94 (seen_factor -> .)
    OR              reduce using rule 94 (seen_factor -> .)
    COMMA           reduce using rule 94 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 94 (seen_factor -> .)
    SEMI_COLON      reduce using rule 94 (seen_factor -> .)

    seen_factor                    shift and go to state 159

state 119

    (76) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 76 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 76 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 76 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 76 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 76 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 76 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 76 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 76 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 76 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 76 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 76 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 76 (FACTOR -> FUNC_CALL .)


state 120

    (77) FACTOR -> ID . seen_id
    (96) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (83) seen_id -> .
    (97) seen_func_call_id -> . empty
    (143) empty -> .

    STAR            reduce using rule 83 (seen_id -> .)
    FWD_SLASH       reduce using rule 83 (seen_id -> .)
    PLUS            reduce using rule 83 (seen_id -> .)
    MINUS           reduce using rule 83 (seen_id -> .)
    BIGGER          reduce using rule 83 (seen_id -> .)
    BIGGER_EQ       reduce using rule 83 (seen_id -> .)
    SMALLER         reduce using rule 83 (seen_id -> .)
    SMALLER_EQ      reduce using rule 83 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 83 (seen_id -> .)
    DIFFERENT       reduce using rule 83 (seen_id -> .)
    AND             reduce using rule 83 (seen_id -> .)
    OR              reduce using rule 83 (seen_id -> .)
    COMMA           reduce using rule 83 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 83 (seen_id -> .)
    SEMI_COLON      reduce using rule 83 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_id                        shift and go to state 160
    seen_func_call_id              shift and go to state 89
    empty                          shift and go to state 90

state 121

    (78) FACTOR -> CNST .

    STAR            reduce using rule 78 (FACTOR -> CNST .)
    FWD_SLASH       reduce using rule 78 (FACTOR -> CNST .)
    PLUS            reduce using rule 78 (FACTOR -> CNST .)
    MINUS           reduce using rule 78 (FACTOR -> CNST .)
    BIGGER          reduce using rule 78 (FACTOR -> CNST .)
    BIGGER_EQ       reduce using rule 78 (FACTOR -> CNST .)
    SMALLER         reduce using rule 78 (FACTOR -> CNST .)
    SMALLER_EQ      reduce using rule 78 (FACTOR -> CNST .)
    DOUBLE_EQUALS   reduce using rule 78 (FACTOR -> CNST .)
    DIFFERENT       reduce using rule 78 (FACTOR -> CNST .)
    AND             reduce using rule 78 (FACTOR -> CNST .)
    OR              reduce using rule 78 (FACTOR -> CNST .)
    COMMA           reduce using rule 78 (FACTOR -> CNST .)
    CLOSE_PARENTHESIS reduce using rule 78 (FACTOR -> CNST .)
    SEMI_COLON      reduce using rule 78 (FACTOR -> CNST .)


state 122

    (87) CNST -> CTE_S . seen_cte_s
    (86) seen_cte_s -> .

    STAR            reduce using rule 86 (seen_cte_s -> .)
    FWD_SLASH       reduce using rule 86 (seen_cte_s -> .)
    PLUS            reduce using rule 86 (seen_cte_s -> .)
    MINUS           reduce using rule 86 (seen_cte_s -> .)
    BIGGER          reduce using rule 86 (seen_cte_s -> .)
    BIGGER_EQ       reduce using rule 86 (seen_cte_s -> .)
    SMALLER         reduce using rule 86 (seen_cte_s -> .)
    SMALLER_EQ      reduce using rule 86 (seen_cte_s -> .)
    DOUBLE_EQUALS   reduce using rule 86 (seen_cte_s -> .)
    DIFFERENT       reduce using rule 86 (seen_cte_s -> .)
    AND             reduce using rule 86 (seen_cte_s -> .)
    OR              reduce using rule 86 (seen_cte_s -> .)
    COMMA           reduce using rule 86 (seen_cte_s -> .)
    CLOSE_PARENTHESIS reduce using rule 86 (seen_cte_s -> .)
    SEMI_COLON      reduce using rule 86 (seen_cte_s -> .)

    seen_cte_s                     shift and go to state 161

state 123

    (88) CNST -> CTE_F . seen_cte_f
    (85) seen_cte_f -> .

    STAR            reduce using rule 85 (seen_cte_f -> .)
    FWD_SLASH       reduce using rule 85 (seen_cte_f -> .)
    PLUS            reduce using rule 85 (seen_cte_f -> .)
    MINUS           reduce using rule 85 (seen_cte_f -> .)
    BIGGER          reduce using rule 85 (seen_cte_f -> .)
    BIGGER_EQ       reduce using rule 85 (seen_cte_f -> .)
    SMALLER         reduce using rule 85 (seen_cte_f -> .)
    SMALLER_EQ      reduce using rule 85 (seen_cte_f -> .)
    DOUBLE_EQUALS   reduce using rule 85 (seen_cte_f -> .)
    DIFFERENT       reduce using rule 85 (seen_cte_f -> .)
    AND             reduce using rule 85 (seen_cte_f -> .)
    OR              reduce using rule 85 (seen_cte_f -> .)
    COMMA           reduce using rule 85 (seen_cte_f -> .)
    CLOSE_PARENTHESIS reduce using rule 85 (seen_cte_f -> .)
    SEMI_COLON      reduce using rule 85 (seen_cte_f -> .)

    seen_cte_f                     shift and go to state 162

state 124

    (89) CNST -> CTE_I . seen_cte_i
    (84) seen_cte_i -> .

    STAR            reduce using rule 84 (seen_cte_i -> .)
    FWD_SLASH       reduce using rule 84 (seen_cte_i -> .)
    PLUS            reduce using rule 84 (seen_cte_i -> .)
    MINUS           reduce using rule 84 (seen_cte_i -> .)
    BIGGER          reduce using rule 84 (seen_cte_i -> .)
    BIGGER_EQ       reduce using rule 84 (seen_cte_i -> .)
    SMALLER         reduce using rule 84 (seen_cte_i -> .)
    SMALLER_EQ      reduce using rule 84 (seen_cte_i -> .)
    DOUBLE_EQUALS   reduce using rule 84 (seen_cte_i -> .)
    DIFFERENT       reduce using rule 84 (seen_cte_i -> .)
    AND             reduce using rule 84 (seen_cte_i -> .)
    OR              reduce using rule 84 (seen_cte_i -> .)
    COMMA           reduce using rule 84 (seen_cte_i -> .)
    CLOSE_PARENTHESIS reduce using rule 84 (seen_cte_i -> .)
    SEMI_COLON      reduce using rule 84 (seen_cte_i -> .)

    seen_cte_i                     shift and go to state 163

state 125

    (119) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 164


state 126

    (130) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 165
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 127

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (134) seen_for_kwd -> . empty
    (143) empty -> .

    EQUALS          reduce using rule 143 (empty -> .)

    seen_for_kwd                   shift and go to state 166
    empty                          shift and go to state 167

state 128

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 168


state 129

    (24) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 24 (seen_func_vars -> empty .)


state 130

    (30) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (8) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (9) VAR_LIST_STAR -> . empty
    (10) VAR_LIST -> . ID_LIST COLON TYPE SEMI_COLON
    (143) empty -> .
    (11) ID_LIST -> . ID ID_LIST_P

    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    ID              shift and go to state 11

    VAR_LIST_STAR                  shift and go to state 169
    VAR_LIST                       shift and go to state 14
    empty                          shift and go to state 15
    ID_LIST                        shift and go to state 16

state 131

    (7) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 7 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 132

    (53) ASSIGN -> ID seen_id EQUALS seen_equals . EXPRESSION
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 170
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 133

    (54) seen_equals -> empty .

    NOT             reduce using rule 54 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 54 (seen_equals -> empty .)
    ID              reduce using rule 54 (seen_equals -> empty .)
    CTE_S           reduce using rule 54 (seen_equals -> empty .)
    CTE_F           reduce using rule 54 (seen_equals -> empty .)
    CTE_I           reduce using rule 54 (seen_equals -> empty .)


state 134

    (98) ARG_LIST -> ID . seen_arg ARG_LIST_P
    (96) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (77) FACTOR -> ID . seen_id
    (106) seen_arg -> .
    (97) seen_func_call_id -> . empty
    (83) seen_id -> .
    (143) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 83 (seen_id -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 83 (seen_id -> .)
    STAR            reduce using rule 83 (seen_id -> .)
    FWD_SLASH       reduce using rule 83 (seen_id -> .)
    PLUS            reduce using rule 83 (seen_id -> .)
    MINUS           reduce using rule 83 (seen_id -> .)
    BIGGER          reduce using rule 83 (seen_id -> .)
    BIGGER_EQ       reduce using rule 83 (seen_id -> .)
    SMALLER         reduce using rule 83 (seen_id -> .)
    SMALLER_EQ      reduce using rule 83 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 83 (seen_id -> .)
    DIFFERENT       reduce using rule 83 (seen_id -> .)
    AND             reduce using rule 83 (seen_id -> .)
    OR              reduce using rule 83 (seen_id -> .)
    COMMA           reduce using rule 83 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 83 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)

  ! COMMA           [ reduce using rule 106 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 106 (seen_arg -> .) ]

    seen_arg                       shift and go to state 171
    seen_func_call_id              shift and go to state 89
    seen_id                        shift and go to state 160
    empty                          shift and go to state 90

state 135

    (96) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 172


state 136

    (99) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (106) seen_arg -> .

    COMMA           reduce using rule 106 (seen_arg -> .)
    CLOSE_PARENTHESIS reduce using rule 106 (seen_arg -> .)

    seen_arg                       shift and go to state 173

state 137

    (100) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (76) FACTOR -> FUNC_CALL .
    (106) seen_arg -> .

  ! reduce/reduce conflict for COMMA resolved using rule 76 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 76 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 76 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 76 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 76 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 76 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 76 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 76 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 76 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 76 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 76 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 76 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 76 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 106 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 106 (seen_arg -> .) ]

    seen_arg                       shift and go to state 174

state 138

    (101) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 101 (ARG_LIST -> empty .)


state 139

    (110) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 110 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 110 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 140

    (14) READABLE_LIST -> ID seen_readable . READABLE_LIST_P
    (15) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (16) READABLE_LIST_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 176
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    READABLE_LIST_P                shift and go to state 175
    empty                          shift and go to state 177

state 141

    (17) seen_readable -> empty .

    COMMA           reduce using rule 17 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 17 (seen_readable -> empty .)


state 142

    (74) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 178
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 143

    (81) seen_open_parenthesis -> empty .

    NOT             reduce using rule 81 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 81 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 81 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 81 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 81 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 81 (seen_open_parenthesis -> empty .)


state 144

    (111) WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 111 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 111 (WRITE -> WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 145

    (112) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (113) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (114) PRINTABLE_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 180
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    PRINTABLE_P                    shift and go to state 179
    empty                          shift and go to state 181

state 146

    (115) seen_printable -> empty .

    COMMA           reduce using rule 115 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 115 (seen_printable -> empty .)


state 147

    (63) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (65) seen_comp_op -> . empty
    (143) empty -> .

    NOT             reduce using rule 143 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CTE_S           reduce using rule 143 (empty -> .)
    CTE_F           reduce using rule 143 (empty -> .)
    CTE_I           reduce using rule 143 (empty -> .)

    seen_comp_op                   shift and go to state 182
    empty                          shift and go to state 183

state 148

    (66) COMP -> BIGGER .

    NOT             reduce using rule 66 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 66 (COMP -> BIGGER .)
    ID              reduce using rule 66 (COMP -> BIGGER .)
    CTE_S           reduce using rule 66 (COMP -> BIGGER .)
    CTE_F           reduce using rule 66 (COMP -> BIGGER .)
    CTE_I           reduce using rule 66 (COMP -> BIGGER .)


state 149

    (67) COMP -> BIGGER_EQ .

    NOT             reduce using rule 67 (COMP -> BIGGER_EQ .)
    OPEN_PARENTHESIS reduce using rule 67 (COMP -> BIGGER_EQ .)
    ID              reduce using rule 67 (COMP -> BIGGER_EQ .)
    CTE_S           reduce using rule 67 (COMP -> BIGGER_EQ .)
    CTE_F           reduce using rule 67 (COMP -> BIGGER_EQ .)
    CTE_I           reduce using rule 67 (COMP -> BIGGER_EQ .)


state 150

    (68) COMP -> SMALLER .

    NOT             reduce using rule 68 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 68 (COMP -> SMALLER .)
    ID              reduce using rule 68 (COMP -> SMALLER .)
    CTE_S           reduce using rule 68 (COMP -> SMALLER .)
    CTE_F           reduce using rule 68 (COMP -> SMALLER .)
    CTE_I           reduce using rule 68 (COMP -> SMALLER .)


state 151

    (69) COMP -> SMALLER_EQ .

    NOT             reduce using rule 69 (COMP -> SMALLER_EQ .)
    OPEN_PARENTHESIS reduce using rule 69 (COMP -> SMALLER_EQ .)
    ID              reduce using rule 69 (COMP -> SMALLER_EQ .)
    CTE_S           reduce using rule 69 (COMP -> SMALLER_EQ .)
    CTE_F           reduce using rule 69 (COMP -> SMALLER_EQ .)
    CTE_I           reduce using rule 69 (COMP -> SMALLER_EQ .)


state 152

    (70) COMP -> DOUBLE_EQUALS .

    NOT             reduce using rule 70 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 70 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 70 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 70 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 70 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 70 (COMP -> DOUBLE_EQUALS .)


state 153

    (71) COMP -> DIFFERENT .

    NOT             reduce using rule 71 (COMP -> DIFFERENT .)
    OPEN_PARENTHESIS reduce using rule 71 (COMP -> DIFFERENT .)
    ID              reduce using rule 71 (COMP -> DIFFERENT .)
    CTE_S           reduce using rule 71 (COMP -> DIFFERENT .)
    CTE_F           reduce using rule 71 (COMP -> DIFFERENT .)
    CTE_I           reduce using rule 71 (COMP -> DIFFERENT .)


state 154

    (72) COMP -> AND .

    NOT             reduce using rule 72 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 72 (COMP -> AND .)
    ID              reduce using rule 72 (COMP -> AND .)
    CTE_S           reduce using rule 72 (COMP -> AND .)
    CTE_F           reduce using rule 72 (COMP -> AND .)
    CTE_I           reduce using rule 72 (COMP -> AND .)


state 155

    (73) COMP -> OR .

    NOT             reduce using rule 73 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 73 (COMP -> OR .)
    ID              reduce using rule 73 (COMP -> OR .)
    CTE_S           reduce using rule 73 (COMP -> OR .)
    CTE_F           reduce using rule 73 (COMP -> OR .)
    CTE_I           reduce using rule 73 (COMP -> OR .)


state 156

    (55) EXP -> TERM seen_term . EXP_P
    (58) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (59) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (60) EXP_P -> . empty
    (143) empty -> .

    PLUS            shift and go to state 185
    MINUS           shift and go to state 186
    BIGGER          reduce using rule 143 (empty -> .)
    BIGGER_EQ       reduce using rule 143 (empty -> .)
    SMALLER         reduce using rule 143 (empty -> .)
    SMALLER_EQ      reduce using rule 143 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 143 (empty -> .)
    DIFFERENT       reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)
    SEMI_COLON      reduce using rule 143 (empty -> .)

    EXP_P                          shift and go to state 184
    empty                          shift and go to state 187

state 157

    (56) EXP -> NOT seen_not . EXP pop_not
    (75) FACTOR -> NOT seen_not . FACTOR pop_not
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (90) TERM -> . FACTOR seen_factor TERM_P
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXP                            shift and go to state 188
    FACTOR                         shift and go to state 189
    TERM                           shift and go to state 116
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 158

    (80) seen_not -> empty .

    NOT             reduce using rule 80 (seen_not -> empty .)
    OPEN_PARENTHESIS reduce using rule 80 (seen_not -> empty .)
    ID              reduce using rule 80 (seen_not -> empty .)
    CTE_S           reduce using rule 80 (seen_not -> empty .)
    CTE_F           reduce using rule 80 (seen_not -> empty .)
    CTE_I           reduce using rule 80 (seen_not -> empty .)


state 159

    (90) TERM -> FACTOR seen_factor . TERM_P
    (91) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (92) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (93) TERM_P -> . empty
    (143) empty -> .

    STAR            shift and go to state 191
    FWD_SLASH       shift and go to state 192
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    BIGGER          reduce using rule 143 (empty -> .)
    BIGGER_EQ       reduce using rule 143 (empty -> .)
    SMALLER         reduce using rule 143 (empty -> .)
    SMALLER_EQ      reduce using rule 143 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 143 (empty -> .)
    DIFFERENT       reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)
    SEMI_COLON      reduce using rule 143 (empty -> .)

    TERM_P                         shift and go to state 190
    empty                          shift and go to state 193

state 160

    (77) FACTOR -> ID seen_id .

    STAR            reduce using rule 77 (FACTOR -> ID seen_id .)
    FWD_SLASH       reduce using rule 77 (FACTOR -> ID seen_id .)
    PLUS            reduce using rule 77 (FACTOR -> ID seen_id .)
    MINUS           reduce using rule 77 (FACTOR -> ID seen_id .)
    BIGGER          reduce using rule 77 (FACTOR -> ID seen_id .)
    BIGGER_EQ       reduce using rule 77 (FACTOR -> ID seen_id .)
    SMALLER         reduce using rule 77 (FACTOR -> ID seen_id .)
    SMALLER_EQ      reduce using rule 77 (FACTOR -> ID seen_id .)
    DOUBLE_EQUALS   reduce using rule 77 (FACTOR -> ID seen_id .)
    DIFFERENT       reduce using rule 77 (FACTOR -> ID seen_id .)
    AND             reduce using rule 77 (FACTOR -> ID seen_id .)
    OR              reduce using rule 77 (FACTOR -> ID seen_id .)
    COMMA           reduce using rule 77 (FACTOR -> ID seen_id .)
    CLOSE_PARENTHESIS reduce using rule 77 (FACTOR -> ID seen_id .)
    SEMI_COLON      reduce using rule 77 (FACTOR -> ID seen_id .)


state 161

    (87) CNST -> CTE_S seen_cte_s .

    STAR            reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    BIGGER_EQ       reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    SMALLER_EQ      reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    DIFFERENT       reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    AND             reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    OR              reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 87 (CNST -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 87 (CNST -> CTE_S seen_cte_s .)


state 162

    (88) CNST -> CTE_F seen_cte_f .

    STAR            reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    BIGGER_EQ       reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    SMALLER_EQ      reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    DIFFERENT       reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    AND             reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    OR              reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 88 (CNST -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 88 (CNST -> CTE_F seen_cte_f .)


state 163

    (89) CNST -> CTE_I seen_cte_i .

    STAR            reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    BIGGER_EQ       reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    SMALLER_EQ      reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    DIFFERENT       reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    AND             reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    OR              reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 89 (CNST -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 89 (CNST -> CTE_I seen_cte_i .)


state 164

    (119) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (122) seen_if_kwd -> . empty
    (143) empty -> .

    OPEN_CURLY      reduce using rule 143 (empty -> .)

    seen_if_kwd                    shift and go to state 194
    empty                          shift and go to state 195

state 165

    (130) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 196


state 166

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 197


state 167

    (134) seen_for_kwd -> empty .

    EQUALS          reduce using rule 134 (seen_for_kwd -> empty .)


state 168

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (107) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) empty -> .
    (116) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (124) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (125) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (126) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (127) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 208
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    IF_KWD          shift and go to state 209
    WHILE_KWD       shift and go to state 212
    FOR_KWD         shift and go to state 213

    FUNC_STATEMENT_STAR            shift and go to state 198
    ASSIGN                         shift and go to state 199
    FUNC_CALL                      shift and go to state 200
    READ                           shift and go to state 201
    WRITE                          shift and go to state 202
    FUNC_FLOW_CONTROL              shift and go to state 203
    FUNC_RETURN                    shift and go to state 204
    empty                          shift and go to state 205
    FUNC_DECISION                  shift and go to state 206
    FUNC_REPETITION                shift and go to state 207
    FUNC_CONDITIONAL_REP           shift and go to state 210
    FUNC_UNCONDITIONAL_REP         shift and go to state 211

state 169

    (30) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 214


state 170

    (53) ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 53 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 53 (ASSIGN -> ID seen_id EQUALS seen_equals EXPRESSION .)


state 171

    (98) ARG_LIST -> ID seen_arg . ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (104) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (105) ARG_LIST_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 216
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    ARG_LIST_P                     shift and go to state 215
    empty                          shift and go to state 217

state 172

    (96) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DIFFERENT       reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 96 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 173

    (99) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (104) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (105) ARG_LIST_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 216
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    ARG_LIST_P                     shift and go to state 218
    empty                          shift and go to state 217

state 174

    (100) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (104) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (105) ARG_LIST_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 216
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    ARG_LIST_P                     shift and go to state 219
    empty                          shift and go to state 217

state 175

    (14) READABLE_LIST -> ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 14 (READABLE_LIST -> ID seen_readable READABLE_LIST_P .)


state 176

    (15) READABLE_LIST_P -> COMMA . ID seen_readable READABLE_LIST_P

    ID              shift and go to state 220


state 177

    (16) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 16 (READABLE_LIST_P -> empty .)


state 178

    (74) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 221


state 179

    (112) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 112 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 180

    (113) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 222
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 181

    (114) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 114 (PRINTABLE_P -> empty .)


state 182

    (63) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXP                            shift and go to state 115
    EXPRESSION                     shift and go to state 223
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 183

    (65) seen_comp_op -> empty .

    NOT             reduce using rule 65 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 65 (seen_comp_op -> empty .)
    ID              reduce using rule 65 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 65 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 65 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 65 (seen_comp_op -> empty .)


state 184

    (55) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 55 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 55 (EXP -> TERM seen_term EXP_P .)


state 185

    (58) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (61) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 61 (seen_term_op -> .)
    NOT             reduce using rule 61 (seen_term_op -> .)
    ID              reduce using rule 61 (seen_term_op -> .)
    CTE_S           reduce using rule 61 (seen_term_op -> .)
    CTE_F           reduce using rule 61 (seen_term_op -> .)
    CTE_I           reduce using rule 61 (seen_term_op -> .)

    seen_term_op                   shift and go to state 224

state 186

    (59) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (61) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 61 (seen_term_op -> .)
    NOT             reduce using rule 61 (seen_term_op -> .)
    ID              reduce using rule 61 (seen_term_op -> .)
    CTE_S           reduce using rule 61 (seen_term_op -> .)
    CTE_F           reduce using rule 61 (seen_term_op -> .)
    CTE_I           reduce using rule 61 (seen_term_op -> .)

    seen_term_op                   shift and go to state 225

state 187

    (60) EXP_P -> empty .

    BIGGER          reduce using rule 60 (EXP_P -> empty .)
    BIGGER_EQ       reduce using rule 60 (EXP_P -> empty .)
    SMALLER         reduce using rule 60 (EXP_P -> empty .)
    SMALLER_EQ      reduce using rule 60 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 60 (EXP_P -> empty .)
    DIFFERENT       reduce using rule 60 (EXP_P -> empty .)
    AND             reduce using rule 60 (EXP_P -> empty .)
    OR              reduce using rule 60 (EXP_P -> empty .)
    COMMA           reduce using rule 60 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 60 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 60 (EXP_P -> empty .)


state 188

    (56) EXP -> NOT seen_not EXP . pop_not
    (79) pop_not -> . empty
    (143) empty -> .

    BIGGER          reduce using rule 143 (empty -> .)
    BIGGER_EQ       reduce using rule 143 (empty -> .)
    SMALLER         reduce using rule 143 (empty -> .)
    SMALLER_EQ      reduce using rule 143 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 143 (empty -> .)
    DIFFERENT       reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)
    SEMI_COLON      reduce using rule 143 (empty -> .)

    pop_not                        shift and go to state 226
    empty                          shift and go to state 227

state 189

    (75) FACTOR -> NOT seen_not FACTOR . pop_not
    (90) TERM -> FACTOR . seen_factor TERM_P
    (79) pop_not -> . empty
    (94) seen_factor -> .
    (143) empty -> .

  ! reduce/reduce conflict for STAR resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for BIGGER resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for SMALLER resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for AND resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for OR resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 94 (seen_factor -> .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 94 (seen_factor -> .)
    STAR            reduce using rule 94 (seen_factor -> .)
    FWD_SLASH       reduce using rule 94 (seen_factor -> .)
    PLUS            reduce using rule 94 (seen_factor -> .)
    MINUS           reduce using rule 94 (seen_factor -> .)
    BIGGER          reduce using rule 94 (seen_factor -> .)
    BIGGER_EQ       reduce using rule 94 (seen_factor -> .)
    SMALLER         reduce using rule 94 (seen_factor -> .)
    SMALLER_EQ      reduce using rule 94 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 94 (seen_factor -> .)
    DIFFERENT       reduce using rule 94 (seen_factor -> .)
    AND             reduce using rule 94 (seen_factor -> .)
    OR              reduce using rule 94 (seen_factor -> .)
    COMMA           reduce using rule 94 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 94 (seen_factor -> .)
    SEMI_COLON      reduce using rule 94 (seen_factor -> .)

  ! STAR            [ reduce using rule 143 (empty -> .) ]
  ! FWD_SLASH       [ reduce using rule 143 (empty -> .) ]
  ! PLUS            [ reduce using rule 143 (empty -> .) ]
  ! MINUS           [ reduce using rule 143 (empty -> .) ]
  ! BIGGER          [ reduce using rule 143 (empty -> .) ]
  ! BIGGER_EQ       [ reduce using rule 143 (empty -> .) ]
  ! SMALLER         [ reduce using rule 143 (empty -> .) ]
  ! SMALLER_EQ      [ reduce using rule 143 (empty -> .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 143 (empty -> .) ]
  ! DIFFERENT       [ reduce using rule 143 (empty -> .) ]
  ! AND             [ reduce using rule 143 (empty -> .) ]
  ! OR              [ reduce using rule 143 (empty -> .) ]
  ! COMMA           [ reduce using rule 143 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 143 (empty -> .) ]
  ! SEMI_COLON      [ reduce using rule 143 (empty -> .) ]

    pop_not                        shift and go to state 228
    seen_factor                    shift and go to state 159
    empty                          shift and go to state 227

state 190

    (90) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 90 (TERM -> FACTOR seen_factor TERM_P .)


state 191

    (91) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (95) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 95 (seen_factor_op -> .)
    NOT             reduce using rule 95 (seen_factor_op -> .)
    ID              reduce using rule 95 (seen_factor_op -> .)
    CTE_S           reduce using rule 95 (seen_factor_op -> .)
    CTE_F           reduce using rule 95 (seen_factor_op -> .)
    CTE_I           reduce using rule 95 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 229

state 192

    (92) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (95) seen_factor_op -> .

    OPEN_PARENTHESIS reduce using rule 95 (seen_factor_op -> .)
    NOT             reduce using rule 95 (seen_factor_op -> .)
    ID              reduce using rule 95 (seen_factor_op -> .)
    CTE_S           reduce using rule 95 (seen_factor_op -> .)
    CTE_F           reduce using rule 95 (seen_factor_op -> .)
    CTE_I           reduce using rule 95 (seen_factor_op -> .)

    seen_factor_op                 shift and go to state 230

state 193

    (93) TERM_P -> empty .

    PLUS            reduce using rule 93 (TERM_P -> empty .)
    MINUS           reduce using rule 93 (TERM_P -> empty .)
    BIGGER          reduce using rule 93 (TERM_P -> empty .)
    BIGGER_EQ       reduce using rule 93 (TERM_P -> empty .)
    SMALLER         reduce using rule 93 (TERM_P -> empty .)
    SMALLER_EQ      reduce using rule 93 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 93 (TERM_P -> empty .)
    DIFFERENT       reduce using rule 93 (TERM_P -> empty .)
    AND             reduce using rule 93 (TERM_P -> empty .)
    OR              reduce using rule 93 (TERM_P -> empty .)
    COMMA           reduce using rule 93 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 93 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 93 (TERM_P -> empty .)


state 194

    (119) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 231


state 195

    (122) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 122 (seen_if_kwd -> empty .)


state 196

    (130) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (132) seen_while_exp -> . empty
    (143) empty -> .

    OPEN_CURLY      reduce using rule 143 (empty -> .)

    seen_while_exp                 shift and go to state 232
    empty                          shift and go to state 233

state 197

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 234
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 198

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 235


state 199

    (31) FUNC_STATEMENT_STAR -> ASSIGN . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 236


state 200

    (32) FUNC_STATEMENT_STAR -> FUNC_CALL . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 237


state 201

    (33) FUNC_STATEMENT_STAR -> READ . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 238


state 202

    (34) FUNC_STATEMENT_STAR -> WRITE . SEMI_COLON FUNC_STATEMENT_STAR

    SEMI_COLON      shift and go to state 239


state 203

    (35) FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (107) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) empty -> .
    (116) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (124) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (125) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (126) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (127) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 208
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    IF_KWD          shift and go to state 209
    WHILE_KWD       shift and go to state 212
    FOR_KWD         shift and go to state 213

    FUNC_FLOW_CONTROL              shift and go to state 203
    FUNC_STATEMENT_STAR            shift and go to state 240
    ASSIGN                         shift and go to state 199
    FUNC_CALL                      shift and go to state 200
    READ                           shift and go to state 201
    WRITE                          shift and go to state 202
    FUNC_RETURN                    shift and go to state 204
    empty                          shift and go to state 205
    FUNC_DECISION                  shift and go to state 206
    FUNC_REPETITION                shift and go to state 207
    FUNC_CONDITIONAL_REP           shift and go to state 210
    FUNC_UNCONDITIONAL_REP         shift and go to state 211

state 204

    (36) FUNC_STATEMENT_STAR -> FUNC_RETURN . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (107) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) empty -> .
    (116) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (124) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (125) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (126) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (127) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 208
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    IF_KWD          shift and go to state 209
    WHILE_KWD       shift and go to state 212
    FOR_KWD         shift and go to state 213

    FUNC_RETURN                    shift and go to state 204
    FUNC_STATEMENT_STAR            shift and go to state 241
    ASSIGN                         shift and go to state 199
    FUNC_CALL                      shift and go to state 200
    READ                           shift and go to state 201
    WRITE                          shift and go to state 202
    FUNC_FLOW_CONTROL              shift and go to state 203
    empty                          shift and go to state 205
    FUNC_DECISION                  shift and go to state 206
    FUNC_REPETITION                shift and go to state 207
    FUNC_CONDITIONAL_REP           shift and go to state 210
    FUNC_UNCONDITIONAL_REP         shift and go to state 211

state 205

    (37) FUNC_STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 37 (FUNC_STATEMENT_STAR -> empty .)


state 206

    (47) FUNC_FLOW_CONTROL -> FUNC_DECISION .

    ID              reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    READ_KWD        reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    WRITE_KWD       reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    RETURN_KWD      reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    IF_KWD          reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    WHILE_KWD       reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    FOR_KWD         reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)
    CLOSE_CURLY     reduce using rule 47 (FUNC_FLOW_CONTROL -> FUNC_DECISION .)


state 207

    (48) FUNC_FLOW_CONTROL -> FUNC_REPETITION .

    ID              reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    READ_KWD        reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    WRITE_KWD       reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    RETURN_KWD      reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    IF_KWD          reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    WHILE_KWD       reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    FOR_KWD         reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)
    CLOSE_CURLY     reduce using rule 48 (FUNC_FLOW_CONTROL -> FUNC_REPETITION .)


state 208

    (107) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> RETURN_KWD . SEMI_COLON
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    SEMI_COLON      shift and go to state 243
    ID              shift and go to state 245
    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 242
    FUNC_CALL                      shift and go to state 244
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    CNST                           shift and go to state 121

state 209

    (116) FUNC_DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P

    OPEN_PARENTHESIS shift and go to state 246


state 210

    (124) FUNC_REPETITION -> FUNC_CONDITIONAL_REP .

    ID              reduce using rule 124 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    READ_KWD        reduce using rule 124 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 124 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 124 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    IF_KWD          reduce using rule 124 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 124 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 124 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 124 (FUNC_REPETITION -> FUNC_CONDITIONAL_REP .)


state 211

    (125) FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .

    ID              reduce using rule 125 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 125 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 125 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 125 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 125 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 125 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 125 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 125 (FUNC_REPETITION -> FUNC_UNCONDITIONAL_REP .)


state 212

    (126) FUNC_CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (131) seen_while_kwd -> . empty
    (143) empty -> .

    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_while_kwd                 shift and go to state 247
    empty                          shift and go to state 101

state 213

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 248


state 214

    (30) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 30 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 215

    (98) ARG_LIST -> ID seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 98 (ARG_LIST -> ID seen_arg ARG_LIST_P .)


state 216

    (102) ARG_LIST_P -> COMMA . ID seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (104) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    ID              shift and go to state 249
    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 250
    FUNC_CALL                      shift and go to state 251
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    CNST                           shift and go to state 121

state 217

    (105) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 105 (ARG_LIST_P -> empty .)


state 218

    (99) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 99 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 219

    (100) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 100 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 220

    (15) READABLE_LIST_P -> COMMA ID . seen_readable READABLE_LIST_P
    (17) seen_readable -> . empty
    (143) empty -> .

    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_readable                  shift and go to state 252
    empty                          shift and go to state 141

state 221

    (74) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (82) seen_close_parenthesis -> . empty
    (143) empty -> .

    STAR            reduce using rule 143 (empty -> .)
    FWD_SLASH       reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    BIGGER          reduce using rule 143 (empty -> .)
    BIGGER_EQ       reduce using rule 143 (empty -> .)
    SMALLER         reduce using rule 143 (empty -> .)
    SMALLER_EQ      reduce using rule 143 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 143 (empty -> .)
    DIFFERENT       reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)
    SEMI_COLON      reduce using rule 143 (empty -> .)

    seen_close_parenthesis         shift and go to state 253
    empty                          shift and go to state 254

state 222

    (113) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (115) seen_printable -> . empty
    (143) empty -> .

    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_printable                 shift and go to state 255
    empty                          shift and go to state 146

state 223

    (63) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (64) seen_comp -> . empty
    (143) empty -> .

    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)
    SEMI_COLON      reduce using rule 143 (empty -> .)

    seen_comp                      shift and go to state 256
    empty                          shift and go to state 257

state 224

    (58) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 112
    NOT             shift and go to state 259
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    TERM                           shift and go to state 258
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 225

    (59) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 112
    NOT             shift and go to state 259
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    TERM                           shift and go to state 260
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 226

    (56) EXP -> NOT seen_not EXP pop_not .

    BIGGER          reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    BIGGER_EQ       reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER         reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    SMALLER_EQ      reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    DOUBLE_EQUALS   reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    DIFFERENT       reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    AND             reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    OR              reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    COMMA           reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    CLOSE_PARENTHESIS reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)
    SEMI_COLON      reduce using rule 56 (EXP -> NOT seen_not EXP pop_not .)


state 227

    (79) pop_not -> empty .

    BIGGER          reduce using rule 79 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 79 (pop_not -> empty .)
    SMALLER         reduce using rule 79 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 79 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 79 (pop_not -> empty .)
    DIFFERENT       reduce using rule 79 (pop_not -> empty .)
    AND             reduce using rule 79 (pop_not -> empty .)
    OR              reduce using rule 79 (pop_not -> empty .)
    COMMA           reduce using rule 79 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 79 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 79 (pop_not -> empty .)
    STAR            reduce using rule 79 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 79 (pop_not -> empty .)
    PLUS            reduce using rule 79 (pop_not -> empty .)
    MINUS           reduce using rule 79 (pop_not -> empty .)


state 228

    (75) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER_EQ       reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER_EQ      reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DIFFERENT       reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 75 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 229

    (91) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 112
    NOT             shift and go to state 259
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    FACTOR                         shift and go to state 261
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 230

    (92) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 112
    NOT             shift and go to state 259
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    FACTOR                         shift and go to state 262
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 231

    (119) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (143) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (119) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (128) REPETITION -> . CONDITIONAL_REP
    (129) REPETITION -> . UNCONDITIONAL_REP
    (130) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (133) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT_STAR                 shift and go to state 263
    STATEMENT                      shift and go to state 66
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 232

    (130) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 264


state 233

    (132) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 132 (seen_while_exp -> empty .)


state 234

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (136) seen_for_start_exp -> . empty
    (143) empty -> .

    SEMI_COLON      reduce using rule 143 (empty -> .)

    seen_for_start_exp             shift and go to state 265
    empty                          shift and go to state 266

state 235

    (21) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 21 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)


state 236

    (31) FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (107) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) empty -> .
    (116) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (124) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (125) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (126) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (127) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 208
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    IF_KWD          shift and go to state 209
    WHILE_KWD       shift and go to state 212
    FOR_KWD         shift and go to state 213

    ASSIGN                         shift and go to state 199
    FUNC_STATEMENT_STAR            shift and go to state 267
    FUNC_CALL                      shift and go to state 200
    READ                           shift and go to state 201
    WRITE                          shift and go to state 202
    FUNC_FLOW_CONTROL              shift and go to state 203
    FUNC_RETURN                    shift and go to state 204
    empty                          shift and go to state 205
    FUNC_DECISION                  shift and go to state 206
    FUNC_REPETITION                shift and go to state 207
    FUNC_CONDITIONAL_REP           shift and go to state 210
    FUNC_UNCONDITIONAL_REP         shift and go to state 211

state 237

    (32) FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (107) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) empty -> .
    (116) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (124) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (125) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (126) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (127) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 208
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    IF_KWD          shift and go to state 209
    WHILE_KWD       shift and go to state 212
    FOR_KWD         shift and go to state 213

    FUNC_CALL                      shift and go to state 200
    FUNC_STATEMENT_STAR            shift and go to state 268
    ASSIGN                         shift and go to state 199
    READ                           shift and go to state 201
    WRITE                          shift and go to state 202
    FUNC_FLOW_CONTROL              shift and go to state 203
    FUNC_RETURN                    shift and go to state 204
    empty                          shift and go to state 205
    FUNC_DECISION                  shift and go to state 206
    FUNC_REPETITION                shift and go to state 207
    FUNC_CONDITIONAL_REP           shift and go to state 210
    FUNC_UNCONDITIONAL_REP         shift and go to state 211

state 238

    (33) FUNC_STATEMENT_STAR -> READ SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (107) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) empty -> .
    (116) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (124) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (125) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (126) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (127) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 208
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    IF_KWD          shift and go to state 209
    WHILE_KWD       shift and go to state 212
    FOR_KWD         shift and go to state 213

    READ                           shift and go to state 201
    FUNC_STATEMENT_STAR            shift and go to state 269
    ASSIGN                         shift and go to state 199
    FUNC_CALL                      shift and go to state 200
    WRITE                          shift and go to state 202
    FUNC_FLOW_CONTROL              shift and go to state 203
    FUNC_RETURN                    shift and go to state 204
    empty                          shift and go to state 205
    FUNC_DECISION                  shift and go to state 206
    FUNC_REPETITION                shift and go to state 207
    FUNC_CONDITIONAL_REP           shift and go to state 210
    FUNC_UNCONDITIONAL_REP         shift and go to state 211

state 239

    (34) FUNC_STATEMENT_STAR -> WRITE SEMI_COLON . FUNC_STATEMENT_STAR
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (107) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) empty -> .
    (116) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (124) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (125) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (126) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (127) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 208
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    IF_KWD          shift and go to state 209
    WHILE_KWD       shift and go to state 212
    FOR_KWD         shift and go to state 213

    WRITE                          shift and go to state 202
    FUNC_STATEMENT_STAR            shift and go to state 270
    ASSIGN                         shift and go to state 199
    FUNC_CALL                      shift and go to state 200
    READ                           shift and go to state 201
    FUNC_FLOW_CONTROL              shift and go to state 203
    FUNC_RETURN                    shift and go to state 204
    empty                          shift and go to state 205
    FUNC_DECISION                  shift and go to state 206
    FUNC_REPETITION                shift and go to state 207
    FUNC_CONDITIONAL_REP           shift and go to state 210
    FUNC_UNCONDITIONAL_REP         shift and go to state 211

state 240

    (35) FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 35 (FUNC_STATEMENT_STAR -> FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR .)


state 241

    (36) FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 36 (FUNC_STATEMENT_STAR -> FUNC_RETURN FUNC_STATEMENT_STAR .)


state 242

    (107) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 271


state 243

    (109) FUNC_RETURN -> RETURN_KWD SEMI_COLON .

    ID              reduce using rule 109 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    READ_KWD        reduce using rule 109 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WRITE_KWD       reduce using rule 109 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    RETURN_KWD      reduce using rule 109 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    IF_KWD          reduce using rule 109 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WHILE_KWD       reduce using rule 109 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    FOR_KWD         reduce using rule 109 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 109 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)


state 244

    (108) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (76) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 272
    STAR            reduce using rule 76 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 76 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 76 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 76 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 76 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 76 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 76 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 76 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 76 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 76 (FACTOR -> FUNC_CALL .) ]


state 245

    (96) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (77) FACTOR -> ID . seen_id
    (97) seen_func_call_id -> . empty
    (83) seen_id -> .
    (143) empty -> .

    STAR            reduce using rule 83 (seen_id -> .)
    FWD_SLASH       reduce using rule 83 (seen_id -> .)
    PLUS            reduce using rule 83 (seen_id -> .)
    MINUS           reduce using rule 83 (seen_id -> .)
    BIGGER          reduce using rule 83 (seen_id -> .)
    BIGGER_EQ       reduce using rule 83 (seen_id -> .)
    SMALLER         reduce using rule 83 (seen_id -> .)
    SMALLER_EQ      reduce using rule 83 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 83 (seen_id -> .)
    DIFFERENT       reduce using rule 83 (seen_id -> .)
    AND             reduce using rule 83 (seen_id -> .)
    OR              reduce using rule 83 (seen_id -> .)
    SEMI_COLON      reduce using rule 83 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_func_call_id              shift and go to state 89
    seen_id                        shift and go to state 160
    empty                          shift and go to state 90

state 246

    (116) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 273
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 247

    (126) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 274


state 248

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 275


state 249

    (102) ARG_LIST_P -> COMMA ID . seen_arg ARG_LIST_P
    (96) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (77) FACTOR -> ID . seen_id
    (106) seen_arg -> .
    (97) seen_func_call_id -> . empty
    (83) seen_id -> .
    (143) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 83 (seen_id -> .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 83 (seen_id -> .)
    STAR            reduce using rule 83 (seen_id -> .)
    FWD_SLASH       reduce using rule 83 (seen_id -> .)
    PLUS            reduce using rule 83 (seen_id -> .)
    MINUS           reduce using rule 83 (seen_id -> .)
    BIGGER          reduce using rule 83 (seen_id -> .)
    BIGGER_EQ       reduce using rule 83 (seen_id -> .)
    SMALLER         reduce using rule 83 (seen_id -> .)
    SMALLER_EQ      reduce using rule 83 (seen_id -> .)
    DOUBLE_EQUALS   reduce using rule 83 (seen_id -> .)
    DIFFERENT       reduce using rule 83 (seen_id -> .)
    AND             reduce using rule 83 (seen_id -> .)
    OR              reduce using rule 83 (seen_id -> .)
    COMMA           reduce using rule 83 (seen_id -> .)
    CLOSE_PARENTHESIS reduce using rule 83 (seen_id -> .)
    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)

  ! COMMA           [ reduce using rule 106 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 106 (seen_arg -> .) ]

    seen_arg                       shift and go to state 276
    seen_func_call_id              shift and go to state 89
    seen_id                        shift and go to state 160
    empty                          shift and go to state 90

state 250

    (103) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (106) seen_arg -> .

    COMMA           reduce using rule 106 (seen_arg -> .)
    CLOSE_PARENTHESIS reduce using rule 106 (seen_arg -> .)

    seen_arg                       shift and go to state 277

state 251

    (104) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (76) FACTOR -> FUNC_CALL .
    (106) seen_arg -> .

  ! reduce/reduce conflict for COMMA resolved using rule 76 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 76 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 76 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 76 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 76 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 76 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 76 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 76 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 76 (FACTOR -> FUNC_CALL .)
    DIFFERENT       reduce using rule 76 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 76 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 76 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 76 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 76 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 106 (seen_arg -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 106 (seen_arg -> .) ]

    seen_arg                       shift and go to state 278

state 252

    (15) READABLE_LIST_P -> COMMA ID seen_readable . READABLE_LIST_P
    (15) READABLE_LIST_P -> . COMMA ID seen_readable READABLE_LIST_P
    (16) READABLE_LIST_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 176
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    READABLE_LIST_P                shift and go to state 279
    empty                          shift and go to state 177

state 253

    (74) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DIFFERENT       reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 74 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 254

    (82) seen_close_parenthesis -> empty .

    STAR            reduce using rule 82 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 82 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 82 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 82 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 82 (seen_close_parenthesis -> empty .)
    BIGGER_EQ       reduce using rule 82 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 82 (seen_close_parenthesis -> empty .)
    SMALLER_EQ      reduce using rule 82 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 82 (seen_close_parenthesis -> empty .)
    DIFFERENT       reduce using rule 82 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 82 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 82 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 82 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 82 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 82 (seen_close_parenthesis -> empty .)


state 255

    (113) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (113) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (114) PRINTABLE_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 180
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    PRINTABLE_P                    shift and go to state 280
    empty                          shift and go to state 181

state 256

    (63) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    COMMA           reduce using rule 63 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 63 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    SEMI_COLON      reduce using rule 63 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 257

    (64) seen_comp -> empty .

    COMMA           reduce using rule 64 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 64 (seen_comp -> empty .)
    SEMI_COLON      reduce using rule 64 (seen_comp -> empty .)


state 258

    (58) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (57) seen_term -> .

    PLUS            reduce using rule 57 (seen_term -> .)
    MINUS           reduce using rule 57 (seen_term -> .)
    BIGGER          reduce using rule 57 (seen_term -> .)
    BIGGER_EQ       reduce using rule 57 (seen_term -> .)
    SMALLER         reduce using rule 57 (seen_term -> .)
    SMALLER_EQ      reduce using rule 57 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 57 (seen_term -> .)
    DIFFERENT       reduce using rule 57 (seen_term -> .)
    AND             reduce using rule 57 (seen_term -> .)
    OR              reduce using rule 57 (seen_term -> .)
    COMMA           reduce using rule 57 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 57 (seen_term -> .)
    SEMI_COLON      reduce using rule 57 (seen_term -> .)

    seen_term                      shift and go to state 281

state 259

    (75) FACTOR -> NOT . seen_not FACTOR pop_not
    (80) seen_not -> . empty
    (143) empty -> .

    OPEN_PARENTHESIS reduce using rule 143 (empty -> .)
    NOT             reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CTE_S           reduce using rule 143 (empty -> .)
    CTE_F           reduce using rule 143 (empty -> .)
    CTE_I           reduce using rule 143 (empty -> .)

    seen_not                       shift and go to state 282
    empty                          shift and go to state 158

state 260

    (59) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (57) seen_term -> .

    PLUS            reduce using rule 57 (seen_term -> .)
    MINUS           reduce using rule 57 (seen_term -> .)
    BIGGER          reduce using rule 57 (seen_term -> .)
    BIGGER_EQ       reduce using rule 57 (seen_term -> .)
    SMALLER         reduce using rule 57 (seen_term -> .)
    SMALLER_EQ      reduce using rule 57 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 57 (seen_term -> .)
    DIFFERENT       reduce using rule 57 (seen_term -> .)
    AND             reduce using rule 57 (seen_term -> .)
    OR              reduce using rule 57 (seen_term -> .)
    COMMA           reduce using rule 57 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 57 (seen_term -> .)
    SEMI_COLON      reduce using rule 57 (seen_term -> .)

    seen_term                      shift and go to state 283

state 261

    (91) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (94) seen_factor -> .

    STAR            reduce using rule 94 (seen_factor -> .)
    FWD_SLASH       reduce using rule 94 (seen_factor -> .)
    PLUS            reduce using rule 94 (seen_factor -> .)
    MINUS           reduce using rule 94 (seen_factor -> .)
    BIGGER          reduce using rule 94 (seen_factor -> .)
    BIGGER_EQ       reduce using rule 94 (seen_factor -> .)
    SMALLER         reduce using rule 94 (seen_factor -> .)
    SMALLER_EQ      reduce using rule 94 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 94 (seen_factor -> .)
    DIFFERENT       reduce using rule 94 (seen_factor -> .)
    AND             reduce using rule 94 (seen_factor -> .)
    OR              reduce using rule 94 (seen_factor -> .)
    COMMA           reduce using rule 94 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 94 (seen_factor -> .)
    SEMI_COLON      reduce using rule 94 (seen_factor -> .)

    seen_factor                    shift and go to state 284

state 262

    (92) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (94) seen_factor -> .

    STAR            reduce using rule 94 (seen_factor -> .)
    FWD_SLASH       reduce using rule 94 (seen_factor -> .)
    PLUS            reduce using rule 94 (seen_factor -> .)
    MINUS           reduce using rule 94 (seen_factor -> .)
    BIGGER          reduce using rule 94 (seen_factor -> .)
    BIGGER_EQ       reduce using rule 94 (seen_factor -> .)
    SMALLER         reduce using rule 94 (seen_factor -> .)
    SMALLER_EQ      reduce using rule 94 (seen_factor -> .)
    DOUBLE_EQUALS   reduce using rule 94 (seen_factor -> .)
    DIFFERENT       reduce using rule 94 (seen_factor -> .)
    AND             reduce using rule 94 (seen_factor -> .)
    OR              reduce using rule 94 (seen_factor -> .)
    COMMA           reduce using rule 94 (seen_factor -> .)
    CLOSE_PARENTHESIS reduce using rule 94 (seen_factor -> .)
    SEMI_COLON      reduce using rule 94 (seen_factor -> .)

    seen_factor                    shift and go to state 285

state 263

    (119) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 286


state 264

    (130) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (143) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (119) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (128) REPETITION -> . CONDITIONAL_REP
    (129) REPETITION -> . UNCONDITIONAL_REP
    (130) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (133) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT_STAR                 shift and go to state 287
    STATEMENT                      shift and go to state 66
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 265

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 288


state 266

    (136) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 136 (seen_for_start_exp -> empty .)


state 267

    (31) FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 31 (FUNC_STATEMENT_STAR -> ASSIGN SEMI_COLON FUNC_STATEMENT_STAR .)


state 268

    (32) FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 32 (FUNC_STATEMENT_STAR -> FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR .)


state 269

    (33) FUNC_STATEMENT_STAR -> READ SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 33 (FUNC_STATEMENT_STAR -> READ SEMI_COLON FUNC_STATEMENT_STAR .)


state 270

    (34) FUNC_STATEMENT_STAR -> WRITE SEMI_COLON FUNC_STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 34 (FUNC_STATEMENT_STAR -> WRITE SEMI_COLON FUNC_STATEMENT_STAR .)


state 271

    (107) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 107 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 107 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 107 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 107 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 107 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 107 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 107 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 107 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 272

    (108) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    ID              reduce using rule 108 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 108 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 108 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 108 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 108 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 108 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 108 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 108 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 273

    (116) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P

    CLOSE_PARENTHESIS shift and go to state 289


state 274

    (126) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 290
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 275

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (134) seen_for_kwd -> . empty
    (143) empty -> .

    EQUALS          reduce using rule 143 (empty -> .)

    seen_for_kwd                   shift and go to state 291
    empty                          shift and go to state 167

state 276

    (102) ARG_LIST_P -> COMMA ID seen_arg . ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (104) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (105) ARG_LIST_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 216
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    ARG_LIST_P                     shift and go to state 292
    empty                          shift and go to state 217

state 277

    (103) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (104) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (105) ARG_LIST_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 216
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    ARG_LIST_P                     shift and go to state 293
    empty                          shift and go to state 217

state 278

    (104) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (102) ARG_LIST_P -> . COMMA ID seen_arg ARG_LIST_P
    (103) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (104) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (105) ARG_LIST_P -> . empty
    (143) empty -> .

    COMMA           shift and go to state 216
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    ARG_LIST_P                     shift and go to state 294
    empty                          shift and go to state 217

state 279

    (15) READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 15 (READABLE_LIST_P -> COMMA ID seen_readable READABLE_LIST_P .)


state 280

    (113) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 113 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 281

    (58) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (58) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (59) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (60) EXP_P -> . empty
    (143) empty -> .

    PLUS            shift and go to state 185
    MINUS           shift and go to state 186
    BIGGER          reduce using rule 143 (empty -> .)
    BIGGER_EQ       reduce using rule 143 (empty -> .)
    SMALLER         reduce using rule 143 (empty -> .)
    SMALLER_EQ      reduce using rule 143 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 143 (empty -> .)
    DIFFERENT       reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)
    SEMI_COLON      reduce using rule 143 (empty -> .)

    EXP_P                          shift and go to state 295
    empty                          shift and go to state 187

state 282

    (75) FACTOR -> NOT seen_not . FACTOR pop_not
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    OPEN_PARENTHESIS shift and go to state 112
    NOT             shift and go to state 259
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    FACTOR                         shift and go to state 296
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 283

    (59) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (58) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (59) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (60) EXP_P -> . empty
    (143) empty -> .

    PLUS            shift and go to state 185
    MINUS           shift and go to state 186
    BIGGER          reduce using rule 143 (empty -> .)
    BIGGER_EQ       reduce using rule 143 (empty -> .)
    SMALLER         reduce using rule 143 (empty -> .)
    SMALLER_EQ      reduce using rule 143 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 143 (empty -> .)
    DIFFERENT       reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)
    SEMI_COLON      reduce using rule 143 (empty -> .)

    EXP_P                          shift and go to state 297
    empty                          shift and go to state 187

state 284

    (91) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (91) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (92) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (93) TERM_P -> . empty
    (143) empty -> .

    STAR            shift and go to state 191
    FWD_SLASH       shift and go to state 192
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    BIGGER          reduce using rule 143 (empty -> .)
    BIGGER_EQ       reduce using rule 143 (empty -> .)
    SMALLER         reduce using rule 143 (empty -> .)
    SMALLER_EQ      reduce using rule 143 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 143 (empty -> .)
    DIFFERENT       reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)
    SEMI_COLON      reduce using rule 143 (empty -> .)

    TERM_P                         shift and go to state 298
    empty                          shift and go to state 193

state 285

    (92) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (91) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (92) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (93) TERM_P -> . empty
    (143) empty -> .

    STAR            shift and go to state 191
    FWD_SLASH       shift and go to state 192
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    BIGGER          reduce using rule 143 (empty -> .)
    BIGGER_EQ       reduce using rule 143 (empty -> .)
    SMALLER         reduce using rule 143 (empty -> .)
    SMALLER_EQ      reduce using rule 143 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 143 (empty -> .)
    DIFFERENT       reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)
    SEMI_COLON      reduce using rule 143 (empty -> .)

    TERM_P                         shift and go to state 299
    empty                          shift and go to state 193

state 286

    (119) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (120) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (121) DECISION_P -> . empty
    (143) empty -> .

    ELSE_KWD        shift and go to state 301
    ID              reduce using rule 143 (empty -> .)
    READ_KWD        reduce using rule 143 (empty -> .)
    WRITE_KWD       reduce using rule 143 (empty -> .)
    IF_KWD          reduce using rule 143 (empty -> .)
    WHILE_KWD       reduce using rule 143 (empty -> .)
    FOR_KWD         reduce using rule 143 (empty -> .)
    CLOSE_CURLY     reduce using rule 143 (empty -> .)

    DECISION_P                     shift and go to state 300
    empty                          shift and go to state 302

state 287

    (130) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 303


state 288

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 304
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 289

    (116) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (122) seen_if_kwd -> . empty
    (143) empty -> .

    OPEN_CURLY      reduce using rule 143 (empty -> .)

    seen_if_kwd                    shift and go to state 305
    empty                          shift and go to state 195

state 290

    (126) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 306


state 291

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 307


state 292

    (102) ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 102 (ARG_LIST_P -> COMMA ID seen_arg ARG_LIST_P .)


state 293

    (103) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 103 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 294

    (104) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 104 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 295

    (58) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 58 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 296

    (75) FACTOR -> NOT seen_not FACTOR . pop_not
    (79) pop_not -> . empty
    (143) empty -> .

    STAR            reduce using rule 143 (empty -> .)
    FWD_SLASH       reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    BIGGER          reduce using rule 143 (empty -> .)
    BIGGER_EQ       reduce using rule 143 (empty -> .)
    SMALLER         reduce using rule 143 (empty -> .)
    SMALLER_EQ      reduce using rule 143 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 143 (empty -> .)
    DIFFERENT       reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)
    SEMI_COLON      reduce using rule 143 (empty -> .)

    pop_not                        shift and go to state 228
    empty                          shift and go to state 227

state 297

    (59) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DIFFERENT       reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 59 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 298

    (91) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 91 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 299

    (92) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DIFFERENT       reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 92 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 300

    (119) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 119 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 119 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 119 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 119 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 119 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 119 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 119 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 301

    (120) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (123) seen_else_kwd -> . empty
    (143) empty -> .

    OPEN_CURLY      reduce using rule 143 (empty -> .)

    seen_else_kwd                  shift and go to state 308
    empty                          shift and go to state 309

state 302

    (121) DECISION_P -> empty .

    ID              reduce using rule 121 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 121 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 121 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 121 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 121 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 121 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 121 (DECISION_P -> empty .)


state 303

    (130) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 130 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 130 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 130 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 130 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 130 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 130 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 130 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 304

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (137) seen_for_end_exp -> . empty
    (143) empty -> .

    SEMI_COLON      reduce using rule 143 (empty -> .)

    seen_for_end_exp               shift and go to state 310
    empty                          shift and go to state 311

state 305

    (116) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P

    OPEN_CURLY      shift and go to state 312


state 306

    (126) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (132) seen_while_exp -> . empty
    (143) empty -> .

    OPEN_CURLY      reduce using rule 143 (empty -> .)

    seen_while_exp                 shift and go to state 313
    empty                          shift and go to state 233

state 307

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 314
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 308

    (120) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 315


state 309

    (123) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 123 (seen_else_kwd -> empty .)


state 310

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 316


state 311

    (137) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 137 (seen_for_end_exp -> empty .)


state 312

    (116) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (107) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) empty -> .
    (116) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (124) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (125) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (126) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (127) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 208
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    IF_KWD          shift and go to state 209
    WHILE_KWD       shift and go to state 212
    FOR_KWD         shift and go to state 213

    FUNC_STATEMENT_STAR            shift and go to state 317
    ASSIGN                         shift and go to state 199
    FUNC_CALL                      shift and go to state 200
    READ                           shift and go to state 201
    WRITE                          shift and go to state 202
    FUNC_FLOW_CONTROL              shift and go to state 203
    FUNC_RETURN                    shift and go to state 204
    empty                          shift and go to state 205
    FUNC_DECISION                  shift and go to state 206
    FUNC_REPETITION                shift and go to state 207
    FUNC_CONDITIONAL_REP           shift and go to state 210
    FUNC_UNCONDITIONAL_REP         shift and go to state 211

state 313

    (126) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 318


state 314

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (136) seen_for_start_exp -> . empty
    (143) empty -> .

    SEMI_COLON      reduce using rule 143 (empty -> .)

    seen_for_start_exp             shift and go to state 319
    empty                          shift and go to state 266

state 315

    (120) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (143) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (119) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (128) REPETITION -> . CONDITIONAL_REP
    (129) REPETITION -> . UNCONDITIONAL_REP
    (130) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (133) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT_STAR                 shift and go to state 320
    STATEMENT                      shift and go to state 66
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 316

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (49) FOR_INCR_STATEMENT -> . ASSIGN
    (50) FOR_INCR_STATEMENT -> . FUNC_CALL
    (51) FOR_INCR_STATEMENT -> . READ
    (52) FOR_INCR_STATEMENT -> . WRITE
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74

    FOR_INCR_STATEMENT             shift and go to state 321
    ASSIGN                         shift and go to state 322
    FUNC_CALL                      shift and go to state 323
    READ                           shift and go to state 324
    WRITE                          shift and go to state 325

state 317

    (116) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY FUNC_DECISION_P

    CLOSE_CURLY     shift and go to state 326


state 318

    (126) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (107) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) empty -> .
    (116) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (124) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (125) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (126) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (127) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 208
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    IF_KWD          shift and go to state 209
    WHILE_KWD       shift and go to state 212
    FOR_KWD         shift and go to state 213

    FUNC_STATEMENT_STAR            shift and go to state 327
    ASSIGN                         shift and go to state 199
    FUNC_CALL                      shift and go to state 200
    READ                           shift and go to state 201
    WRITE                          shift and go to state 202
    FUNC_FLOW_CONTROL              shift and go to state 203
    FUNC_RETURN                    shift and go to state 204
    empty                          shift and go to state 205
    FUNC_DECISION                  shift and go to state 206
    FUNC_REPETITION                shift and go to state 207
    FUNC_CONDITIONAL_REP           shift and go to state 210
    FUNC_UNCONDITIONAL_REP         shift and go to state 211

state 319

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 328


state 320

    (120) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 329


state 321

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (135) seen_for_incr_exp -> . empty
    (143) empty -> .

    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_for_incr_exp              shift and go to state 330
    empty                          shift and go to state 331

state 322

    (49) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 49 (FOR_INCR_STATEMENT -> ASSIGN .)


state 323

    (50) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 50 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 324

    (51) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 51 (FOR_INCR_STATEMENT -> READ .)


state 325

    (52) FOR_INCR_STATEMENT -> WRITE .

    CLOSE_PARENTHESIS reduce using rule 52 (FOR_INCR_STATEMENT -> WRITE .)


state 326

    (116) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY . FUNC_DECISION_P
    (117) FUNC_DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (118) FUNC_DECISION_P -> . empty
    (143) empty -> .

    ELSE_KWD        shift and go to state 333
    ID              reduce using rule 143 (empty -> .)
    READ_KWD        reduce using rule 143 (empty -> .)
    WRITE_KWD       reduce using rule 143 (empty -> .)
    RETURN_KWD      reduce using rule 143 (empty -> .)
    IF_KWD          reduce using rule 143 (empty -> .)
    WHILE_KWD       reduce using rule 143 (empty -> .)
    FOR_KWD         reduce using rule 143 (empty -> .)
    CLOSE_CURLY     reduce using rule 143 (empty -> .)

    FUNC_DECISION_P                shift and go to state 332
    empty                          shift and go to state 334

state 327

    (126) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 335


state 328

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (62) EXPRESSION -> . EXP
    (63) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (55) EXP -> . TERM seen_term EXP_P
    (56) EXP -> . NOT seen_not EXP pop_not
    (90) TERM -> . FACTOR seen_factor TERM_P
    (74) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (75) FACTOR -> . NOT seen_not FACTOR pop_not
    (76) FACTOR -> . FUNC_CALL
    (77) FACTOR -> . ID seen_id
    (78) FACTOR -> . CNST
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (87) CNST -> . CTE_S seen_cte_s
    (88) CNST -> . CTE_F seen_cte_f
    (89) CNST -> . CTE_I seen_cte_i

    NOT             shift and go to state 117
    OPEN_PARENTHESIS shift and go to state 112
    ID              shift and go to state 120
    CTE_S           shift and go to state 122
    CTE_F           shift and go to state 123
    CTE_I           shift and go to state 124

    EXPRESSION                     shift and go to state 336
    EXP                            shift and go to state 115
    TERM                           shift and go to state 116
    FACTOR                         shift and go to state 118
    FUNC_CALL                      shift and go to state 119
    CNST                           shift and go to state 121

state 329

    (120) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 120 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 120 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 120 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 120 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 120 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 120 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 120 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 330

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 337


state 331

    (135) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 135 (seen_for_incr_exp -> empty .)


state 332

    (116) FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .

    ID              reduce using rule 116 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    READ_KWD        reduce using rule 116 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    WRITE_KWD       reduce using rule 116 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    RETURN_KWD      reduce using rule 116 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    IF_KWD          reduce using rule 116 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    WHILE_KWD       reduce using rule 116 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    FOR_KWD         reduce using rule 116 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)
    CLOSE_CURLY     reduce using rule 116 (FUNC_DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P .)


state 333

    (117) FUNC_DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (123) seen_else_kwd -> . empty
    (143) empty -> .

    OPEN_CURLY      reduce using rule 143 (empty -> .)

    seen_else_kwd                  shift and go to state 338
    empty                          shift and go to state 309

state 334

    (118) FUNC_DECISION_P -> empty .

    ID              reduce using rule 118 (FUNC_DECISION_P -> empty .)
    READ_KWD        reduce using rule 118 (FUNC_DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 118 (FUNC_DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 118 (FUNC_DECISION_P -> empty .)
    IF_KWD          reduce using rule 118 (FUNC_DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 118 (FUNC_DECISION_P -> empty .)
    FOR_KWD         reduce using rule 118 (FUNC_DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 118 (FUNC_DECISION_P -> empty .)


state 335

    (126) FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 126 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 126 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 126 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 126 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 126 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 126 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 126 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 126 (FUNC_CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)


state 336

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (137) seen_for_end_exp -> . empty
    (143) empty -> .

    SEMI_COLON      reduce using rule 143 (empty -> .)

    seen_for_end_exp               shift and go to state 339
    empty                          shift and go to state 311

state 337

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 340


state 338

    (117) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 341


state 339

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 342


state 340

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (38) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (39) STATEMENT_STAR -> . empty
    (40) STATEMENT -> . ASSIGN SEMI_COLON
    (41) STATEMENT -> . FUNC_CALL SEMI_COLON
    (42) STATEMENT -> . READ SEMI_COLON
    (43) STATEMENT -> . WRITE SEMI_COLON
    (44) STATEMENT -> . FLOW_CONTROL
    (143) empty -> .
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (45) FLOW_CONTROL -> . DECISION
    (46) FLOW_CONTROL -> . REPETITION
    (119) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (128) REPETITION -> . CONDITIONAL_REP
    (129) REPETITION -> . UNCONDITIONAL_REP
    (130) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (133) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    IF_KWD          shift and go to state 77
    WHILE_KWD       shift and go to state 80
    FOR_KWD         shift and go to state 81

    STATEMENT_STAR                 shift and go to state 343
    STATEMENT                      shift and go to state 66
    empty                          shift and go to state 67
    ASSIGN                         shift and go to state 68
    FUNC_CALL                      shift and go to state 69
    READ                           shift and go to state 70
    WRITE                          shift and go to state 71
    FLOW_CONTROL                   shift and go to state 72
    DECISION                       shift and go to state 75
    REPETITION                     shift and go to state 76
    CONDITIONAL_REP                shift and go to state 78
    UNCONDITIONAL_REP              shift and go to state 79

state 341

    (117) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (107) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) empty -> .
    (116) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (124) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (125) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (126) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (127) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 208
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    IF_KWD          shift and go to state 209
    WHILE_KWD       shift and go to state 212
    FOR_KWD         shift and go to state 213

    FUNC_STATEMENT_STAR            shift and go to state 344
    ASSIGN                         shift and go to state 199
    FUNC_CALL                      shift and go to state 200
    READ                           shift and go to state 201
    WRITE                          shift and go to state 202
    FUNC_FLOW_CONTROL              shift and go to state 203
    FUNC_RETURN                    shift and go to state 204
    empty                          shift and go to state 205
    FUNC_DECISION                  shift and go to state 206
    FUNC_REPETITION                shift and go to state 207
    FUNC_CONDITIONAL_REP           shift and go to state 210
    FUNC_UNCONDITIONAL_REP         shift and go to state 211

state 342

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (49) FOR_INCR_STATEMENT -> . ASSIGN
    (50) FOR_INCR_STATEMENT -> . FUNC_CALL
    (51) FOR_INCR_STATEMENT -> . READ
    (52) FOR_INCR_STATEMENT -> . WRITE
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74

    FOR_INCR_STATEMENT             shift and go to state 345
    ASSIGN                         shift and go to state 322
    FUNC_CALL                      shift and go to state 323
    READ                           shift and go to state 324
    WRITE                          shift and go to state 325

state 343

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 346


state 344

    (117) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 347


state 345

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (135) seen_for_incr_exp -> . empty
    (143) empty -> .

    CLOSE_PARENTHESIS reduce using rule 143 (empty -> .)

    seen_for_incr_exp              shift and go to state 348
    empty                          shift and go to state 331

state 346

    (133) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 133 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 133 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 133 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 133 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 133 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 133 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 133 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 347

    (117) FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 117 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 117 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 117 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 117 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 117 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 117 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 117 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 117 (FUNC_DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)


state 348

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 349


state 349

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 350


state 350

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . FUNC_STATEMENT_STAR CLOSE_CURLY
    (31) FUNC_STATEMENT_STAR -> . ASSIGN SEMI_COLON FUNC_STATEMENT_STAR
    (32) FUNC_STATEMENT_STAR -> . FUNC_CALL SEMI_COLON FUNC_STATEMENT_STAR
    (33) FUNC_STATEMENT_STAR -> . READ SEMI_COLON FUNC_STATEMENT_STAR
    (34) FUNC_STATEMENT_STAR -> . WRITE SEMI_COLON FUNC_STATEMENT_STAR
    (35) FUNC_STATEMENT_STAR -> . FUNC_FLOW_CONTROL FUNC_STATEMENT_STAR
    (36) FUNC_STATEMENT_STAR -> . FUNC_RETURN FUNC_STATEMENT_STAR
    (37) FUNC_STATEMENT_STAR -> . empty
    (53) ASSIGN -> . ID seen_id EQUALS seen_equals EXPRESSION
    (96) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (110) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (111) WRITE -> . WRITE_KWD OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (47) FUNC_FLOW_CONTROL -> . FUNC_DECISION
    (48) FUNC_FLOW_CONTROL -> . FUNC_REPETITION
    (107) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (108) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (109) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (143) empty -> .
    (116) FUNC_DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY FUNC_DECISION_P
    (124) FUNC_REPETITION -> . FUNC_CONDITIONAL_REP
    (125) FUNC_REPETITION -> . FUNC_UNCONDITIONAL_REP
    (126) FUNC_CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY
    (127) FUNC_UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 64
    READ_KWD        shift and go to state 73
    WRITE_KWD       shift and go to state 74
    RETURN_KWD      shift and go to state 208
    CLOSE_CURLY     reduce using rule 143 (empty -> .)
    IF_KWD          shift and go to state 209
    WHILE_KWD       shift and go to state 212
    FOR_KWD         shift and go to state 213

    FUNC_STATEMENT_STAR            shift and go to state 351
    ASSIGN                         shift and go to state 199
    FUNC_CALL                      shift and go to state 200
    READ                           shift and go to state 201
    WRITE                          shift and go to state 202
    FUNC_FLOW_CONTROL              shift and go to state 203
    FUNC_RETURN                    shift and go to state 204
    empty                          shift and go to state 205
    FUNC_DECISION                  shift and go to state 206
    FUNC_REPETITION                shift and go to state 207
    FUNC_CONDITIONAL_REP           shift and go to state 210
    FUNC_UNCONDITIONAL_REP         shift and go to state 211

state 351

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 352


state 352

    (127) FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 127 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 127 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 127 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 127 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 127 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 127 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 127 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 127 (FUNC_UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS ID seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY FUNC_STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMI_COLON in state 244 resolved as shift
WARNING: reduce/reduce conflict in state 134 resolved using rule (seen_id -> <empty>)
WARNING: rejected rule (seen_arg -> <empty>) in state 134
WARNING: reduce/reduce conflict in state 137 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (seen_arg -> <empty>) in state 137
WARNING: reduce/reduce conflict in state 189 resolved using rule (seen_factor -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 189
WARNING: reduce/reduce conflict in state 249 resolved using rule (seen_id -> <empty>)
WARNING: rejected rule (seen_arg -> <empty>) in state 249
WARNING: reduce/reduce conflict in state 251 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (seen_arg -> <empty>) in state 251
