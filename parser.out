Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
Rule 2     STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION
Rule 3     STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION
Rule 4     STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION
Rule 5     STRUCTURE_DEFINITION -> empty
Rule 6     seen_program_id -> empty
Rule 7     seen_main_kwd -> empty
Rule 8     CLASS_STAR -> CLASS CLASS_STAR
Rule 9     CLASS_STAR -> empty
Rule 10    CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
Rule 11    seen_class_id_declaration -> empty
Rule 12    seen_class_attr -> empty
Rule 13    CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 14    VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR
Rule 15    VAR_LIST_STAR -> empty
Rule 16    VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON
Rule 17    SYMBOL_LIST -> ID SYMBOL_LIST_P
Rule 18    SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P
Rule 19    SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P
Rule 20    SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P
Rule 21    SYMBOL_LIST_P -> COMMA
Rule 22    SYMBOL_LIST_P -> empty
Rule 23    READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 24    READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
Rule 25    READABLE_LIST_P -> empty
Rule 26    seen_readable -> empty
Rule 27    GLOBAL_VAR -> VAR_LIST_STAR
Rule 28    FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR
Rule 29    FUNC_DEF_STAR -> empty
Rule 30    FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 31    seen_func_id -> empty
Rule 32    seen_func_params -> empty
Rule 33    seen_func_vars -> empty
Rule 34    FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P
Rule 35    FUNC_PARAM -> empty
Rule 36    FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P
Rule 37    FUNC_PARAM_P -> empty
Rule 38    ARG_DECLARATION -> ID COLON TYPE
Rule 39    VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY
Rule 40    STATEMENT_STAR -> STATEMENT STATEMENT_STAR
Rule 41    STATEMENT_STAR -> empty
Rule 42    STATEMENT -> ASSIGN SEMI_COLON
Rule 43    STATEMENT -> FUNC_CALL SEMI_COLON
Rule 44    STATEMENT -> READ SEMI_COLON
Rule 45    STATEMENT -> PRINT SEMI_COLON
Rule 46    STATEMENT -> PRINTLN SEMI_COLON
Rule 47    STATEMENT -> OPEN SEMI_COLON
Rule 48    STATEMENT -> WRITE SEMI_COLON
Rule 49    STATEMENT -> USING SEMI_COLON
Rule 50    STATEMENT -> FLOW_CONTROL
Rule 51    STATEMENT -> FUNC_RETURN
Rule 52    USING -> USING_KWD ID AS_KWD ID
Rule 53    OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 54    seen_open_buffer -> empty
Rule 55    WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
Rule 56    seen_write_buffer -> empty
Rule 57    seen_file_path -> empty
Rule 58    seen_separator -> empty
Rule 59    FLOW_CONTROL -> DECISION
Rule 60    FLOW_CONTROL -> REPETITION
Rule 61    FOR_INCR_STATEMENT -> ASSIGN
Rule 62    FOR_INCR_STATEMENT -> FUNC_CALL
Rule 63    FOR_INCR_STATEMENT -> READ
Rule 64    FOR_INCR_STATEMENT -> PRINT
Rule 65    FOR_INCR_STATEMENT -> PRINTLN
Rule 66    ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
Rule 67    ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
Rule 68    ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
Rule 69    ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
Rule 70    ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
Rule 71    ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
Rule 72    ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
Rule 73    seen_equals -> empty
Rule 74    seen_plus_equals -> empty
Rule 75    seen_minus_equals -> empty
Rule 76    seen_times_equals -> empty
Rule 77    seen_over_equals -> empty
Rule 78    seen_plus_plus -> empty
Rule 79    seen_minus_minus -> empty
Rule 80    EXP -> TERM seen_term EXP_P
Rule 81    EXP -> MINUS seen_unary_minus EXP pop_unary_minus
Rule 82    seen_term -> <empty>
Rule 83    EXP_P -> PLUS seen_term_op TERM seen_term EXP_P
Rule 84    EXP_P -> MINUS seen_term_op TERM seen_term EXP_P
Rule 85    EXP_P -> empty
Rule 86    seen_term_op -> <empty>
Rule 87    EXPRESSION -> EXP
Rule 88    EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp
Rule 89    seen_comp -> empty
Rule 90    seen_comp_op -> empty
Rule 91    COMP -> BIGGER
Rule 92    COMP -> BIGGER_EQ
Rule 93    COMP -> SMALLER
Rule 94    COMP -> SMALLER_EQ
Rule 95    COMP -> DOUBLE_EQUALS
Rule 96    COMP -> NOT_EQUALS
Rule 97    COMP -> AND
Rule 98    COMP -> OR
Rule 99    FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
Rule 100   FACTOR -> NOT seen_not FACTOR pop_not
Rule 101   FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus
Rule 102   FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 103   FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 104   FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
Rule 105   FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
Rule 106   FACTOR -> FUNC_CALL
Rule 107   FACTOR -> CLASS_INSTANCE
Rule 108   FACTOR -> VAR seen_var_as_factor
Rule 109   FACTOR -> CONSTANT
Rule 110   seen_substr_str -> empty
Rule 111   seen_substr_idx -> empty
Rule 112   seen_substr_size -> empty
Rule 113   seen_substr -> empty
Rule 114   seen_stox_factor -> empty
Rule 115   seen_stoi_kwd -> empty
Rule 116   seen_stof_kwd -> empty
Rule 117   seen_stob_kwd -> empty
Rule 118   pop_not -> empty
Rule 119   seen_not -> empty
Rule 120   pop_unary_minus -> empty
Rule 121   seen_unary_minus -> empty
Rule 122   seen_open_parenthesis -> empty
Rule 123   seen_close_parenthesis -> empty
Rule 124   seen_var_in_assign -> empty
Rule 125   seen_var_as_factor -> empty
Rule 126   seen_var_in_io -> empty
Rule 127   seen_cte_i -> empty
Rule 128   seen_cte_f -> empty
Rule 129   seen_cte_s -> empty
Rule 130   seen_cte_false -> empty
Rule 131   seen_cte_true -> empty
Rule 132   CONSTANT -> CTE_I seen_cte_i
Rule 133   CONSTANT -> CTE_F seen_cte_f
Rule 134   CONSTANT -> CTE_S seen_cte_s
Rule 135   CONSTANT -> CTE_B
Rule 136   CTE_B -> CTE_TRUE seen_cte_true
Rule 137   CTE_B -> CTE_FALSE seen_cte_false
Rule 138   CLASS_REFERENCE -> ID DOT seen_dot_operator
Rule 139   CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator
Rule 140   seen_this_kwd -> empty
Rule 141   VAR -> ID
Rule 142   VAR -> ARRAY
Rule 143   VAR -> CLASS_REFERENCE VAR
Rule 144   CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 145   seen_class_id_instance -> empty
Rule 146   seen_dot_operator -> empty
Rule 147   seen_this_dot_operator -> empty
Rule 148   ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 149   ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
Rule 150   ARRAY_P -> empty
Rule 151   seen_array_id -> empty
Rule 152   seen_open_bracket -> empty
Rule 153   seen_array_access -> empty
Rule 154   ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
Rule 155   ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
Rule 156   ARRAY_DECLARATION_P -> empty
Rule 157   seen_array_def_id -> empty
Rule 158   seen_array_def_dim -> empty
Rule 159   TERM -> FACTOR seen_factor TERM_P
Rule 160   TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P
Rule 161   TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
Rule 162   TERM_P -> empty
Rule 163   seen_factor -> empty
Rule 164   seen_factor_op -> empty
Rule 165   FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
Rule 166   FUNC_CALL -> CLASS_REFERENCE FUNC_CALL
Rule 167   seen_func_call_id -> empty
Rule 168   ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 169   ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P
Rule 170   ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P
Rule 171   ARG_LIST -> empty
Rule 172   ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
Rule 173   ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P
Rule 174   ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P
Rule 175   ARG_LIST_P -> empty
Rule 176   seen_arg -> empty
Rule 177   FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON
Rule 178   FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON
Rule 179   FUNC_RETURN -> RETURN_KWD SEMI_COLON
Rule 180   READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
Rule 181   PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 182   seen_print_kwd -> empty
Rule 183   PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
Rule 184   seen_println_kwd -> empty
Rule 185   PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P
Rule 186   PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P
Rule 187   PRINTABLE_P -> empty
Rule 188   seen_printable -> empty
Rule 189   DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
Rule 190   DECISION_P -> ELSE_KWD seen_else_kwd DECISION
Rule 191   DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 192   DECISION_P -> empty
Rule 193   seen_if_kwd -> empty
Rule 194   seen_else_kwd -> empty
Rule 195   REPETITION -> CONDITIONAL_REP
Rule 196   REPETITION -> UNCONDITIONAL_REP
Rule 197   CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 198   seen_while_kwd -> empty
Rule 199   seen_while_exp -> empty
Rule 200   UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
Rule 201   seen_for_kwd -> empty
Rule 202   seen_for_incr_exp -> empty
Rule 203   seen_for_start_exp -> empty
Rule 204   seen_for_end_exp -> empty
Rule 205   TYPE -> TYPE_I
Rule 206   TYPE -> TYPE_F
Rule 207   TYPE -> TYPE_S
Rule 208   TYPE -> TYPE_B
Rule 209   TYPE -> TYPE_O
Rule 210   TYPE -> TYPE_V
Rule 211   empty -> <empty>

Terminals, with rules where they appear

AND                  : 97
AS_KWD               : 52
ATTR_KWD             : 13
BIGGER               : 91
BIGGER_EQ            : 92
CLASS_KWD            : 10
CLOSE_BRACKET        : 148 149 154 155
CLOSE_CURLY          : 1 10 13 30 39 189 191 197 200
CLOSE_PARENTHESIS    : 1 30 53 55 99 102 103 104 105 144 165 180 181 183 189 197 200
COLON                : 16 38
COMMA                : 19 20 21 24 36 53 53 55 55 105 105 172 173 174 186
CTE_F                : 133
CTE_FALSE            : 137
CTE_I                : 132 154 155
CTE_S                : 134
CTE_TRUE             : 136
DOT                  : 138 139
DOUBLE_EQUALS        : 95
ELSE_KWD             : 190 191
EQUALS               : 66 200
FOR_KWD              : 200
FWD_SLASH            : 161
ID                   : 1 10 17 19 30 38 52 52 138 141 144 148 154 165
IF_KWD               : 189
MAIN_KWD             : 1
MINUS                : 81 84 101
MINUS_EQUALS         : 68
MINUS_MINUS          : 72
NEW_KWD              : 144
NOT                  : 100
NOT_EQUALS           : 96
OPEN_BRACKET         : 148 149 154 155
OPEN_CURLY           : 1 10 13 30 39 189 191 197 200
OPEN_KWD             : 53
OPEN_PARENTHESIS     : 1 30 53 55 99 102 103 104 105 144 165 180 181 183 189 197 200
OR                   : 98
OVER_EQUALS          : 70
PLUS                 : 83
PLUS_EQUALS          : 67
PLUS_PLUS            : 71
PRINTLN_KWD          : 183
PRINT_KWD            : 181
PROGRAM_KWD          : 1
READ_KWD             : 180
RETURN_KWD           : 177 178 179
SEMI_COLON           : 1 16 42 43 44 45 46 47 48 49 177 178 179 200 200
SMALLER              : 93
SMALLER_EQ           : 94
STAR                 : 160
STOB_KWD             : 104
STOF_KWD             : 103
STOI_KWD             : 102
SUBSTR_KWD           : 105
THIS_KWD             : 139
TIMES_EQUALS         : 69
TYPE_B               : 208
TYPE_F               : 206
TYPE_I               : 205
TYPE_O               : 209
TYPE_S               : 207
TYPE_V               : 210
USING_KWD            : 52
VARS_KWD             : 39
WHILE_KWD            : 197
WRITE_KWD            : 55
error                : 

Nonterminals, with rules where they appear

ARG_DECLARATION      : 34 36
ARG_LIST             : 165
ARG_LIST_P           : 168 169 170 172 173 174
ARRAY                : 142
ARRAY_DECLARATION    : 18 20
ARRAY_DECLARATION_P  : 154 155
ARRAY_P              : 148 149
ASSIGN               : 42 61
CLASS                : 8
CLASS_ATTR           : 10
CLASS_INSTANCE       : 107
CLASS_REFERENCE      : 143 166
CLASS_STAR           : 3 8
COMP                 : 88
CONDITIONAL_REP      : 195
CONSTANT             : 109
CTE_B                : 135
DECISION             : 59 190
DECISION_P           : 189
EXP                  : 81 87 88
EXPRESSION           : 53 53 55 55 66 67 68 69 70 88 99 102 103 104 105 105 105 148 149 169 173 177 185 186 189 197 200 200
EXP_P                : 80 83 84
FACTOR               : 100 101 159 160 161
FLOW_CONTROL         : 50
FOR_INCR_STATEMENT   : 200
FUNC_CALL            : 43 62 106 166 170 174 178
FUNC_DEF             : 28
FUNC_DEF_STAR        : 4 10 28
FUNC_PARAM           : 30
FUNC_PARAM_P         : 34 36
FUNC_RETURN          : 51
GLOBAL_VAR           : 2
OPEN                 : 47
PRINT                : 45 64
PRINTABLE            : 181 183
PRINTABLE_P          : 185 186
PRINTLN              : 46 65
PROGRAM              : 0
READ                 : 44 63
READABLE_LIST        : 180
READABLE_LIST_P      : 23 24
REPETITION           : 60
STATEMENT            : 40
STATEMENT_STAR       : 1 30 40 189 191 197 200
STRUCTURE_DEFINITION : 1 2 3 4
SYMBOL_LIST          : 16
SYMBOL_LIST_P        : 17 18 19 20
TERM                 : 80 83 84
TERM_P               : 159 160 161
TYPE                 : 16 30 38
UNCONDITIONAL_REP    : 196
USING                : 49
VAR                  : 23 24 53 55 66 67 68 69 70 71 72 108 143 168 172 200
VARS                 : 30
VAR_LIST             : 14
VAR_LIST_STAR        : 13 14 27 39
WRITE                : 48
empty                : 5 6 7 9 11 12 15 22 25 26 29 31 32 33 35 37 41 54 56 57 58 73 74 75 76 77 78 79 85 89 90 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 140 145 146 147 150 151 152 153 156 157 158 162 163 164 167 171 175 176 182 184 187 188 192 193 194 198 199 201 202 203 204
pop_not              : 100
pop_unary_minus      : 81 101
seen_arg             : 168 169 170 172 173 174
seen_array_access    : 148 149
seen_array_def_dim   : 154 155
seen_array_def_id    : 154
seen_array_id        : 148
seen_class_attr      : 10
seen_class_id_declaration : 10
seen_class_id_instance : 144
seen_close_parenthesis : 99 102 103 104 105
seen_comp            : 88
seen_comp_op         : 88
seen_cte_f           : 133
seen_cte_false       : 137
seen_cte_i           : 132 154 155
seen_cte_s           : 134
seen_cte_true        : 136
seen_dot_operator    : 138
seen_else_kwd        : 190 191
seen_equals          : 66
seen_factor          : 159 160 161
seen_factor_op       : 160 161
seen_file_path       : 53 55
seen_for_end_exp     : 200
seen_for_incr_exp    : 200
seen_for_kwd         : 200
seen_for_start_exp   : 200
seen_func_call_id    : 165
seen_func_id         : 30
seen_func_params     : 30
seen_func_vars       : 30
seen_if_kwd          : 189
seen_main_kwd        : 1
seen_minus_equals    : 68
seen_minus_minus     : 72
seen_not             : 100
seen_open_bracket    : 148 149
seen_open_buffer     : 53
seen_open_parenthesis : 99 102 103 104 105
seen_over_equals     : 70
seen_plus_equals     : 67
seen_plus_plus       : 71
seen_print_kwd       : 181
seen_printable       : 185 186
seen_println_kwd     : 183
seen_program_id      : 1
seen_readable        : 23 24
seen_separator       : 53 55
seen_stob_kwd        : 104
seen_stof_kwd        : 103
seen_stoi_kwd        : 102
seen_stox_factor     : 102 103 104
seen_substr          : 105
seen_substr_idx      : 105
seen_substr_size     : 105
seen_substr_str      : 105
seen_term            : 80 83 84
seen_term_op         : 83 84
seen_this_dot_operator : 139
seen_this_kwd        : 139
seen_times_equals    : 69
seen_unary_minus     : 81 101
seen_var_as_factor   : 108 168 172
seen_var_in_assign   : 23 24 66 67 68 69 70 71 72
seen_var_in_io       : 53 55
seen_while_exp       : 197
seen_while_kwd       : 197
seen_write_buffer    : 55

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    PROGRAM_KWD     shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> PROGRAM_KWD . ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> PROGRAM_KWD ID . seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (6) seen_program_id -> . empty
    (211) empty -> .

    SEMI_COLON      reduce using rule 211 (empty -> .)

    seen_program_id                shift and go to state 4
    empty                          shift and go to state 5

state 4

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id . SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 6


state 5

    (6) seen_program_id -> empty .

    SEMI_COLON      reduce using rule 6 (seen_program_id -> empty .)


state 6

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON . STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (211) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (205) TYPE -> . TYPE_I
    (206) TYPE -> . TYPE_F
    (207) TYPE -> . TYPE_S
    (208) TYPE -> . TYPE_B
    (209) TYPE -> . TYPE_O
    (210) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (154) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 211 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 211 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 211 (empty -> .) ]
  ! ID              [ reduce using rule 211 (empty -> .) ]

    STRUCTURE_DEFINITION           shift and go to state 8
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 7

    (17) SYMBOL_LIST -> ID . SYMBOL_LIST_P
    (154) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (157) seen_array_def_id -> . empty
    (211) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 211 (empty -> .)
    OPEN_BRACKET    reduce using rule 211 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 27
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 8

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION . MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    MAIN_KWD        shift and go to state 31


state 9

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (211) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (205) TYPE -> . TYPE_I
    (206) TYPE -> . TYPE_F
    (207) TYPE -> . TYPE_S
    (208) TYPE -> . TYPE_B
    (209) TYPE -> . TYPE_O
    (210) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (154) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 211 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 211 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 211 (empty -> .) ]
  ! ID              [ reduce using rule 211 (empty -> .) ]

    GLOBAL_VAR                     shift and go to state 9
    STRUCTURE_DEFINITION           shift and go to state 32
    CLASS_STAR                     shift and go to state 10
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 10

    (3) STRUCTURE_DEFINITION -> CLASS_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (211) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (205) TYPE -> . TYPE_I
    (206) TYPE -> . TYPE_F
    (207) TYPE -> . TYPE_S
    (208) TYPE -> . TYPE_B
    (209) TYPE -> . TYPE_O
    (210) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (154) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 211 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 211 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 211 (empty -> .) ]
  ! ID              [ reduce using rule 211 (empty -> .) ]

    CLASS_STAR                     shift and go to state 10
    STRUCTURE_DEFINITION           shift and go to state 33
    GLOBAL_VAR                     shift and go to state 9
    FUNC_DEF_STAR                  shift and go to state 11
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 11

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR . STRUCTURE_DEFINITION
    (2) STRUCTURE_DEFINITION -> . GLOBAL_VAR STRUCTURE_DEFINITION
    (3) STRUCTURE_DEFINITION -> . CLASS_STAR STRUCTURE_DEFINITION
    (4) STRUCTURE_DEFINITION -> . FUNC_DEF_STAR STRUCTURE_DEFINITION
    (5) STRUCTURE_DEFINITION -> . empty
    (27) GLOBAL_VAR -> . VAR_LIST_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (211) empty -> .
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (205) TYPE -> . TYPE_I
    (206) TYPE -> . TYPE_F
    (207) TYPE -> . TYPE_S
    (208) TYPE -> . TYPE_B
    (209) TYPE -> . TYPE_O
    (210) TYPE -> . TYPE_V
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (154) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for CLASS_KWD resolved as shift
  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MAIN_KWD        reduce using rule 211 (empty -> .)
    CLASS_KWD       shift and go to state 17
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25
    ID              shift and go to state 7

  ! CLASS_KWD       [ reduce using rule 211 (empty -> .) ]
  ! TYPE_I          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 211 (empty -> .) ]
  ! ID              [ reduce using rule 211 (empty -> .) ]

    FUNC_DEF_STAR                  shift and go to state 11
    STRUCTURE_DEFINITION           shift and go to state 34
    GLOBAL_VAR                     shift and go to state 9
    CLASS_STAR                     shift and go to state 10
    empty                          shift and go to state 12
    VAR_LIST_STAR                  shift and go to state 13
    CLASS                          shift and go to state 14
    FUNC_DEF                       shift and go to state 15
    VAR_LIST                       shift and go to state 16
    TYPE                           shift and go to state 18
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 12

    (5) STRUCTURE_DEFINITION -> empty .
    (9) CLASS_STAR -> empty .
    (29) FUNC_DEF_STAR -> empty .
    (15) VAR_LIST_STAR -> empty .

  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
  ! reduce/reduce conflict for CLASS_KWD resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_I resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_F resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_S resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_B resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_O resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for TYPE_V resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 9 (CLASS_STAR -> empty .)
  ! reduce/reduce conflict for MAIN_KWD resolved using rule 5 (STRUCTURE_DEFINITION -> empty .)
    MAIN_KWD        reduce using rule 5 (STRUCTURE_DEFINITION -> empty .)
    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)

  ! MAIN_KWD        [ reduce using rule 9 (CLASS_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! ID              [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 29 (FUNC_DEF_STAR -> empty .) ]
  ! CLASS_KWD       [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_I          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_F          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_S          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_B          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_O          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! TYPE_V          [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! ID              [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]
  ! MAIN_KWD        [ reduce using rule 15 (VAR_LIST_STAR -> empty .) ]


state 13

    (27) GLOBAL_VAR -> VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_I          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_F          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_S          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_B          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_O          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    TYPE_V          reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    ID              reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 27 (GLOBAL_VAR -> VAR_LIST_STAR .)


state 14

    (8) CLASS_STAR -> CLASS . CLASS_STAR
    (8) CLASS_STAR -> . CLASS CLASS_STAR
    (9) CLASS_STAR -> . empty
    (10) CLASS -> . CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (211) empty -> .

  ! shift/reduce conflict for CLASS_KWD resolved as shift
    CLASS_KWD       shift and go to state 17
    TYPE_I          reduce using rule 211 (empty -> .)
    TYPE_F          reduce using rule 211 (empty -> .)
    TYPE_S          reduce using rule 211 (empty -> .)
    TYPE_B          reduce using rule 211 (empty -> .)
    TYPE_O          reduce using rule 211 (empty -> .)
    TYPE_V          reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    MAIN_KWD        reduce using rule 211 (empty -> .)

  ! CLASS_KWD       [ reduce using rule 211 (empty -> .) ]

    CLASS                          shift and go to state 14
    CLASS_STAR                     shift and go to state 35
    empty                          shift and go to state 36

state 15

    (28) FUNC_DEF_STAR -> FUNC_DEF . FUNC_DEF_STAR
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (211) empty -> .
    (205) TYPE -> . TYPE_I
    (206) TYPE -> . TYPE_F
    (207) TYPE -> . TYPE_S
    (208) TYPE -> . TYPE_B
    (209) TYPE -> . TYPE_O
    (210) TYPE -> . TYPE_V

  ! shift/reduce conflict for TYPE_I resolved as shift
  ! shift/reduce conflict for TYPE_F resolved as shift
  ! shift/reduce conflict for TYPE_S resolved as shift
  ! shift/reduce conflict for TYPE_B resolved as shift
  ! shift/reduce conflict for TYPE_O resolved as shift
  ! shift/reduce conflict for TYPE_V resolved as shift
    CLASS_KWD       reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    MAIN_KWD        reduce using rule 211 (empty -> .)
    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

  ! TYPE_I          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_F          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_S          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_B          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_O          [ reduce using rule 211 (empty -> .) ]
  ! TYPE_V          [ reduce using rule 211 (empty -> .) ]

    FUNC_DEF                       shift and go to state 15
    FUNC_DEF_STAR                  shift and go to state 37
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 16

    (14) VAR_LIST_STAR -> VAR_LIST . VAR_LIST_STAR
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (211) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (154) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

  ! shift/reduce conflict for ID resolved as shift
    CLASS_KWD       reduce using rule 211 (empty -> .)
    TYPE_I          reduce using rule 211 (empty -> .)
    TYPE_F          reduce using rule 211 (empty -> .)
    TYPE_S          reduce using rule 211 (empty -> .)
    TYPE_B          reduce using rule 211 (empty -> .)
    TYPE_O          reduce using rule 211 (empty -> .)
    TYPE_V          reduce using rule 211 (empty -> .)
    MAIN_KWD        reduce using rule 211 (empty -> .)
    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    ID              shift and go to state 7

  ! ID              [ reduce using rule 211 (empty -> .) ]

    VAR_LIST                       shift and go to state 16
    VAR_LIST_STAR                  shift and go to state 39
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 17

    (10) CLASS -> CLASS_KWD . ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    ID              shift and go to state 41


state 18

    (30) FUNC_DEF -> TYPE . ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    ID              shift and go to state 42


state 19

    (16) VAR_LIST -> SYMBOL_LIST . COLON TYPE SEMI_COLON

    COLON           shift and go to state 43


state 20

    (205) TYPE -> TYPE_I .

    ID              reduce using rule 205 (TYPE -> TYPE_I .)
    SEMI_COLON      reduce using rule 205 (TYPE -> TYPE_I .)
    COMMA           reduce using rule 205 (TYPE -> TYPE_I .)
    CLOSE_PARENTHESIS reduce using rule 205 (TYPE -> TYPE_I .)


state 21

    (206) TYPE -> TYPE_F .

    ID              reduce using rule 206 (TYPE -> TYPE_F .)
    SEMI_COLON      reduce using rule 206 (TYPE -> TYPE_F .)
    COMMA           reduce using rule 206 (TYPE -> TYPE_F .)
    CLOSE_PARENTHESIS reduce using rule 206 (TYPE -> TYPE_F .)


state 22

    (207) TYPE -> TYPE_S .

    ID              reduce using rule 207 (TYPE -> TYPE_S .)
    SEMI_COLON      reduce using rule 207 (TYPE -> TYPE_S .)
    COMMA           reduce using rule 207 (TYPE -> TYPE_S .)
    CLOSE_PARENTHESIS reduce using rule 207 (TYPE -> TYPE_S .)


state 23

    (208) TYPE -> TYPE_B .

    ID              reduce using rule 208 (TYPE -> TYPE_B .)
    SEMI_COLON      reduce using rule 208 (TYPE -> TYPE_B .)
    COMMA           reduce using rule 208 (TYPE -> TYPE_B .)
    CLOSE_PARENTHESIS reduce using rule 208 (TYPE -> TYPE_B .)


state 24

    (209) TYPE -> TYPE_O .

    ID              reduce using rule 209 (TYPE -> TYPE_O .)
    SEMI_COLON      reduce using rule 209 (TYPE -> TYPE_O .)
    COMMA           reduce using rule 209 (TYPE -> TYPE_O .)
    CLOSE_PARENTHESIS reduce using rule 209 (TYPE -> TYPE_O .)


state 25

    (210) TYPE -> TYPE_V .

    ID              reduce using rule 210 (TYPE -> TYPE_V .)
    SEMI_COLON      reduce using rule 210 (TYPE -> TYPE_V .)
    COMMA           reduce using rule 210 (TYPE -> TYPE_V .)
    CLOSE_PARENTHESIS reduce using rule 210 (TYPE -> TYPE_V .)


state 26

    (18) SYMBOL_LIST -> ARRAY_DECLARATION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 211 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 44
    empty                          shift and go to state 45

state 27

    (17) SYMBOL_LIST -> ID SYMBOL_LIST_P .

    COLON           reduce using rule 17 (SYMBOL_LIST -> ID SYMBOL_LIST_P .)


state 28

    (154) ARRAY_DECLARATION -> ID seen_array_def_id . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    OPEN_BRACKET    shift and go to state 46


state 29

    (19) SYMBOL_LIST_P -> COMMA . ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> COMMA . ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> COMMA .
    (154) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    ID              shift and go to state 47
    COLON           reduce using rule 21 (SYMBOL_LIST_P -> COMMA .)

    ARRAY_DECLARATION              shift and go to state 48

state 30

    (22) SYMBOL_LIST_P -> empty .
    (157) seen_array_def_id -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)
    OPEN_BRACKET    reduce using rule 157 (seen_array_def_id -> empty .)


state 31

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 49


state 32

    (2) STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 2 (STRUCTURE_DEFINITION -> GLOBAL_VAR STRUCTURE_DEFINITION .)


state 33

    (3) STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 3 (STRUCTURE_DEFINITION -> CLASS_STAR STRUCTURE_DEFINITION .)


state 34

    (4) STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .

    MAIN_KWD        reduce using rule 4 (STRUCTURE_DEFINITION -> FUNC_DEF_STAR STRUCTURE_DEFINITION .)


state 35

    (8) CLASS_STAR -> CLASS CLASS_STAR .

    CLASS_KWD       reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_I          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_F          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_S          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_B          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_O          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    TYPE_V          reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    ID              reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)
    MAIN_KWD        reduce using rule 8 (CLASS_STAR -> CLASS CLASS_STAR .)


state 36

    (9) CLASS_STAR -> empty .

    CLASS_KWD       reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_I          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_F          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_S          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_B          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_O          reduce using rule 9 (CLASS_STAR -> empty .)
    TYPE_V          reduce using rule 9 (CLASS_STAR -> empty .)
    ID              reduce using rule 9 (CLASS_STAR -> empty .)
    MAIN_KWD        reduce using rule 9 (CLASS_STAR -> empty .)


state 37

    (28) FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .

    CLASS_KWD       reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_I          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_F          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_S          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_B          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_O          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    TYPE_V          reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    ID              reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    MAIN_KWD        reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)
    CLOSE_CURLY     reduce using rule 28 (FUNC_DEF_STAR -> FUNC_DEF FUNC_DEF_STAR .)


state 38

    (29) FUNC_DEF_STAR -> empty .

    CLASS_KWD       reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_I          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_F          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_S          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_B          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_O          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    TYPE_V          reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    ID              reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    MAIN_KWD        reduce using rule 29 (FUNC_DEF_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 29 (FUNC_DEF_STAR -> empty .)


state 39

    (14) VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .

    CLASS_KWD       reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_I          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_F          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_S          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_B          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_O          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    TYPE_V          reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    ID              reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    MAIN_KWD        reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)
    CLOSE_CURLY     reduce using rule 14 (VAR_LIST_STAR -> VAR_LIST VAR_LIST_STAR .)


state 40

    (15) VAR_LIST_STAR -> empty .

    CLASS_KWD       reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_I          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_F          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_S          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_B          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_O          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    TYPE_V          reduce using rule 15 (VAR_LIST_STAR -> empty .)
    ID              reduce using rule 15 (VAR_LIST_STAR -> empty .)
    MAIN_KWD        reduce using rule 15 (VAR_LIST_STAR -> empty .)
    CLOSE_CURLY     reduce using rule 15 (VAR_LIST_STAR -> empty .)


state 41

    (10) CLASS -> CLASS_KWD ID . seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (11) seen_class_id_declaration -> . empty
    (211) empty -> .

    OPEN_CURLY      reduce using rule 211 (empty -> .)

    seen_class_id_declaration      shift and go to state 50
    empty                          shift and go to state 51

state 42

    (30) FUNC_DEF -> TYPE ID . seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (31) seen_func_id -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_func_id                   shift and go to state 52
    empty                          shift and go to state 53

state 43

    (16) VAR_LIST -> SYMBOL_LIST COLON . TYPE SEMI_COLON
    (205) TYPE -> . TYPE_I
    (206) TYPE -> . TYPE_F
    (207) TYPE -> . TYPE_S
    (208) TYPE -> . TYPE_B
    (209) TYPE -> . TYPE_O
    (210) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 54

state 44

    (18) SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P .

    COLON           reduce using rule 18 (SYMBOL_LIST -> ARRAY_DECLARATION SYMBOL_LIST_P .)


state 45

    (22) SYMBOL_LIST_P -> empty .

    COLON           reduce using rule 22 (SYMBOL_LIST_P -> empty .)


state 46

    (154) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CTE_I           shift and go to state 55


state 47

    (19) SYMBOL_LIST_P -> COMMA ID . SYMBOL_LIST_P
    (154) ARRAY_DECLARATION -> ID . seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (157) seen_array_def_id -> . empty
    (211) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 211 (empty -> .)
    OPEN_BRACKET    reduce using rule 211 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 56
    seen_array_def_id              shift and go to state 28
    empty                          shift and go to state 30

state 48

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION . SYMBOL_LIST_P
    (19) SYMBOL_LIST_P -> . COMMA ID SYMBOL_LIST_P
    (20) SYMBOL_LIST_P -> . COMMA ARRAY_DECLARATION SYMBOL_LIST_P
    (21) SYMBOL_LIST_P -> . COMMA
    (22) SYMBOL_LIST_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 211 (empty -> .)

    SYMBOL_LIST_P                  shift and go to state 57
    empty                          shift and go to state 45

state 49

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 58


state 50

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration . OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 59


state 51

    (11) seen_class_id_declaration -> empty .

    OPEN_CURLY      reduce using rule 11 (seen_class_id_declaration -> empty .)


state 52

    (30) FUNC_DEF -> TYPE ID seen_func_id . OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 60


state 53

    (31) seen_func_id -> empty .

    OPEN_PARENTHESIS reduce using rule 31 (seen_func_id -> empty .)


state 54

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE . SEMI_COLON

    SEMI_COLON      shift and go to state 61


state 55

    (154) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (127) seen_cte_i -> . empty
    (211) empty -> .

    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_cte_i                     shift and go to state 62
    empty                          shift and go to state 63

state 56

    (19) SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .

    COLON           reduce using rule 19 (SYMBOL_LIST_P -> COMMA ID SYMBOL_LIST_P .)


state 57

    (20) SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P .

    COLON           reduce using rule 20 (SYMBOL_LIST_P -> COMMA ARRAY_DECLARATION SYMBOL_LIST_P .)


state 58

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 64


state 59

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY . CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (13) CLASS_ATTR -> . ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    ATTR_KWD        shift and go to state 66

    CLASS_ATTR                     shift and go to state 65

state 60

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS . FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (34) FUNC_PARAM -> . ARG_DECLARATION FUNC_PARAM_P
    (35) FUNC_PARAM -> . empty
    (38) ARG_DECLARATION -> . ID COLON TYPE
    (211) empty -> .

    ID              shift and go to state 67
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    FUNC_PARAM                     shift and go to state 68
    ARG_DECLARATION                shift and go to state 69
    empty                          shift and go to state 70

state 61

    (16) VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .

    ID              reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLASS_KWD       reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_I          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_F          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_S          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_B          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_O          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    TYPE_V          reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    MAIN_KWD        reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 16 (VAR_LIST -> SYMBOL_LIST COLON TYPE SEMI_COLON .)


state 62

    (154) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (158) seen_array_def_dim -> . empty
    (211) empty -> .

    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_array_def_dim             shift and go to state 71
    empty                          shift and go to state 72

state 63

    (127) seen_cte_i -> empty .

    CLOSE_BRACKET   reduce using rule 127 (seen_cte_i -> empty .)
    STAR            reduce using rule 127 (seen_cte_i -> empty .)
    FWD_SLASH       reduce using rule 127 (seen_cte_i -> empty .)
    PLUS            reduce using rule 127 (seen_cte_i -> empty .)
    MINUS           reduce using rule 127 (seen_cte_i -> empty .)
    BIGGER          reduce using rule 127 (seen_cte_i -> empty .)
    BIGGER_EQ       reduce using rule 127 (seen_cte_i -> empty .)
    SMALLER         reduce using rule 127 (seen_cte_i -> empty .)
    SMALLER_EQ      reduce using rule 127 (seen_cte_i -> empty .)
    DOUBLE_EQUALS   reduce using rule 127 (seen_cte_i -> empty .)
    NOT_EQUALS      reduce using rule 127 (seen_cte_i -> empty .)
    AND             reduce using rule 127 (seen_cte_i -> empty .)
    OR              reduce using rule 127 (seen_cte_i -> empty .)
    SEMI_COLON      reduce using rule 127 (seen_cte_i -> empty .)
    CLOSE_PARENTHESIS reduce using rule 127 (seen_cte_i -> empty .)
    COMMA           reduce using rule 127 (seen_cte_i -> empty .)


state 64

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY . seen_main_kwd STATEMENT_STAR CLOSE_CURLY
    (7) seen_main_kwd -> . empty
    (211) empty -> .

    ID              reduce using rule 211 (empty -> .)
    READ_KWD        reduce using rule 211 (empty -> .)
    PRINT_KWD       reduce using rule 211 (empty -> .)
    PRINTLN_KWD     reduce using rule 211 (empty -> .)
    OPEN_KWD        reduce using rule 211 (empty -> .)
    WRITE_KWD       reduce using rule 211 (empty -> .)
    USING_KWD       reduce using rule 211 (empty -> .)
    RETURN_KWD      reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    IF_KWD          reduce using rule 211 (empty -> .)
    WHILE_KWD       reduce using rule 211 (empty -> .)
    FOR_KWD         reduce using rule 211 (empty -> .)
    CLOSE_CURLY     reduce using rule 211 (empty -> .)

    seen_main_kwd                  shift and go to state 73
    empty                          shift and go to state 74

state 65

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR . seen_class_attr FUNC_DEF_STAR CLOSE_CURLY
    (12) seen_class_attr -> . empty
    (211) empty -> .

    TYPE_I          reduce using rule 211 (empty -> .)
    TYPE_F          reduce using rule 211 (empty -> .)
    TYPE_S          reduce using rule 211 (empty -> .)
    TYPE_B          reduce using rule 211 (empty -> .)
    TYPE_O          reduce using rule 211 (empty -> .)
    TYPE_V          reduce using rule 211 (empty -> .)
    CLOSE_CURLY     reduce using rule 211 (empty -> .)

    seen_class_attr                shift and go to state 75
    empty                          shift and go to state 76

state 66

    (13) CLASS_ATTR -> ATTR_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 77


state 67

    (38) ARG_DECLARATION -> ID . COLON TYPE

    COLON           shift and go to state 78


state 68

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM . CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 79


state 69

    (34) FUNC_PARAM -> ARG_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA ARG_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 81
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 80
    empty                          shift and go to state 82

state 70

    (35) FUNC_PARAM -> empty .

    CLOSE_PARENTHESIS reduce using rule 35 (FUNC_PARAM -> empty .)


state 71

    (154) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_BRACKET   shift and go to state 83


state 72

    (158) seen_array_def_dim -> empty .

    CLOSE_BRACKET   reduce using rule 158 (seen_array_def_dim -> empty .)


state 73

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (211) empty -> .
    (66) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (70) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (180) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (181) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (183) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (53) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (52) USING -> . USING_KWD ID AS_KWD ID
    (59) FLOW_CONTROL -> . DECISION
    (60) FLOW_CONTROL -> . REPETITION
    (177) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (178) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (179) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (189) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (195) REPETITION -> . CONDITIONAL_REP
    (196) REPETITION -> . UNCONDITIONAL_REP
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (197) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (200) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT_STAR                 shift and go to state 85
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 74

    (7) seen_main_kwd -> empty .

    ID              reduce using rule 7 (seen_main_kwd -> empty .)
    READ_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    PRINT_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    PRINTLN_KWD     reduce using rule 7 (seen_main_kwd -> empty .)
    OPEN_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    WRITE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    USING_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    RETURN_KWD      reduce using rule 7 (seen_main_kwd -> empty .)
    THIS_KWD        reduce using rule 7 (seen_main_kwd -> empty .)
    IF_KWD          reduce using rule 7 (seen_main_kwd -> empty .)
    WHILE_KWD       reduce using rule 7 (seen_main_kwd -> empty .)
    FOR_KWD         reduce using rule 7 (seen_main_kwd -> empty .)
    CLOSE_CURLY     reduce using rule 7 (seen_main_kwd -> empty .)


state 75

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr . FUNC_DEF_STAR CLOSE_CURLY
    (28) FUNC_DEF_STAR -> . FUNC_DEF FUNC_DEF_STAR
    (29) FUNC_DEF_STAR -> . empty
    (30) FUNC_DEF -> . TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (211) empty -> .
    (205) TYPE -> . TYPE_I
    (206) TYPE -> . TYPE_F
    (207) TYPE -> . TYPE_S
    (208) TYPE -> . TYPE_B
    (209) TYPE -> . TYPE_O
    (210) TYPE -> . TYPE_V

    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    FUNC_DEF_STAR                  shift and go to state 116
    FUNC_DEF                       shift and go to state 15
    empty                          shift and go to state 38
    TYPE                           shift and go to state 18

state 76

    (12) seen_class_attr -> empty .

    TYPE_I          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_F          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_S          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_B          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_O          reduce using rule 12 (seen_class_attr -> empty .)
    TYPE_V          reduce using rule 12 (seen_class_attr -> empty .)
    CLOSE_CURLY     reduce using rule 12 (seen_class_attr -> empty .)


state 77

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (211) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (154) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 117
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 78

    (38) ARG_DECLARATION -> ID COLON . TYPE
    (205) TYPE -> . TYPE_I
    (206) TYPE -> . TYPE_F
    (207) TYPE -> . TYPE_S
    (208) TYPE -> . TYPE_B
    (209) TYPE -> . TYPE_O
    (210) TYPE -> . TYPE_V

    TYPE_I          shift and go to state 20
    TYPE_F          shift and go to state 21
    TYPE_S          shift and go to state 22
    TYPE_B          shift and go to state 23
    TYPE_O          shift and go to state 24
    TYPE_V          shift and go to state 25

    TYPE                           shift and go to state 118

state 79

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS . seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (32) seen_func_params -> . empty
    (211) empty -> .

    VARS_KWD        reduce using rule 211 (empty -> .)

    seen_func_params               shift and go to state 119
    empty                          shift and go to state 120

state 80

    (34) FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 34 (FUNC_PARAM -> ARG_DECLARATION FUNC_PARAM_P .)


state 81

    (36) FUNC_PARAM_P -> COMMA . ARG_DECLARATION FUNC_PARAM_P
    (38) ARG_DECLARATION -> . ID COLON TYPE

    ID              shift and go to state 67

    ARG_DECLARATION                shift and go to state 121

state 82

    (37) FUNC_PARAM_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 37 (FUNC_PARAM_P -> empty .)


state 83

    (154) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DECLARATION_P
    (155) ARRAY_DECLARATION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (156) ARRAY_DECLARATION_P -> . empty
    (211) empty -> .

    OPEN_BRACKET    shift and go to state 122
    COMMA           reduce using rule 211 (empty -> .)
    COLON           reduce using rule 211 (empty -> .)

    ARRAY_DECLARATION_P            shift and go to state 123
    empty                          shift and go to state 124

state 84

    (165) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (141) VAR -> ID .
    (138) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (148) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (167) seen_func_call_id -> . empty
    (151) seen_array_id -> . empty
    (211) empty -> .

    EQUALS          reduce using rule 141 (VAR -> ID .)
    PLUS_EQUALS     reduce using rule 141 (VAR -> ID .)
    MINUS_EQUALS    reduce using rule 141 (VAR -> ID .)
    TIMES_EQUALS    reduce using rule 141 (VAR -> ID .)
    OVER_EQUALS     reduce using rule 141 (VAR -> ID .)
    PLUS_PLUS       reduce using rule 141 (VAR -> ID .)
    MINUS_MINUS     reduce using rule 141 (VAR -> ID .)
    STAR            reduce using rule 141 (VAR -> ID .)
    FWD_SLASH       reduce using rule 141 (VAR -> ID .)
    PLUS            reduce using rule 141 (VAR -> ID .)
    MINUS           reduce using rule 141 (VAR -> ID .)
    BIGGER          reduce using rule 141 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 141 (VAR -> ID .)
    SMALLER         reduce using rule 141 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 141 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 141 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 141 (VAR -> ID .)
    AND             reduce using rule 141 (VAR -> ID .)
    OR              reduce using rule 141 (VAR -> ID .)
    SEMI_COLON      reduce using rule 141 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 141 (VAR -> ID .)
    COMMA           reduce using rule 141 (VAR -> ID .)
    CLOSE_BRACKET   reduce using rule 141 (VAR -> ID .)
    DOT             shift and go to state 126
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    OPEN_BRACKET    reduce using rule 211 (empty -> .)

    seen_func_call_id              shift and go to state 125
    seen_array_id                  shift and go to state 127
    empty                          shift and go to state 128

state 85

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 129


state 86

    (40) STATEMENT_STAR -> STATEMENT . STATEMENT_STAR
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (211) empty -> .
    (66) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (70) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (180) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (181) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (183) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (53) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (52) USING -> . USING_KWD ID AS_KWD ID
    (59) FLOW_CONTROL -> . DECISION
    (60) FLOW_CONTROL -> . REPETITION
    (177) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (178) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (179) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (189) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (195) REPETITION -> . CONDITIONAL_REP
    (196) REPETITION -> . UNCONDITIONAL_REP
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (197) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (200) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT                      shift and go to state 86
    STATEMENT_STAR                 shift and go to state 130
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 87

    (41) STATEMENT_STAR -> empty .

    CLOSE_CURLY     reduce using rule 41 (STATEMENT_STAR -> empty .)


state 88

    (42) STATEMENT -> ASSIGN . SEMI_COLON

    SEMI_COLON      shift and go to state 131


state 89

    (43) STATEMENT -> FUNC_CALL . SEMI_COLON

    SEMI_COLON      shift and go to state 132


state 90

    (44) STATEMENT -> READ . SEMI_COLON

    SEMI_COLON      shift and go to state 133


state 91

    (45) STATEMENT -> PRINT . SEMI_COLON

    SEMI_COLON      shift and go to state 134


state 92

    (46) STATEMENT -> PRINTLN . SEMI_COLON

    SEMI_COLON      shift and go to state 135


state 93

    (47) STATEMENT -> OPEN . SEMI_COLON

    SEMI_COLON      shift and go to state 136


state 94

    (48) STATEMENT -> WRITE . SEMI_COLON

    SEMI_COLON      shift and go to state 137


state 95

    (49) STATEMENT -> USING . SEMI_COLON

    SEMI_COLON      shift and go to state 138


state 96

    (50) STATEMENT -> FLOW_CONTROL .

    ID              reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    READ_KWD        reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    PRINT_KWD       reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    PRINTLN_KWD     reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    OPEN_KWD        reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    WRITE_KWD       reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    USING_KWD       reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    RETURN_KWD      reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    THIS_KWD        reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    IF_KWD          reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    WHILE_KWD       reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    FOR_KWD         reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)
    CLOSE_CURLY     reduce using rule 50 (STATEMENT -> FLOW_CONTROL .)


state 97

    (51) STATEMENT -> FUNC_RETURN .

    ID              reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    READ_KWD        reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    PRINT_KWD       reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    PRINTLN_KWD     reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    OPEN_KWD        reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    WRITE_KWD       reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    USING_KWD       reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    RETURN_KWD      reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    THIS_KWD        reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    IF_KWD          reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    WHILE_KWD       reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    FOR_KWD         reduce using rule 51 (STATEMENT -> FUNC_RETURN .)
    CLOSE_CURLY     reduce using rule 51 (STATEMENT -> FUNC_RETURN .)


state 98

    (66) ASSIGN -> VAR . seen_var_in_assign EQUALS seen_equals EXPRESSION
    (67) ASSIGN -> VAR . seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (68) ASSIGN -> VAR . seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (69) ASSIGN -> VAR . seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (70) ASSIGN -> VAR . seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (71) ASSIGN -> VAR . seen_var_in_assign PLUS_PLUS seen_plus_plus
    (72) ASSIGN -> VAR . seen_var_in_assign MINUS_MINUS seen_minus_minus
    (124) seen_var_in_assign -> . empty
    (211) empty -> .

    EQUALS          reduce using rule 211 (empty -> .)
    PLUS_EQUALS     reduce using rule 211 (empty -> .)
    MINUS_EQUALS    reduce using rule 211 (empty -> .)
    TIMES_EQUALS    reduce using rule 211 (empty -> .)
    OVER_EQUALS     reduce using rule 211 (empty -> .)
    PLUS_PLUS       reduce using rule 211 (empty -> .)
    MINUS_MINUS     reduce using rule 211 (empty -> .)

    seen_var_in_assign             shift and go to state 139
    empty                          shift and go to state 140

state 99

    (166) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (143) VAR -> CLASS_REFERENCE . VAR
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 84
    THIS_KWD        shift and go to state 110

    CLASS_REFERENCE                shift and go to state 99
    FUNC_CALL                      shift and go to state 141
    VAR                            shift and go to state 142
    ARRAY                          shift and go to state 109

state 100

    (180) READ -> READ_KWD . OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 143


state 101

    (181) PRINT -> PRINT_KWD . seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (182) seen_print_kwd -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_print_kwd                 shift and go to state 144
    empty                          shift and go to state 145

state 102

    (183) PRINTLN -> PRINTLN_KWD . seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (184) seen_println_kwd -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_println_kwd               shift and go to state 146
    empty                          shift and go to state 147

state 103

    (53) OPEN -> OPEN_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 148


state 104

    (55) WRITE -> WRITE_KWD . OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 149


state 105

    (52) USING -> USING_KWD . ID AS_KWD ID

    ID              shift and go to state 150


state 106

    (59) FLOW_CONTROL -> DECISION .

    ID              reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    READ_KWD        reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    PRINT_KWD       reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    PRINTLN_KWD     reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    OPEN_KWD        reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    WRITE_KWD       reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    USING_KWD       reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    RETURN_KWD      reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    THIS_KWD        reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    IF_KWD          reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    WHILE_KWD       reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    FOR_KWD         reduce using rule 59 (FLOW_CONTROL -> DECISION .)
    CLOSE_CURLY     reduce using rule 59 (FLOW_CONTROL -> DECISION .)


state 107

    (60) FLOW_CONTROL -> REPETITION .

    ID              reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    READ_KWD        reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    PRINT_KWD       reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    PRINTLN_KWD     reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    OPEN_KWD        reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    WRITE_KWD       reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    USING_KWD       reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    RETURN_KWD      reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    THIS_KWD        reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    IF_KWD          reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    WHILE_KWD       reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    FOR_KWD         reduce using rule 60 (FLOW_CONTROL -> REPETITION .)
    CLOSE_CURLY     reduce using rule 60 (FLOW_CONTROL -> REPETITION .)


state 108

    (177) FUNC_RETURN -> RETURN_KWD . EXPRESSION SEMI_COLON
    (178) FUNC_RETURN -> RETURN_KWD . FUNC_CALL SEMI_COLON
    (179) FUNC_RETURN -> RETURN_KWD . SEMI_COLON
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    SEMI_COLON      shift and go to state 152
    ID              shift and go to state 155
    MINUS           shift and go to state 158
    THIS_KWD        shift and go to state 110
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 151
    FUNC_CALL                      shift and go to state 153
    EXP                            shift and go to state 154
    CLASS_REFERENCE                shift and go to state 99
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 109

    (142) VAR -> ARRAY .

    EQUALS          reduce using rule 142 (VAR -> ARRAY .)
    PLUS_EQUALS     reduce using rule 142 (VAR -> ARRAY .)
    MINUS_EQUALS    reduce using rule 142 (VAR -> ARRAY .)
    TIMES_EQUALS    reduce using rule 142 (VAR -> ARRAY .)
    OVER_EQUALS     reduce using rule 142 (VAR -> ARRAY .)
    PLUS_PLUS       reduce using rule 142 (VAR -> ARRAY .)
    MINUS_MINUS     reduce using rule 142 (VAR -> ARRAY .)
    STAR            reduce using rule 142 (VAR -> ARRAY .)
    FWD_SLASH       reduce using rule 142 (VAR -> ARRAY .)
    PLUS            reduce using rule 142 (VAR -> ARRAY .)
    MINUS           reduce using rule 142 (VAR -> ARRAY .)
    BIGGER          reduce using rule 142 (VAR -> ARRAY .)
    BIGGER_EQ       reduce using rule 142 (VAR -> ARRAY .)
    SMALLER         reduce using rule 142 (VAR -> ARRAY .)
    SMALLER_EQ      reduce using rule 142 (VAR -> ARRAY .)
    DOUBLE_EQUALS   reduce using rule 142 (VAR -> ARRAY .)
    NOT_EQUALS      reduce using rule 142 (VAR -> ARRAY .)
    AND             reduce using rule 142 (VAR -> ARRAY .)
    OR              reduce using rule 142 (VAR -> ARRAY .)
    SEMI_COLON      reduce using rule 142 (VAR -> ARRAY .)
    CLOSE_PARENTHESIS reduce using rule 142 (VAR -> ARRAY .)
    COMMA           reduce using rule 142 (VAR -> ARRAY .)
    CLOSE_BRACKET   reduce using rule 142 (VAR -> ARRAY .)


state 110

    (139) CLASS_REFERENCE -> THIS_KWD . seen_this_kwd DOT seen_this_dot_operator
    (140) seen_this_kwd -> . empty
    (211) empty -> .

    DOT             reduce using rule 211 (empty -> .)

    seen_this_kwd                  shift and go to state 175
    empty                          shift and go to state 176

state 111

    (189) DECISION -> IF_KWD . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_PARENTHESIS shift and go to state 177


state 112

    (195) REPETITION -> CONDITIONAL_REP .

    ID              reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    READ_KWD        reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    USING_KWD       reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    THIS_KWD        reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    IF_KWD          reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    FOR_KWD         reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 195 (REPETITION -> CONDITIONAL_REP .)


state 113

    (196) REPETITION -> UNCONDITIONAL_REP .

    ID              reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    READ_KWD        reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    PRINT_KWD       reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    PRINTLN_KWD     reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    OPEN_KWD        reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    WRITE_KWD       reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    USING_KWD       reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    RETURN_KWD      reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    THIS_KWD        reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    IF_KWD          reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    WHILE_KWD       reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    FOR_KWD         reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)
    CLOSE_CURLY     reduce using rule 196 (REPETITION -> UNCONDITIONAL_REP .)


state 114

    (197) CONDITIONAL_REP -> WHILE_KWD . seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (198) seen_while_kwd -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_while_kwd                 shift and go to state 178
    empty                          shift and go to state 179

state 115

    (200) UNCONDITIONAL_REP -> FOR_KWD . OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 180


state 116

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 181


state 117

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 182


state 118

    (38) ARG_DECLARATION -> ID COLON TYPE .

    COMMA           reduce using rule 38 (ARG_DECLARATION -> ID COLON TYPE .)
    CLOSE_PARENTHESIS reduce using rule 38 (ARG_DECLARATION -> ID COLON TYPE .)


state 119

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params . VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (39) VARS -> . VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    VARS_KWD        shift and go to state 184

    VARS                           shift and go to state 183

state 120

    (32) seen_func_params -> empty .

    VARS_KWD        reduce using rule 32 (seen_func_params -> empty .)


state 121

    (36) FUNC_PARAM_P -> COMMA ARG_DECLARATION . FUNC_PARAM_P
    (36) FUNC_PARAM_P -> . COMMA ARG_DECLARATION FUNC_PARAM_P
    (37) FUNC_PARAM_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 81
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    FUNC_PARAM_P                   shift and go to state 185
    empty                          shift and go to state 82

state 122

    (155) ARRAY_DECLARATION_P -> OPEN_BRACKET . CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CTE_I           shift and go to state 186


state 123

    (154) ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .

    COMMA           reduce using rule 154 (ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)
    COLON           reduce using rule 154 (ARRAY_DECLARATION -> ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)


state 124

    (156) ARRAY_DECLARATION_P -> empty .

    COMMA           reduce using rule 156 (ARRAY_DECLARATION_P -> empty .)
    COLON           reduce using rule 156 (ARRAY_DECLARATION_P -> empty .)


state 125

    (165) FUNC_CALL -> ID seen_func_call_id . OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 187


state 126

    (138) CLASS_REFERENCE -> ID DOT . seen_dot_operator
    (146) seen_dot_operator -> . empty
    (211) empty -> .

    ID              reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)

    seen_dot_operator              shift and go to state 188
    empty                          shift and go to state 189

state 127

    (148) ARRAY -> ID seen_array_id . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    OPEN_BRACKET    shift and go to state 190


state 128

    (167) seen_func_call_id -> empty .
    (151) seen_array_id -> empty .

    OPEN_PARENTHESIS reduce using rule 167 (seen_func_call_id -> empty .)
    OPEN_BRACKET    reduce using rule 151 (seen_array_id -> empty .)


state 129

    (1) PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .

    $end            reduce using rule 1 (PROGRAM -> PROGRAM_KWD ID seen_program_id SEMI_COLON STRUCTURE_DEFINITION MAIN_KWD OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLY seen_main_kwd STATEMENT_STAR CLOSE_CURLY .)


state 130

    (40) STATEMENT_STAR -> STATEMENT STATEMENT_STAR .

    CLOSE_CURLY     reduce using rule 40 (STATEMENT_STAR -> STATEMENT STATEMENT_STAR .)


state 131

    (42) STATEMENT -> ASSIGN SEMI_COLON .

    ID              reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    READ_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINT_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    OPEN_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WRITE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    USING_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    RETURN_KWD      reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    THIS_KWD        reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    IF_KWD          reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    WHILE_KWD       reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    FOR_KWD         reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 42 (STATEMENT -> ASSIGN SEMI_COLON .)


state 132

    (43) STATEMENT -> FUNC_CALL SEMI_COLON .

    ID              reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    USING_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 43 (STATEMENT -> FUNC_CALL SEMI_COLON .)


state 133

    (44) STATEMENT -> READ SEMI_COLON .

    ID              reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    READ_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINT_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    OPEN_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WRITE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    USING_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    RETURN_KWD      reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    THIS_KWD        reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    IF_KWD          reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    WHILE_KWD       reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    FOR_KWD         reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 44 (STATEMENT -> READ SEMI_COLON .)


state 134

    (45) STATEMENT -> PRINT SEMI_COLON .

    ID              reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    READ_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINT_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    OPEN_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WRITE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    USING_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    RETURN_KWD      reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    THIS_KWD        reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    IF_KWD          reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    WHILE_KWD       reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    FOR_KWD         reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 45 (STATEMENT -> PRINT SEMI_COLON .)


state 135

    (46) STATEMENT -> PRINTLN SEMI_COLON .

    ID              reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    READ_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINT_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    OPEN_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WRITE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    USING_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    RETURN_KWD      reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    THIS_KWD        reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    IF_KWD          reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    WHILE_KWD       reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    FOR_KWD         reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 46 (STATEMENT -> PRINTLN SEMI_COLON .)


state 136

    (47) STATEMENT -> OPEN SEMI_COLON .

    ID              reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    READ_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINT_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    OPEN_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    WRITE_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    USING_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    RETURN_KWD      reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    THIS_KWD        reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    IF_KWD          reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    WHILE_KWD       reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    FOR_KWD         reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 47 (STATEMENT -> OPEN SEMI_COLON .)


state 137

    (48) STATEMENT -> WRITE SEMI_COLON .

    ID              reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    READ_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    PRINT_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    OPEN_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    WRITE_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    USING_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    RETURN_KWD      reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    THIS_KWD        reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    IF_KWD          reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    WHILE_KWD       reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    FOR_KWD         reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 48 (STATEMENT -> WRITE SEMI_COLON .)


state 138

    (49) STATEMENT -> USING SEMI_COLON .

    ID              reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    READ_KWD        reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    PRINT_KWD       reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    OPEN_KWD        reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    WRITE_KWD       reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    USING_KWD       reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    RETURN_KWD      reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    THIS_KWD        reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    IF_KWD          reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    WHILE_KWD       reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    FOR_KWD         reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 49 (STATEMENT -> USING SEMI_COLON .)


state 139

    (66) ASSIGN -> VAR seen_var_in_assign . EQUALS seen_equals EXPRESSION
    (67) ASSIGN -> VAR seen_var_in_assign . PLUS_EQUALS seen_plus_equals EXPRESSION
    (68) ASSIGN -> VAR seen_var_in_assign . MINUS_EQUALS seen_minus_equals EXPRESSION
    (69) ASSIGN -> VAR seen_var_in_assign . TIMES_EQUALS seen_times_equals EXPRESSION
    (70) ASSIGN -> VAR seen_var_in_assign . OVER_EQUALS seen_over_equals EXPRESSION
    (71) ASSIGN -> VAR seen_var_in_assign . PLUS_PLUS seen_plus_plus
    (72) ASSIGN -> VAR seen_var_in_assign . MINUS_MINUS seen_minus_minus

    EQUALS          shift and go to state 191
    PLUS_EQUALS     shift and go to state 192
    MINUS_EQUALS    shift and go to state 193
    TIMES_EQUALS    shift and go to state 194
    OVER_EQUALS     shift and go to state 195
    PLUS_PLUS       shift and go to state 196
    MINUS_MINUS     shift and go to state 197


state 140

    (124) seen_var_in_assign -> empty .

    EQUALS          reduce using rule 124 (seen_var_in_assign -> empty .)
    PLUS_EQUALS     reduce using rule 124 (seen_var_in_assign -> empty .)
    MINUS_EQUALS    reduce using rule 124 (seen_var_in_assign -> empty .)
    TIMES_EQUALS    reduce using rule 124 (seen_var_in_assign -> empty .)
    OVER_EQUALS     reduce using rule 124 (seen_var_in_assign -> empty .)
    PLUS_PLUS       reduce using rule 124 (seen_var_in_assign -> empty .)
    MINUS_MINUS     reduce using rule 124 (seen_var_in_assign -> empty .)
    COMMA           reduce using rule 124 (seen_var_in_assign -> empty .)
    CLOSE_PARENTHESIS reduce using rule 124 (seen_var_in_assign -> empty .)


state 141

    (166) FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .

    SEMI_COLON      reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    STAR            reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    FWD_SLASH       reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    PLUS            reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    MINUS           reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER          reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    BIGGER_EQ       reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER         reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    SMALLER_EQ      reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    NOT_EQUALS      reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    AND             reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    OR              reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    COMMA           reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 166 (FUNC_CALL -> CLASS_REFERENCE FUNC_CALL .)


state 142

    (143) VAR -> CLASS_REFERENCE VAR .

    EQUALS          reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    PLUS_EQUALS     reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    MINUS_EQUALS    reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    TIMES_EQUALS    reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    OVER_EQUALS     reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    PLUS_PLUS       reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    MINUS_MINUS     reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    STAR            reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    FWD_SLASH       reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    PLUS            reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    MINUS           reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER          reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    BIGGER_EQ       reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER         reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    SMALLER_EQ      reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    DOUBLE_EQUALS   reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    NOT_EQUALS      reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    AND             reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    OR              reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    SEMI_COLON      reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_PARENTHESIS reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    COMMA           reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)
    CLOSE_BRACKET   reduce using rule 143 (VAR -> CLASS_REFERENCE VAR .)


state 143

    (180) READ -> READ_KWD OPEN_PARENTHESIS . READABLE_LIST CLOSE_PARENTHESIS
    (23) READABLE_LIST -> . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 200
    THIS_KWD        shift and go to state 110

    READABLE_LIST                  shift and go to state 198
    VAR                            shift and go to state 199
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 201

state 144

    (181) PRINT -> PRINT_KWD seen_print_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 202


state 145

    (182) seen_print_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 182 (seen_print_kwd -> empty .)


state 146

    (183) PRINTLN -> PRINTLN_KWD seen_println_kwd . OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 203


state 147

    (184) seen_println_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 184 (seen_println_kwd -> empty .)


state 148

    (53) OPEN -> OPEN_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 200
    THIS_KWD        shift and go to state 110

    VAR                            shift and go to state 204
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 201

state 149

    (55) WRITE -> WRITE_KWD OPEN_PARENTHESIS . VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 200
    THIS_KWD        shift and go to state 110

    VAR                            shift and go to state 205
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 201

state 150

    (52) USING -> USING_KWD ID . AS_KWD ID

    AS_KWD          shift and go to state 206


state 151

    (177) FUNC_RETURN -> RETURN_KWD EXPRESSION . SEMI_COLON

    SEMI_COLON      shift and go to state 207


state 152

    (179) FUNC_RETURN -> RETURN_KWD SEMI_COLON .

    ID              reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    READ_KWD        reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINT_KWD       reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    OPEN_KWD        reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WRITE_KWD       reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    USING_KWD       reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    RETURN_KWD      reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    THIS_KWD        reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    IF_KWD          reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    WHILE_KWD       reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    FOR_KWD         reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 179 (FUNC_RETURN -> RETURN_KWD SEMI_COLON .)


state 153

    (178) FUNC_RETURN -> RETURN_KWD FUNC_CALL . SEMI_COLON
    (106) FACTOR -> FUNC_CALL .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 208
    STAR            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 106 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 106 (FACTOR -> FUNC_CALL .)

  ! SEMI_COLON      [ reduce using rule 106 (FACTOR -> FUNC_CALL .) ]


state 154

    (87) EXPRESSION -> EXP .
    (88) EXPRESSION -> EXP . COMP seen_comp_op EXPRESSION seen_comp
    (91) COMP -> . BIGGER
    (92) COMP -> . BIGGER_EQ
    (93) COMP -> . SMALLER
    (94) COMP -> . SMALLER_EQ
    (95) COMP -> . DOUBLE_EQUALS
    (96) COMP -> . NOT_EQUALS
    (97) COMP -> . AND
    (98) COMP -> . OR

    SEMI_COLON      reduce using rule 87 (EXPRESSION -> EXP .)
    CLOSE_PARENTHESIS reduce using rule 87 (EXPRESSION -> EXP .)
    COMMA           reduce using rule 87 (EXPRESSION -> EXP .)
    CLOSE_BRACKET   reduce using rule 87 (EXPRESSION -> EXP .)
    BIGGER          shift and go to state 210
    BIGGER_EQ       shift and go to state 211
    SMALLER         shift and go to state 212
    SMALLER_EQ      shift and go to state 213
    DOUBLE_EQUALS   shift and go to state 214
    NOT_EQUALS      shift and go to state 215
    AND             shift and go to state 216
    OR              shift and go to state 217

    COMP                           shift and go to state 209

state 155

    (165) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (138) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (141) VAR -> ID .
    (148) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (167) seen_func_call_id -> . empty
    (151) seen_array_id -> . empty
    (211) empty -> .

    DOT             shift and go to state 126
    STAR            reduce using rule 141 (VAR -> ID .)
    FWD_SLASH       reduce using rule 141 (VAR -> ID .)
    PLUS            reduce using rule 141 (VAR -> ID .)
    MINUS           reduce using rule 141 (VAR -> ID .)
    BIGGER          reduce using rule 141 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 141 (VAR -> ID .)
    SMALLER         reduce using rule 141 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 141 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 141 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 141 (VAR -> ID .)
    AND             reduce using rule 141 (VAR -> ID .)
    OR              reduce using rule 141 (VAR -> ID .)
    SEMI_COLON      reduce using rule 141 (VAR -> ID .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    OPEN_BRACKET    reduce using rule 211 (empty -> .)

    seen_func_call_id              shift and go to state 125
    seen_array_id                  shift and go to state 127
    empty                          shift and go to state 128

state 156

    (99) FACTOR -> OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (122) seen_open_parenthesis -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_open_parenthesis          shift and go to state 218
    empty                          shift and go to state 219

state 157

    (80) EXP -> TERM . seen_term EXP_P
    (82) seen_term -> .

    PLUS            reduce using rule 82 (seen_term -> .)
    MINUS           reduce using rule 82 (seen_term -> .)
    BIGGER          reduce using rule 82 (seen_term -> .)
    BIGGER_EQ       reduce using rule 82 (seen_term -> .)
    SMALLER         reduce using rule 82 (seen_term -> .)
    SMALLER_EQ      reduce using rule 82 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 82 (seen_term -> .)
    NOT_EQUALS      reduce using rule 82 (seen_term -> .)
    AND             reduce using rule 82 (seen_term -> .)
    OR              reduce using rule 82 (seen_term -> .)
    SEMI_COLON      reduce using rule 82 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 82 (seen_term -> .)
    COMMA           reduce using rule 82 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 82 (seen_term -> .)

    seen_term                      shift and go to state 220

state 158

    (81) EXP -> MINUS . seen_unary_minus EXP pop_unary_minus
    (101) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (121) seen_unary_minus -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_unary_minus               shift and go to state 221
    empty                          shift and go to state 222

state 159

    (159) TERM -> FACTOR . seen_factor TERM_P
    (163) seen_factor -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_factor                    shift and go to state 223
    empty                          shift and go to state 224

state 160

    (100) FACTOR -> NOT . seen_not FACTOR pop_not
    (119) seen_not -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_not                       shift and go to state 225
    empty                          shift and go to state 226

state 161

    (102) FACTOR -> STOI_KWD . seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (115) seen_stoi_kwd -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_stoi_kwd                  shift and go to state 227
    empty                          shift and go to state 228

state 162

    (103) FACTOR -> STOF_KWD . seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (116) seen_stof_kwd -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_stof_kwd                  shift and go to state 229
    empty                          shift and go to state 230

state 163

    (104) FACTOR -> STOB_KWD . seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (117) seen_stob_kwd -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_stob_kwd                  shift and go to state 231
    empty                          shift and go to state 232

state 164

    (105) FACTOR -> SUBSTR_KWD . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    OPEN_PARENTHESIS shift and go to state 233


state 165

    (107) FACTOR -> CLASS_INSTANCE .

    STAR            reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    FWD_SLASH       reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    PLUS            reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    MINUS           reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    BIGGER          reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    BIGGER_EQ       reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    SMALLER         reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    SMALLER_EQ      reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    DOUBLE_EQUALS   reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    NOT_EQUALS      reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    AND             reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    OR              reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    SEMI_COLON      reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_PARENTHESIS reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    COMMA           reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)
    CLOSE_BRACKET   reduce using rule 107 (FACTOR -> CLASS_INSTANCE .)


state 166

    (108) FACTOR -> VAR . seen_var_as_factor
    (125) seen_var_as_factor -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_var_as_factor             shift and go to state 234
    empty                          shift and go to state 235

state 167

    (109) FACTOR -> CONSTANT .

    STAR            reduce using rule 109 (FACTOR -> CONSTANT .)
    FWD_SLASH       reduce using rule 109 (FACTOR -> CONSTANT .)
    PLUS            reduce using rule 109 (FACTOR -> CONSTANT .)
    MINUS           reduce using rule 109 (FACTOR -> CONSTANT .)
    BIGGER          reduce using rule 109 (FACTOR -> CONSTANT .)
    BIGGER_EQ       reduce using rule 109 (FACTOR -> CONSTANT .)
    SMALLER         reduce using rule 109 (FACTOR -> CONSTANT .)
    SMALLER_EQ      reduce using rule 109 (FACTOR -> CONSTANT .)
    DOUBLE_EQUALS   reduce using rule 109 (FACTOR -> CONSTANT .)
    NOT_EQUALS      reduce using rule 109 (FACTOR -> CONSTANT .)
    AND             reduce using rule 109 (FACTOR -> CONSTANT .)
    OR              reduce using rule 109 (FACTOR -> CONSTANT .)
    SEMI_COLON      reduce using rule 109 (FACTOR -> CONSTANT .)
    CLOSE_PARENTHESIS reduce using rule 109 (FACTOR -> CONSTANT .)
    COMMA           reduce using rule 109 (FACTOR -> CONSTANT .)
    CLOSE_BRACKET   reduce using rule 109 (FACTOR -> CONSTANT .)


state 168

    (144) CLASS_INSTANCE -> NEW_KWD . ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS

    ID              shift and go to state 236


state 169

    (132) CONSTANT -> CTE_I . seen_cte_i
    (127) seen_cte_i -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_cte_i                     shift and go to state 237
    empty                          shift and go to state 63

state 170

    (133) CONSTANT -> CTE_F . seen_cte_f
    (128) seen_cte_f -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_cte_f                     shift and go to state 238
    empty                          shift and go to state 239

state 171

    (134) CONSTANT -> CTE_S . seen_cte_s
    (129) seen_cte_s -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_cte_s                     shift and go to state 240
    empty                          shift and go to state 241

state 172

    (135) CONSTANT -> CTE_B .

    STAR            reduce using rule 135 (CONSTANT -> CTE_B .)
    FWD_SLASH       reduce using rule 135 (CONSTANT -> CTE_B .)
    PLUS            reduce using rule 135 (CONSTANT -> CTE_B .)
    MINUS           reduce using rule 135 (CONSTANT -> CTE_B .)
    BIGGER          reduce using rule 135 (CONSTANT -> CTE_B .)
    BIGGER_EQ       reduce using rule 135 (CONSTANT -> CTE_B .)
    SMALLER         reduce using rule 135 (CONSTANT -> CTE_B .)
    SMALLER_EQ      reduce using rule 135 (CONSTANT -> CTE_B .)
    DOUBLE_EQUALS   reduce using rule 135 (CONSTANT -> CTE_B .)
    NOT_EQUALS      reduce using rule 135 (CONSTANT -> CTE_B .)
    AND             reduce using rule 135 (CONSTANT -> CTE_B .)
    OR              reduce using rule 135 (CONSTANT -> CTE_B .)
    SEMI_COLON      reduce using rule 135 (CONSTANT -> CTE_B .)
    CLOSE_PARENTHESIS reduce using rule 135 (CONSTANT -> CTE_B .)
    COMMA           reduce using rule 135 (CONSTANT -> CTE_B .)
    CLOSE_BRACKET   reduce using rule 135 (CONSTANT -> CTE_B .)


state 173

    (136) CTE_B -> CTE_TRUE . seen_cte_true
    (131) seen_cte_true -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_cte_true                  shift and go to state 242
    empty                          shift and go to state 243

state 174

    (137) CTE_B -> CTE_FALSE . seen_cte_false
    (130) seen_cte_false -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_cte_false                 shift and go to state 244
    empty                          shift and go to state 245

state 175

    (139) CLASS_REFERENCE -> THIS_KWD seen_this_kwd . DOT seen_this_dot_operator

    DOT             shift and go to state 246


state 176

    (140) seen_this_kwd -> empty .

    DOT             reduce using rule 140 (seen_this_kwd -> empty .)


state 177

    (189) DECISION -> IF_KWD OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 247
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 178

    (197) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd . OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_PARENTHESIS shift and go to state 249


state 179

    (198) seen_while_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 198 (seen_while_kwd -> empty .)


state 180

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS . VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 200
    THIS_KWD        shift and go to state 110

    VAR                            shift and go to state 250
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 201

state 181

    (10) CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .

    CLASS_KWD       reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_I          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    ID              reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 10 (CLASS -> CLASS_KWD ID seen_class_id_declaration OPEN_CURLY CLASS_ATTR seen_class_attr FUNC_DEF_STAR CLOSE_CURLY .)


state 182

    (13) CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 13 (CLASS_ATTR -> ATTR_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 183

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS . seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (33) seen_func_vars -> . empty
    (211) empty -> .

    OPEN_CURLY      reduce using rule 211 (empty -> .)

    seen_func_vars                 shift and go to state 251
    empty                          shift and go to state 252

state 184

    (39) VARS -> VARS_KWD . OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 253


state 185

    (36) FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P .

    CLOSE_PARENTHESIS reduce using rule 36 (FUNC_PARAM_P -> COMMA ARG_DECLARATION FUNC_PARAM_P .)


state 186

    (155) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I . seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (127) seen_cte_i -> . empty
    (211) empty -> .

    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_cte_i                     shift and go to state 254
    empty                          shift and go to state 63

state 187

    (165) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS . ARG_LIST CLOSE_PARENTHESIS
    (168) ARG_LIST -> . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (169) ARG_LIST -> . EXPRESSION seen_arg ARG_LIST_P
    (170) ARG_LIST -> . FUNC_CALL seen_arg ARG_LIST_P
    (171) ARG_LIST -> . empty
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (211) empty -> .
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    ID              shift and go to state 255
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    THIS_KWD        shift and go to state 110
    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    ARG_LIST                       shift and go to state 256
    VAR                            shift and go to state 257
    EXPRESSION                     shift and go to state 258
    FUNC_CALL                      shift and go to state 259
    empty                          shift and go to state 260
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 261
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CTE_B                          shift and go to state 172

state 188

    (138) CLASS_REFERENCE -> ID DOT seen_dot_operator .

    ID              reduce using rule 138 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)
    THIS_KWD        reduce using rule 138 (CLASS_REFERENCE -> ID DOT seen_dot_operator .)


state 189

    (146) seen_dot_operator -> empty .

    ID              reduce using rule 146 (seen_dot_operator -> empty .)
    THIS_KWD        reduce using rule 146 (seen_dot_operator -> empty .)


state 190

    (148) ARRAY -> ID seen_array_id OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (152) seen_open_bracket -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_open_bracket              shift and go to state 262
    empty                          shift and go to state 263

state 191

    (66) ASSIGN -> VAR seen_var_in_assign EQUALS . seen_equals EXPRESSION
    (73) seen_equals -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_equals                    shift and go to state 264
    empty                          shift and go to state 265

state 192

    (67) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS . seen_plus_equals EXPRESSION
    (74) seen_plus_equals -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_plus_equals               shift and go to state 266
    empty                          shift and go to state 267

state 193

    (68) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS . seen_minus_equals EXPRESSION
    (75) seen_minus_equals -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_minus_equals              shift and go to state 268
    empty                          shift and go to state 269

state 194

    (69) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS . seen_times_equals EXPRESSION
    (76) seen_times_equals -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_times_equals              shift and go to state 270
    empty                          shift and go to state 271

state 195

    (70) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS . seen_over_equals EXPRESSION
    (77) seen_over_equals -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_over_equals               shift and go to state 272
    empty                          shift and go to state 273

state 196

    (71) ASSIGN -> VAR seen_var_in_assign PLUS_PLUS . seen_plus_plus
    (78) seen_plus_plus -> . empty
    (211) empty -> .

    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_plus_plus                 shift and go to state 274
    empty                          shift and go to state 275

state 197

    (72) ASSIGN -> VAR seen_var_in_assign MINUS_MINUS . seen_minus_minus
    (79) seen_minus_minus -> . empty
    (211) empty -> .

    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_minus_minus               shift and go to state 276
    empty                          shift and go to state 277

state 198

    (180) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 278


state 199

    (23) READABLE_LIST -> VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (124) seen_var_in_assign -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_var_in_assign             shift and go to state 279
    empty                          shift and go to state 140

state 200

    (141) VAR -> ID .
    (148) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (138) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (151) seen_array_id -> . empty
    (211) empty -> .

    COMMA           reduce using rule 141 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 141 (VAR -> ID .)
    EQUALS          reduce using rule 141 (VAR -> ID .)
    DOT             shift and go to state 126
    OPEN_BRACKET    reduce using rule 211 (empty -> .)

    seen_array_id                  shift and go to state 127
    empty                          shift and go to state 280

state 201

    (143) VAR -> CLASS_REFERENCE . VAR
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 200
    THIS_KWD        shift and go to state 110

    CLASS_REFERENCE                shift and go to state 201
    VAR                            shift and go to state 142
    ARRAY                          shift and go to state 109

state 202

    (181) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (185) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    PRINTABLE                      shift and go to state 281
    EXPRESSION                     shift and go to state 282
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 203

    (183) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS . PRINTABLE CLOSE_PARENTHESIS
    (185) PRINTABLE -> . EXPRESSION seen_printable PRINTABLE_P
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    PRINTABLE                      shift and go to state 283
    EXPRESSION                     shift and go to state 282
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 204

    (53) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (126) seen_var_in_io -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)

    seen_var_in_io                 shift and go to state 284
    empty                          shift and go to state 285

state 205

    (55) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR . seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (126) seen_var_in_io -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)

    seen_var_in_io                 shift and go to state 286
    empty                          shift and go to state 285

state 206

    (52) USING -> USING_KWD ID AS_KWD . ID

    ID              shift and go to state 287


state 207

    (177) FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .

    ID              reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    READ_KWD        reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINT_KWD       reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    OPEN_KWD        reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WRITE_KWD       reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    USING_KWD       reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    RETURN_KWD      reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    THIS_KWD        reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    IF_KWD          reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    WHILE_KWD       reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    FOR_KWD         reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 177 (FUNC_RETURN -> RETURN_KWD EXPRESSION SEMI_COLON .)


state 208

    (178) FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .

    ID              reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    READ_KWD        reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINT_KWD       reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    PRINTLN_KWD     reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    OPEN_KWD        reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WRITE_KWD       reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    USING_KWD       reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    RETURN_KWD      reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    THIS_KWD        reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    IF_KWD          reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    WHILE_KWD       reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    FOR_KWD         reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)
    CLOSE_CURLY     reduce using rule 178 (FUNC_RETURN -> RETURN_KWD FUNC_CALL SEMI_COLON .)


state 209

    (88) EXPRESSION -> EXP COMP . seen_comp_op EXPRESSION seen_comp
    (90) seen_comp_op -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_comp_op                   shift and go to state 288
    empty                          shift and go to state 289

state 210

    (91) COMP -> BIGGER .

    MINUS           reduce using rule 91 (COMP -> BIGGER .)
    OPEN_PARENTHESIS reduce using rule 91 (COMP -> BIGGER .)
    NOT             reduce using rule 91 (COMP -> BIGGER .)
    STOI_KWD        reduce using rule 91 (COMP -> BIGGER .)
    STOF_KWD        reduce using rule 91 (COMP -> BIGGER .)
    STOB_KWD        reduce using rule 91 (COMP -> BIGGER .)
    SUBSTR_KWD      reduce using rule 91 (COMP -> BIGGER .)
    ID              reduce using rule 91 (COMP -> BIGGER .)
    NEW_KWD         reduce using rule 91 (COMP -> BIGGER .)
    CTE_I           reduce using rule 91 (COMP -> BIGGER .)
    CTE_F           reduce using rule 91 (COMP -> BIGGER .)
    CTE_S           reduce using rule 91 (COMP -> BIGGER .)
    THIS_KWD        reduce using rule 91 (COMP -> BIGGER .)
    CTE_TRUE        reduce using rule 91 (COMP -> BIGGER .)
    CTE_FALSE       reduce using rule 91 (COMP -> BIGGER .)


state 211

    (92) COMP -> BIGGER_EQ .

    MINUS           reduce using rule 92 (COMP -> BIGGER_EQ .)
    OPEN_PARENTHESIS reduce using rule 92 (COMP -> BIGGER_EQ .)
    NOT             reduce using rule 92 (COMP -> BIGGER_EQ .)
    STOI_KWD        reduce using rule 92 (COMP -> BIGGER_EQ .)
    STOF_KWD        reduce using rule 92 (COMP -> BIGGER_EQ .)
    STOB_KWD        reduce using rule 92 (COMP -> BIGGER_EQ .)
    SUBSTR_KWD      reduce using rule 92 (COMP -> BIGGER_EQ .)
    ID              reduce using rule 92 (COMP -> BIGGER_EQ .)
    NEW_KWD         reduce using rule 92 (COMP -> BIGGER_EQ .)
    CTE_I           reduce using rule 92 (COMP -> BIGGER_EQ .)
    CTE_F           reduce using rule 92 (COMP -> BIGGER_EQ .)
    CTE_S           reduce using rule 92 (COMP -> BIGGER_EQ .)
    THIS_KWD        reduce using rule 92 (COMP -> BIGGER_EQ .)
    CTE_TRUE        reduce using rule 92 (COMP -> BIGGER_EQ .)
    CTE_FALSE       reduce using rule 92 (COMP -> BIGGER_EQ .)


state 212

    (93) COMP -> SMALLER .

    MINUS           reduce using rule 93 (COMP -> SMALLER .)
    OPEN_PARENTHESIS reduce using rule 93 (COMP -> SMALLER .)
    NOT             reduce using rule 93 (COMP -> SMALLER .)
    STOI_KWD        reduce using rule 93 (COMP -> SMALLER .)
    STOF_KWD        reduce using rule 93 (COMP -> SMALLER .)
    STOB_KWD        reduce using rule 93 (COMP -> SMALLER .)
    SUBSTR_KWD      reduce using rule 93 (COMP -> SMALLER .)
    ID              reduce using rule 93 (COMP -> SMALLER .)
    NEW_KWD         reduce using rule 93 (COMP -> SMALLER .)
    CTE_I           reduce using rule 93 (COMP -> SMALLER .)
    CTE_F           reduce using rule 93 (COMP -> SMALLER .)
    CTE_S           reduce using rule 93 (COMP -> SMALLER .)
    THIS_KWD        reduce using rule 93 (COMP -> SMALLER .)
    CTE_TRUE        reduce using rule 93 (COMP -> SMALLER .)
    CTE_FALSE       reduce using rule 93 (COMP -> SMALLER .)


state 213

    (94) COMP -> SMALLER_EQ .

    MINUS           reduce using rule 94 (COMP -> SMALLER_EQ .)
    OPEN_PARENTHESIS reduce using rule 94 (COMP -> SMALLER_EQ .)
    NOT             reduce using rule 94 (COMP -> SMALLER_EQ .)
    STOI_KWD        reduce using rule 94 (COMP -> SMALLER_EQ .)
    STOF_KWD        reduce using rule 94 (COMP -> SMALLER_EQ .)
    STOB_KWD        reduce using rule 94 (COMP -> SMALLER_EQ .)
    SUBSTR_KWD      reduce using rule 94 (COMP -> SMALLER_EQ .)
    ID              reduce using rule 94 (COMP -> SMALLER_EQ .)
    NEW_KWD         reduce using rule 94 (COMP -> SMALLER_EQ .)
    CTE_I           reduce using rule 94 (COMP -> SMALLER_EQ .)
    CTE_F           reduce using rule 94 (COMP -> SMALLER_EQ .)
    CTE_S           reduce using rule 94 (COMP -> SMALLER_EQ .)
    THIS_KWD        reduce using rule 94 (COMP -> SMALLER_EQ .)
    CTE_TRUE        reduce using rule 94 (COMP -> SMALLER_EQ .)
    CTE_FALSE       reduce using rule 94 (COMP -> SMALLER_EQ .)


state 214

    (95) COMP -> DOUBLE_EQUALS .

    MINUS           reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    NOT             reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    STOI_KWD        reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    STOF_KWD        reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    STOB_KWD        reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    SUBSTR_KWD      reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    ID              reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    NEW_KWD         reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    CTE_I           reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    CTE_F           reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    CTE_S           reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    THIS_KWD        reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    CTE_TRUE        reduce using rule 95 (COMP -> DOUBLE_EQUALS .)
    CTE_FALSE       reduce using rule 95 (COMP -> DOUBLE_EQUALS .)


state 215

    (96) COMP -> NOT_EQUALS .

    MINUS           reduce using rule 96 (COMP -> NOT_EQUALS .)
    OPEN_PARENTHESIS reduce using rule 96 (COMP -> NOT_EQUALS .)
    NOT             reduce using rule 96 (COMP -> NOT_EQUALS .)
    STOI_KWD        reduce using rule 96 (COMP -> NOT_EQUALS .)
    STOF_KWD        reduce using rule 96 (COMP -> NOT_EQUALS .)
    STOB_KWD        reduce using rule 96 (COMP -> NOT_EQUALS .)
    SUBSTR_KWD      reduce using rule 96 (COMP -> NOT_EQUALS .)
    ID              reduce using rule 96 (COMP -> NOT_EQUALS .)
    NEW_KWD         reduce using rule 96 (COMP -> NOT_EQUALS .)
    CTE_I           reduce using rule 96 (COMP -> NOT_EQUALS .)
    CTE_F           reduce using rule 96 (COMP -> NOT_EQUALS .)
    CTE_S           reduce using rule 96 (COMP -> NOT_EQUALS .)
    THIS_KWD        reduce using rule 96 (COMP -> NOT_EQUALS .)
    CTE_TRUE        reduce using rule 96 (COMP -> NOT_EQUALS .)
    CTE_FALSE       reduce using rule 96 (COMP -> NOT_EQUALS .)


state 216

    (97) COMP -> AND .

    MINUS           reduce using rule 97 (COMP -> AND .)
    OPEN_PARENTHESIS reduce using rule 97 (COMP -> AND .)
    NOT             reduce using rule 97 (COMP -> AND .)
    STOI_KWD        reduce using rule 97 (COMP -> AND .)
    STOF_KWD        reduce using rule 97 (COMP -> AND .)
    STOB_KWD        reduce using rule 97 (COMP -> AND .)
    SUBSTR_KWD      reduce using rule 97 (COMP -> AND .)
    ID              reduce using rule 97 (COMP -> AND .)
    NEW_KWD         reduce using rule 97 (COMP -> AND .)
    CTE_I           reduce using rule 97 (COMP -> AND .)
    CTE_F           reduce using rule 97 (COMP -> AND .)
    CTE_S           reduce using rule 97 (COMP -> AND .)
    THIS_KWD        reduce using rule 97 (COMP -> AND .)
    CTE_TRUE        reduce using rule 97 (COMP -> AND .)
    CTE_FALSE       reduce using rule 97 (COMP -> AND .)


state 217

    (98) COMP -> OR .

    MINUS           reduce using rule 98 (COMP -> OR .)
    OPEN_PARENTHESIS reduce using rule 98 (COMP -> OR .)
    NOT             reduce using rule 98 (COMP -> OR .)
    STOI_KWD        reduce using rule 98 (COMP -> OR .)
    STOF_KWD        reduce using rule 98 (COMP -> OR .)
    STOB_KWD        reduce using rule 98 (COMP -> OR .)
    SUBSTR_KWD      reduce using rule 98 (COMP -> OR .)
    ID              reduce using rule 98 (COMP -> OR .)
    NEW_KWD         reduce using rule 98 (COMP -> OR .)
    CTE_I           reduce using rule 98 (COMP -> OR .)
    CTE_F           reduce using rule 98 (COMP -> OR .)
    CTE_S           reduce using rule 98 (COMP -> OR .)
    THIS_KWD        reduce using rule 98 (COMP -> OR .)
    CTE_TRUE        reduce using rule 98 (COMP -> OR .)
    CTE_FALSE       reduce using rule 98 (COMP -> OR .)


state 218

    (99) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 290
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 219

    (122) seen_open_parenthesis -> empty .

    MINUS           reduce using rule 122 (seen_open_parenthesis -> empty .)
    OPEN_PARENTHESIS reduce using rule 122 (seen_open_parenthesis -> empty .)
    NOT             reduce using rule 122 (seen_open_parenthesis -> empty .)
    STOI_KWD        reduce using rule 122 (seen_open_parenthesis -> empty .)
    STOF_KWD        reduce using rule 122 (seen_open_parenthesis -> empty .)
    STOB_KWD        reduce using rule 122 (seen_open_parenthesis -> empty .)
    SUBSTR_KWD      reduce using rule 122 (seen_open_parenthesis -> empty .)
    ID              reduce using rule 122 (seen_open_parenthesis -> empty .)
    NEW_KWD         reduce using rule 122 (seen_open_parenthesis -> empty .)
    CTE_I           reduce using rule 122 (seen_open_parenthesis -> empty .)
    CTE_F           reduce using rule 122 (seen_open_parenthesis -> empty .)
    CTE_S           reduce using rule 122 (seen_open_parenthesis -> empty .)
    THIS_KWD        reduce using rule 122 (seen_open_parenthesis -> empty .)
    CTE_TRUE        reduce using rule 122 (seen_open_parenthesis -> empty .)
    CTE_FALSE       reduce using rule 122 (seen_open_parenthesis -> empty .)


state 220

    (80) EXP -> TERM seen_term . EXP_P
    (83) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (84) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (85) EXP_P -> . empty
    (211) empty -> .

    PLUS            shift and go to state 292
    MINUS           shift and go to state 293
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    EXP_P                          shift and go to state 291
    empty                          shift and go to state 294

state 221

    (81) EXP -> MINUS seen_unary_minus . EXP pop_unary_minus
    (101) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (159) TERM -> . FACTOR seen_factor TERM_P
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXP                            shift and go to state 295
    FACTOR                         shift and go to state 296
    TERM                           shift and go to state 157
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 222

    (121) seen_unary_minus -> empty .

    MINUS           reduce using rule 121 (seen_unary_minus -> empty .)
    OPEN_PARENTHESIS reduce using rule 121 (seen_unary_minus -> empty .)
    NOT             reduce using rule 121 (seen_unary_minus -> empty .)
    STOI_KWD        reduce using rule 121 (seen_unary_minus -> empty .)
    STOF_KWD        reduce using rule 121 (seen_unary_minus -> empty .)
    STOB_KWD        reduce using rule 121 (seen_unary_minus -> empty .)
    SUBSTR_KWD      reduce using rule 121 (seen_unary_minus -> empty .)
    ID              reduce using rule 121 (seen_unary_minus -> empty .)
    NEW_KWD         reduce using rule 121 (seen_unary_minus -> empty .)
    CTE_I           reduce using rule 121 (seen_unary_minus -> empty .)
    CTE_F           reduce using rule 121 (seen_unary_minus -> empty .)
    CTE_S           reduce using rule 121 (seen_unary_minus -> empty .)
    THIS_KWD        reduce using rule 121 (seen_unary_minus -> empty .)
    CTE_TRUE        reduce using rule 121 (seen_unary_minus -> empty .)
    CTE_FALSE       reduce using rule 121 (seen_unary_minus -> empty .)


state 223

    (159) TERM -> FACTOR seen_factor . TERM_P
    (160) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (161) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (162) TERM_P -> . empty
    (211) empty -> .

    STAR            shift and go to state 298
    FWD_SLASH       shift and go to state 299
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    TERM_P                         shift and go to state 297
    empty                          shift and go to state 300

state 224

    (163) seen_factor -> empty .

    STAR            reduce using rule 163 (seen_factor -> empty .)
    FWD_SLASH       reduce using rule 163 (seen_factor -> empty .)
    PLUS            reduce using rule 163 (seen_factor -> empty .)
    MINUS           reduce using rule 163 (seen_factor -> empty .)
    BIGGER          reduce using rule 163 (seen_factor -> empty .)
    BIGGER_EQ       reduce using rule 163 (seen_factor -> empty .)
    SMALLER         reduce using rule 163 (seen_factor -> empty .)
    SMALLER_EQ      reduce using rule 163 (seen_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 163 (seen_factor -> empty .)
    NOT_EQUALS      reduce using rule 163 (seen_factor -> empty .)
    AND             reduce using rule 163 (seen_factor -> empty .)
    OR              reduce using rule 163 (seen_factor -> empty .)
    SEMI_COLON      reduce using rule 163 (seen_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 163 (seen_factor -> empty .)
    COMMA           reduce using rule 163 (seen_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 163 (seen_factor -> empty .)


state 225

    (100) FACTOR -> NOT seen_not . FACTOR pop_not
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    MINUS           shift and go to state 302
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    FACTOR                         shift and go to state 301
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 226

    (119) seen_not -> empty .

    OPEN_PARENTHESIS reduce using rule 119 (seen_not -> empty .)
    NOT             reduce using rule 119 (seen_not -> empty .)
    MINUS           reduce using rule 119 (seen_not -> empty .)
    STOI_KWD        reduce using rule 119 (seen_not -> empty .)
    STOF_KWD        reduce using rule 119 (seen_not -> empty .)
    STOB_KWD        reduce using rule 119 (seen_not -> empty .)
    SUBSTR_KWD      reduce using rule 119 (seen_not -> empty .)
    ID              reduce using rule 119 (seen_not -> empty .)
    NEW_KWD         reduce using rule 119 (seen_not -> empty .)
    CTE_I           reduce using rule 119 (seen_not -> empty .)
    CTE_F           reduce using rule 119 (seen_not -> empty .)
    CTE_S           reduce using rule 119 (seen_not -> empty .)
    THIS_KWD        reduce using rule 119 (seen_not -> empty .)
    CTE_TRUE        reduce using rule 119 (seen_not -> empty .)
    CTE_FALSE       reduce using rule 119 (seen_not -> empty .)


state 227

    (102) FACTOR -> STOI_KWD seen_stoi_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 303


state 228

    (115) seen_stoi_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 115 (seen_stoi_kwd -> empty .)


state 229

    (103) FACTOR -> STOF_KWD seen_stof_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 304


state 230

    (116) seen_stof_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 116 (seen_stof_kwd -> empty .)


state 231

    (104) FACTOR -> STOB_KWD seen_stob_kwd . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    OPEN_PARENTHESIS shift and go to state 305


state 232

    (117) seen_stob_kwd -> empty .

    OPEN_PARENTHESIS reduce using rule 117 (seen_stob_kwd -> empty .)


state 233

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (122) seen_open_parenthesis -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_open_parenthesis          shift and go to state 306
    empty                          shift and go to state 219

state 234

    (108) FACTOR -> VAR seen_var_as_factor .

    STAR            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SEMI_COLON      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_BRACKET   reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)


state 235

    (125) seen_var_as_factor -> empty .

    STAR            reduce using rule 125 (seen_var_as_factor -> empty .)
    FWD_SLASH       reduce using rule 125 (seen_var_as_factor -> empty .)
    PLUS            reduce using rule 125 (seen_var_as_factor -> empty .)
    MINUS           reduce using rule 125 (seen_var_as_factor -> empty .)
    BIGGER          reduce using rule 125 (seen_var_as_factor -> empty .)
    BIGGER_EQ       reduce using rule 125 (seen_var_as_factor -> empty .)
    SMALLER         reduce using rule 125 (seen_var_as_factor -> empty .)
    SMALLER_EQ      reduce using rule 125 (seen_var_as_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 125 (seen_var_as_factor -> empty .)
    NOT_EQUALS      reduce using rule 125 (seen_var_as_factor -> empty .)
    AND             reduce using rule 125 (seen_var_as_factor -> empty .)
    OR              reduce using rule 125 (seen_var_as_factor -> empty .)
    SEMI_COLON      reduce using rule 125 (seen_var_as_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 125 (seen_var_as_factor -> empty .)
    COMMA           reduce using rule 125 (seen_var_as_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 125 (seen_var_as_factor -> empty .)


state 236

    (144) CLASS_INSTANCE -> NEW_KWD ID . seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (145) seen_class_id_instance -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_class_id_instance         shift and go to state 307
    empty                          shift and go to state 308

state 237

    (132) CONSTANT -> CTE_I seen_cte_i .

    STAR            reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    FWD_SLASH       reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    PLUS            reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    MINUS           reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    BIGGER          reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    BIGGER_EQ       reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    SMALLER         reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    SMALLER_EQ      reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    DOUBLE_EQUALS   reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    NOT_EQUALS      reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    AND             reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    OR              reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    SEMI_COLON      reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    CLOSE_PARENTHESIS reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    COMMA           reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)
    CLOSE_BRACKET   reduce using rule 132 (CONSTANT -> CTE_I seen_cte_i .)


state 238

    (133) CONSTANT -> CTE_F seen_cte_f .

    STAR            reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    FWD_SLASH       reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    PLUS            reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    MINUS           reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    BIGGER          reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    BIGGER_EQ       reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    SMALLER         reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    SMALLER_EQ      reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    DOUBLE_EQUALS   reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    NOT_EQUALS      reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    AND             reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    OR              reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    SEMI_COLON      reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    CLOSE_PARENTHESIS reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    COMMA           reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)
    CLOSE_BRACKET   reduce using rule 133 (CONSTANT -> CTE_F seen_cte_f .)


state 239

    (128) seen_cte_f -> empty .

    STAR            reduce using rule 128 (seen_cte_f -> empty .)
    FWD_SLASH       reduce using rule 128 (seen_cte_f -> empty .)
    PLUS            reduce using rule 128 (seen_cte_f -> empty .)
    MINUS           reduce using rule 128 (seen_cte_f -> empty .)
    BIGGER          reduce using rule 128 (seen_cte_f -> empty .)
    BIGGER_EQ       reduce using rule 128 (seen_cte_f -> empty .)
    SMALLER         reduce using rule 128 (seen_cte_f -> empty .)
    SMALLER_EQ      reduce using rule 128 (seen_cte_f -> empty .)
    DOUBLE_EQUALS   reduce using rule 128 (seen_cte_f -> empty .)
    NOT_EQUALS      reduce using rule 128 (seen_cte_f -> empty .)
    AND             reduce using rule 128 (seen_cte_f -> empty .)
    OR              reduce using rule 128 (seen_cte_f -> empty .)
    SEMI_COLON      reduce using rule 128 (seen_cte_f -> empty .)
    CLOSE_PARENTHESIS reduce using rule 128 (seen_cte_f -> empty .)
    COMMA           reduce using rule 128 (seen_cte_f -> empty .)
    CLOSE_BRACKET   reduce using rule 128 (seen_cte_f -> empty .)


state 240

    (134) CONSTANT -> CTE_S seen_cte_s .

    STAR            reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    FWD_SLASH       reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    PLUS            reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    MINUS           reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    BIGGER          reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    BIGGER_EQ       reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    SMALLER         reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    SMALLER_EQ      reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    DOUBLE_EQUALS   reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    NOT_EQUALS      reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    AND             reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    OR              reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    SEMI_COLON      reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    CLOSE_PARENTHESIS reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    COMMA           reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)
    CLOSE_BRACKET   reduce using rule 134 (CONSTANT -> CTE_S seen_cte_s .)


state 241

    (129) seen_cte_s -> empty .

    STAR            reduce using rule 129 (seen_cte_s -> empty .)
    FWD_SLASH       reduce using rule 129 (seen_cte_s -> empty .)
    PLUS            reduce using rule 129 (seen_cte_s -> empty .)
    MINUS           reduce using rule 129 (seen_cte_s -> empty .)
    BIGGER          reduce using rule 129 (seen_cte_s -> empty .)
    BIGGER_EQ       reduce using rule 129 (seen_cte_s -> empty .)
    SMALLER         reduce using rule 129 (seen_cte_s -> empty .)
    SMALLER_EQ      reduce using rule 129 (seen_cte_s -> empty .)
    DOUBLE_EQUALS   reduce using rule 129 (seen_cte_s -> empty .)
    NOT_EQUALS      reduce using rule 129 (seen_cte_s -> empty .)
    AND             reduce using rule 129 (seen_cte_s -> empty .)
    OR              reduce using rule 129 (seen_cte_s -> empty .)
    SEMI_COLON      reduce using rule 129 (seen_cte_s -> empty .)
    CLOSE_PARENTHESIS reduce using rule 129 (seen_cte_s -> empty .)
    COMMA           reduce using rule 129 (seen_cte_s -> empty .)
    CLOSE_BRACKET   reduce using rule 129 (seen_cte_s -> empty .)


state 242

    (136) CTE_B -> CTE_TRUE seen_cte_true .

    STAR            reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    FWD_SLASH       reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    PLUS            reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    MINUS           reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    BIGGER          reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    BIGGER_EQ       reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    SMALLER         reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    SMALLER_EQ      reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    DOUBLE_EQUALS   reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    NOT_EQUALS      reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    AND             reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    OR              reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    SEMI_COLON      reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    CLOSE_PARENTHESIS reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    COMMA           reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)
    CLOSE_BRACKET   reduce using rule 136 (CTE_B -> CTE_TRUE seen_cte_true .)


state 243

    (131) seen_cte_true -> empty .

    STAR            reduce using rule 131 (seen_cte_true -> empty .)
    FWD_SLASH       reduce using rule 131 (seen_cte_true -> empty .)
    PLUS            reduce using rule 131 (seen_cte_true -> empty .)
    MINUS           reduce using rule 131 (seen_cte_true -> empty .)
    BIGGER          reduce using rule 131 (seen_cte_true -> empty .)
    BIGGER_EQ       reduce using rule 131 (seen_cte_true -> empty .)
    SMALLER         reduce using rule 131 (seen_cte_true -> empty .)
    SMALLER_EQ      reduce using rule 131 (seen_cte_true -> empty .)
    DOUBLE_EQUALS   reduce using rule 131 (seen_cte_true -> empty .)
    NOT_EQUALS      reduce using rule 131 (seen_cte_true -> empty .)
    AND             reduce using rule 131 (seen_cte_true -> empty .)
    OR              reduce using rule 131 (seen_cte_true -> empty .)
    SEMI_COLON      reduce using rule 131 (seen_cte_true -> empty .)
    CLOSE_PARENTHESIS reduce using rule 131 (seen_cte_true -> empty .)
    COMMA           reduce using rule 131 (seen_cte_true -> empty .)
    CLOSE_BRACKET   reduce using rule 131 (seen_cte_true -> empty .)


state 244

    (137) CTE_B -> CTE_FALSE seen_cte_false .

    STAR            reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    FWD_SLASH       reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    PLUS            reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    MINUS           reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    BIGGER          reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    BIGGER_EQ       reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    SMALLER         reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    SMALLER_EQ      reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    DOUBLE_EQUALS   reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    NOT_EQUALS      reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    AND             reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    OR              reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    SEMI_COLON      reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    CLOSE_PARENTHESIS reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    COMMA           reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)
    CLOSE_BRACKET   reduce using rule 137 (CTE_B -> CTE_FALSE seen_cte_false .)


state 245

    (130) seen_cte_false -> empty .

    STAR            reduce using rule 130 (seen_cte_false -> empty .)
    FWD_SLASH       reduce using rule 130 (seen_cte_false -> empty .)
    PLUS            reduce using rule 130 (seen_cte_false -> empty .)
    MINUS           reduce using rule 130 (seen_cte_false -> empty .)
    BIGGER          reduce using rule 130 (seen_cte_false -> empty .)
    BIGGER_EQ       reduce using rule 130 (seen_cte_false -> empty .)
    SMALLER         reduce using rule 130 (seen_cte_false -> empty .)
    SMALLER_EQ      reduce using rule 130 (seen_cte_false -> empty .)
    DOUBLE_EQUALS   reduce using rule 130 (seen_cte_false -> empty .)
    NOT_EQUALS      reduce using rule 130 (seen_cte_false -> empty .)
    AND             reduce using rule 130 (seen_cte_false -> empty .)
    OR              reduce using rule 130 (seen_cte_false -> empty .)
    SEMI_COLON      reduce using rule 130 (seen_cte_false -> empty .)
    CLOSE_PARENTHESIS reduce using rule 130 (seen_cte_false -> empty .)
    COMMA           reduce using rule 130 (seen_cte_false -> empty .)
    CLOSE_BRACKET   reduce using rule 130 (seen_cte_false -> empty .)


state 246

    (139) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT . seen_this_dot_operator
    (147) seen_this_dot_operator -> . empty
    (211) empty -> .

    ID              reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)

    seen_this_dot_operator         shift and go to state 309
    empty                          shift and go to state 310

state 247

    (189) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    CLOSE_PARENTHESIS shift and go to state 311


state 248

    (106) FACTOR -> FUNC_CALL .

    STAR            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 106 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 106 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 106 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SEMI_COLON      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    CLOSE_BRACKET   reduce using rule 106 (FACTOR -> FUNC_CALL .)


state 249

    (197) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS . EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 312
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 250

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR . seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (201) seen_for_kwd -> . empty
    (211) empty -> .

    EQUALS          reduce using rule 211 (empty -> .)

    seen_for_kwd                   shift and go to state 313
    empty                          shift and go to state 314

state 251

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 315


state 252

    (33) seen_func_vars -> empty .

    OPEN_CURLY      reduce using rule 33 (seen_func_vars -> empty .)


state 253

    (39) VARS -> VARS_KWD OPEN_CURLY . VAR_LIST_STAR CLOSE_CURLY
    (14) VAR_LIST_STAR -> . VAR_LIST VAR_LIST_STAR
    (15) VAR_LIST_STAR -> . empty
    (16) VAR_LIST -> . SYMBOL_LIST COLON TYPE SEMI_COLON
    (211) empty -> .
    (17) SYMBOL_LIST -> . ID SYMBOL_LIST_P
    (18) SYMBOL_LIST -> . ARRAY_DECLARATION SYMBOL_LIST_P
    (154) ARRAY_DECLARATION -> . ID seen_array_def_id OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    ID              shift and go to state 7

    VAR_LIST_STAR                  shift and go to state 316
    VAR_LIST                       shift and go to state 16
    empty                          shift and go to state 40
    SYMBOL_LIST                    shift and go to state 19
    ARRAY_DECLARATION              shift and go to state 26

state 254

    (155) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i . seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (158) seen_array_def_dim -> . empty
    (211) empty -> .

    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_array_def_dim             shift and go to state 317
    empty                          shift and go to state 72

state 255

    (141) VAR -> ID .
    (165) FUNC_CALL -> ID . seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (148) ARRAY -> ID . seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (138) CLASS_REFERENCE -> ID . DOT seen_dot_operator
    (167) seen_func_call_id -> . empty
    (151) seen_array_id -> . empty
    (211) empty -> .

    COMMA           reduce using rule 141 (VAR -> ID .)
    CLOSE_PARENTHESIS reduce using rule 141 (VAR -> ID .)
    STAR            reduce using rule 141 (VAR -> ID .)
    FWD_SLASH       reduce using rule 141 (VAR -> ID .)
    PLUS            reduce using rule 141 (VAR -> ID .)
    MINUS           reduce using rule 141 (VAR -> ID .)
    BIGGER          reduce using rule 141 (VAR -> ID .)
    BIGGER_EQ       reduce using rule 141 (VAR -> ID .)
    SMALLER         reduce using rule 141 (VAR -> ID .)
    SMALLER_EQ      reduce using rule 141 (VAR -> ID .)
    DOUBLE_EQUALS   reduce using rule 141 (VAR -> ID .)
    NOT_EQUALS      reduce using rule 141 (VAR -> ID .)
    AND             reduce using rule 141 (VAR -> ID .)
    OR              reduce using rule 141 (VAR -> ID .)
    DOT             shift and go to state 126
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    OPEN_BRACKET    reduce using rule 211 (empty -> .)

    seen_func_call_id              shift and go to state 125
    seen_array_id                  shift and go to state 127
    empty                          shift and go to state 128

state 256

    (165) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 318


state 257

    (168) ARG_LIST -> VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (108) FACTOR -> VAR . seen_var_as_factor
    (125) seen_var_as_factor -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)

    seen_var_as_factor             shift and go to state 319
    empty                          shift and go to state 235

state 258

    (169) ARG_LIST -> EXPRESSION . seen_arg ARG_LIST_P
    (176) seen_arg -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_arg                       shift and go to state 320
    empty                          shift and go to state 321

state 259

    (170) ARG_LIST -> FUNC_CALL . seen_arg ARG_LIST_P
    (106) FACTOR -> FUNC_CALL .
    (176) seen_arg -> . empty
    (211) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 106 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 106 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 106 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 106 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 106 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 211 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 211 (empty -> .) ]

    seen_arg                       shift and go to state 322
    empty                          shift and go to state 321

state 260

    (171) ARG_LIST -> empty .

    CLOSE_PARENTHESIS reduce using rule 171 (ARG_LIST -> empty .)


state 261

    (143) VAR -> CLASS_REFERENCE . VAR
    (166) FUNC_CALL -> CLASS_REFERENCE . FUNC_CALL
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 255
    THIS_KWD        shift and go to state 110

    CLASS_REFERENCE                shift and go to state 261
    VAR                            shift and go to state 142
    FUNC_CALL                      shift and go to state 141
    ARRAY                          shift and go to state 109

state 262

    (148) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 323
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 263

    (152) seen_open_bracket -> empty .

    MINUS           reduce using rule 152 (seen_open_bracket -> empty .)
    OPEN_PARENTHESIS reduce using rule 152 (seen_open_bracket -> empty .)
    NOT             reduce using rule 152 (seen_open_bracket -> empty .)
    STOI_KWD        reduce using rule 152 (seen_open_bracket -> empty .)
    STOF_KWD        reduce using rule 152 (seen_open_bracket -> empty .)
    STOB_KWD        reduce using rule 152 (seen_open_bracket -> empty .)
    SUBSTR_KWD      reduce using rule 152 (seen_open_bracket -> empty .)
    ID              reduce using rule 152 (seen_open_bracket -> empty .)
    NEW_KWD         reduce using rule 152 (seen_open_bracket -> empty .)
    CTE_I           reduce using rule 152 (seen_open_bracket -> empty .)
    CTE_F           reduce using rule 152 (seen_open_bracket -> empty .)
    CTE_S           reduce using rule 152 (seen_open_bracket -> empty .)
    THIS_KWD        reduce using rule 152 (seen_open_bracket -> empty .)
    CTE_TRUE        reduce using rule 152 (seen_open_bracket -> empty .)
    CTE_FALSE       reduce using rule 152 (seen_open_bracket -> empty .)


state 264

    (66) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals . EXPRESSION
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 166
    EXPRESSION                     shift and go to state 324
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 265

    (73) seen_equals -> empty .

    MINUS           reduce using rule 73 (seen_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 73 (seen_equals -> empty .)
    NOT             reduce using rule 73 (seen_equals -> empty .)
    STOI_KWD        reduce using rule 73 (seen_equals -> empty .)
    STOF_KWD        reduce using rule 73 (seen_equals -> empty .)
    STOB_KWD        reduce using rule 73 (seen_equals -> empty .)
    SUBSTR_KWD      reduce using rule 73 (seen_equals -> empty .)
    ID              reduce using rule 73 (seen_equals -> empty .)
    NEW_KWD         reduce using rule 73 (seen_equals -> empty .)
    CTE_I           reduce using rule 73 (seen_equals -> empty .)
    CTE_F           reduce using rule 73 (seen_equals -> empty .)
    CTE_S           reduce using rule 73 (seen_equals -> empty .)
    THIS_KWD        reduce using rule 73 (seen_equals -> empty .)
    CTE_TRUE        reduce using rule 73 (seen_equals -> empty .)
    CTE_FALSE       reduce using rule 73 (seen_equals -> empty .)


state 266

    (67) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals . EXPRESSION
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 166
    EXPRESSION                     shift and go to state 325
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 267

    (74) seen_plus_equals -> empty .

    MINUS           reduce using rule 74 (seen_plus_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 74 (seen_plus_equals -> empty .)
    NOT             reduce using rule 74 (seen_plus_equals -> empty .)
    STOI_KWD        reduce using rule 74 (seen_plus_equals -> empty .)
    STOF_KWD        reduce using rule 74 (seen_plus_equals -> empty .)
    STOB_KWD        reduce using rule 74 (seen_plus_equals -> empty .)
    SUBSTR_KWD      reduce using rule 74 (seen_plus_equals -> empty .)
    ID              reduce using rule 74 (seen_plus_equals -> empty .)
    NEW_KWD         reduce using rule 74 (seen_plus_equals -> empty .)
    CTE_I           reduce using rule 74 (seen_plus_equals -> empty .)
    CTE_F           reduce using rule 74 (seen_plus_equals -> empty .)
    CTE_S           reduce using rule 74 (seen_plus_equals -> empty .)
    THIS_KWD        reduce using rule 74 (seen_plus_equals -> empty .)
    CTE_TRUE        reduce using rule 74 (seen_plus_equals -> empty .)
    CTE_FALSE       reduce using rule 74 (seen_plus_equals -> empty .)


state 268

    (68) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals . EXPRESSION
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 166
    EXPRESSION                     shift and go to state 326
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 269

    (75) seen_minus_equals -> empty .

    MINUS           reduce using rule 75 (seen_minus_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 75 (seen_minus_equals -> empty .)
    NOT             reduce using rule 75 (seen_minus_equals -> empty .)
    STOI_KWD        reduce using rule 75 (seen_minus_equals -> empty .)
    STOF_KWD        reduce using rule 75 (seen_minus_equals -> empty .)
    STOB_KWD        reduce using rule 75 (seen_minus_equals -> empty .)
    SUBSTR_KWD      reduce using rule 75 (seen_minus_equals -> empty .)
    ID              reduce using rule 75 (seen_minus_equals -> empty .)
    NEW_KWD         reduce using rule 75 (seen_minus_equals -> empty .)
    CTE_I           reduce using rule 75 (seen_minus_equals -> empty .)
    CTE_F           reduce using rule 75 (seen_minus_equals -> empty .)
    CTE_S           reduce using rule 75 (seen_minus_equals -> empty .)
    THIS_KWD        reduce using rule 75 (seen_minus_equals -> empty .)
    CTE_TRUE        reduce using rule 75 (seen_minus_equals -> empty .)
    CTE_FALSE       reduce using rule 75 (seen_minus_equals -> empty .)


state 270

    (69) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals . EXPRESSION
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 166
    EXPRESSION                     shift and go to state 327
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 271

    (76) seen_times_equals -> empty .

    MINUS           reduce using rule 76 (seen_times_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 76 (seen_times_equals -> empty .)
    NOT             reduce using rule 76 (seen_times_equals -> empty .)
    STOI_KWD        reduce using rule 76 (seen_times_equals -> empty .)
    STOF_KWD        reduce using rule 76 (seen_times_equals -> empty .)
    STOB_KWD        reduce using rule 76 (seen_times_equals -> empty .)
    SUBSTR_KWD      reduce using rule 76 (seen_times_equals -> empty .)
    ID              reduce using rule 76 (seen_times_equals -> empty .)
    NEW_KWD         reduce using rule 76 (seen_times_equals -> empty .)
    CTE_I           reduce using rule 76 (seen_times_equals -> empty .)
    CTE_F           reduce using rule 76 (seen_times_equals -> empty .)
    CTE_S           reduce using rule 76 (seen_times_equals -> empty .)
    THIS_KWD        reduce using rule 76 (seen_times_equals -> empty .)
    CTE_TRUE        reduce using rule 76 (seen_times_equals -> empty .)
    CTE_FALSE       reduce using rule 76 (seen_times_equals -> empty .)


state 272

    (70) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals . EXPRESSION
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 166
    EXPRESSION                     shift and go to state 328
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 273

    (77) seen_over_equals -> empty .

    MINUS           reduce using rule 77 (seen_over_equals -> empty .)
    OPEN_PARENTHESIS reduce using rule 77 (seen_over_equals -> empty .)
    NOT             reduce using rule 77 (seen_over_equals -> empty .)
    STOI_KWD        reduce using rule 77 (seen_over_equals -> empty .)
    STOF_KWD        reduce using rule 77 (seen_over_equals -> empty .)
    STOB_KWD        reduce using rule 77 (seen_over_equals -> empty .)
    SUBSTR_KWD      reduce using rule 77 (seen_over_equals -> empty .)
    ID              reduce using rule 77 (seen_over_equals -> empty .)
    NEW_KWD         reduce using rule 77 (seen_over_equals -> empty .)
    CTE_I           reduce using rule 77 (seen_over_equals -> empty .)
    CTE_F           reduce using rule 77 (seen_over_equals -> empty .)
    CTE_S           reduce using rule 77 (seen_over_equals -> empty .)
    THIS_KWD        reduce using rule 77 (seen_over_equals -> empty .)
    CTE_TRUE        reduce using rule 77 (seen_over_equals -> empty .)
    CTE_FALSE       reduce using rule 77 (seen_over_equals -> empty .)


state 274

    (71) ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .

    SEMI_COLON      reduce using rule 71 (ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .)
    CLOSE_PARENTHESIS reduce using rule 71 (ASSIGN -> VAR seen_var_in_assign PLUS_PLUS seen_plus_plus .)


state 275

    (78) seen_plus_plus -> empty .

    SEMI_COLON      reduce using rule 78 (seen_plus_plus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 78 (seen_plus_plus -> empty .)


state 276

    (72) ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .

    SEMI_COLON      reduce using rule 72 (ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .)
    CLOSE_PARENTHESIS reduce using rule 72 (ASSIGN -> VAR seen_var_in_assign MINUS_MINUS seen_minus_minus .)


state 277

    (79) seen_minus_minus -> empty .

    SEMI_COLON      reduce using rule 79 (seen_minus_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 79 (seen_minus_minus -> empty .)


state 278

    (180) READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 180 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 180 (READ -> READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS .)


state 279

    (23) READABLE_LIST -> VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_readable                  shift and go to state 329
    empty                          shift and go to state 330

state 280

    (151) seen_array_id -> empty .

    OPEN_BRACKET    reduce using rule 151 (seen_array_id -> empty .)


state 281

    (181) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 331


state 282

    (185) PRINTABLE -> EXPRESSION . seen_printable PRINTABLE_P
    (188) seen_printable -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_printable                 shift and go to state 332
    empty                          shift and go to state 333

state 283

    (183) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 334


state 284

    (53) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (54) seen_open_buffer -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)

    seen_open_buffer               shift and go to state 335
    empty                          shift and go to state 336

state 285

    (126) seen_var_in_io -> empty .

    COMMA           reduce using rule 126 (seen_var_in_io -> empty .)


state 286

    (55) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io . seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (56) seen_write_buffer -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)

    seen_write_buffer              shift and go to state 337
    empty                          shift and go to state 338

state 287

    (52) USING -> USING_KWD ID AS_KWD ID .

    SEMI_COLON      reduce using rule 52 (USING -> USING_KWD ID AS_KWD ID .)


state 288

    (88) EXPRESSION -> EXP COMP seen_comp_op . EXPRESSION seen_comp
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXP                            shift and go to state 154
    EXPRESSION                     shift and go to state 339
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 289

    (90) seen_comp_op -> empty .

    MINUS           reduce using rule 90 (seen_comp_op -> empty .)
    OPEN_PARENTHESIS reduce using rule 90 (seen_comp_op -> empty .)
    NOT             reduce using rule 90 (seen_comp_op -> empty .)
    STOI_KWD        reduce using rule 90 (seen_comp_op -> empty .)
    STOF_KWD        reduce using rule 90 (seen_comp_op -> empty .)
    STOB_KWD        reduce using rule 90 (seen_comp_op -> empty .)
    SUBSTR_KWD      reduce using rule 90 (seen_comp_op -> empty .)
    ID              reduce using rule 90 (seen_comp_op -> empty .)
    NEW_KWD         reduce using rule 90 (seen_comp_op -> empty .)
    CTE_I           reduce using rule 90 (seen_comp_op -> empty .)
    CTE_F           reduce using rule 90 (seen_comp_op -> empty .)
    CTE_S           reduce using rule 90 (seen_comp_op -> empty .)
    THIS_KWD        reduce using rule 90 (seen_comp_op -> empty .)
    CTE_TRUE        reduce using rule 90 (seen_comp_op -> empty .)
    CTE_FALSE       reduce using rule 90 (seen_comp_op -> empty .)


state 290

    (99) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis

    CLOSE_PARENTHESIS shift and go to state 340


state 291

    (80) EXP -> TERM seen_term EXP_P .

    BIGGER          reduce using rule 80 (EXP -> TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 80 (EXP -> TERM seen_term EXP_P .)
    SMALLER         reduce using rule 80 (EXP -> TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 80 (EXP -> TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 80 (EXP -> TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 80 (EXP -> TERM seen_term EXP_P .)
    AND             reduce using rule 80 (EXP -> TERM seen_term EXP_P .)
    OR              reduce using rule 80 (EXP -> TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 80 (EXP -> TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 80 (EXP -> TERM seen_term EXP_P .)
    COMMA           reduce using rule 80 (EXP -> TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 80 (EXP -> TERM seen_term EXP_P .)


state 292

    (83) EXP_P -> PLUS . seen_term_op TERM seen_term EXP_P
    (86) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 86 (seen_term_op -> .)
    NOT             reduce using rule 86 (seen_term_op -> .)
    MINUS           reduce using rule 86 (seen_term_op -> .)
    STOI_KWD        reduce using rule 86 (seen_term_op -> .)
    STOF_KWD        reduce using rule 86 (seen_term_op -> .)
    STOB_KWD        reduce using rule 86 (seen_term_op -> .)
    SUBSTR_KWD      reduce using rule 86 (seen_term_op -> .)
    ID              reduce using rule 86 (seen_term_op -> .)
    NEW_KWD         reduce using rule 86 (seen_term_op -> .)
    CTE_I           reduce using rule 86 (seen_term_op -> .)
    CTE_F           reduce using rule 86 (seen_term_op -> .)
    CTE_S           reduce using rule 86 (seen_term_op -> .)
    THIS_KWD        reduce using rule 86 (seen_term_op -> .)
    CTE_TRUE        reduce using rule 86 (seen_term_op -> .)
    CTE_FALSE       reduce using rule 86 (seen_term_op -> .)

    seen_term_op                   shift and go to state 341

state 293

    (84) EXP_P -> MINUS . seen_term_op TERM seen_term EXP_P
    (86) seen_term_op -> .

    OPEN_PARENTHESIS reduce using rule 86 (seen_term_op -> .)
    NOT             reduce using rule 86 (seen_term_op -> .)
    MINUS           reduce using rule 86 (seen_term_op -> .)
    STOI_KWD        reduce using rule 86 (seen_term_op -> .)
    STOF_KWD        reduce using rule 86 (seen_term_op -> .)
    STOB_KWD        reduce using rule 86 (seen_term_op -> .)
    SUBSTR_KWD      reduce using rule 86 (seen_term_op -> .)
    ID              reduce using rule 86 (seen_term_op -> .)
    NEW_KWD         reduce using rule 86 (seen_term_op -> .)
    CTE_I           reduce using rule 86 (seen_term_op -> .)
    CTE_F           reduce using rule 86 (seen_term_op -> .)
    CTE_S           reduce using rule 86 (seen_term_op -> .)
    THIS_KWD        reduce using rule 86 (seen_term_op -> .)
    CTE_TRUE        reduce using rule 86 (seen_term_op -> .)
    CTE_FALSE       reduce using rule 86 (seen_term_op -> .)

    seen_term_op                   shift and go to state 342

state 294

    (85) EXP_P -> empty .

    BIGGER          reduce using rule 85 (EXP_P -> empty .)
    BIGGER_EQ       reduce using rule 85 (EXP_P -> empty .)
    SMALLER         reduce using rule 85 (EXP_P -> empty .)
    SMALLER_EQ      reduce using rule 85 (EXP_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 85 (EXP_P -> empty .)
    NOT_EQUALS      reduce using rule 85 (EXP_P -> empty .)
    AND             reduce using rule 85 (EXP_P -> empty .)
    OR              reduce using rule 85 (EXP_P -> empty .)
    SEMI_COLON      reduce using rule 85 (EXP_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 85 (EXP_P -> empty .)
    COMMA           reduce using rule 85 (EXP_P -> empty .)
    CLOSE_BRACKET   reduce using rule 85 (EXP_P -> empty .)


state 295

    (81) EXP -> MINUS seen_unary_minus EXP . pop_unary_minus
    (120) pop_unary_minus -> . empty
    (211) empty -> .

    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    pop_unary_minus                shift and go to state 343
    empty                          shift and go to state 344

state 296

    (101) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (159) TERM -> FACTOR . seen_factor TERM_P
    (120) pop_unary_minus -> . empty
    (163) seen_factor -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    pop_unary_minus                shift and go to state 345
    seen_factor                    shift and go to state 223
    empty                          shift and go to state 346

state 297

    (159) TERM -> FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    AND             reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    OR              reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 159 (TERM -> FACTOR seen_factor TERM_P .)


state 298

    (160) TERM_P -> STAR . seen_factor_op FACTOR seen_factor TERM_P
    (164) seen_factor_op -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_factor_op                 shift and go to state 347
    empty                          shift and go to state 348

state 299

    (161) TERM_P -> FWD_SLASH . seen_factor_op FACTOR seen_factor TERM_P
    (164) seen_factor_op -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_factor_op                 shift and go to state 349
    empty                          shift and go to state 348

state 300

    (162) TERM_P -> empty .

    PLUS            reduce using rule 162 (TERM_P -> empty .)
    MINUS           reduce using rule 162 (TERM_P -> empty .)
    BIGGER          reduce using rule 162 (TERM_P -> empty .)
    BIGGER_EQ       reduce using rule 162 (TERM_P -> empty .)
    SMALLER         reduce using rule 162 (TERM_P -> empty .)
    SMALLER_EQ      reduce using rule 162 (TERM_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 162 (TERM_P -> empty .)
    NOT_EQUALS      reduce using rule 162 (TERM_P -> empty .)
    AND             reduce using rule 162 (TERM_P -> empty .)
    OR              reduce using rule 162 (TERM_P -> empty .)
    SEMI_COLON      reduce using rule 162 (TERM_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 162 (TERM_P -> empty .)
    COMMA           reduce using rule 162 (TERM_P -> empty .)
    CLOSE_BRACKET   reduce using rule 162 (TERM_P -> empty .)


state 301

    (100) FACTOR -> NOT seen_not FACTOR . pop_not
    (118) pop_not -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    pop_not                        shift and go to state 350
    empty                          shift and go to state 351

state 302

    (101) FACTOR -> MINUS . seen_unary_minus FACTOR pop_unary_minus
    (121) seen_unary_minus -> . empty
    (211) empty -> .

    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_unary_minus               shift and go to state 352
    empty                          shift and go to state 222

state 303

    (102) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (122) seen_open_parenthesis -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_open_parenthesis          shift and go to state 353
    empty                          shift and go to state 219

state 304

    (103) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (122) seen_open_parenthesis -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_open_parenthesis          shift and go to state 354
    empty                          shift and go to state 219

state 305

    (104) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS . seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (122) seen_open_parenthesis -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_open_parenthesis          shift and go to state 355
    empty                          shift and go to state 219

state 306

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 356
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 307

    (144) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 357


state 308

    (145) seen_class_id_instance -> empty .

    OPEN_PARENTHESIS reduce using rule 145 (seen_class_id_instance -> empty .)


state 309

    (139) CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .

    ID              reduce using rule 139 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)
    THIS_KWD        reduce using rule 139 (CLASS_REFERENCE -> THIS_KWD seen_this_kwd DOT seen_this_dot_operator .)


state 310

    (147) seen_this_dot_operator -> empty .

    ID              reduce using rule 147 (seen_this_dot_operator -> empty .)
    THIS_KWD        reduce using rule 147 (seen_this_dot_operator -> empty .)


state 311

    (189) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (193) seen_if_kwd -> . empty
    (211) empty -> .

    OPEN_CURLY      reduce using rule 211 (empty -> .)

    seen_if_kwd                    shift and go to state 358
    empty                          shift and go to state 359

state 312

    (197) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION . CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 360


state 313

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd . EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    EQUALS          shift and go to state 361


state 314

    (201) seen_for_kwd -> empty .

    EQUALS          reduce using rule 201 (seen_for_kwd -> empty .)


state 315

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (211) empty -> .
    (66) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (70) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (180) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (181) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (183) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (53) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (52) USING -> . USING_KWD ID AS_KWD ID
    (59) FLOW_CONTROL -> . DECISION
    (60) FLOW_CONTROL -> . REPETITION
    (177) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (178) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (179) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (189) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (195) REPETITION -> . CONDITIONAL_REP
    (196) REPETITION -> . UNCONDITIONAL_REP
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (197) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (200) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT_STAR                 shift and go to state 362
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 316

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 363


state 317

    (155) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim . CLOSE_BRACKET ARRAY_DECLARATION_P

    CLOSE_BRACKET   shift and go to state 364


state 318

    (165) FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    STAR            reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    AND             reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    OR              reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 165 (FUNC_CALL -> ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS .)


state 319

    (168) ARG_LIST -> VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (108) FACTOR -> VAR seen_var_as_factor .
    (176) seen_arg -> . empty
    (211) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 108 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 211 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 211 (empty -> .) ]

    seen_arg                       shift and go to state 365
    empty                          shift and go to state 321

state 320

    (169) ARG_LIST -> EXPRESSION seen_arg . ARG_LIST_P
    (172) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (173) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 367
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    ARG_LIST_P                     shift and go to state 366
    empty                          shift and go to state 368

state 321

    (176) seen_arg -> empty .

    COMMA           reduce using rule 176 (seen_arg -> empty .)
    CLOSE_PARENTHESIS reduce using rule 176 (seen_arg -> empty .)


state 322

    (170) ARG_LIST -> FUNC_CALL seen_arg . ARG_LIST_P
    (172) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (173) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 367
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    ARG_LIST_P                     shift and go to state 369
    empty                          shift and go to state 368

state 323

    (148) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (153) seen_array_access -> . empty
    (211) empty -> .

    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_array_access              shift and go to state 370
    empty                          shift and go to state 371

state 324

    (66) ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .

    SEMI_COLON      reduce using rule 66 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 66 (ASSIGN -> VAR seen_var_in_assign EQUALS seen_equals EXPRESSION .)


state 325

    (67) ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .

    SEMI_COLON      reduce using rule 67 (ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 67 (ASSIGN -> VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION .)


state 326

    (68) ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .

    SEMI_COLON      reduce using rule 68 (ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 68 (ASSIGN -> VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION .)


state 327

    (69) ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .

    SEMI_COLON      reduce using rule 69 (ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 69 (ASSIGN -> VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION .)


state 328

    (70) ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .

    SEMI_COLON      reduce using rule 70 (ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .)
    CLOSE_PARENTHESIS reduce using rule 70 (ASSIGN -> VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION .)


state 329

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    READABLE_LIST_P                shift and go to state 372
    empty                          shift and go to state 374

state 330

    (26) seen_readable -> empty .

    COMMA           reduce using rule 26 (seen_readable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 26 (seen_readable -> empty .)


state 331

    (181) PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 181 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 181 (PRINT -> PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 332

    (185) PRINTABLE -> EXPRESSION seen_printable . PRINTABLE_P
    (186) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (187) PRINTABLE_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 376
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    PRINTABLE_P                    shift and go to state 375
    empty                          shift and go to state 377

state 333

    (188) seen_printable -> empty .

    COMMA           reduce using rule 188 (seen_printable -> empty .)
    CLOSE_PARENTHESIS reduce using rule 188 (seen_printable -> empty .)


state 334

    (183) PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 183 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 183 (PRINTLN -> PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS .)


state 335

    (53) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 378


state 336

    (54) seen_open_buffer -> empty .

    COMMA           reduce using rule 54 (seen_open_buffer -> empty .)


state 337

    (55) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer . COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 379


state 338

    (56) seen_write_buffer -> empty .

    COMMA           reduce using rule 56 (seen_write_buffer -> empty .)


state 339

    (88) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION . seen_comp
    (89) seen_comp -> . empty
    (211) empty -> .

    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_comp                      shift and go to state 380
    empty                          shift and go to state 381

state 340

    (99) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis
    (123) seen_close_parenthesis -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_close_parenthesis         shift and go to state 382
    empty                          shift and go to state 383

state 341

    (83) EXP_P -> PLUS seen_term_op . TERM seen_term EXP_P
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    MINUS           shift and go to state 302
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    TERM                           shift and go to state 384
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 342

    (84) EXP_P -> MINUS seen_term_op . TERM seen_term EXP_P
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    MINUS           shift and go to state 302
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    TERM                           shift and go to state 385
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 343

    (81) EXP -> MINUS seen_unary_minus EXP pop_unary_minus .

    BIGGER          reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    BIGGER_EQ       reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER         reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SMALLER_EQ      reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    NOT_EQUALS      reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    AND             reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    OR              reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    SEMI_COLON      reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    COMMA           reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 81 (EXP -> MINUS seen_unary_minus EXP pop_unary_minus .)


state 344

    (120) pop_unary_minus -> empty .

    BIGGER          reduce using rule 120 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 120 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 120 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 120 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 120 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 120 (pop_unary_minus -> empty .)
    AND             reduce using rule 120 (pop_unary_minus -> empty .)
    OR              reduce using rule 120 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 120 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 120 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 120 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 120 (pop_unary_minus -> empty .)
    STAR            reduce using rule 120 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 120 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 120 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 120 (pop_unary_minus -> empty .)


state 345

    (101) FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .

    STAR            reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    FWD_SLASH       reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    PLUS            reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    MINUS           reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER          reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    BIGGER_EQ       reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER         reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SMALLER_EQ      reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    DOUBLE_EQUALS   reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    NOT_EQUALS      reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    AND             reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    OR              reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    SEMI_COLON      reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_PARENTHESIS reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    COMMA           reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)
    CLOSE_BRACKET   reduce using rule 101 (FACTOR -> MINUS seen_unary_minus FACTOR pop_unary_minus .)


state 346

    (120) pop_unary_minus -> empty .
    (163) seen_factor -> empty .

  ! reduce/reduce conflict for STAR resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for FWD_SLASH resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for BIGGER_EQ resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SMALLER_EQ resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for DOUBLE_EQUALS resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 120 (pop_unary_minus -> empty .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 120 (pop_unary_minus -> empty .)
    STAR            reduce using rule 120 (pop_unary_minus -> empty .)
    FWD_SLASH       reduce using rule 120 (pop_unary_minus -> empty .)
    PLUS            reduce using rule 120 (pop_unary_minus -> empty .)
    MINUS           reduce using rule 120 (pop_unary_minus -> empty .)
    BIGGER          reduce using rule 120 (pop_unary_minus -> empty .)
    BIGGER_EQ       reduce using rule 120 (pop_unary_minus -> empty .)
    SMALLER         reduce using rule 120 (pop_unary_minus -> empty .)
    SMALLER_EQ      reduce using rule 120 (pop_unary_minus -> empty .)
    DOUBLE_EQUALS   reduce using rule 120 (pop_unary_minus -> empty .)
    NOT_EQUALS      reduce using rule 120 (pop_unary_minus -> empty .)
    AND             reduce using rule 120 (pop_unary_minus -> empty .)
    OR              reduce using rule 120 (pop_unary_minus -> empty .)
    SEMI_COLON      reduce using rule 120 (pop_unary_minus -> empty .)
    CLOSE_PARENTHESIS reduce using rule 120 (pop_unary_minus -> empty .)
    COMMA           reduce using rule 120 (pop_unary_minus -> empty .)
    CLOSE_BRACKET   reduce using rule 120 (pop_unary_minus -> empty .)

  ! STAR            [ reduce using rule 163 (seen_factor -> empty .) ]
  ! FWD_SLASH       [ reduce using rule 163 (seen_factor -> empty .) ]
  ! PLUS            [ reduce using rule 163 (seen_factor -> empty .) ]
  ! MINUS           [ reduce using rule 163 (seen_factor -> empty .) ]
  ! BIGGER          [ reduce using rule 163 (seen_factor -> empty .) ]
  ! BIGGER_EQ       [ reduce using rule 163 (seen_factor -> empty .) ]
  ! SMALLER         [ reduce using rule 163 (seen_factor -> empty .) ]
  ! SMALLER_EQ      [ reduce using rule 163 (seen_factor -> empty .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 163 (seen_factor -> empty .) ]
  ! NOT_EQUALS      [ reduce using rule 163 (seen_factor -> empty .) ]
  ! AND             [ reduce using rule 163 (seen_factor -> empty .) ]
  ! OR              [ reduce using rule 163 (seen_factor -> empty .) ]
  ! SEMI_COLON      [ reduce using rule 163 (seen_factor -> empty .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 163 (seen_factor -> empty .) ]
  ! COMMA           [ reduce using rule 163 (seen_factor -> empty .) ]
  ! CLOSE_BRACKET   [ reduce using rule 163 (seen_factor -> empty .) ]


state 347

    (160) TERM_P -> STAR seen_factor_op . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    MINUS           shift and go to state 302
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    FACTOR                         shift and go to state 386
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 348

    (164) seen_factor_op -> empty .

    OPEN_PARENTHESIS reduce using rule 164 (seen_factor_op -> empty .)
    NOT             reduce using rule 164 (seen_factor_op -> empty .)
    MINUS           reduce using rule 164 (seen_factor_op -> empty .)
    STOI_KWD        reduce using rule 164 (seen_factor_op -> empty .)
    STOF_KWD        reduce using rule 164 (seen_factor_op -> empty .)
    STOB_KWD        reduce using rule 164 (seen_factor_op -> empty .)
    SUBSTR_KWD      reduce using rule 164 (seen_factor_op -> empty .)
    ID              reduce using rule 164 (seen_factor_op -> empty .)
    NEW_KWD         reduce using rule 164 (seen_factor_op -> empty .)
    CTE_I           reduce using rule 164 (seen_factor_op -> empty .)
    CTE_F           reduce using rule 164 (seen_factor_op -> empty .)
    CTE_S           reduce using rule 164 (seen_factor_op -> empty .)
    THIS_KWD        reduce using rule 164 (seen_factor_op -> empty .)
    CTE_TRUE        reduce using rule 164 (seen_factor_op -> empty .)
    CTE_FALSE       reduce using rule 164 (seen_factor_op -> empty .)


state 349

    (161) TERM_P -> FWD_SLASH seen_factor_op . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    MINUS           shift and go to state 302
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    FACTOR                         shift and go to state 387
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 350

    (100) FACTOR -> NOT seen_not FACTOR pop_not .

    STAR            reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    FWD_SLASH       reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    PLUS            reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    MINUS           reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER          reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    BIGGER_EQ       reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER         reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SMALLER_EQ      reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    DOUBLE_EQUALS   reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    NOT_EQUALS      reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    AND             reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    OR              reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    SEMI_COLON      reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_PARENTHESIS reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    COMMA           reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)
    CLOSE_BRACKET   reduce using rule 100 (FACTOR -> NOT seen_not FACTOR pop_not .)


state 351

    (118) pop_not -> empty .

    STAR            reduce using rule 118 (pop_not -> empty .)
    FWD_SLASH       reduce using rule 118 (pop_not -> empty .)
    PLUS            reduce using rule 118 (pop_not -> empty .)
    MINUS           reduce using rule 118 (pop_not -> empty .)
    BIGGER          reduce using rule 118 (pop_not -> empty .)
    BIGGER_EQ       reduce using rule 118 (pop_not -> empty .)
    SMALLER         reduce using rule 118 (pop_not -> empty .)
    SMALLER_EQ      reduce using rule 118 (pop_not -> empty .)
    DOUBLE_EQUALS   reduce using rule 118 (pop_not -> empty .)
    NOT_EQUALS      reduce using rule 118 (pop_not -> empty .)
    AND             reduce using rule 118 (pop_not -> empty .)
    OR              reduce using rule 118 (pop_not -> empty .)
    SEMI_COLON      reduce using rule 118 (pop_not -> empty .)
    CLOSE_PARENTHESIS reduce using rule 118 (pop_not -> empty .)
    COMMA           reduce using rule 118 (pop_not -> empty .)
    CLOSE_BRACKET   reduce using rule 118 (pop_not -> empty .)


state 352

    (101) FACTOR -> MINUS seen_unary_minus . FACTOR pop_unary_minus
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    MINUS           shift and go to state 302
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    FACTOR                         shift and go to state 388
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 353

    (102) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 389
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 354

    (103) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 390
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 355

    (104) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis . EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 391
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 356

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (110) seen_substr_str -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)

    seen_substr_str                shift and go to state 392
    empty                          shift and go to state 393

state 357

    (144) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 394


state 358

    (189) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 395


state 359

    (193) seen_if_kwd -> empty .

    OPEN_CURLY      reduce using rule 193 (seen_if_kwd -> empty .)


state 360

    (197) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS . seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (199) seen_while_exp -> . empty
    (211) empty -> .

    OPEN_CURLY      reduce using rule 211 (empty -> .)

    seen_while_exp                 shift and go to state 396
    empty                          shift and go to state 397

state 361

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS . EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 166
    EXPRESSION                     shift and go to state 398
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 362

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 399


state 363

    (39) VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .

    OPEN_CURLY      reduce using rule 39 (VARS -> VARS_KWD OPEN_CURLY VAR_LIST_STAR CLOSE_CURLY .)


state 364

    (155) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET . ARRAY_DECLARATION_P
    (155) ARRAY_DECLARATION_P -> . OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P
    (156) ARRAY_DECLARATION_P -> . empty
    (211) empty -> .

    OPEN_BRACKET    shift and go to state 122
    COMMA           reduce using rule 211 (empty -> .)
    COLON           reduce using rule 211 (empty -> .)

    ARRAY_DECLARATION_P            shift and go to state 400
    empty                          shift and go to state 124

state 365

    (168) ARG_LIST -> VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (172) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (173) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 367
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    ARG_LIST_P                     shift and go to state 401
    empty                          shift and go to state 368

state 366

    (169) ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 169 (ARG_LIST -> EXPRESSION seen_arg ARG_LIST_P .)


state 367

    (172) ARG_LIST_P -> COMMA . VAR seen_var_as_factor seen_arg ARG_LIST_P
    (173) ARG_LIST_P -> COMMA . EXPRESSION seen_arg ARG_LIST_P
    (174) ARG_LIST_P -> COMMA . FUNC_CALL seen_arg ARG_LIST_P
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    ID              shift and go to state 255
    THIS_KWD        shift and go to state 110
    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 402
    EXPRESSION                     shift and go to state 403
    FUNC_CALL                      shift and go to state 404
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 261
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CTE_B                          shift and go to state 172

state 368

    (175) ARG_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 175 (ARG_LIST_P -> empty .)


state 369

    (170) ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 170 (ARG_LIST -> FUNC_CALL seen_arg ARG_LIST_P .)


state 370

    (148) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 405


state 371

    (153) seen_array_access -> empty .

    CLOSE_BRACKET   reduce using rule 153 (seen_array_access -> empty .)


state 372

    (23) READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 23 (READABLE_LIST -> VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 373

    (24) READABLE_LIST_P -> COMMA . VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator

    ID              shift and go to state 200
    THIS_KWD        shift and go to state 110

    VAR                            shift and go to state 406
    ARRAY                          shift and go to state 109
    CLASS_REFERENCE                shift and go to state 201

state 374

    (25) READABLE_LIST_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 25 (READABLE_LIST_P -> empty .)


state 375

    (185) PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 185 (PRINTABLE -> EXPRESSION seen_printable PRINTABLE_P .)


state 376

    (186) PRINTABLE_P -> COMMA . EXPRESSION seen_printable PRINTABLE_P
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 407
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 377

    (187) PRINTABLE_P -> empty .

    CLOSE_PARENTHESIS reduce using rule 187 (PRINTABLE_P -> empty .)


state 378

    (53) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 166
    EXPRESSION                     shift and go to state 408
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 379

    (55) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA . EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 166
    EXPRESSION                     shift and go to state 409
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 380

    (88) EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .

    SEMI_COLON      reduce using rule 88 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_PARENTHESIS reduce using rule 88 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    COMMA           reduce using rule 88 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)
    CLOSE_BRACKET   reduce using rule 88 (EXPRESSION -> EXP COMP seen_comp_op EXPRESSION seen_comp .)


state 381

    (89) seen_comp -> empty .

    SEMI_COLON      reduce using rule 89 (seen_comp -> empty .)
    CLOSE_PARENTHESIS reduce using rule 89 (seen_comp -> empty .)
    COMMA           reduce using rule 89 (seen_comp -> empty .)
    CLOSE_BRACKET   reduce using rule 89 (seen_comp -> empty .)


state 382

    (99) FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .

    STAR            reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    FWD_SLASH       reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    PLUS            reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    MINUS           reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER          reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    BIGGER_EQ       reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER         reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SMALLER_EQ      reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    DOUBLE_EQUALS   reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    NOT_EQUALS      reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    AND             reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    OR              reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    SEMI_COLON      reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_PARENTHESIS reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    COMMA           reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)
    CLOSE_BRACKET   reduce using rule 99 (FACTOR -> OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis .)


state 383

    (123) seen_close_parenthesis -> empty .

    STAR            reduce using rule 123 (seen_close_parenthesis -> empty .)
    FWD_SLASH       reduce using rule 123 (seen_close_parenthesis -> empty .)
    PLUS            reduce using rule 123 (seen_close_parenthesis -> empty .)
    MINUS           reduce using rule 123 (seen_close_parenthesis -> empty .)
    BIGGER          reduce using rule 123 (seen_close_parenthesis -> empty .)
    BIGGER_EQ       reduce using rule 123 (seen_close_parenthesis -> empty .)
    SMALLER         reduce using rule 123 (seen_close_parenthesis -> empty .)
    SMALLER_EQ      reduce using rule 123 (seen_close_parenthesis -> empty .)
    DOUBLE_EQUALS   reduce using rule 123 (seen_close_parenthesis -> empty .)
    NOT_EQUALS      reduce using rule 123 (seen_close_parenthesis -> empty .)
    AND             reduce using rule 123 (seen_close_parenthesis -> empty .)
    OR              reduce using rule 123 (seen_close_parenthesis -> empty .)
    SEMI_COLON      reduce using rule 123 (seen_close_parenthesis -> empty .)
    CLOSE_PARENTHESIS reduce using rule 123 (seen_close_parenthesis -> empty .)
    COMMA           reduce using rule 123 (seen_close_parenthesis -> empty .)
    CLOSE_BRACKET   reduce using rule 123 (seen_close_parenthesis -> empty .)


state 384

    (83) EXP_P -> PLUS seen_term_op TERM . seen_term EXP_P
    (82) seen_term -> .

    PLUS            reduce using rule 82 (seen_term -> .)
    MINUS           reduce using rule 82 (seen_term -> .)
    BIGGER          reduce using rule 82 (seen_term -> .)
    BIGGER_EQ       reduce using rule 82 (seen_term -> .)
    SMALLER         reduce using rule 82 (seen_term -> .)
    SMALLER_EQ      reduce using rule 82 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 82 (seen_term -> .)
    NOT_EQUALS      reduce using rule 82 (seen_term -> .)
    AND             reduce using rule 82 (seen_term -> .)
    OR              reduce using rule 82 (seen_term -> .)
    SEMI_COLON      reduce using rule 82 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 82 (seen_term -> .)
    COMMA           reduce using rule 82 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 82 (seen_term -> .)

    seen_term                      shift and go to state 410

state 385

    (84) EXP_P -> MINUS seen_term_op TERM . seen_term EXP_P
    (82) seen_term -> .

    PLUS            reduce using rule 82 (seen_term -> .)
    MINUS           reduce using rule 82 (seen_term -> .)
    BIGGER          reduce using rule 82 (seen_term -> .)
    BIGGER_EQ       reduce using rule 82 (seen_term -> .)
    SMALLER         reduce using rule 82 (seen_term -> .)
    SMALLER_EQ      reduce using rule 82 (seen_term -> .)
    DOUBLE_EQUALS   reduce using rule 82 (seen_term -> .)
    NOT_EQUALS      reduce using rule 82 (seen_term -> .)
    AND             reduce using rule 82 (seen_term -> .)
    OR              reduce using rule 82 (seen_term -> .)
    SEMI_COLON      reduce using rule 82 (seen_term -> .)
    CLOSE_PARENTHESIS reduce using rule 82 (seen_term -> .)
    COMMA           reduce using rule 82 (seen_term -> .)
    CLOSE_BRACKET   reduce using rule 82 (seen_term -> .)

    seen_term                      shift and go to state 411

state 386

    (160) TERM_P -> STAR seen_factor_op FACTOR . seen_factor TERM_P
    (163) seen_factor -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_factor                    shift and go to state 412
    empty                          shift and go to state 224

state 387

    (161) TERM_P -> FWD_SLASH seen_factor_op FACTOR . seen_factor TERM_P
    (163) seen_factor -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_factor                    shift and go to state 413
    empty                          shift and go to state 224

state 388

    (101) FACTOR -> MINUS seen_unary_minus FACTOR . pop_unary_minus
    (120) pop_unary_minus -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    pop_unary_minus                shift and go to state 345
    empty                          shift and go to state 344

state 389

    (102) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 414


state 390

    (103) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 415


state 391

    (104) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION . CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor

    CLOSE_PARENTHESIS shift and go to state 416


state 392

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str . COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    COMMA           shift and go to state 417


state 393

    (110) seen_substr_str -> empty .

    COMMA           reduce using rule 110 (seen_substr_str -> empty .)


state 394

    (144) CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    STAR            reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FWD_SLASH       reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PLUS            reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER          reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    BIGGER_EQ       reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER         reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SMALLER_EQ      reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    AND             reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OR              reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMI_COLON      reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 144 (CLASS_INSTANCE -> NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 395

    (189) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY DECISION_P
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (211) empty -> .
    (66) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (70) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (180) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (181) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (183) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (53) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (52) USING -> . USING_KWD ID AS_KWD ID
    (59) FLOW_CONTROL -> . DECISION
    (60) FLOW_CONTROL -> . REPETITION
    (177) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (178) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (179) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (189) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (195) REPETITION -> . CONDITIONAL_REP
    (196) REPETITION -> . UNCONDITIONAL_REP
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (197) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (200) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT_STAR                 shift and go to state 418
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 396

    (197) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 419


state 397

    (199) seen_while_exp -> empty .

    OPEN_CURLY      reduce using rule 199 (seen_while_exp -> empty .)


state 398

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION . seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (203) seen_for_start_exp -> . empty
    (211) empty -> .

    SEMI_COLON      reduce using rule 211 (empty -> .)

    seen_for_start_exp             shift and go to state 420
    empty                          shift and go to state 421

state 399

    (30) FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    TYPE_I          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_F          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_S          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_B          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_O          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    TYPE_V          reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLASS_KWD       reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    ID              reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    MAIN_KWD        reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 30 (FUNC_DEF -> TYPE ID seen_func_id OPEN_PARENTHESIS FUNC_PARAM CLOSE_PARENTHESIS seen_func_params VARS seen_func_vars OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 400

    (155) ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .

    COMMA           reduce using rule 155 (ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)
    COLON           reduce using rule 155 (ARRAY_DECLARATION_P -> OPEN_BRACKET CTE_I seen_cte_i seen_array_def_dim CLOSE_BRACKET ARRAY_DECLARATION_P .)


state 401

    (168) ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 168 (ARG_LIST -> VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 402

    (172) ARG_LIST_P -> COMMA VAR . seen_var_as_factor seen_arg ARG_LIST_P
    (108) FACTOR -> VAR . seen_var_as_factor
    (125) seen_var_as_factor -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)

    seen_var_as_factor             shift and go to state 422
    empty                          shift and go to state 235

state 403

    (173) ARG_LIST_P -> COMMA EXPRESSION . seen_arg ARG_LIST_P
    (176) seen_arg -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_arg                       shift and go to state 423
    empty                          shift and go to state 321

state 404

    (174) ARG_LIST_P -> COMMA FUNC_CALL . seen_arg ARG_LIST_P
    (106) FACTOR -> FUNC_CALL .
    (176) seen_arg -> . empty
    (211) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 106 (FACTOR -> FUNC_CALL .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 106 (FACTOR -> FUNC_CALL .)
    STAR            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    FWD_SLASH       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    PLUS            reduce using rule 106 (FACTOR -> FUNC_CALL .)
    MINUS           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER          reduce using rule 106 (FACTOR -> FUNC_CALL .)
    BIGGER_EQ       reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER         reduce using rule 106 (FACTOR -> FUNC_CALL .)
    SMALLER_EQ      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    DOUBLE_EQUALS   reduce using rule 106 (FACTOR -> FUNC_CALL .)
    NOT_EQUALS      reduce using rule 106 (FACTOR -> FUNC_CALL .)
    AND             reduce using rule 106 (FACTOR -> FUNC_CALL .)
    OR              reduce using rule 106 (FACTOR -> FUNC_CALL .)
    COMMA           reduce using rule 106 (FACTOR -> FUNC_CALL .)
    CLOSE_PARENTHESIS reduce using rule 106 (FACTOR -> FUNC_CALL .)

  ! COMMA           [ reduce using rule 211 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 211 (empty -> .) ]

    seen_arg                       shift and go to state 424
    empty                          shift and go to state 321

state 405

    (148) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (149) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (150) ARRAY_P -> . empty
    (211) empty -> .

    OPEN_BRACKET    shift and go to state 425
    EQUALS          reduce using rule 211 (empty -> .)
    PLUS_EQUALS     reduce using rule 211 (empty -> .)
    MINUS_EQUALS    reduce using rule 211 (empty -> .)
    TIMES_EQUALS    reduce using rule 211 (empty -> .)
    OVER_EQUALS     reduce using rule 211 (empty -> .)
    PLUS_PLUS       reduce using rule 211 (empty -> .)
    MINUS_MINUS     reduce using rule 211 (empty -> .)
    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    ARRAY_P                        shift and go to state 426
    empty                          shift and go to state 427

state 406

    (24) READABLE_LIST_P -> COMMA VAR . seen_var_in_assign seen_readable READABLE_LIST_P
    (124) seen_var_in_assign -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_var_in_assign             shift and go to state 428
    empty                          shift and go to state 140

state 407

    (186) PRINTABLE_P -> COMMA EXPRESSION . seen_printable PRINTABLE_P
    (188) seen_printable -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_printable                 shift and go to state 429
    empty                          shift and go to state 333

state 408

    (53) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) seen_file_path -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)

    seen_file_path                 shift and go to state 430
    empty                          shift and go to state 431

state 409

    (55) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION . seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (57) seen_file_path -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)

    seen_file_path                 shift and go to state 432
    empty                          shift and go to state 431

state 410

    (83) EXP_P -> PLUS seen_term_op TERM seen_term . EXP_P
    (83) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (84) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (85) EXP_P -> . empty
    (211) empty -> .

    PLUS            shift and go to state 292
    MINUS           shift and go to state 293
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    EXP_P                          shift and go to state 433
    empty                          shift and go to state 294

state 411

    (84) EXP_P -> MINUS seen_term_op TERM seen_term . EXP_P
    (83) EXP_P -> . PLUS seen_term_op TERM seen_term EXP_P
    (84) EXP_P -> . MINUS seen_term_op TERM seen_term EXP_P
    (85) EXP_P -> . empty
    (211) empty -> .

    PLUS            shift and go to state 292
    MINUS           shift and go to state 293
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    EXP_P                          shift and go to state 434
    empty                          shift and go to state 294

state 412

    (160) TERM_P -> STAR seen_factor_op FACTOR seen_factor . TERM_P
    (160) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (161) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (162) TERM_P -> . empty
    (211) empty -> .

    STAR            shift and go to state 298
    FWD_SLASH       shift and go to state 299
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    TERM_P                         shift and go to state 435
    empty                          shift and go to state 300

state 413

    (161) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor . TERM_P
    (160) TERM_P -> . STAR seen_factor_op FACTOR seen_factor TERM_P
    (161) TERM_P -> . FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P
    (162) TERM_P -> . empty
    (211) empty -> .

    STAR            shift and go to state 298
    FWD_SLASH       shift and go to state 299
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    TERM_P                         shift and go to state 436
    empty                          shift and go to state 300

state 414

    (102) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (123) seen_close_parenthesis -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_close_parenthesis         shift and go to state 437
    empty                          shift and go to state 383

state 415

    (103) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (123) seen_close_parenthesis -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_close_parenthesis         shift and go to state 438
    empty                          shift and go to state 383

state 416

    (104) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS . seen_close_parenthesis seen_stox_factor
    (123) seen_close_parenthesis -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_close_parenthesis         shift and go to state 439
    empty                          shift and go to state 383

state 417

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA . EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 440
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 418

    (189) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY DECISION_P

    CLOSE_CURLY     shift and go to state 441


state 419

    (197) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (211) empty -> .
    (66) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (70) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (180) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (181) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (183) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (53) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (52) USING -> . USING_KWD ID AS_KWD ID
    (59) FLOW_CONTROL -> . DECISION
    (60) FLOW_CONTROL -> . REPETITION
    (177) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (178) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (179) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (189) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (195) REPETITION -> . CONDITIONAL_REP
    (196) REPETITION -> . UNCONDITIONAL_REP
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (197) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (200) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT_STAR                 shift and go to state 442
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 420

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp . SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 443


state 421

    (203) seen_for_start_exp -> empty .

    SEMI_COLON      reduce using rule 203 (seen_for_start_exp -> empty .)


state 422

    (172) ARG_LIST_P -> COMMA VAR seen_var_as_factor . seen_arg ARG_LIST_P
    (108) FACTOR -> VAR seen_var_as_factor .
    (176) seen_arg -> . empty
    (211) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 108 (FACTOR -> VAR seen_var_as_factor .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    STAR            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    FWD_SLASH       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    PLUS            reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    MINUS           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER          reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    BIGGER_EQ       reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER         reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    SMALLER_EQ      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    DOUBLE_EQUALS   reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    NOT_EQUALS      reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    AND             reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    OR              reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    COMMA           reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)
    CLOSE_PARENTHESIS reduce using rule 108 (FACTOR -> VAR seen_var_as_factor .)

  ! COMMA           [ reduce using rule 211 (empty -> .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 211 (empty -> .) ]

    seen_arg                       shift and go to state 444
    empty                          shift and go to state 321

state 423

    (173) ARG_LIST_P -> COMMA EXPRESSION seen_arg . ARG_LIST_P
    (172) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (173) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 367
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    ARG_LIST_P                     shift and go to state 445
    empty                          shift and go to state 368

state 424

    (174) ARG_LIST_P -> COMMA FUNC_CALL seen_arg . ARG_LIST_P
    (172) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (173) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 367
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    ARG_LIST_P                     shift and go to state 446
    empty                          shift and go to state 368

state 425

    (149) ARRAY_P -> OPEN_BRACKET . seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (152) seen_open_bracket -> . empty
    (211) empty -> .

    MINUS           reduce using rule 211 (empty -> .)
    OPEN_PARENTHESIS reduce using rule 211 (empty -> .)
    NOT             reduce using rule 211 (empty -> .)
    STOI_KWD        reduce using rule 211 (empty -> .)
    STOF_KWD        reduce using rule 211 (empty -> .)
    STOB_KWD        reduce using rule 211 (empty -> .)
    SUBSTR_KWD      reduce using rule 211 (empty -> .)
    ID              reduce using rule 211 (empty -> .)
    NEW_KWD         reduce using rule 211 (empty -> .)
    CTE_I           reduce using rule 211 (empty -> .)
    CTE_F           reduce using rule 211 (empty -> .)
    CTE_S           reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    CTE_TRUE        reduce using rule 211 (empty -> .)
    CTE_FALSE       reduce using rule 211 (empty -> .)

    seen_open_bracket              shift and go to state 447
    empty                          shift and go to state 263

state 426

    (148) ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_EQUALS     reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_EQUALS    reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    TIMES_EQUALS    reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OVER_EQUALS     reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_PLUS       reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_MINUS     reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 148 (ARRAY -> ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 427

    (150) ARRAY_P -> empty .

    EQUALS          reduce using rule 150 (ARRAY_P -> empty .)
    PLUS_EQUALS     reduce using rule 150 (ARRAY_P -> empty .)
    MINUS_EQUALS    reduce using rule 150 (ARRAY_P -> empty .)
    TIMES_EQUALS    reduce using rule 150 (ARRAY_P -> empty .)
    OVER_EQUALS     reduce using rule 150 (ARRAY_P -> empty .)
    PLUS_PLUS       reduce using rule 150 (ARRAY_P -> empty .)
    MINUS_MINUS     reduce using rule 150 (ARRAY_P -> empty .)
    STAR            reduce using rule 150 (ARRAY_P -> empty .)
    FWD_SLASH       reduce using rule 150 (ARRAY_P -> empty .)
    PLUS            reduce using rule 150 (ARRAY_P -> empty .)
    MINUS           reduce using rule 150 (ARRAY_P -> empty .)
    BIGGER          reduce using rule 150 (ARRAY_P -> empty .)
    BIGGER_EQ       reduce using rule 150 (ARRAY_P -> empty .)
    SMALLER         reduce using rule 150 (ARRAY_P -> empty .)
    SMALLER_EQ      reduce using rule 150 (ARRAY_P -> empty .)
    DOUBLE_EQUALS   reduce using rule 150 (ARRAY_P -> empty .)
    NOT_EQUALS      reduce using rule 150 (ARRAY_P -> empty .)
    AND             reduce using rule 150 (ARRAY_P -> empty .)
    OR              reduce using rule 150 (ARRAY_P -> empty .)
    SEMI_COLON      reduce using rule 150 (ARRAY_P -> empty .)
    CLOSE_PARENTHESIS reduce using rule 150 (ARRAY_P -> empty .)
    COMMA           reduce using rule 150 (ARRAY_P -> empty .)
    CLOSE_BRACKET   reduce using rule 150 (ARRAY_P -> empty .)


state 428

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign . seen_readable READABLE_LIST_P
    (26) seen_readable -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_readable                  shift and go to state 448
    empty                          shift and go to state 330

state 429

    (186) PRINTABLE_P -> COMMA EXPRESSION seen_printable . PRINTABLE_P
    (186) PRINTABLE_P -> . COMMA EXPRESSION seen_printable PRINTABLE_P
    (187) PRINTABLE_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 376
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    PRINTABLE_P                    shift and go to state 449
    empty                          shift and go to state 377

state 430

    (53) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 450


state 431

    (57) seen_file_path -> empty .

    COMMA           reduce using rule 57 (seen_file_path -> empty .)


state 432

    (55) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path . COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS

    COMMA           shift and go to state 451


state 433

    (83) EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 83 (EXP_P -> PLUS seen_term_op TERM seen_term EXP_P .)


state 434

    (84) EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .

    BIGGER          reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    BIGGER_EQ       reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER         reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SMALLER_EQ      reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    DOUBLE_EQUALS   reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    NOT_EQUALS      reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    AND             reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    OR              reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    SEMI_COLON      reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_PARENTHESIS reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    COMMA           reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)
    CLOSE_BRACKET   reduce using rule 84 (EXP_P -> MINUS seen_term_op TERM seen_term EXP_P .)


state 435

    (160) TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 160 (TERM_P -> STAR seen_factor_op FACTOR seen_factor TERM_P .)


state 436

    (161) TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .

    PLUS            reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    MINUS           reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER          reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    BIGGER_EQ       reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER         reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SMALLER_EQ      reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    DOUBLE_EQUALS   reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    NOT_EQUALS      reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    AND             reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    OR              reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    SEMI_COLON      reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_PARENTHESIS reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    COMMA           reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)
    CLOSE_BRACKET   reduce using rule 161 (TERM_P -> FWD_SLASH seen_factor_op FACTOR seen_factor TERM_P .)


state 437

    (102) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (114) seen_stox_factor -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_stox_factor               shift and go to state 452
    empty                          shift and go to state 453

state 438

    (103) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (114) seen_stox_factor -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_stox_factor               shift and go to state 454
    empty                          shift and go to state 453

state 439

    (104) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis . seen_stox_factor
    (114) seen_stox_factor -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_stox_factor               shift and go to state 455
    empty                          shift and go to state 453

state 440

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION . seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (111) seen_substr_idx -> . empty
    (211) empty -> .

    COMMA           reduce using rule 211 (empty -> .)

    seen_substr_idx                shift and go to state 456
    empty                          shift and go to state 457

state 441

    (189) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY . DECISION_P
    (190) DECISION_P -> . ELSE_KWD seen_else_kwd DECISION
    (191) DECISION_P -> . ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (192) DECISION_P -> . empty
    (211) empty -> .

    ELSE_KWD        shift and go to state 459
    ID              reduce using rule 211 (empty -> .)
    READ_KWD        reduce using rule 211 (empty -> .)
    PRINT_KWD       reduce using rule 211 (empty -> .)
    PRINTLN_KWD     reduce using rule 211 (empty -> .)
    OPEN_KWD        reduce using rule 211 (empty -> .)
    WRITE_KWD       reduce using rule 211 (empty -> .)
    USING_KWD       reduce using rule 211 (empty -> .)
    RETURN_KWD      reduce using rule 211 (empty -> .)
    THIS_KWD        reduce using rule 211 (empty -> .)
    IF_KWD          reduce using rule 211 (empty -> .)
    WHILE_KWD       reduce using rule 211 (empty -> .)
    FOR_KWD         reduce using rule 211 (empty -> .)
    CLOSE_CURLY     reduce using rule 211 (empty -> .)

    DECISION_P                     shift and go to state 458
    empty                          shift and go to state 460

state 442

    (197) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 461


state 443

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON . EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 166
    EXPRESSION                     shift and go to state 462
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 444

    (172) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg . ARG_LIST_P
    (172) ARG_LIST_P -> . COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P
    (173) ARG_LIST_P -> . COMMA EXPRESSION seen_arg ARG_LIST_P
    (174) ARG_LIST_P -> . COMMA FUNC_CALL seen_arg ARG_LIST_P
    (175) ARG_LIST_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 367
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    ARG_LIST_P                     shift and go to state 463
    empty                          shift and go to state 368

state 445

    (173) ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 173 (ARG_LIST_P -> COMMA EXPRESSION seen_arg ARG_LIST_P .)


state 446

    (174) ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 174 (ARG_LIST_P -> COMMA FUNC_CALL seen_arg ARG_LIST_P .)


state 447

    (149) ARRAY_P -> OPEN_BRACKET seen_open_bracket . EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 464
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 448

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable . READABLE_LIST_P
    (24) READABLE_LIST_P -> . COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P
    (25) READABLE_LIST_P -> . empty
    (211) empty -> .

    COMMA           shift and go to state 373
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    READABLE_LIST_P                shift and go to state 465
    empty                          shift and go to state 374

state 449

    (186) PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .

    CLOSE_PARENTHESIS reduce using rule 186 (PRINTABLE_P -> COMMA EXPRESSION seen_printable PRINTABLE_P .)


state 450

    (53) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 166
    EXPRESSION                     shift and go to state 466
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 451

    (55) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA . EXPRESSION seen_separator CLOSE_PARENTHESIS
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    VAR                            shift and go to state 166
    EXPRESSION                     shift and go to state 467
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 452

    (102) FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 102 (FACTOR -> STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 453

    (114) seen_stox_factor -> empty .

    STAR            reduce using rule 114 (seen_stox_factor -> empty .)
    FWD_SLASH       reduce using rule 114 (seen_stox_factor -> empty .)
    PLUS            reduce using rule 114 (seen_stox_factor -> empty .)
    MINUS           reduce using rule 114 (seen_stox_factor -> empty .)
    BIGGER          reduce using rule 114 (seen_stox_factor -> empty .)
    BIGGER_EQ       reduce using rule 114 (seen_stox_factor -> empty .)
    SMALLER         reduce using rule 114 (seen_stox_factor -> empty .)
    SMALLER_EQ      reduce using rule 114 (seen_stox_factor -> empty .)
    DOUBLE_EQUALS   reduce using rule 114 (seen_stox_factor -> empty .)
    NOT_EQUALS      reduce using rule 114 (seen_stox_factor -> empty .)
    AND             reduce using rule 114 (seen_stox_factor -> empty .)
    OR              reduce using rule 114 (seen_stox_factor -> empty .)
    SEMI_COLON      reduce using rule 114 (seen_stox_factor -> empty .)
    CLOSE_PARENTHESIS reduce using rule 114 (seen_stox_factor -> empty .)
    COMMA           reduce using rule 114 (seen_stox_factor -> empty .)
    CLOSE_BRACKET   reduce using rule 114 (seen_stox_factor -> empty .)


state 454

    (103) FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 103 (FACTOR -> STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 455

    (104) FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .

    STAR            reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    FWD_SLASH       reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    PLUS            reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    MINUS           reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER          reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    BIGGER_EQ       reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER         reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SMALLER_EQ      reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    DOUBLE_EQUALS   reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    NOT_EQUALS      reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    AND             reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    OR              reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    SEMI_COLON      reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_PARENTHESIS reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    COMMA           reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)
    CLOSE_BRACKET   reduce using rule 104 (FACTOR -> STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor .)


state 456

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx . COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    COMMA           shift and go to state 468


state 457

    (111) seen_substr_idx -> empty .

    COMMA           reduce using rule 111 (seen_substr_idx -> empty .)


state 458

    (189) DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .

    ID              reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    READ_KWD        reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINT_KWD       reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    PRINTLN_KWD     reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    OPEN_KWD        reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WRITE_KWD       reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    USING_KWD       reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    RETURN_KWD      reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    THIS_KWD        reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    IF_KWD          reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    WHILE_KWD       reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    FOR_KWD         reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)
    CLOSE_CURLY     reduce using rule 189 (DECISION -> IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P .)


state 459

    (190) DECISION_P -> ELSE_KWD . seen_else_kwd DECISION
    (191) DECISION_P -> ELSE_KWD . seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (194) seen_else_kwd -> . empty
    (211) empty -> .

    OPEN_CURLY      reduce using rule 211 (empty -> .)
    IF_KWD          reduce using rule 211 (empty -> .)

    seen_else_kwd                  shift and go to state 469
    empty                          shift and go to state 470

state 460

    (192) DECISION_P -> empty .

    ID              reduce using rule 192 (DECISION_P -> empty .)
    READ_KWD        reduce using rule 192 (DECISION_P -> empty .)
    PRINT_KWD       reduce using rule 192 (DECISION_P -> empty .)
    PRINTLN_KWD     reduce using rule 192 (DECISION_P -> empty .)
    OPEN_KWD        reduce using rule 192 (DECISION_P -> empty .)
    WRITE_KWD       reduce using rule 192 (DECISION_P -> empty .)
    USING_KWD       reduce using rule 192 (DECISION_P -> empty .)
    RETURN_KWD      reduce using rule 192 (DECISION_P -> empty .)
    THIS_KWD        reduce using rule 192 (DECISION_P -> empty .)
    IF_KWD          reduce using rule 192 (DECISION_P -> empty .)
    WHILE_KWD       reduce using rule 192 (DECISION_P -> empty .)
    FOR_KWD         reduce using rule 192 (DECISION_P -> empty .)
    CLOSE_CURLY     reduce using rule 192 (DECISION_P -> empty .)


state 461

    (197) CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    USING_KWD       reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 197 (CONDITIONAL_REP -> WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 462

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION . seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (204) seen_for_end_exp -> . empty
    (211) empty -> .

    SEMI_COLON      reduce using rule 211 (empty -> .)

    seen_for_end_exp               shift and go to state 471
    empty                          shift and go to state 472

state 463

    (172) ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 172 (ARG_LIST_P -> COMMA VAR seen_var_as_factor seen_arg ARG_LIST_P .)


state 464

    (149) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION . seen_array_access CLOSE_BRACKET ARRAY_P
    (153) seen_array_access -> . empty
    (211) empty -> .

    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_array_access              shift and go to state 473
    empty                          shift and go to state 371

state 465

    (24) READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .

    CLOSE_PARENTHESIS reduce using rule 24 (READABLE_LIST_P -> COMMA VAR seen_var_in_assign seen_readable READABLE_LIST_P .)


state 466

    (53) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (58) seen_separator -> . empty
    (211) empty -> .

    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_separator                 shift and go to state 474
    empty                          shift and go to state 475

state 467

    (55) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION . seen_separator CLOSE_PARENTHESIS
    (58) seen_separator -> . empty
    (211) empty -> .

    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_separator                 shift and go to state 476
    empty                          shift and go to state 475

state 468

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA . EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (87) EXPRESSION -> . EXP
    (88) EXPRESSION -> . EXP COMP seen_comp_op EXPRESSION seen_comp
    (80) EXP -> . TERM seen_term EXP_P
    (81) EXP -> . MINUS seen_unary_minus EXP pop_unary_minus
    (159) TERM -> . FACTOR seen_factor TERM_P
    (99) FACTOR -> . OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis
    (100) FACTOR -> . NOT seen_not FACTOR pop_not
    (101) FACTOR -> . MINUS seen_unary_minus FACTOR pop_unary_minus
    (102) FACTOR -> . STOI_KWD seen_stoi_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (103) FACTOR -> . STOF_KWD seen_stof_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (104) FACTOR -> . STOB_KWD seen_stob_kwd OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION CLOSE_PARENTHESIS seen_close_parenthesis seen_stox_factor
    (105) FACTOR -> . SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (106) FACTOR -> . FUNC_CALL
    (107) FACTOR -> . CLASS_INSTANCE
    (108) FACTOR -> . VAR seen_var_as_factor
    (109) FACTOR -> . CONSTANT
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (144) CLASS_INSTANCE -> . NEW_KWD ID seen_class_id_instance OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (132) CONSTANT -> . CTE_I seen_cte_i
    (133) CONSTANT -> . CTE_F seen_cte_f
    (134) CONSTANT -> . CTE_S seen_cte_s
    (135) CONSTANT -> . CTE_B
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (136) CTE_B -> . CTE_TRUE seen_cte_true
    (137) CTE_B -> . CTE_FALSE seen_cte_false

    MINUS           shift and go to state 158
    OPEN_PARENTHESIS shift and go to state 156
    NOT             shift and go to state 160
    STOI_KWD        shift and go to state 161
    STOF_KWD        shift and go to state 162
    STOB_KWD        shift and go to state 163
    SUBSTR_KWD      shift and go to state 164
    ID              shift and go to state 84
    NEW_KWD         shift and go to state 168
    CTE_I           shift and go to state 169
    CTE_F           shift and go to state 170
    CTE_S           shift and go to state 171
    THIS_KWD        shift and go to state 110
    CTE_TRUE        shift and go to state 173
    CTE_FALSE       shift and go to state 174

    EXPRESSION                     shift and go to state 477
    EXP                            shift and go to state 154
    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 159
    FUNC_CALL                      shift and go to state 248
    CLASS_INSTANCE                 shift and go to state 165
    VAR                            shift and go to state 166
    CONSTANT                       shift and go to state 167
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109
    CTE_B                          shift and go to state 172

state 469

    (190) DECISION_P -> ELSE_KWD seen_else_kwd . DECISION
    (191) DECISION_P -> ELSE_KWD seen_else_kwd . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (189) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P

    OPEN_CURLY      shift and go to state 479
    IF_KWD          shift and go to state 111

    DECISION                       shift and go to state 478

state 470

    (194) seen_else_kwd -> empty .

    OPEN_CURLY      reduce using rule 194 (seen_else_kwd -> empty .)
    IF_KWD          reduce using rule 194 (seen_else_kwd -> empty .)


state 471

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp . SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    SEMI_COLON      shift and go to state 480


state 472

    (204) seen_for_end_exp -> empty .

    SEMI_COLON      reduce using rule 204 (seen_for_end_exp -> empty .)


state 473

    (149) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access . CLOSE_BRACKET ARRAY_P

    CLOSE_BRACKET   shift and go to state 481


state 474

    (53) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 482


state 475

    (58) seen_separator -> empty .

    CLOSE_PARENTHESIS reduce using rule 58 (seen_separator -> empty .)


state 476

    (55) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 483


state 477

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION . seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr
    (112) seen_substr_size -> . empty
    (211) empty -> .

    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_substr_size               shift and go to state 484
    empty                          shift and go to state 485

state 478

    (190) DECISION_P -> ELSE_KWD seen_else_kwd DECISION .

    ID              reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    READ_KWD        reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    PRINT_KWD       reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    PRINTLN_KWD     reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    OPEN_KWD        reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    WRITE_KWD       reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    USING_KWD       reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    RETURN_KWD      reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    THIS_KWD        reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    IF_KWD          reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    WHILE_KWD       reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    FOR_KWD         reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)
    CLOSE_CURLY     reduce using rule 190 (DECISION_P -> ELSE_KWD seen_else_kwd DECISION .)


state 479

    (191) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (211) empty -> .
    (66) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (70) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (180) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (181) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (183) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (53) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (52) USING -> . USING_KWD ID AS_KWD ID
    (59) FLOW_CONTROL -> . DECISION
    (60) FLOW_CONTROL -> . REPETITION
    (177) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (178) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (179) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (189) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (195) REPETITION -> . CONDITIONAL_REP
    (196) REPETITION -> . UNCONDITIONAL_REP
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (197) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (200) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    STATEMENT_STAR                 shift and go to state 486
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    VAR                            shift and go to state 98
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 480

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON . FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (61) FOR_INCR_STATEMENT -> . ASSIGN
    (62) FOR_INCR_STATEMENT -> . FUNC_CALL
    (63) FOR_INCR_STATEMENT -> . READ
    (64) FOR_INCR_STATEMENT -> . PRINT
    (65) FOR_INCR_STATEMENT -> . PRINTLN
    (66) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (70) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (180) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (181) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (183) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P

    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    THIS_KWD        shift and go to state 110

    VAR                            shift and go to state 98
    FOR_INCR_STATEMENT             shift and go to state 487
    ASSIGN                         shift and go to state 488
    FUNC_CALL                      shift and go to state 489
    READ                           shift and go to state 490
    PRINT                          shift and go to state 491
    PRINTLN                        shift and go to state 492
    CLASS_REFERENCE                shift and go to state 99
    ARRAY                          shift and go to state 109

state 481

    (149) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET . ARRAY_P
    (149) ARRAY_P -> . OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (150) ARRAY_P -> . empty
    (211) empty -> .

    OPEN_BRACKET    shift and go to state 425
    EQUALS          reduce using rule 211 (empty -> .)
    PLUS_EQUALS     reduce using rule 211 (empty -> .)
    MINUS_EQUALS    reduce using rule 211 (empty -> .)
    TIMES_EQUALS    reduce using rule 211 (empty -> .)
    OVER_EQUALS     reduce using rule 211 (empty -> .)
    PLUS_PLUS       reduce using rule 211 (empty -> .)
    MINUS_MINUS     reduce using rule 211 (empty -> .)
    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    ARRAY_P                        shift and go to state 493
    empty                          shift and go to state 427

state 482

    (53) OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 53 (OPEN -> OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 483

    (55) WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .

    SEMI_COLON      reduce using rule 55 (WRITE -> WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS .)


state 484

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size . CLOSE_PARENTHESIS seen_close_parenthesis seen_substr

    CLOSE_PARENTHESIS shift and go to state 494


state 485

    (112) seen_substr_size -> empty .

    CLOSE_PARENTHESIS reduce using rule 112 (seen_substr_size -> empty .)


state 486

    (191) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 495


state 487

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT . seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (202) seen_for_incr_exp -> . empty
    (211) empty -> .

    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)

    seen_for_incr_exp              shift and go to state 496
    empty                          shift and go to state 497

state 488

    (61) FOR_INCR_STATEMENT -> ASSIGN .

    CLOSE_PARENTHESIS reduce using rule 61 (FOR_INCR_STATEMENT -> ASSIGN .)


state 489

    (62) FOR_INCR_STATEMENT -> FUNC_CALL .

    CLOSE_PARENTHESIS reduce using rule 62 (FOR_INCR_STATEMENT -> FUNC_CALL .)


state 490

    (63) FOR_INCR_STATEMENT -> READ .

    CLOSE_PARENTHESIS reduce using rule 63 (FOR_INCR_STATEMENT -> READ .)


state 491

    (64) FOR_INCR_STATEMENT -> PRINT .

    CLOSE_PARENTHESIS reduce using rule 64 (FOR_INCR_STATEMENT -> PRINT .)


state 492

    (65) FOR_INCR_STATEMENT -> PRINTLN .

    CLOSE_PARENTHESIS reduce using rule 65 (FOR_INCR_STATEMENT -> PRINTLN .)


state 493

    (149) ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .

    EQUALS          reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_EQUALS     reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_EQUALS    reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    TIMES_EQUALS    reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OVER_EQUALS     reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS_PLUS       reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS_MINUS     reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    STAR            reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    FWD_SLASH       reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    PLUS            reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    MINUS           reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER          reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    BIGGER_EQ       reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER         reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SMALLER_EQ      reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    DOUBLE_EQUALS   reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    NOT_EQUALS      reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    AND             reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    OR              reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    SEMI_COLON      reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_PARENTHESIS reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    COMMA           reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)
    CLOSE_BRACKET   reduce using rule 149 (ARRAY_P -> OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P .)


state 494

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS . seen_close_parenthesis seen_substr
    (123) seen_close_parenthesis -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_close_parenthesis         shift and go to state 498
    empty                          shift and go to state 383

state 495

    (191) DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    USING_KWD       reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 191 (DECISION_P -> ELSE_KWD seen_else_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)


state 496

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp . CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_PARENTHESIS shift and go to state 499


state 497

    (202) seen_for_incr_exp -> empty .

    CLOSE_PARENTHESIS reduce using rule 202 (seen_for_incr_exp -> empty .)


state 498

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis . seen_substr
    (113) seen_substr -> . empty
    (211) empty -> .

    STAR            reduce using rule 211 (empty -> .)
    FWD_SLASH       reduce using rule 211 (empty -> .)
    PLUS            reduce using rule 211 (empty -> .)
    MINUS           reduce using rule 211 (empty -> .)
    BIGGER          reduce using rule 211 (empty -> .)
    BIGGER_EQ       reduce using rule 211 (empty -> .)
    SMALLER         reduce using rule 211 (empty -> .)
    SMALLER_EQ      reduce using rule 211 (empty -> .)
    DOUBLE_EQUALS   reduce using rule 211 (empty -> .)
    NOT_EQUALS      reduce using rule 211 (empty -> .)
    AND             reduce using rule 211 (empty -> .)
    OR              reduce using rule 211 (empty -> .)
    SEMI_COLON      reduce using rule 211 (empty -> .)
    CLOSE_PARENTHESIS reduce using rule 211 (empty -> .)
    COMMA           reduce using rule 211 (empty -> .)
    CLOSE_BRACKET   reduce using rule 211 (empty -> .)

    seen_substr                    shift and go to state 500
    empty                          shift and go to state 501

state 499

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS . OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    OPEN_CURLY      shift and go to state 502


state 500

    (105) FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .

    STAR            reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    FWD_SLASH       reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    PLUS            reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    MINUS           reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    BIGGER          reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    BIGGER_EQ       reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SMALLER         reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SMALLER_EQ      reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    DOUBLE_EQUALS   reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    NOT_EQUALS      reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    AND             reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    OR              reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    SEMI_COLON      reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    CLOSE_PARENTHESIS reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    COMMA           reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)
    CLOSE_BRACKET   reduce using rule 105 (FACTOR -> SUBSTR_KWD OPEN_PARENTHESIS seen_open_parenthesis EXPRESSION seen_substr_str COMMA EXPRESSION seen_substr_idx COMMA EXPRESSION seen_substr_size CLOSE_PARENTHESIS seen_close_parenthesis seen_substr .)


state 501

    (113) seen_substr -> empty .

    STAR            reduce using rule 113 (seen_substr -> empty .)
    FWD_SLASH       reduce using rule 113 (seen_substr -> empty .)
    PLUS            reduce using rule 113 (seen_substr -> empty .)
    MINUS           reduce using rule 113 (seen_substr -> empty .)
    BIGGER          reduce using rule 113 (seen_substr -> empty .)
    BIGGER_EQ       reduce using rule 113 (seen_substr -> empty .)
    SMALLER         reduce using rule 113 (seen_substr -> empty .)
    SMALLER_EQ      reduce using rule 113 (seen_substr -> empty .)
    DOUBLE_EQUALS   reduce using rule 113 (seen_substr -> empty .)
    NOT_EQUALS      reduce using rule 113 (seen_substr -> empty .)
    AND             reduce using rule 113 (seen_substr -> empty .)
    OR              reduce using rule 113 (seen_substr -> empty .)
    SEMI_COLON      reduce using rule 113 (seen_substr -> empty .)
    CLOSE_PARENTHESIS reduce using rule 113 (seen_substr -> empty .)
    COMMA           reduce using rule 113 (seen_substr -> empty .)
    CLOSE_BRACKET   reduce using rule 113 (seen_substr -> empty .)


state 502

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY . STATEMENT_STAR CLOSE_CURLY
    (40) STATEMENT_STAR -> . STATEMENT STATEMENT_STAR
    (41) STATEMENT_STAR -> . empty
    (42) STATEMENT -> . ASSIGN SEMI_COLON
    (43) STATEMENT -> . FUNC_CALL SEMI_COLON
    (44) STATEMENT -> . READ SEMI_COLON
    (45) STATEMENT -> . PRINT SEMI_COLON
    (46) STATEMENT -> . PRINTLN SEMI_COLON
    (47) STATEMENT -> . OPEN SEMI_COLON
    (48) STATEMENT -> . WRITE SEMI_COLON
    (49) STATEMENT -> . USING SEMI_COLON
    (50) STATEMENT -> . FLOW_CONTROL
    (51) STATEMENT -> . FUNC_RETURN
    (211) empty -> .
    (66) ASSIGN -> . VAR seen_var_in_assign EQUALS seen_equals EXPRESSION
    (67) ASSIGN -> . VAR seen_var_in_assign PLUS_EQUALS seen_plus_equals EXPRESSION
    (68) ASSIGN -> . VAR seen_var_in_assign MINUS_EQUALS seen_minus_equals EXPRESSION
    (69) ASSIGN -> . VAR seen_var_in_assign TIMES_EQUALS seen_times_equals EXPRESSION
    (70) ASSIGN -> . VAR seen_var_in_assign OVER_EQUALS seen_over_equals EXPRESSION
    (71) ASSIGN -> . VAR seen_var_in_assign PLUS_PLUS seen_plus_plus
    (72) ASSIGN -> . VAR seen_var_in_assign MINUS_MINUS seen_minus_minus
    (165) FUNC_CALL -> . ID seen_func_call_id OPEN_PARENTHESIS ARG_LIST CLOSE_PARENTHESIS
    (166) FUNC_CALL -> . CLASS_REFERENCE FUNC_CALL
    (180) READ -> . READ_KWD OPEN_PARENTHESIS READABLE_LIST CLOSE_PARENTHESIS
    (181) PRINT -> . PRINT_KWD seen_print_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (183) PRINTLN -> . PRINTLN_KWD seen_println_kwd OPEN_PARENTHESIS PRINTABLE CLOSE_PARENTHESIS
    (53) OPEN -> . OPEN_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_open_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (55) WRITE -> . WRITE_KWD OPEN_PARENTHESIS VAR seen_var_in_io seen_write_buffer COMMA EXPRESSION seen_file_path COMMA EXPRESSION seen_separator CLOSE_PARENTHESIS
    (52) USING -> . USING_KWD ID AS_KWD ID
    (59) FLOW_CONTROL -> . DECISION
    (60) FLOW_CONTROL -> . REPETITION
    (177) FUNC_RETURN -> . RETURN_KWD EXPRESSION SEMI_COLON
    (178) FUNC_RETURN -> . RETURN_KWD FUNC_CALL SEMI_COLON
    (179) FUNC_RETURN -> . RETURN_KWD SEMI_COLON
    (141) VAR -> . ID
    (142) VAR -> . ARRAY
    (143) VAR -> . CLASS_REFERENCE VAR
    (138) CLASS_REFERENCE -> . ID DOT seen_dot_operator
    (139) CLASS_REFERENCE -> . THIS_KWD seen_this_kwd DOT seen_this_dot_operator
    (189) DECISION -> . IF_KWD OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_if_kwd OPEN_CURLY STATEMENT_STAR CLOSE_CURLY DECISION_P
    (195) REPETITION -> . CONDITIONAL_REP
    (196) REPETITION -> . UNCONDITIONAL_REP
    (148) ARRAY -> . ID seen_array_id OPEN_BRACKET seen_open_bracket EXPRESSION seen_array_access CLOSE_BRACKET ARRAY_P
    (197) CONDITIONAL_REP -> . WHILE_KWD seen_while_kwd OPEN_PARENTHESIS EXPRESSION CLOSE_PARENTHESIS seen_while_exp OPEN_CURLY STATEMENT_STAR CLOSE_CURLY
    (200) UNCONDITIONAL_REP -> . FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY

    CLOSE_CURLY     reduce using rule 211 (empty -> .)
    ID              shift and go to state 84
    READ_KWD        shift and go to state 100
    PRINT_KWD       shift and go to state 101
    PRINTLN_KWD     shift and go to state 102
    OPEN_KWD        shift and go to state 103
    WRITE_KWD       shift and go to state 104
    USING_KWD       shift and go to state 105
    RETURN_KWD      shift and go to state 108
    THIS_KWD        shift and go to state 110
    IF_KWD          shift and go to state 111
    WHILE_KWD       shift and go to state 114
    FOR_KWD         shift and go to state 115

    VAR                            shift and go to state 98
    STATEMENT_STAR                 shift and go to state 503
    STATEMENT                      shift and go to state 86
    empty                          shift and go to state 87
    ASSIGN                         shift and go to state 88
    FUNC_CALL                      shift and go to state 89
    READ                           shift and go to state 90
    PRINT                          shift and go to state 91
    PRINTLN                        shift and go to state 92
    OPEN                           shift and go to state 93
    WRITE                          shift and go to state 94
    USING                          shift and go to state 95
    FLOW_CONTROL                   shift and go to state 96
    FUNC_RETURN                    shift and go to state 97
    CLASS_REFERENCE                shift and go to state 99
    DECISION                       shift and go to state 106
    REPETITION                     shift and go to state 107
    ARRAY                          shift and go to state 109
    CONDITIONAL_REP                shift and go to state 112
    UNCONDITIONAL_REP              shift and go to state 113

state 503

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 504


state 504

    (200) UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .

    ID              reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    READ_KWD        reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINT_KWD       reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    PRINTLN_KWD     reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    OPEN_KWD        reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WRITE_KWD       reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    USING_KWD       reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    RETURN_KWD      reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    THIS_KWD        reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    IF_KWD          reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    WHILE_KWD       reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    FOR_KWD         reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)
    CLOSE_CURLY     reduce using rule 200 (UNCONDITIONAL_REP -> FOR_KWD OPEN_PARENTHESIS VAR seen_for_kwd EQUALS EXPRESSION seen_for_start_exp SEMI_COLON EXPRESSION seen_for_end_exp SEMI_COLON FOR_INCR_STATEMENT seen_for_incr_exp CLOSE_PARENTHESIS OPEN_CURLY STATEMENT_STAR CLOSE_CURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLASS_KWD in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 9 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 10 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 11 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for CLASS_KWD in state 14 resolved as shift
WARNING: shift/reduce conflict for TYPE_I in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_F in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_S in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_B in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_O in state 15 resolved as shift
WARNING: shift/reduce conflict for TYPE_V in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for SEMI_COLON in state 153 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (CLASS_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (FUNC_DEF_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (CLASS_STAR -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (STRUCTURE_DEFINITION -> empty)
WARNING: rejected rule (VAR_LIST_STAR -> empty) in state 12
WARNING: reduce/reduce conflict in state 259 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 259
WARNING: reduce/reduce conflict in state 319 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 319
WARNING: reduce/reduce conflict in state 346 resolved using rule (pop_unary_minus -> empty)
WARNING: rejected rule (seen_factor -> empty) in state 346
WARNING: reduce/reduce conflict in state 404 resolved using rule (FACTOR -> FUNC_CALL)
WARNING: rejected rule (empty -> <empty>) in state 404
WARNING: reduce/reduce conflict in state 422 resolved using rule (FACTOR -> VAR seen_var_as_factor)
WARNING: rejected rule (empty -> <empty>) in state 422
