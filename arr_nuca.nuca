program ARRAYS;

// Arays //

int_arr[100], int_matrix[3][3], int_cube[3][3][3], int_cube_2[3][3][3] : int;

// Vars //

idx : int;
tlc : object;

class TheLonelyCube {

  ATTR{
    resulting_cube[3][3][3] : int;
  }

}

void multiply_cubes()
VARS{
    i, j, k,  : int;
    str : string;
}{
    tlc = new TheLonelyCube();
    int_cube[0][0][0] = 1;
    int_cube_2[0][0][0] = 1;
    int_cube[0][0][1] = 2;
    int_cube_2[0][0][1] = 2;
    tlc.resulting_cube[0][0][0] = int_cube[0][0][0] * int_cube_2[0][0][1];
    println(tlc.resulting_cube[0][0][0], int_cube[0][1][2], int_cube[1][1][2], int_cube_2[0][1][2], int_cube_2[1][1][2]);
    for(i = 0; i < 3; i = i + 1){
      for(j = 0; j < 3; j = j + 1){
        for(k = 0; k < 3; k = k + 1){
          println(i, j, k);
          println(int_cube[i][j][k], " * ", int_cube_2[i][j][k]);
          tlc.resulting_cube[i][j][k] = int_cube[i][j][k] * int_cube_2[i][j][k];
          println(tlc.resulting_cube[i][j][k]);
        }
      }
    }
    println("results that matter: ", tlc.resulting_cube[0][1][2], tlc.resulting_cube[1][1][2]);
}



class ArrayClass{
  ATTR{
    int_arr[100] : int;
    float_arr[100] : float;
  }
  int get_10()
  VARS{}
  {
    return 10;
  }
  void print_array(i : int)
  VARS{
    j : int;
  }
  {
    for(j = 0; j < i; j = j + 1){
      println(j, int_arr[this.float_arr[j] > this.get_10()] * "HI");
    }
  }
}

int print_array(i : int)
VARS{
  j : int;
}
{
  for(j = 0; j < i; j = j + 1){
    println(j, int_arr[j]);
  }

  return int_arr[96];
}

int times_two(i : int)
VARS{}
{
  return i * 2;
}

obj : object;

main (){
  int_cube[0][1][2] = 3;
  int_cube[1][1][2] = 32;
  int_cube_2[0][1][2] = 31;
  int_cube_2[1][1][2] = 3;
  multiply_cubes();
  obj = new ArrayClass();
  obj.int_arr[5] = 6;
  int_arr[obj.int_arr[5]] = 92;
  obj.float_arr[5] = 93;
  println(int_arr[6], obj.float_arr[5]);
  obj.print_array(7);
  idx = 2;
  println(idx);
  int_arr[idx] = 2;
  println(int_arr[idx]);
  int_matrix[2][2] = 10;
  int_matrix[0][2] = times_two(-int_arr[idx] * 10);
  int_matrix[0][0] = 25 + 3;
  println(int_matrix[0][0], int_matrix[0][2], int_matrix[2][0], int_matrix[1][1], int_matrix[2][0], int_matrix[2][2]);
  int_matrix[0][2] = times_two(-int_arr[idx] * 157);
  int_arr[95] = int_matrix[0][0];
  int_arr[10] = 0;
  int_arr[20] = 1;
  int_arr[30] = 2;
  println("mult:",int_arr[30] * -int_arr[20]);
  int_arr[int_matrix[0][0]] = int_matrix[0][int_arr[30] * int_arr[20]];
  println(int_arr[28]);
  println(int_arr[95]);
  println("------------------");
  int_cube[0][0][0] = 3;
  println(int_cube[0][0][0], int_cube[0][1][2], int_cube[0][2][2], int_cube[1][2][0], int_cube[2][2][2]);
  println("------------------");
  print(">>  Elements to read (max 100):\n-- ");
  read(int_arr[96]);
  println("you read:", print_array(int_arr[96]), "elements");

}
