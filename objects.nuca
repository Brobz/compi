program OBJS;

v, no, no_2 : object;

int times_two(i : string)
VARS{}
{
  println(i);
  return 2;
}

f, value_fa : int;


class No_Attr {
  ATTR{
    attr_string : string;
  }
  int times_two(i : int, k : int)
  VARS{}
  {
    return f;
  }
}


class Value {
  ATTR{
    value_f, other_int, int_arr[100] : int;
    i : float;
    value_other : string;
  }

  string get_lol(prnt : string)
  VARS{}
  {
    println(prnt);
    return "LOL!";
  }
  void init(vf : int, oi : int, vo : string)
  VARS{}
  {
    this.value_f = vf;
    this.other_int = oi;
    this.value_other = vo;
  }

  int times_two(i : int)
  VARS{
    vvv, other_int : int;
    obj : object;
  }
  {
    no_2 = new Value(); // If no_2 was the one calling this class method, this would throw! //
    this.i = 2.45;
    this.init(-5, 5, this.value_other);
    println("we got here!");
    println("HI" * i);
    obj = new No_Attr();
    other_int = 5;
    vvv = 1;
    if(this.get_lol("this will print before the values!") == "LOL!"){
      println(this.value_other, this.value_f, this.int_arr[f]);
    }
    return f / 25 * vvv *  obj.times_two(times_two(other_int + " " + this.get_lol("this will print before the LOL!")), 15) + this.value_f;
  }
}



main (){
  f = 25;
  v = new Value();
  v.value_f = 10;
  println(v.value_f);
  println("here");
  v = new Value();
  println("and there");
  println(v.value_f);
  no = new No_Attr();
  no_2 = new No_Attr();
  no_2.attr_string = "something DIFFERENT";
  println("HI!");
  no.attr_string = "okidoki";
  println("no.attr_string: " + no.attr_string, "no_2.attr_string: " + no_2.attr_string);
  v.init(10, 5, 5 * - no.attr_string);
  println(v.value_other);
  v.int_arr[5] = 111;
  println(v.int_arr[5]);
  print(">> Enter an integer:\n-- ");
  read(v.int_arr[no.times_two(0, 0)]);
  if(v.int_arr[no.times_two(0, 0)] == 9393){
    println(">> Ah, the secret value! Terminating...");
    return;
  }
  println(v.int_arr[no.times_two(0, 0)]);
  print(">> Enter a string:\n-- ");
  read(v.value_other);
  no.attr_string = no.attr_string * v.times_two(v.value_f);
  println(no.attr_string);
}
